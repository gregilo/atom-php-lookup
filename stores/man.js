'use babel';

export default {
  entries: [{"name": "APCIterator::__construct", "synopsis": "Constructs an APCIterator object.", "usage": "public APCIterator::__construct ( string $cache [, mixed $search = NULL [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE ]]]] )", "url": "https://secure.php.net/manual/en/apciterator.construct.php"}, {"name": "APCIterator::current", "synopsis": "Gets the current item from the APCIterator stack.", "usage": "public mixed APCIterator::current ( void )", "url": "https://secure.php.net/manual/en/apciterator.current.php"}, {"name": "APCIterator::getTotalCount", "synopsis": "Get the total count.", "usage": "public int APCIterator::getTotalCount ( void )", "url": "https://secure.php.net/manual/en/apciterator.gettotalcount.php"}, {"name": "APCIterator::getTotalHits", "synopsis": "Gets the total number of cache hits.", "usage": "public int APCIterator::getTotalHits ( void )", "url": "https://secure.php.net/manual/en/apciterator.gettotalhits.php"}, {"name": "APCIterator::getTotalSize", "synopsis": "Gets the total cache size.", "usage": "public int APCIterator::getTotalSize ( void )", "url": "https://secure.php.net/manual/en/apciterator.gettotalsize.php"}, {"name": "APCIterator::key", "synopsis": "Gets the current iterator key.", "usage": "public string APCIterator::key ( void )", "url": "https://secure.php.net/manual/en/apciterator.key.php"}, {"name": "APCIterator::next", "synopsis": "Moves the iterator pointer to the next element.", "usage": "public void APCIterator::next ( void )", "url": "https://secure.php.net/manual/en/apciterator.next.php"}, {"name": "APCIterator::rewind", "synopsis": "Rewinds back the iterator to the first element.", "usage": "public void APCIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/apciterator.rewind.php"}, {"name": "APCIterator::valid", "synopsis": "Checks if the current iterator position is valid.", "usage": "public void APCIterator::valid ( void )", "url": "https://secure.php.net/manual/en/apciterator.valid.php"}, {"name": "APCUIterator::__construct", "synopsis": "Constructs an APCUIterator object.", "usage": "public APCUIterator::__construct ([ mixed $search = NULL [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE ]]]] )", "url": "https://secure.php.net/manual/en/apcuiterator.construct.php"}, {"name": "APCUIterator::current", "synopsis": "Gets the current item from the APCUIterator stack.", "usage": "public mixed APCUIterator::current ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.current.php"}, {"name": "APCUIterator::getTotalCount", "synopsis": "Get the total count.", "usage": "public int APCUIterator::getTotalCount ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.gettotalcount.php"}, {"name": "APCUIterator::getTotalHits", "synopsis": "Gets the total number of cache hits.", "usage": "public int APCUIterator::getTotalHits ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.gettotalhits.php"}, {"name": "APCUIterator::getTotalSize", "synopsis": "Gets the total cache size.", "usage": "public int APCUIterator::getTotalSize ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.gettotalsize.php"}, {"name": "APCUIterator::key", "synopsis": "Gets the current iterator key.", "usage": "public string APCUIterator::key ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.key.php"}, {"name": "APCUIterator::next", "synopsis": "Moves the iterator pointer to the next element.", "usage": "public void APCUIterator::next ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.next.php"}, {"name": "APCUIterator::rewind", "synopsis": "Rewinds back the iterator to the first element.", "usage": "public void APCUIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.rewind.php"}, {"name": "APCUIterator::valid", "synopsis": "Checks if the current iterator position is valid.", "usage": "public void APCUIterator::valid ( void )", "url": "https://secure.php.net/manual/en/apcuiterator.valid.php"}, {"name": "AppendIterator::append", "synopsis": "Appends an iterator.", "usage": "public void AppendIterator::append ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/appenditerator.append.php"}, {"name": "AppendIterator::current", "synopsis": "Gets the current value.", "usage": "public mixed AppendIterator::current ( void )", "url": "https://secure.php.net/manual/en/appenditerator.current.php"}, {"name": "AppendIterator::getArrayIterator", "synopsis": "This method gets the ArrayIterator that is used to store the iterators added with AppendIterator::append().", "usage": "public ArrayIterator AppendIterator::getArrayIterator ( void )", "url": "https://secure.php.net/manual/en/appenditerator.getarrayiterator.php"}, {"name": "AppendIterator::getInnerIterator", "synopsis": "This method returns the current inner iterator.", "usage": "public Iterator AppendIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/appenditerator.getinneriterator.php"}, {"name": "AppendIterator::getIteratorIndex", "synopsis": "Gets the index of the current inner iterator.", "usage": "public int AppendIterator::getIteratorIndex ( void )", "url": "https://secure.php.net/manual/en/appenditerator.getiteratorindex.php"}, {"name": "AppendIterator::key", "synopsis": "Get the current key.", "usage": "public scalar AppendIterator::key ( void )", "url": "https://secure.php.net/manual/en/appenditerator.key.php"}, {"name": "AppendIterator::next", "synopsis": "Moves to the next element. If this means to another Iterator then it rewinds that Iterator.", "usage": "public void AppendIterator::next ( void )", "url": "https://secure.php.net/manual/en/appenditerator.next.php"}, {"name": "AppendIterator::rewind", "synopsis": "Rewind to the first element of the first inner Iterator.", "usage": "public void AppendIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/appenditerator.rewind.php"}, {"name": "AppendIterator::valid", "synopsis": "Checks validity of the current element.", "usage": "public bool AppendIterator::valid ( void )", "url": "https://secure.php.net/manual/en/appenditerator.valid.php"}, {"name": "ArrayAccess::offsetExists", "synopsis": "Whether or not an offset exists.", "usage": "abstract public bool ArrayAccess::offsetExists ( mixed $offset )", "url": "https://secure.php.net/manual/en/arrayaccess.offsetexists.php"}, {"name": "ArrayAccess::offsetGet", "synopsis": "Returns the value at specified offset.", "usage": "abstract public mixed ArrayAccess::offsetGet ( mixed $offset )", "url": "https://secure.php.net/manual/en/arrayaccess.offsetget.php"}, {"name": "ArrayAccess::offsetSet", "synopsis": "Assigns a value to the specified offset.", "usage": "abstract public void ArrayAccess::offsetSet ( mixed $offset , mixed $value )", "url": "https://secure.php.net/manual/en/arrayaccess.offsetset.php"}, {"name": "ArrayAccess::offsetUnset", "synopsis": "Unsets an offset.", "usage": "abstract public void ArrayAccess::offsetUnset ( mixed $offset )", "url": "https://secure.php.net/manual/en/arrayaccess.offsetunset.php"}, {"name": "ArrayIterator::append", "synopsis": "Appends value as the last element.", "usage": "public void ArrayIterator::append ( mixed $value )", "url": "https://secure.php.net/manual/en/arrayiterator.append.php"}, {"name": "ArrayIterator::asort", "synopsis": "Sorts an array by values.", "usage": "public void ArrayIterator::asort ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.asort.php"}, {"name": "ArrayIterator::__construct", "synopsis": "Constructs an ArrayIterator object.", "usage": "public ArrayIterator::__construct ([ mixed $array = array() [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/arrayiterator.construct.php"}, {"name": "ArrayIterator::count", "synopsis": "Gets the number of elements in the array, or the number of public properties in the object.", "usage": "public int ArrayIterator::count ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.count.php"}, {"name": "ArrayIterator::current", "synopsis": "Get the current array entry.", "usage": "public mixed ArrayIterator::current ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.current.php"}, {"name": "ArrayIterator::getArrayCopy", "synopsis": "Get a copy of an array.", "usage": "public array ArrayIterator::getArrayCopy ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.getarraycopy.php"}, {"name": "ArrayIterator::getFlags", "synopsis": "Get the current flags.", "usage": "public void ArrayIterator::getFlags ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.getflags.php"}, {"name": "ArrayIterator::key", "synopsis": "This function returns the current array key", "usage": "public mixed ArrayIterator::key ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.key.php"}, {"name": "ArrayIterator::ksort", "synopsis": "Sorts an array by the keys.", "usage": "public void ArrayIterator::ksort ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.ksort.php"}, {"name": "ArrayIterator::natcasesort", "synopsis": "Sort the entries by values using a case insensitive \"natural order\" algorithm.", "usage": "public void ArrayIterator::natcasesort ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.natcasesort.php"}, {"name": "ArrayIterator::natsort", "synopsis": "Sort the entries by values using \"natural order\" algorithm.", "usage": "public void ArrayIterator::natsort ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.natsort.php"}, {"name": "ArrayIterator::next", "synopsis": "The iterator to the next entry.", "usage": "public void ArrayIterator::next ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.next.php"}, {"name": "ArrayIterator::offsetExists", "synopsis": "Checks if the offset exists.", "usage": "public void ArrayIterator::offsetExists ( string $index )", "url": "https://secure.php.net/manual/en/arrayiterator.offsetexists.php"}, {"name": "ArrayIterator::offsetGet", "synopsis": "Gets the value from the provided offset.", "usage": "public mixed ArrayIterator::offsetGet ( string $index )", "url": "https://secure.php.net/manual/en/arrayiterator.offsetget.php"}, {"name": "ArrayIterator::offsetSet", "synopsis": "Sets a value for a given offset.", "usage": "public void ArrayIterator::offsetSet ( string $index , string $newval )", "url": "https://secure.php.net/manual/en/arrayiterator.offsetset.php"}, {"name": "ArrayIterator::offsetUnset", "synopsis": "Unsets a value for an offset.", "usage": "public void ArrayIterator::offsetUnset ( string $index )", "url": "https://secure.php.net/manual/en/arrayiterator.offsetunset.php"}, {"name": "ArrayIterator::rewind", "synopsis": "This rewinds the iterator to the beginning.", "usage": "public void ArrayIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.rewind.php"}, {"name": "ArrayIterator::seek", "synopsis": null, "usage": "public void ArrayIterator::seek ( int $position )", "url": "https://secure.php.net/manual/en/arrayiterator.seek.php"}, {"name": "ArrayIterator::serialize", "synopsis": "Serialize.", "usage": "public string ArrayIterator::serialize ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.serialize.php"}, {"name": "ArrayIterator::setFlags", "synopsis": "Sets behaviour flags.", "usage": "public void ArrayIterator::setFlags ( string $flags )", "url": "https://secure.php.net/manual/en/arrayiterator.setflags.php"}, {"name": "ArrayIterator::uasort", "synopsis": "This method sorts the elements such that indices maintain their correlation with the values they are associated with, using a user-defined comparison function.", "usage": "public void ArrayIterator::uasort ( callable $cmp_function )", "url": "https://secure.php.net/manual/en/arrayiterator.uasort.php"}, {"name": "ArrayIterator::uksort", "synopsis": "This method sorts the elements by keys using a user-supplied comparison function.", "usage": "public void ArrayIterator::uksort ( callable $cmp_function )", "url": "https://secure.php.net/manual/en/arrayiterator.uksort.php"}, {"name": "ArrayIterator::unserialize", "synopsis": "Unserialize.", "usage": "public string ArrayIterator::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/arrayiterator.unserialize.php"}, {"name": "ArrayIterator::valid", "synopsis": "Checks if the array contains any more entries.", "usage": "public bool ArrayIterator::valid ( void )", "url": "https://secure.php.net/manual/en/arrayiterator.valid.php"}, {"name": "ArrayObject::append", "synopsis": "Appends a new value as the last element.", "usage": "public void ArrayObject::append ( mixed $value )", "url": "https://secure.php.net/manual/en/arrayobject.append.php"}, {"name": "ArrayObject::asort", "synopsis": "Sorts the entries such that the keys maintain their correlation with the entries they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant.", "usage": "public void ArrayObject::asort ( void )", "url": "https://secure.php.net/manual/en/arrayobject.asort.php"}, {"name": "ArrayObject::count", "synopsis": "Get the number of public properties in the ArrayObject.", "usage": "public int ArrayObject::count ( void )", "url": "https://secure.php.net/manual/en/arrayobject.count.php"}, {"name": "ArrayObject::exchangeArray", "synopsis": "Exchange the current array with another array or object.", "usage": "public array ArrayObject::exchangeArray ( mixed $input )", "url": "https://secure.php.net/manual/en/arrayobject.exchangearray.php"}, {"name": "ArrayObject::getArrayCopy", "synopsis": "Exports the ArrayObject to an array.", "usage": "public array ArrayObject::getArrayCopy ( void )", "url": "https://secure.php.net/manual/en/arrayobject.getarraycopy.php"}, {"name": "ArrayObject::getFlags", "synopsis": "Gets the behavior flags of the ArrayObject. See the ArrayObject::setFlags method for a list of the available flags.", "usage": "public int ArrayObject::getFlags ( void )", "url": "https://secure.php.net/manual/en/arrayobject.getflags.php"}, {"name": "ArrayObject::getIterator", "synopsis": "Create a new iterator from an ArrayObject instance.", "usage": "public ArrayIterator ArrayObject::getIterator ( void )", "url": "https://secure.php.net/manual/en/arrayobject.getiterator.php"}, {"name": "ArrayObject::getIteratorClass", "synopsis": "Gets the class name of the array iterator that is used by ArrayObject::getIterator().", "usage": "public string ArrayObject::getIteratorClass ( void )", "url": "https://secure.php.net/manual/en/arrayobject.getiteratorclass.php"}, {"name": "ArrayObject::ksort", "synopsis": "Sorts the entries by key, maintaining key to entry correlations. This is useful mainly for associative arrays.", "usage": "public void ArrayObject::ksort ( void )", "url": "https://secure.php.net/manual/en/arrayobject.ksort.php"}, {"name": "ArrayObject::natcasesort", "synopsis": "This method is a case insensitive version of ArrayObject::natsort.", "usage": "public void ArrayObject::natcasesort ( void )", "url": "https://secure.php.net/manual/en/arrayobject.natcasesort.php"}, {"name": "ArrayObject::natsort", "synopsis": "This method implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a \"natural ordering\". An example of the difference between this algorithm and the regular computer string sorting algorithms (used in ArrayObject::asort) method can be seen in the example below.", "usage": "public void ArrayObject::natsort ( void )", "url": "https://secure.php.net/manual/en/arrayobject.natsort.php"}, {"name": "ArrayObject::offsetExists", "synopsis": null, "usage": "public bool ArrayObject::offsetExists ( mixed $index )", "url": "https://secure.php.net/manual/en/arrayobject.offsetexists.php"}, {"name": "ArrayObject::offsetGet", "synopsis": null, "usage": "public mixed ArrayObject::offsetGet ( mixed $index )", "url": "https://secure.php.net/manual/en/arrayobject.offsetget.php"}, {"name": "ArrayObject::offsetSet", "synopsis": "Sets the value at the specified index to newval.", "usage": "public void ArrayObject::offsetSet ( mixed $index , mixed $newval )", "url": "https://secure.php.net/manual/en/arrayobject.offsetset.php"}, {"name": "ArrayObject::offsetUnset", "synopsis": "Unsets the value at the specified index.", "usage": "public void ArrayObject::offsetUnset ( mixed $index )", "url": "https://secure.php.net/manual/en/arrayobject.offsetunset.php"}, {"name": "ArrayObject::serialize", "synopsis": "Serializes an ArrayObject.", "usage": "public string ArrayObject::serialize ( void )", "url": "https://secure.php.net/manual/en/arrayobject.serialize.php"}, {"name": "ArrayObject::setFlags", "synopsis": "Set the flags that change the behavior of the ArrayObject.", "usage": "public void ArrayObject::setFlags ( int $flags )", "url": "https://secure.php.net/manual/en/arrayobject.setflags.php"}, {"name": "ArrayObject::setIteratorClass", "synopsis": "Sets the classname of the array iterator that is used by ArrayObject::getIterator().", "usage": "public void ArrayObject::setIteratorClass ( string $iterator_class )", "url": "https://secure.php.net/manual/en/arrayobject.setiteratorclass.php"}, {"name": "ArrayObject::uasort", "synopsis": "This function sorts the entries such that keys maintain their correlation with the entry that they are associated with, using a user-defined comparison function.", "usage": "public void ArrayObject::uasort ( callable $cmp_function )", "url": "https://secure.php.net/manual/en/arrayobject.uasort.php"}, {"name": "ArrayObject::uksort", "synopsis": "This function sorts the keys of the entries using a user-supplied comparison function. The key to entry correlations will be maintained.", "usage": "public void ArrayObject::uksort ( callable $cmp_function )", "url": "https://secure.php.net/manual/en/arrayobject.uksort.php"}, {"name": "ArrayObject::unserialize", "synopsis": "Unserializes a serialized ArrayObject.", "usage": "public void ArrayObject::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/arrayobject.unserialize.php"}, {"name": "KTaglib_MPEG_AudioProperties::getBitrate", "synopsis": "Returns the bitrate of the MPEG file", "usage": "public int KTaglib_MPEG_AudioProperties::getBitrate ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getbitrate.php"}, {"name": "KTaglib_MPEG_AudioProperties::getChannels", "synopsis": "Returns the amount of channels of the MPEG file", "usage": "public int KTaglib_MPEG_AudioProperties::getChannels ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getchannels.php"}, {"name": "KTaglib_MPEG_AudioProperties::getLayer", "synopsis": "Returns the layer of the MPEG file (usually 3 for MP3).", "usage": "public int KTaglib_MPEG_AudioProperties::getLayer ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getlayer.php"}, {"name": "KTaglib_MPEG_AudioProperties::getLength", "synopsis": "Returns the length of the MPEG file", "usage": "public int KTaglib_MPEG_AudioProperties::getLength ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getlength.php"}, {"name": "KTaglib_MPEG_AudioProperties::getSampleBitrate", "synopsis": "Returns the sample bitrate of the MPEG file", "usage": "public int KTaglib_MPEG_AudioProperties::getSampleBitrate ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getsamplebitrate.php"}, {"name": "KTaglib_MPEG_AudioProperties::getVersion", "synopsis": "Returns the version of the MPEG file header. The possible versions are defined in Tag_MPEG_Header (Version1, Version2, Version2.5).", "usage": "public int KTaglib_MPEG_AudioProperties::getVersion ( void )", "url": "https://secure.php.net/manual/en/audioproperties.getversion.php"}, {"name": "KTaglib_MPEG_AudioProperties::isCopyrighted", "synopsis": "Returns true if the MPEG file is copyrighted", "usage": "public bool KTaglib_MPEG_AudioProperties::isCopyrighted ( void )", "url": "https://secure.php.net/manual/en/audioproperties.iscopyrighted.php"}, {"name": "KTaglib_MPEG_AudioProperties::isOriginal", "synopsis": "Returns true if the file is marked as the original file", "usage": "public bool KTaglib_MPEG_AudioProperties::isOriginal ( void )", "url": "https://secure.php.net/manual/en/audioproperties.isoriginal.php"}, {"name": "KTaglib_MPEG_AudioProperties::isProtectionEnabled", "synopsis": "Returns true if protection mechanisms (like DRM) are enabled for this file", "usage": "public bool KTaglib_MPEG_AudioProperties::isProtectionEnabled ( void )", "url": "https://secure.php.net/manual/en/audioproperties.isprotectionenabled.php"}, {"name": "CachingIterator::__construct", "synopsis": null, "usage": "public CachingIterator::__construct ( Iterator $iterator [, int $flags = self::CALL_TOSTRING ] )", "url": "https://secure.php.net/manual/en/cachingiterator.construct.php"}, {"name": "CachingIterator::count", "synopsis": null, "usage": "public int CachingIterator::count ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.count.php"}, {"name": "CachingIterator::current", "synopsis": null, "usage": "public void CachingIterator::current ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.current.php"}, {"name": "CachingIterator::getCache", "synopsis": "Retrieve the contents of the cache.", "usage": "public array CachingIterator::getCache ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.getcache.php"}, {"name": "CachingIterator::getFlags", "synopsis": null, "usage": "public int CachingIterator::getFlags ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.getflags.php"}, {"name": "CachingIterator::getInnerIterator", "synopsis": null, "usage": "public Iterator CachingIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.getinneriterator.php"}, {"name": "CachingIterator::hasNext", "synopsis": null, "usage": "public void CachingIterator::hasNext ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.hasnext.php"}, {"name": "CachingIterator::key", "synopsis": null, "usage": "public scalar CachingIterator::key ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.key.php"}, {"name": "CachingIterator::next", "synopsis": null, "usage": "public void CachingIterator::next ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.next.php"}, {"name": "CachingIterator::offsetExists", "synopsis": null, "usage": "public void CachingIterator::offsetExists ( string $index )", "url": "https://secure.php.net/manual/en/cachingiterator.offsetexists.php"}, {"name": "CachingIterator::offsetGet", "synopsis": null, "usage": "public void CachingIterator::offsetGet ( string $index )", "url": "https://secure.php.net/manual/en/cachingiterator.offsetget.php"}, {"name": "CachingIterator::offsetSet", "synopsis": null, "usage": "public void CachingIterator::offsetSet ( string $index , string $newval )", "url": "https://secure.php.net/manual/en/cachingiterator.offsetset.php"}, {"name": "CachingIterator::offsetUnset", "synopsis": null, "usage": "public void CachingIterator::offsetUnset ( string $index )", "url": "https://secure.php.net/manual/en/cachingiterator.offsetunset.php"}, {"name": "CachingIterator::rewind", "synopsis": null, "usage": "public void CachingIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.rewind.php"}, {"name": "CachingIterator::setFlags", "synopsis": null, "usage": "public void CachingIterator::setFlags ( int $flags )", "url": "https://secure.php.net/manual/en/cachingiterator.setflags.php"}, {"name": "CachingIterator::__toString", "synopsis": null, "usage": "public void CachingIterator::__toString ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.tostring.php"}, {"name": "CachingIterator::valid", "synopsis": null, "usage": "public void CachingIterator::valid ( void )", "url": "https://secure.php.net/manual/en/cachingiterator.valid.php"}, {"name": "Cairo::availableFonts", "synopsis": "Procedural style:", "usage": "public static array Cairo::availableFonts ( void )", "url": "https://secure.php.net/manual/en/cairo.availablefonts.php"}, {"name": "Cairo::availableSurfaces", "synopsis": "Procedural style:", "usage": "public static array Cairo::availableSurfaces ( void )", "url": "https://secure.php.net/manual/en/cairo.availablesurfaces.php"}, {"name": "Cairo::statusToString", "synopsis": "Procedural style:", "usage": "public static string Cairo::statusToString ( int $status )", "url": "https://secure.php.net/manual/en/cairo.statustostring.php"}, {"name": "Cairo::version", "synopsis": "Procedural style:", "usage": "public static int Cairo::version ( void )", "url": "https://secure.php.net/manual/en/cairo.version.php"}, {"name": "Cairo::versionString", "synopsis": "Procedural style:", "usage": "public static string Cairo::versionString ( void )", "url": "https://secure.php.net/manual/en/cairo.versionstring.php"}, {"name": "CairoContext::appendPath", "synopsis": "Procedural style:", "usage": "public void CairoContext::appendPath ( CairoPath $path )", "url": "https://secure.php.net/manual/en/cairocontext.appendpath.php"}, {"name": "CairoContext::arc", "synopsis": "Procedural style:", "usage": "public void CairoContext::arc ( float $x , float $y , float $radius , float $angle1 , float $angle2 )", "url": "https://secure.php.net/manual/en/cairocontext.arc.php"}, {"name": "CairoContext::arcNegative", "synopsis": "Procedural style:", "usage": "public void CairoContext::arcNegative ( float $x , float $y , float $radius , float $angle1 , float $angle2 )", "url": "https://secure.php.net/manual/en/cairocontext.arcnegative.php"}, {"name": "CairoContext::clip", "synopsis": "Procedural style:", "usage": "public void CairoContext::clip ( void )", "url": "https://secure.php.net/manual/en/cairocontext.clip.php"}, {"name": "CairoContext::clipExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::clipExtents ( void )", "url": "https://secure.php.net/manual/en/cairocontext.clipextents.php"}, {"name": "CairoContext::clipPreserve", "synopsis": "Procedural style:", "usage": "public void CairoContext::clipPreserve ( void )", "url": "https://secure.php.net/manual/en/cairocontext.clippreserve.php"}, {"name": "CairoContext::clipRectangleList", "synopsis": "Procedural style:", "usage": "public array CairoContext::clipRectangleList ( void )", "url": "https://secure.php.net/manual/en/cairocontext.cliprectanglelist.php"}, {"name": "CairoContext::closePath", "synopsis": "Procedural style:", "usage": "public void CairoContext::closePath ( void )", "url": "https://secure.php.net/manual/en/cairocontext.closepath.php"}, {"name": "CairoContext::__construct", "synopsis": "Creates a new CairoContext object to draw", "usage": "public CairoContext::__construct ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/cairocontext.construct.php"}, {"name": "CairoContext::copyPage", "synopsis": "Procedural style:", "usage": "public void CairoContext::copyPage ( void )", "url": "https://secure.php.net/manual/en/cairocontext.copypage.php"}, {"name": "CairoContext::copyPath", "synopsis": "Procedural style:", "usage": "public CairoPath CairoContext::copyPath ( void )", "url": "https://secure.php.net/manual/en/cairocontext.copypath.php"}, {"name": "CairoContext::copyPathFlat", "synopsis": "Procedural style:", "usage": "public CairoPath CairoContext::copyPathFlat ( void )", "url": "https://secure.php.net/manual/en/cairocontext.copypathflat.php"}, {"name": "CairoContext::curveTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::curveTo ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/cairocontext.curveto.php"}, {"name": "CairoContext::deviceToUser", "synopsis": "Procedural style:", "usage": "public array CairoContext::deviceToUser ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.devicetouser.php"}, {"name": "CairoContext::deviceToUserDistance", "synopsis": "Procedural style:", "usage": "public array CairoContext::deviceToUserDistance ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.devicetouserdistance.php"}, {"name": "CairoContext::fill", "synopsis": "Procedural style:", "usage": "public void CairoContext::fill ( void )", "url": "https://secure.php.net/manual/en/cairocontext.fill.php"}, {"name": "CairoContext::fillExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::fillExtents ( void )", "url": "https://secure.php.net/manual/en/cairocontext.fillextents.php"}, {"name": "CairoContext::fillPreserve", "synopsis": "Procedural style:", "usage": "public void CairoContext::fillPreserve ( void )", "url": "https://secure.php.net/manual/en/cairocontext.fillpreserve.php"}, {"name": "CairoContext::fontExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::fontExtents ( void )", "url": "https://secure.php.net/manual/en/cairocontext.fontextents.php"}, {"name": "CairoContext::getAntialias", "synopsis": "Procedural style:", "usage": "public int CairoContext::getAntialias ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getantialias.php"}, {"name": "CairoContext::getCurrentPoint", "synopsis": "Procedural style", "usage": "public array CairoContext::getCurrentPoint ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getcurrentpoint.php"}, {"name": "CairoContext::getDash", "synopsis": "Procedural style:", "usage": "public array CairoContext::getDash ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getdash.php"}, {"name": "CairoContext::getDashCount", "synopsis": "Procedural style:", "usage": "public int CairoContext::getDashCount ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getdashcount.php"}, {"name": "CairoContext::getFillRule", "synopsis": "Procedural style:", "usage": "public int CairoContext::getFillRule ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getfillrule.php"}, {"name": "CairoContext::getFontFace", "synopsis": "Procedural style:", "usage": "public void CairoContext::getFontFace ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getfontface.php"}, {"name": "CairoContext::getFontMatrix", "synopsis": "Procedural style:", "usage": "public void CairoContext::getFontMatrix ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getfontmatrix.php"}, {"name": "CairoContext::getFontOptions", "synopsis": "Procedural style:", "usage": "public void CairoContext::getFontOptions ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getfontoptions.php"}, {"name": "CairoContext::getGroupTarget", "synopsis": "Procedural style:", "usage": "public void CairoContext::getGroupTarget ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getgrouptarget.php"}, {"name": "CairoContext::getLineCap", "synopsis": "Procedural style:", "usage": "public int CairoContext::getLineCap ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getlinecap.php"}, {"name": "CairoContext::getLineJoin", "synopsis": "Procedural style:", "usage": "public int CairoContext::getLineJoin ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getlinejoin.php"}, {"name": "CairoContext::getLineWidth", "synopsis": "Procedural style:", "usage": "public float CairoContext::getLineWidth ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getlinewidth.php"}, {"name": "CairoContext::getMatrix", "synopsis": "Procedural style:", "usage": "public void CairoContext::getMatrix ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getmatrix.php"}, {"name": "CairoContext::getMiterLimit", "synopsis": "Procedural style:", "usage": "public float CairoContext::getMiterLimit ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getmiterlimit.php"}, {"name": "CairoContext::getOperator", "synopsis": "Procedural style:", "usage": "public int CairoContext::getOperator ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getoperator.php"}, {"name": "CairoContext::getScaledFont", "synopsis": "Procedural style:", "usage": "public void CairoContext::getScaledFont ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getscaledfont.php"}, {"name": "CairoContext::getSource", "synopsis": "Procedural style:", "usage": "public void CairoContext::getSource ( void )", "url": "https://secure.php.net/manual/en/cairocontext.getsource.php"}, {"name": "CairoContext::getTarget", "synopsis": "Procedural style:", "usage": "public void CairoContext::getTarget ( void )", "url": "https://secure.php.net/manual/en/cairocontext.gettarget.php"}, {"name": "CairoContext::getTolerance", "synopsis": "Procedural style:", "usage": "public float CairoContext::getTolerance ( void )", "url": "https://secure.php.net/manual/en/cairocontext.gettolerance.php"}, {"name": "CairoContext::glyphPath", "synopsis": "Procedural style", "usage": "public void CairoContext::glyphPath ( array $glyphs )", "url": "https://secure.php.net/manual/en/cairocontext.glyphpath.php"}, {"name": "CairoContext::hasCurrentPoint", "synopsis": "Procedural style:", "usage": "public bool CairoContext::hasCurrentPoint ( void )", "url": "https://secure.php.net/manual/en/cairocontext.hascurrentpoint.php"}, {"name": "CairoContext::identityMatrix", "synopsis": "Procedural style:", "usage": "public void CairoContext::identityMatrix ( void )", "url": "https://secure.php.net/manual/en/cairocontext.identitymatrix.php"}, {"name": "CairoContext::inFill", "synopsis": "Procedural style:", "usage": "public bool CairoContext::inFill ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.infill.php"}, {"name": "CairoContext::inStroke", "synopsis": "Procedural style:", "usage": "public bool CairoContext::inStroke ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.instroke.php"}, {"name": "CairoContext::lineTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::lineTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.lineto.php"}, {"name": "CairoContext::mask", "synopsis": "Procedural style:", "usage": "public void CairoContext::mask ( CairoPattern $pattern )", "url": "https://secure.php.net/manual/en/cairocontext.mask.php"}, {"name": "CairoContext::maskSurface", "synopsis": "Procedural style:", "usage": "public void CairoContext::maskSurface ( CairoSurface $surface [, float $x [, float $y ]] )", "url": "https://secure.php.net/manual/en/cairocontext.masksurface.php"}, {"name": "CairoContext::moveTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.moveto.php"}, {"name": "CairoContext::newPath", "synopsis": "Procedural style:", "usage": "public void CairoContext::newPath ( void )", "url": "https://secure.php.net/manual/en/cairocontext.newpath.php"}, {"name": "CairoContext::newSubPath", "synopsis": "Procedural style:", "usage": "public void CairoContext::newSubPath ( void )", "url": "https://secure.php.net/manual/en/cairocontext.newsubpath.php"}, {"name": "CairoContext::paint", "synopsis": "Procedural style:", "usage": "public void CairoContext::paint ( void )", "url": "https://secure.php.net/manual/en/cairocontext.paint.php"}, {"name": "CairoContext::paintWithAlpha", "synopsis": "Procedural style:", "usage": "public void CairoContext::paintWithAlpha ( float $alpha )", "url": "https://secure.php.net/manual/en/cairocontext.paintwithalpha.php"}, {"name": "CairoContext::pathExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::pathExtents ( void )", "url": "https://secure.php.net/manual/en/cairocontext.pathextents.php"}, {"name": "CairoContext::popGroup", "synopsis": "Procedural style:", "usage": "public void CairoContext::popGroup ( void )", "url": "https://secure.php.net/manual/en/cairocontext.popgroup.php"}, {"name": "CairoContext::popGroupToSource", "synopsis": "Procedural style:", "usage": "public void CairoContext::popGroupToSource ( void )", "url": "https://secure.php.net/manual/en/cairocontext.popgrouptosource.php"}, {"name": "CairoContext::pushGroup", "synopsis": "Procedural style:", "usage": "public void CairoContext::pushGroup ( void )", "url": "https://secure.php.net/manual/en/cairocontext.pushgroup.php"}, {"name": "CairoContext::pushGroupWithContent", "synopsis": "Procedural style:", "usage": "public void CairoContext::pushGroupWithContent ( int $content )", "url": "https://secure.php.net/manual/en/cairocontext.pushgroupwithcontent.php"}, {"name": "CairoContext::rectangle", "synopsis": "Procedural style:", "usage": "public void CairoContext::rectangle ( float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/cairocontext.rectangle.php"}, {"name": "CairoContext::relCurveTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::relCurveTo ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/cairocontext.relcurveto.php"}, {"name": "CairoContext::relLineTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::relLineTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.rellineto.php"}, {"name": "CairoContext::relMoveTo", "synopsis": "Procedural style:", "usage": "public void CairoContext::relMoveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.relmoveto.php"}, {"name": "CairoContext::resetClip", "synopsis": "Procedural style:", "usage": "public void CairoContext::resetClip ( void )", "url": "https://secure.php.net/manual/en/cairocontext.resetclip.php"}, {"name": "CairoContext::restore", "synopsis": "Procedural style:", "usage": "public void CairoContext::restore ( void )", "url": "https://secure.php.net/manual/en/cairocontext.restore.php"}, {"name": "CairoContext::rotate", "synopsis": "Procedural style:", "usage": "public void CairoContext::rotate ( float $angle )", "url": "https://secure.php.net/manual/en/cairocontext.rotate.php"}, {"name": "CairoContext::save", "synopsis": "Procedural style:", "usage": "public void CairoContext::save ( void )", "url": "https://secure.php.net/manual/en/cairocontext.save.php"}, {"name": "CairoContext::scale", "synopsis": "Procedural style:", "usage": "public void CairoContext::scale ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.scale.php"}, {"name": "CairoContext::selectFontFace", "synopsis": "Procedural style:", "usage": "public void CairoContext::selectFontFace ( string $family [, int $slant [, int $weight ]] )", "url": "https://secure.php.net/manual/en/cairocontext.selectfontface.php"}, {"name": "CairoContext::setAntialias", "synopsis": "Procedural style:", "usage": "public void CairoContext::setAntialias ([ int $antialias ] )", "url": "https://secure.php.net/manual/en/cairocontext.setantialias.php"}, {"name": "CairoContext::setDash", "synopsis": "Procedural style:", "usage": "public void CairoContext::setDash ( array $dashes [, float $offset ] )", "url": "https://secure.php.net/manual/en/cairocontext.setdash.php"}, {"name": "CairoContext::setFillRule", "synopsis": "Procedural style:", "usage": "public void CairoContext::setFillRule ( int $setting )", "url": "https://secure.php.net/manual/en/cairocontext.setfillrule.php"}, {"name": "CairoContext::setFontFace", "synopsis": "Procedural style:", "usage": "public void CairoContext::setFontFace ( CairoFontFace $fontface )", "url": "https://secure.php.net/manual/en/cairocontext.setfontface.php"}, {"name": "CairoContext::setFontMatrix", "synopsis": "Procedural style:", "usage": "public void CairoContext::setFontMatrix ( CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/cairocontext.setfontmatrix.php"}, {"name": "CairoContext::setFontOptions", "synopsis": "Procedural style:", "usage": "public void CairoContext::setFontOptions ( CairoFontOptions $fontoptions )", "url": "https://secure.php.net/manual/en/cairocontext.setfontoptions.php"}, {"name": "CairoContext::setFontSize", "synopsis": "Procedural style:", "usage": "public void CairoContext::setFontSize ( float $size )", "url": "https://secure.php.net/manual/en/cairocontext.setfontsize.php"}, {"name": "CairoContext::setLineCap", "synopsis": "Procedural style:", "usage": "public void CairoContext::setLineCap ( int $setting )", "url": "https://secure.php.net/manual/en/cairocontext.setlinecap.php"}, {"name": "CairoContext::setLineJoin", "synopsis": "Procedural style:", "usage": "public void CairoContext::setLineJoin ( int $setting )", "url": "https://secure.php.net/manual/en/cairocontext.setlinejoin.php"}, {"name": "CairoContext::setLineWidth", "synopsis": "Procedural style:", "usage": "public void CairoContext::setLineWidth ( float $width )", "url": "https://secure.php.net/manual/en/cairocontext.setlinewidth.php"}, {"name": "CairoContext::setMatrix", "synopsis": "Procedural style:", "usage": "public void CairoContext::setMatrix ( CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/cairocontext.setmatrix.php"}, {"name": "CairoContext::setMiterLimit", "synopsis": "Procedural style:", "usage": "public void CairoContext::setMiterLimit ( float $limit )", "url": "https://secure.php.net/manual/en/cairocontext.setmiterlimit.php"}, {"name": "CairoContext::setOperator", "synopsis": "Procedural style:", "usage": "public void CairoContext::setOperator ( int $setting )", "url": "https://secure.php.net/manual/en/cairocontext.setoperator.php"}, {"name": "CairoContext::setScaledFont", "synopsis": "Procedural style:", "usage": "public void CairoContext::setScaledFont ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/cairocontext.setscaledfont.php"}, {"name": "CairoContext::setSource", "synopsis": "Procedural style:", "usage": "public void CairoContext::setSource ( CairoPattern $pattern )", "url": "https://secure.php.net/manual/en/cairocontext.setsource.php"}, {"name": "CairoContext::setSourceRGB", "synopsis": "Procedural style:", "usage": "public void CairoContext::setSourceRGB ( float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/cairocontext.setsourcergb.php"}, {"name": "CairoContext::setSourceRGBA", "synopsis": "Procedural style:", "usage": "public void CairoContext::setSourceRGBA ( float $red , float $green , float $blue , float $alpha )", "url": "https://secure.php.net/manual/en/cairocontext.setsourcergba.php"}, {"name": "CairoContext::setSourceSurface", "synopsis": "Procedural style:", "usage": "public void CairoContext::setSourceSurface ( CairoSurface $surface [, float $x [, float $y ]] )", "url": "https://secure.php.net/manual/en/cairocontext.setsourcesurface.php"}, {"name": "CairoContext::setTolerance", "synopsis": "Procedural style:", "usage": "public void CairoContext::setTolerance ( float $tolerance )", "url": "https://secure.php.net/manual/en/cairocontext.settolerance.php"}, {"name": "CairoContext::showPage", "synopsis": "Procedural style:", "usage": "public void CairoContext::showPage ( void )", "url": "https://secure.php.net/manual/en/cairocontext.showpage.php"}, {"name": "CairoContext::showText", "synopsis": "Procedural style:", "usage": "public void CairoContext::showText ( string $text )", "url": "https://secure.php.net/manual/en/cairocontext.showtext.php"}, {"name": "CairoContext::status", "synopsis": "Procedural style:", "usage": "public int CairoContext::status ( void )", "url": "https://secure.php.net/manual/en/cairocontext.status.php"}, {"name": "CairoContext::stroke", "synopsis": "Procedural style:", "usage": "public void CairoContext::stroke ( void )", "url": "https://secure.php.net/manual/en/cairocontext.stroke.php"}, {"name": "CairoContext::strokeExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::strokeExtents ( void )", "url": "https://secure.php.net/manual/en/cairocontext.strokeextents.php"}, {"name": "CairoContext::strokePreserve", "synopsis": "Procedural style:", "usage": "public void CairoContext::strokePreserve ( void )", "url": "https://secure.php.net/manual/en/cairocontext.strokepreserve.php"}, {"name": "CairoContext::textExtents", "synopsis": "Procedural style:", "usage": "public array CairoContext::textExtents ( string $text )", "url": "https://secure.php.net/manual/en/cairocontext.textextents.php"}, {"name": "CairoContext::textPath", "synopsis": "Procedural style", "usage": "public void CairoContext::textPath ( string $string )", "url": "https://secure.php.net/manual/en/cairocontext.textpath.php"}, {"name": "CairoContext::transform", "synopsis": "Procedural style:", "usage": "public void CairoContext::transform ( CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/cairocontext.transform.php"}, {"name": "CairoContext::translate", "synopsis": "Procedural style:", "usage": "public void CairoContext::translate ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.translate.php"}, {"name": "CairoContext::userToDevice", "synopsis": "Procedural style:", "usage": "public array CairoContext::userToDevice ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.usertodevice.php"}, {"name": "CairoContext::userToDeviceDistance", "synopsis": "Procedural style:", "usage": "public array CairoContext::userToDeviceDistance ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairocontext.usertodevicedistance.php"}, {"name": "CairoFontFace::__construct", "synopsis": "CairoFontFace class represents a particular font at a particular weight, slant, and other characteristic but no transformation or size.", "usage": "public CairoFontFace::__construct ( void )", "url": "https://secure.php.net/manual/en/cairofontface.construct.php"}, {"name": "CairoFontFace::getType", "synopsis": "Procedural style:", "usage": "public int CairoFontFace::getType ( void )", "url": "https://secure.php.net/manual/en/cairofontface.gettype.php"}, {"name": "CairoFontFace::status", "synopsis": "Procedural style:", "usage": "public int CairoFontFace::status ( void )", "url": "https://secure.php.net/manual/en/cairofontface.status.php"}, {"name": "CairoFontOptions::__construct", "synopsis": "The method description goes here.", "usage": "public CairoFontOptions::__construct ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.construct.php"}, {"name": "CairoFontOptions::equal", "synopsis": "The method description goes here.", "usage": "public bool CairoFontOptions::equal ( CairoFontOptions $other )", "url": "https://secure.php.net/manual/en/cairofontoptions.equal.php"}, {"name": "CairoFontOptions::getAntialias", "synopsis": "Procedural style:", "usage": "public int CairoFontOptions::getAntialias ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.getantialias.php"}, {"name": "CairoFontOptions::getHintMetrics", "synopsis": "The method description goes here.", "usage": "public int CairoFontOptions::getHintMetrics ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.gethintmetrics.php"}, {"name": "CairoFontOptions::getHintStyle", "synopsis": "The method description goes here.", "usage": "public int CairoFontOptions::getHintStyle ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.gethintstyle.php"}, {"name": "CairoFontOptions::getSubpixelOrder", "synopsis": "The method description goes here.", "usage": "public int CairoFontOptions::getSubpixelOrder ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.getsubpixelorder.php"}, {"name": "CairoFontOptions::hash", "synopsis": "The method description goes here.", "usage": "public int CairoFontOptions::hash ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.hash.php"}, {"name": "CairoFontOptions::merge", "synopsis": "The method description goes here.", "usage": "public void CairoFontOptions::merge ( CairoFontOptions $other )", "url": "https://secure.php.net/manual/en/cairofontoptions.merge.php"}, {"name": "CairoFontOptions::setAntialias", "synopsis": "Procedural style:", "usage": "public void CairoFontOptions::setAntialias ( int $antialias )", "url": "https://secure.php.net/manual/en/cairofontoptions.setantialias.php"}, {"name": "CairoFontOptions::setHintMetrics", "synopsis": "The method description goes here.", "usage": "public void CairoFontOptions::setHintMetrics ( int $hint_metrics )", "url": "https://secure.php.net/manual/en/cairofontoptions.sethintmetrics.php"}, {"name": "CairoFontOptions::setHintStyle", "synopsis": "The method description goes here.", "usage": "public void CairoFontOptions::setHintStyle ( int $hint_style )", "url": "https://secure.php.net/manual/en/cairofontoptions.sethintstyle.php"}, {"name": "CairoFontOptions::setSubpixelOrder", "synopsis": "The method description goes here.", "usage": "public void CairoFontOptions::setSubpixelOrder ( int $subpixel_order )", "url": "https://secure.php.net/manual/en/cairofontoptions.setsubpixelorder.php"}, {"name": "CairoFontOptions::status", "synopsis": "Procedural style:", "usage": "public int CairoFontOptions::status ( void )", "url": "https://secure.php.net/manual/en/cairofontoptions.status.php"}, {"name": "CairoFormat::strideForWidth", "synopsis": "This method provides a stride value that will respect all alignment requirements of the accelerated image-rendering code within cairo.", "usage": "public static int CairoFormat::strideForWidth ( int $format , int $width )", "url": "https://secure.php.net/manual/en/cairoformat.strideforwidth.php"}, {"name": "CairoGradientPattern::addColorStopRgb", "synopsis": "The method description goes here.", "usage": "public void CairoGradientPattern::addColorStopRgb ( float $offset , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/cairogradientpattern.addcolorstoprgb.php"}, {"name": "CairoGradientPattern::addColorStopRgba", "synopsis": "The method description goes here.", "usage": "public void CairoGradientPattern::addColorStopRgba ( float $offset , float $red , float $green , float $blue , float $alpha )", "url": "https://secure.php.net/manual/en/cairogradientpattern.addcolorstoprgba.php"}, {"name": "CairoGradientPattern::getColorStopCount", "synopsis": "The method description goes here.", "usage": "public int CairoGradientPattern::getColorStopCount ( void )", "url": "https://secure.php.net/manual/en/cairogradientpattern.getcolorstopcount.php"}, {"name": "CairoGradientPattern::getColorStopRgba", "synopsis": "The method description goes here.", "usage": "public array CairoGradientPattern::getColorStopRgba ( int $index )", "url": "https://secure.php.net/manual/en/cairogradientpattern.getcolorstoprgba.php"}, {"name": "CairoGradientPattern::getExtend", "synopsis": "The method description goes here.", "usage": "public int CairoGradientPattern::getExtend ( void )", "url": "https://secure.php.net/manual/en/cairogradientpattern.getextend.php"}, {"name": "CairoGradientPattern::setExtend", "synopsis": "The method description goes here.", "usage": "public void CairoGradientPattern::setExtend ( int $extend )", "url": "https://secure.php.net/manual/en/cairogradientpattern.setextend.php"}, {"name": "CairoImageSurface::__construct", "synopsis": "Creates a new CairoImageSuface object of type format", "usage": "public CairoImageSurface::__construct ( int $format , int $width , int $height )", "url": "https://secure.php.net/manual/en/cairoimagesurface.construct.php"}, {"name": "CairoImageSurface::createForData", "synopsis": "The method description goes here.", "usage": "public static void CairoImageSurface::createForData ( string $data , int $format , int $width , int $height )", "url": "https://secure.php.net/manual/en/cairoimagesurface.createfordata.php"}, {"name": "CairoImageSurface::createFromPng", "synopsis": "Creates a new CairoImageSurface form a png image file", "usage": "public static CairoImageSurface CairoImageSurface::createFromPng ( string $file )", "url": "https://secure.php.net/manual/en/cairoimagesurface.createfrompng.php"}, {"name": "CairoImageSurface::getData", "synopsis": "Returns\u00a0the image data of this surface or NULL if surface is not an image surface, or if CairoContext::finish(), procedural : cairo_surface_finish(), has been called.", "usage": "public string CairoImageSurface::getData ( void )", "url": "https://secure.php.net/manual/en/cairoimagesurface.getdata.php"}, {"name": "CairoImageSurface::getFormat", "synopsis": "Retrieves the image format, as one of the CairoFormat defined", "usage": "public int CairoImageSurface::getFormat ( void )", "url": "https://secure.php.net/manual/en/cairoimagesurface.getformat.php"}, {"name": "CairoImageSurface::getHeight", "synopsis": "This methods returns the CairoImageSurface height.", "usage": "public int CairoImageSurface::getHeight ( void )", "url": "https://secure.php.net/manual/en/cairoimagesurface.getheight.php"}, {"name": "CairoImageSurface::getStride", "synopsis": "The method description goes here.", "usage": "public int CairoImageSurface::getStride ( void )", "url": "https://secure.php.net/manual/en/cairoimagesurface.getstride.php"}, {"name": "CairoImageSurface::getWidth", "synopsis": "Gets the width of the CairoImageSurface", "usage": "public int CairoImageSurface::getWidth ( void )", "url": "https://secure.php.net/manual/en/cairoimagesurface.getwidth.php"}, {"name": "CairoLinearGradient::__construct", "synopsis": "The method description goes here.", "usage": "public CairoLinearGradient::__construct ( float $x0 , float $y0 , float $x1 , float $y1 )", "url": "https://secure.php.net/manual/en/cairolineargradient.construct.php"}, {"name": "CairoLinearGradient::getPoints", "synopsis": "The method description goes here.", "usage": "public array CairoLinearGradient::getPoints ( void )", "url": "https://secure.php.net/manual/en/cairolineargradient.getpoints.php"}, {"name": "CairoMatrix::__construct", "synopsis": "Procedural style:", "usage": "public CairoMatrix::__construct ([ float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0 ]]]]]] )", "url": "https://secure.php.net/manual/en/cairomatrix.construct.php"}, {"name": "CairoMatrix::initIdentity", "synopsis": "Procedural style:", "usage": "public static void CairoMatrix::initIdentity ( void )", "url": "https://secure.php.net/manual/en/cairomatrix.initidentity.php"}, {"name": "CairoMatrix::initRotate", "synopsis": "Procedural style:", "usage": "public static void CairoMatrix::initRotate ( float $radians )", "url": "https://secure.php.net/manual/en/cairomatrix.initrotate.php"}, {"name": "CairoMatrix::initScale", "synopsis": "Procedural style:", "usage": "public static void CairoMatrix::initScale ( float $sx , float $sy )", "url": "https://secure.php.net/manual/en/cairomatrix.initscale.php"}, {"name": "CairoMatrix::initTranslate", "synopsis": "Procedural style:", "usage": "public static void CairoMatrix::initTranslate ( float $tx , float $ty )", "url": "https://secure.php.net/manual/en/cairomatrix.inittranslate.php"}, {"name": "CairoMatrix::invert", "synopsis": "The method description goes here.", "usage": "public void CairoMatrix::invert ( void )", "url": "https://secure.php.net/manual/en/cairomatrix.invert.php"}, {"name": "CairoMatrix::multiply", "synopsis": "The method description goes here.", "usage": "public static CairoMatrix CairoMatrix::multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )", "url": "https://secure.php.net/manual/en/cairomatrix.multiply.php"}, {"name": "CairoMatrix::rotate", "synopsis": "Procedural style:", "usage": "public void CairoMatrix::rotate ( float $radians )", "url": "https://secure.php.net/manual/en/cairomatrix.rotate.php"}, {"name": "CairoMatrix::scale", "synopsis": "Procedural style:", "usage": "public void CairoMatrix::scale ( float $sx , float $sy )", "url": "https://secure.php.net/manual/en/cairomatrix.scale.php"}, {"name": "CairoMatrix::transformDistance", "synopsis": "The method description goes here.", "usage": "public array CairoMatrix::transformDistance ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/cairomatrix.transformdistance.php"}, {"name": "CairoMatrix::transformPoint", "synopsis": "The method description goes here.", "usage": "public array CairoMatrix::transformPoint ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/cairomatrix.transformpoint.php"}, {"name": "CairoMatrix::translate", "synopsis": "Procedural style:", "usage": "public void CairoMatrix::translate ( float $tx , float $ty )", "url": "https://secure.php.net/manual/en/cairomatrix.translate.php"}, {"name": "CairoPattern::__construct", "synopsis": "The method description goes here.", "usage": "public CairoPattern::__construct ( void )", "url": "https://secure.php.net/manual/en/cairopattern.construct.php"}, {"name": "CairoPattern::getMatrix", "synopsis": "Procedural style:", "usage": "public void CairoPattern::getMatrix ( void )", "url": "https://secure.php.net/manual/en/cairopattern.getmatrix.php"}, {"name": "CairoPattern::getType", "synopsis": "The method description goes here.", "usage": "public int CairoPattern::getType ( void )", "url": "https://secure.php.net/manual/en/cairopattern.gettype.php"}, {"name": "CairoPattern::setMatrix", "synopsis": "Procedural style:", "usage": "public void CairoPattern::setMatrix ( CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/cairopattern.setmatrix.php"}, {"name": "CairoPattern::status", "synopsis": "Procedural style:", "usage": "public int CairoPattern::status ( void )", "url": "https://secure.php.net/manual/en/cairopattern.status.php"}, {"name": "CairoPdfSurface::__construct", "synopsis": "The method description goes here.", "usage": "public CairoPdfSurface::__construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/cairopdfsurface.construct.php"}, {"name": "CairoPdfSurface::setSize", "synopsis": "The method description goes here.", "usage": "public void CairoPdfSurface::setSize ( float $width , float $height )", "url": "https://secure.php.net/manual/en/cairopdfsurface.setsize.php"}, {"name": "CairoPsSurface::__construct", "synopsis": "The method description goes here.", "usage": "public CairoPsSurface::__construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/cairopssurface.construct.php"}, {"name": "CairoPsSurface::dscBeginPageSetup", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::dscBeginPageSetup ( void )", "url": "https://secure.php.net/manual/en/cairopssurface.dscbeginpagesetup.php"}, {"name": "CairoPsSurface::dscBeginSetup", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::dscBeginSetup ( void )", "url": "https://secure.php.net/manual/en/cairopssurface.dscbeginsetup.php"}, {"name": "CairoPsSurface::dscComment", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::dscComment ( string $comment )", "url": "https://secure.php.net/manual/en/cairopssurface.dsccomment.php"}, {"name": "CairoPsSurface::getEps", "synopsis": "The method description goes here.", "usage": "public bool CairoPsSurface::getEps ( void )", "url": "https://secure.php.net/manual/en/cairopssurface.geteps.php"}, {"name": "CairoPsSurface::getLevels", "synopsis": "The method description goes here.", "usage": "public static array CairoPsSurface::getLevels ( void )", "url": "https://secure.php.net/manual/en/cairopssurface.getlevels.php"}, {"name": "CairoPsSurface::levelToString", "synopsis": "The method description goes here.", "usage": "public static string CairoPsSurface::levelToString ( int $level )", "url": "https://secure.php.net/manual/en/cairopssurface.leveltostring.php"}, {"name": "CairoPsSurface::restrictToLevel", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::restrictToLevel ( int $level )", "url": "https://secure.php.net/manual/en/cairopssurface.restricttolevel.php"}, {"name": "CairoPsSurface::setEps", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::setEps ( bool $level )", "url": "https://secure.php.net/manual/en/cairopssurface.seteps.php"}, {"name": "CairoPsSurface::setSize", "synopsis": "The method description goes here.", "usage": "public void CairoPsSurface::setSize ( float $width , float $height )", "url": "https://secure.php.net/manual/en/cairopssurface.setsize.php"}, {"name": "CairoRadialGradient::__construct", "synopsis": "Procedural style:", "usage": "public CairoRadialGradient::__construct ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )", "url": "https://secure.php.net/manual/en/cairoradialgradient.construct.php"}, {"name": "CairoRadialGradient::getCircles", "synopsis": "The method description goes here.", "usage": "public array CairoRadialGradient::getCircles ( void )", "url": "https://secure.php.net/manual/en/cairoradialgradient.getcircles.php"}, {"name": "CairoScaledFont::__construct", "synopsis": "The method description goes here.", "usage": "public CairoScaledFont::__construct ( CairoFontFace $font_face , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/cairoscaledfont.construct.php"}, {"name": "CairoScaledFont::extents", "synopsis": "The method description goes here.", "usage": "public array CairoScaledFont::extents ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.extents.php"}, {"name": "CairoScaledFont::getCtm", "synopsis": "The method description goes here.", "usage": "public CairoMatrix CairoScaledFont::getCtm ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.getctm.php"}, {"name": "CairoScaledFont::getFontFace", "synopsis": "Procedural style:", "usage": "public void CairoScaledFont::getFontFace ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.getfontface.php"}, {"name": "CairoScaledFont::getFontMatrix", "synopsis": "Procedural style:", "usage": "public void CairoScaledFont::getFontMatrix ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.getfontmatrix.php"}, {"name": "CairoScaledFont::getFontOptions", "synopsis": "Procedural style:", "usage": "public void CairoScaledFont::getFontOptions ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.getfontoptions.php"}, {"name": "CairoScaledFont::getScaleMatrix", "synopsis": "The method description goes here.", "usage": "public void CairoScaledFont::getScaleMatrix ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.getscalematrix.php"}, {"name": "CairoScaledFont::getType", "synopsis": "The method description goes here.", "usage": "public int CairoScaledFont::getType ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.gettype.php"}, {"name": "CairoScaledFont::glyphExtents", "synopsis": "The method description goes here.", "usage": "public array CairoScaledFont::glyphExtents ( array $glyphs )", "url": "https://secure.php.net/manual/en/cairoscaledfont.glyphextents.php"}, {"name": "CairoScaledFont::status", "synopsis": "Procedural style:", "usage": "public int CairoScaledFont::status ( void )", "url": "https://secure.php.net/manual/en/cairoscaledfont.status.php"}, {"name": "CairoScaledFont::textExtents", "synopsis": "Procedural style:", "usage": "public array CairoScaledFont::textExtents ( string $text )", "url": "https://secure.php.net/manual/en/cairoscaledfont.textextents.php"}, {"name": "CairoSolidPattern::__construct", "synopsis": "The method description goes here.", "usage": "public CairoSolidPattern::__construct ( float $red , float $green , float $blue [, float $alpha = 0 ] )", "url": "https://secure.php.net/manual/en/cairosolidpattern.construct.php"}, {"name": "CairoSolidPattern::getRgba", "synopsis": "The method description goes here.", "usage": "public array CairoSolidPattern::getRgba ( void )", "url": "https://secure.php.net/manual/en/cairosolidpattern.getrgba.php"}, {"name": "CairoSurface::__construct", "synopsis": "CairoSurface is an abstract type and, as such, should not be instantiated in your PHP scripts.", "usage": "public CairoSurface::__construct ( void )", "url": "https://secure.php.net/manual/en/cairosurface.construct.php"}, {"name": "CairoSurface::copyPage", "synopsis": "Procedural style:", "usage": "public void CairoSurface::copyPage ( void )", "url": "https://secure.php.net/manual/en/cairosurface.copypage.php"}, {"name": "CairoSurface::createSimilar", "synopsis": "Create a new surface that is as compatible as possible with an existing surface. For example the new surface will have the same fallback resolution and font options as other. Generally, the new surface will also use the same backend as other, unless that is not possible for some reason. The type of the returned surface may be examined with CairoSurface::getType(). Initially the surface contents are all 0 (transparent if contents have transparency, black otherwise.)", "usage": "public void CairoSurface::createSimilar ( CairoSurface $other , int $content , string $width , string $height )", "url": "https://secure.php.net/manual/en/cairosurface.createsimilar.php"}, {"name": "CairoSurface::finish", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::finish ( void )", "url": "https://secure.php.net/manual/en/cairosurface.finish.php"}, {"name": "CairoSurface::flush", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::flush ( void )", "url": "https://secure.php.net/manual/en/cairosurface.flush.php"}, {"name": "CairoSurface::getContent", "synopsis": "The method description goes here.", "usage": "public int CairoSurface::getContent ( void )", "url": "https://secure.php.net/manual/en/cairosurface.getcontent.php"}, {"name": "CairoSurface::getDeviceOffset", "synopsis": "The method description goes here.", "usage": "public array CairoSurface::getDeviceOffset ( void )", "url": "https://secure.php.net/manual/en/cairosurface.getdeviceoffset.php"}, {"name": "CairoSurface::getFontOptions", "synopsis": "Procedural style:", "usage": "public void CairoSurface::getFontOptions ( void )", "url": "https://secure.php.net/manual/en/cairosurface.getfontoptions.php"}, {"name": "CairoSurface::getType", "synopsis": "The method description goes here.", "usage": "public int CairoSurface::getType ( void )", "url": "https://secure.php.net/manual/en/cairosurface.gettype.php"}, {"name": "CairoSurface::markDirty", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::markDirty ( void )", "url": "https://secure.php.net/manual/en/cairosurface.markdirty.php"}, {"name": "CairoSurface::markDirtyRectangle", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::markDirtyRectangle ( float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/cairosurface.markdirtyrectangle.php"}, {"name": "CairoSurface::setDeviceOffset", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::setDeviceOffset ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairosurface.setdeviceoffset.php"}, {"name": "CairoSurface::setFallbackResolution", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::setFallbackResolution ( float $x , float $y )", "url": "https://secure.php.net/manual/en/cairosurface.setfallbackresolution.php"}, {"name": "CairoSurface::showPage", "synopsis": "Procedural style:", "usage": "public void CairoSurface::showPage ( void )", "url": "https://secure.php.net/manual/en/cairosurface.showpage.php"}, {"name": "CairoSurface::status", "synopsis": "Procedural style:", "usage": "public int CairoSurface::status ( void )", "url": "https://secure.php.net/manual/en/cairosurface.status.php"}, {"name": "CairoSurface::writeToPng", "synopsis": "The method description goes here.", "usage": "public void CairoSurface::writeToPng ( string $file )", "url": "https://secure.php.net/manual/en/cairosurface.writetopng.php"}, {"name": "CairoSurfacePattern::__construct", "synopsis": "The method description goes here.", "usage": "public CairoSurfacePattern::__construct ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.construct.php"}, {"name": "CairoSurfacePattern::getExtend", "synopsis": "The method description goes here.", "usage": "public int CairoSurfacePattern::getExtend ( void )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.getextend.php"}, {"name": "CairoSurfacePattern::getFilter", "synopsis": "The method description goes here.", "usage": "public int CairoSurfacePattern::getFilter ( void )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.getfilter.php"}, {"name": "CairoSurfacePattern::getSurface", "synopsis": "The method description goes here.", "usage": "public void CairoSurfacePattern::getSurface ( void )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.getsurface.php"}, {"name": "CairoSurfacePattern::setExtend", "synopsis": "The method description goes here.", "usage": "public void CairoSurfacePattern::setExtend ( int $extend )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.setextend.php"}, {"name": "CairoSurfacePattern::setFilter", "synopsis": "The method description goes here.", "usage": "public void CairoSurfacePattern::setFilter ( int $filter )", "url": "https://secure.php.net/manual/en/cairosurfacepattern.setfilter.php"}, {"name": "CairoSvgSurface::__construct", "synopsis": "The method description goes here.", "usage": "public CairoSvgSurface::__construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/cairosvgsurface.construct.php"}, {"name": "CairoSvgSurface::getVersions", "synopsis": "Procedural style:", "usage": "public static array CairoSvgSurface::getVersions ( void )", "url": "https://secure.php.net/manual/en/cairosvgsurface.getversions.php"}, {"name": "CairoSvgSurface::restrictToVersion", "synopsis": "The method description goes here.", "usage": "public void CairoSvgSurface::restrictToVersion ( int $version )", "url": "https://secure.php.net/manual/en/cairosvgsurface.restricttoversion.php"}, {"name": "CairoSvgSurface::versionToString", "synopsis": "The method description goes here.", "usage": "public static string CairoSvgSurface::versionToString ( int $version )", "url": "https://secure.php.net/manual/en/cairosvgsurface.versiontostring.php"}, {"name": "CallbackFilterIterator::accept", "synopsis": "This method calls the callback with the current value, current key and the inner iterator.", "usage": "public string CallbackFilterIterator::accept ( void )", "url": "https://secure.php.net/manual/en/callbackfilteriterator.accept.php"}, {"name": "chdb::__construct", "synopsis": "Loads a chdb file, by mapping it into memory.", "usage": "public chdb::__construct ( string $pathname )", "url": "https://secure.php.net/manual/en/chdb.construct.php"}, {"name": "chdb::get", "synopsis": "Gets the value associated with a key from a chdb database.", "usage": "public string chdb::get ( string $key )", "url": "https://secure.php.net/manual/en/chdb.get.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $cache [, mixed $search = NULL [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE ]]]] )", "url": "https://secure.php.net/manual/en/class.apciterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ mixed $search = NULL [, int $format = APC_ITER_ALL [, int $chunk_size = 100 [, int $list = APC_LIST_ACTIVE ]]]] )", "url": "https://secure.php.net/manual/en/class.apcuiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public void append ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/class.appenditerator.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.argumentcounterror.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.arithmeticerror.php"}, {"name": "offsetExists", "synopsis": null, "usage": "abstract public bool offsetExists ( mixed $offset )", "url": "https://secure.php.net/manual/en/class.arrayaccess.php"}, {"name": "append", "synopsis": null, "usage": "public void append ( mixed $value )", "url": "https://secure.php.net/manual/en/class.arrayiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public void append ( mixed $value )", "url": "https://secure.php.net/manual/en/class.arrayobject.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.assertionerror.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.badfunctioncallexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.badmethodcallexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Iterator $iterator [, int $flags = self::CALL_TOSTRING ] )", "url": "https://secure.php.net/manual/en/class.cachingiterator.php"}, {"name": "availableFonts", "synopsis": null, "usage": "public static array availableFonts ( void )", "url": "https://secure.php.net/manual/en/class.cairo.php"}, {"name": "CairoContext::moveTo()", "synopsis": null, "usage": "public void appendPath ( CairoPath $path )", "url": "https://secure.php.net/manual/en/class.cairocontext.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.cairoexception.php"}, {"name": "CairoContext::getFontFace()", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.cairofontface.php"}, {"name": "CairoFontOptions::copy()", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.cairofontoptions.php"}, {"name": "strideForWidth", "synopsis": null, "usage": "public static int strideForWidth ( int $format , int $width )", "url": "https://secure.php.net/manual/en/class.cairoformat.php"}, {"name": "addColorStopRgb", "synopsis": null, "usage": "public void addColorStopRgb ( float $offset , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/class.cairogradientpattern.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( int $format , int $width , int $height )", "url": "https://secure.php.net/manual/en/class.cairoimagesurface.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( float $x0 , float $y0 , float $x1 , float $y1 )", "url": "https://secure.php.net/manual/en/class.cairolineargradient.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ float $xx = 1.0 [, float $yx = 0.0 [, float $xy = 0.0 [, float $yy = 1.0 [, float $x0 = 0.0 [, float $y0 = 0.0 ]]]]]] )", "url": "https://secure.php.net/manual/en/class.cairomatrix.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.cairopattern.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/class.cairopdfsurface.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/class.cairopssurface.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )", "url": "https://secure.php.net/manual/en/class.cairoradialgradient.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( CairoFontFace $font_face , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/class.cairoscaledfont.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( float $red , float $green , float $blue [, float $alpha = 0 ] )", "url": "https://secure.php.net/manual/en/class.cairosolidpattern.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.cairosurface.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/class.cairosurfacepattern.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/class.cairosvgsurface.php"}, {"name": "__construct", "synopsis": null, "usage": "public string accept ( void )", "url": "https://secure.php.net/manual/en/class.callbackfilteriterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $pathname )", "url": "https://secure.php.net/manual/en/class.chdb.php"}, {"name": "__construct", "synopsis": null, "usage": "private __construct ( void )", "url": "https://secure.php.net/manual/en/class.closure.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool asort ( array &$arr [, int $sort_flag ] )", "url": "https://secure.php.net/manual/en/class.collator.php"}, {"name": "isGarbage", "synopsis": null, "usage": "public bool isGarbage ( void )", "url": "https://secure.php.net/manual/en/class.collectable.php"}, {"name": "COM::__construct", "synopsis": null, "usage": "COM::__construct ( string $module_name [, mixed $server_name [, int $codepage [, string $typelib ]]] )", "url": "https://secure.php.net/manual/en/class.com.php"}, {"name": "__construct", "synopsis": null, "usage": "public __invoke ( \\CommonMark\\Node $root , callable $handler )", "url": "https://secure.php.net/manual/en/class.commonmark-cql.php"}, {"name": "accept", "synopsis": null, "usage": "abstract public void accept ( CommonMark\\Interfaces\\IVisitor $visitor )", "url": "https://secure.php.net/manual/en/class.commonmark-interfaces-ivisitable.php"}, {"name": "enter", "synopsis": null, "usage": "abstract public ?int|IVisitable enter ( IVisitable $visitable )", "url": "https://secure.php.net/manual/en/class.commonmark-interfaces-ivisitor.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-blockquote.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-bulletlist.php"}, {"name": "CommonMark\\Node\\Text::__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-code.php"}, {"name": "CommonMark\\Node\\Text::__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-codeblock.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-customblock.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-custominline.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-document.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-heading.php"}, {"name": "CommonMark\\Node\\Text::__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-htmlblock.php"}, {"name": "CommonMark\\Node\\Text::__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-htmlinline.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-image.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-item.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-linebreak.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-link.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-orderedlist.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-paragraph.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-softbreak.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-text-emphasis.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-text-strong.php"}, {"name": "__construct", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-text.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": null, "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node-thematicbreak.php"}, {"name": "appendChild", "synopsis": null, "usage": "public CommonMark\\Node appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/class.commonmark-node.php"}, {"name": "__construct", "synopsis": null, "usage": "public void parse ( string $buffer )", "url": "https://secure.php.net/manual/en/class.commonmark-parser.php"}, {"name": "addInterface", "synopsis": null, "usage": "public Definition addInterface ( string $interface )", "url": "https://secure.php.net/manual/en/class.componere-abstract-definition.php"}, {"name": "__construct", "synopsis": null, "usage": "public Definition addConstant ( string $name , \\Componere\\Value $value )", "url": "https://secure.php.net/manual/en/class.componere-definition.php"}, {"name": "__construct", "synopsis": null, "usage": "public Method setPrivate ( void )", "url": "https://secure.php.net/manual/en/class.componere-method.php"}, {"name": "__construct", "synopsis": null, "usage": "public void apply ( void )", "url": "https://secure.php.net/manual/en/class.componere-patch.php"}, {"name": "__construct", "synopsis": null, "usage": "public Value setPrivate ( void )", "url": "https://secure.php.net/manual/en/class.componere-value.php"}, {"name": "broadcast", "synopsis": null, "usage": "final public static bool broadcast ( int $condition )", "url": "https://secure.php.net/manual/en/class.cond.php"}, {"name": "count", "synopsis": null, "usage": "abstract public int count ( void )", "url": "https://secure.php.net/manual/en/class.countable.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $filename [, string $mimetype [, string $postname ]] )", "url": "https://secure.php.net/manual/en/class.curlfile.php"}, {"name": "__construct", "synopsis": null, "usage": "public static DateInterval createFromDateString ( string $time )", "url": "https://secure.php.net/manual/en/class.dateinterval.php"}, {"name": "__construct", "synopsis": null, "usage": "public DateInterval getDateInterval ( void )", "url": "https://secure.php.net/manual/en/class.dateperiod.php"}, {"name": "__construct", "synopsis": null, "usage": "public DateTime add ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/class.datetime.php"}, {"name": "__construct", "synopsis": null, "usage": "public DateTimeImmutable add ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/class.datetimeimmutable.php"}, {"name": "diff", "synopsis": null, "usage": "public DateInterval diff ( DateTimeInterface $datetime2 [, bool $absolute = FALSE ] )", "url": "https://secure.php.net/manual/en/class.datetimeinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "public array getLocation ( void )", "url": "https://secure.php.net/manual/en/class.datetimezone.php"}, {"name": "close", "synopsis": null, "usage": "public void close ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/class.directory.php"}, {"name": "__construct", "synopsis": null, "usage": "public DirectoryIterator current ( void )", "url": "https://secure.php.net/manual/en/class.directoryiterator.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.divisionbyzeroerror.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.domainexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/class.domattr.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool DOMText::isElementContentWhitespace ( void )", "url": "https://secure.php.net/manual/en/class.domcdatasection.php"}, {"name": "appendData", "synopsis": null, "usage": "public void appendData ( string $data )", "url": "https://secure.php.net/manual/en/class.domcharacterdata.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $value ] )", "url": "https://secure.php.net/manual/en/class.domcomment.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $version [, string $encoding ]] )", "url": "https://secure.php.net/manual/en/class.domdocument.php"}, {"name": "appendXML", "synopsis": null, "usage": "public bool appendXML ( string $data )", "url": "https://secure.php.net/manual/en/class.domdocumentfragment.php"}, {"name": "DOMNode::appendChild", "synopsis": null, "usage": "public DOMNode DOMNode::appendChild ( DOMNode $newnode )", "url": "https://secure.php.net/manual/en/class.domdocumenttype.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $name [, string $value [, string $namespaceURI ]] )", "url": "https://secure.php.net/manual/en/class.domelement.php"}, {"name": "DOMNode::appendChild", "synopsis": null, "usage": "public DOMNode DOMNode::appendChild ( DOMNode $newnode )", "url": "https://secure.php.net/manual/en/class.domentity.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $name )", "url": "https://secure.php.net/manual/en/class.domentityreference.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.domexception.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( void )", "url": "https://secure.php.net/manual/en/class.domimplementation.php"}, {"name": "getNamedItem", "synopsis": null, "usage": "DOMNode getNamedItem ( string $name )", "url": "https://secure.php.net/manual/en/class.domnamednodemap.php"}, {"name": "appendChild", "synopsis": null, "usage": "public DOMNode appendChild ( DOMNode $newnode )", "url": "https://secure.php.net/manual/en/class.domnode.php"}, {"name": "count", "synopsis": null, "usage": "public int count ( void )", "url": "https://secure.php.net/manual/en/class.domnodelist.php"}, {"name": "DOMNode::appendChild", "synopsis": null, "usage": "public DOMNode DOMNode::appendChild ( DOMNode $newnode )", "url": "https://secure.php.net/manual/en/class.domnotation.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/class.domprocessinginstruction.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool isElementContentWhitespace ( void )", "url": "https://secure.php.net/manual/en/class.domtext.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( DOMDocument $doc )", "url": "https://secure.php.net/manual/en/class.domxpath.php"}, {"name": "DOTNET::__construct", "synopsis": null, "usage": "DOTNET::__construct ( string $assembly_name , string $class_name [, int $codepage ] )", "url": "https://secure.php.net/manual/en/class.dotnet.php"}, {"name": "clear", "synopsis": null, "usage": "abstract public void clear ( void )", "url": "https://secure.php.net/manual/en/class.ds-collection.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-deque.php"}, {"name": "equals", "synopsis": null, "usage": "abstract public bool equals ( object $obj )", "url": "https://secure.php.net/manual/en/class.ds-hashable.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-map.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-priorityqueue.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-queue.php"}, {"name": "allocate", "synopsis": null, "usage": "abstract public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-sequence.php"}, {"name": "add", "synopsis": null, "usage": "public void add ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/class.ds-set.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-stack.php"}, {"name": "allocate", "synopsis": null, "usage": "public void allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/class.ds-vector.php"}, {"name": "current", "synopsis": null, "usage": "public mixed current ( void )", "url": "https://secure.php.net/manual/en/class.emptyiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "final public string getMessage ( void )", "url": "https://secure.php.net/manual/en/class.error.php"}, {"name": "__construct", "synopsis": null, "usage": "final public int getSeverity ( void )", "url": "https://secure.php.net/manual/en/class.errorexception.php"}, {"name": "backend", "synopsis": null, "usage": "final public static int backend ( void )", "url": "https://secure.php.net/manual/en/class.ev.php"}, {"name": "EvLoop::run()", "synopsis": null, "usage": "public __construct ( callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/class.evcheck.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( int $pid , bool $trace , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/class.evchild.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( object $other [, callable $callback [, mixed $data [, int $priority ]]] )", "url": "https://secure.php.net/manual/en/class.evembed.php"}, {"name": "Event::add()", "synopsis": null, "usage": "public bool add ([ float $timeout ] )", "url": "https://secure.php.net/manual/en/class.event.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ EventConfig $cfg ] )", "url": "https://secure.php.net/manual/en/class.eventbase.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( string $data )", "url": "https://secure.php.net/manual/en/class.eventbuffer.php"}, {"name": "close", "synopsis": null, "usage": "public void close ( void )", "url": "https://secure.php.net/manual/en/class.eventbufferevent.php"}, {"name": "avoidMethod", "synopsis": null, "usage": "public bool avoidMethod ( string $method )", "url": "https://secure.php.net/manual/en/class.eventconfig.php"}, {"name": "addNameserverIp", "synopsis": null, "usage": "public bool addNameserverIp ( string $ip )", "url": "https://secure.php.net/manual/en/class.eventdnsbase.php"}, {"name": "accept", "synopsis": null, "usage": "public bool accept ( mixed $socket )", "url": "https://secure.php.net/manual/en/class.eventhttp.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( EventBase $base , EventDnsBase $dns_base , string $address , int $port [, EventSslContext $ctx = NULL ] )", "url": "https://secure.php.net/manual/en/class.eventhttpconnection.php"}, {"name": "addHeader", "synopsis": null, "usage": "public bool addHeader ( string $key , string $value , int $type )", "url": "https://secure.php.net/manual/en/class.eventhttprequest.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( EventBase $base , callable $cb , mixed $data , int $flags , int $backlog , mixed $target )", "url": "https://secure.php.net/manual/en/class.eventlistener.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $method , string $options )", "url": "https://secure.php.net/manual/en/class.eventsslcontext.php"}, {"name": "__construct", "synopsis": null, "usage": "abstract public __construct ( void )", "url": "https://secure.php.net/manual/en/class.eventutil.php"}, {"name": "EvLoop::fork()", "synopsis": null, "usage": "public __construct ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/class.evfork.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/class.evidle.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $fd , int $events , callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/class.evio.php"}, {"name": "EvLoop::defaultLoop()", "synopsis": null, "usage": "public int backend ( void )", "url": "https://secure.php.net/manual/en/class.evloop.php"}, {"name": "EvLoop::now()", "synopsis": null, "usage": "public void again ( void )", "url": "https://secure.php.net/manual/en/class.evperiodic.php"}, {"name": "EvLoop::run()", "synopsis": null, "usage": "public __construct ( string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/class.evprepare.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/class.evsignal.php"}, {"name": "EvStat::attr()", "synopsis": null, "usage": "public array attr ( void )", "url": "https://secure.php.net/manual/en/class.evstat.php"}, {"name": "EvLoop::run()", "synopsis": null, "usage": "public void again ( void )", "url": "https://secure.php.net/manual/en/class.evtimer.php"}, {"name": "clear", "synopsis": null, "usage": "public int clear ( void )", "url": "https://secure.php.net/manual/en/class.evwatcher.php"}, {"name": "__construct", "synopsis": null, "usage": "final public string getMessage ( void )", "url": "https://secure.php.net/manual/en/class.exception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( int $from_neuron , int $to_neuron , float $weight )", "url": "https://secure.php.net/manual/en/class.fannconnection.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ] )", "url": "https://secure.php.net/manual/en/class.filesystemiterator.php"}, {"name": "FilterIterator::accept()", "synopsis": null, "usage": "public abstract bool accept ( void )", "url": "https://secure.php.net/manual/en/class.filteriterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public string buffer ( string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/class.finfo.php"}, {"name": "addOptions", "synopsis": null, "usage": "public bool addOptions ( int $options )", "url": "https://secure.php.net/manual/en/class.gearmanclient.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.gearmanexception.php"}, {"name": "complete", "synopsis": null, "usage": "public bool complete ( string $result )", "url": "https://secure.php.net/manual/en/class.gearmanjob.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.gearmantask.php"}, {"name": "addFunction", "synopsis": null, "usage": "public bool addFunction ( string $function_name , callable $function [, mixed &$context [, int $timeout ]] )", "url": "https://secure.php.net/manual/en/class.gearmanworker.php"}, {"name": "connect", "synopsis": null, "usage": "public bool connect ( string $dsn )", "url": "https://secure.php.net/manual/en/class.gender.php"}, {"name": "current", "synopsis": null, "usage": "public mixed current ( void )", "url": "https://secure.php.net/manual/en/class.generator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $pattern [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )", "url": "https://secure.php.net/manual/en/class.globiterator.php"}, {"name": "addimage", "synopsis": null, "usage": "public Gmagick addimage ( Gmagick $source )", "url": "https://secure.php.net/manual/en/class.gmagick.php"}, {"name": "annotate", "synopsis": null, "usage": "public GmagickDraw annotate ( float $x , float $y , string $text )", "url": "https://secure.php.net/manual/en/class.gmagickdraw.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $color ] )", "url": "https://secure.php.net/manual/en/class.gmagickpixel.php"}, {"name": "setBorderStyle", "synopsis": null, "usage": "bool setBorderStyle ( float $width , int $dash_on , int $dash_off )", "url": "https://secure.php.net/manual/en/class.haruannotation.php"}, {"name": "setFit", "synopsis": null, "usage": "bool setFit ( void )", "url": "https://secure.php.net/manual/en/class.harudestination.php"}, {"name": "addPage", "synopsis": null, "usage": "object addPage ( void )", "url": "https://secure.php.net/manual/en/class.harudoc.php"}, {"name": "getByteType", "synopsis": null, "usage": "int getByteType ( string $text , int $index )", "url": "https://secure.php.net/manual/en/class.haruencoder.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.haruexception.php"}, {"name": "getAscent", "synopsis": null, "usage": "int getAscent ( void )", "url": "https://secure.php.net/manual/en/class.harufont.php"}, {"name": "getBitsPerComponent", "synopsis": null, "usage": "int getBitsPerComponent ( void )", "url": "https://secure.php.net/manual/en/class.haruimage.php"}, {"name": "setDestination", "synopsis": null, "usage": "bool setDestination ( object $destination )", "url": "https://secure.php.net/manual/en/class.haruoutline.php"}, {"name": "arc", "synopsis": null, "usage": "bool arc ( float $x , float $y , float $ray , float $ang1 , float $ang2 )", "url": "https://secure.php.net/manual/en/class.harupage.php"}, {"name": "getFrequency", "synopsis": null, "usage": "public static int getFrequency ( void )", "url": "https://secure.php.net/manual/en/class.hrtime-performancecounter.php"}, {"name": "getElapsedTicks", "synopsis": null, "usage": "public int getElapsedTicks ( void )", "url": "https://secure.php.net/manual/en/class.hrtime-stopwatch.php"}, {"name": "adaptiveBlurImage", "synopsis": null, "usage": "bool adaptiveBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/class.imagick.php"}, {"name": "affine", "synopsis": null, "usage": "bool affine ( array $affine )", "url": "https://secure.php.net/manual/en/class.imagickdraw.php"}, {"name": "addKernel", "synopsis": null, "usage": "public void addKernel ( ImagickKernel $ImagickKernel )", "url": "https://secure.php.net/manual/en/class.imagickkernel.php"}, {"name": "clear", "synopsis": null, "usage": "bool clear ( void )", "url": "https://secure.php.net/manual/en/class.imagickpixel.php"}, {"name": "clear", "synopsis": null, "usage": "bool clear ( void )", "url": "https://secure.php.net/manual/en/class.imagickpixeliterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/class.infiniteiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "private __construct ( void )", "url": "https://secure.php.net/manual/en/class.intlbreakiterator.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( int $field , int $amount )", "url": "https://secure.php.net/manual/en/class.intlcalendar.php"}, {"name": "charAge", "synopsis": null, "usage": "public static array charAge ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/class.intlchar.php"}, {"name": "getLastCodePoint", "synopsis": null, "usage": "public int getLastCodePoint ( void )", "url": "https://secure.php.net/manual/en/class.intlcodepointbreakiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public static IntlDateFormatter create ( string $locale , int $datetype , int $timetype [, mixed $timezone = NULL [, mixed $calendar = NULL [, string $pattern = \"\" ]]] )", "url": "https://secure.php.net/manual/en/class.intldateformatter.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.intlexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public float getGregorianChange ( void )", "url": "https://secure.php.net/manual/en/class.intlgregoriancalendar.php"}, {"name": "current", "synopsis": null, "usage": "public mixed current ( void )", "url": "https://secure.php.net/manual/en/class.intliterator.php"}, {"name": "getBreakIterator", "synopsis": null, "usage": "public IntlBreakIterator getBreakIterator ( void )", "url": "https://secure.php.net/manual/en/class.intlpartsiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $rules [, string $areCompiled ] )", "url": "https://secure.php.net/manual/en/class.intlrulebasedbreakiterator.php"}, {"name": "countEquivalentIDs", "synopsis": null, "usage": "public static int countEquivalentIDs ( string $zoneId )", "url": "https://secure.php.net/manual/en/class.intltimezone.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.invalidargumentexception.php"}, {"name": "current", "synopsis": null, "usage": "abstract public mixed current ( void )", "url": "https://secure.php.net/manual/en/class.iterator.php"}, {"name": "getIterator", "synopsis": null, "usage": "abstract public Traversable getIterator ( void )", "url": "https://secure.php.net/manual/en/class.iteratoraggregate.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Traversable $iterator )", "url": "https://secure.php.net/manual/en/class.iteratoriterator.php"}, {"name": "jsonSerialize", "synopsis": null, "usage": "abstract public mixed jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.jsonserializable.php"}, {"name": "byCount", "synopsis": null, "usage": "public int byCount ( int $nth_index )", "url": "https://secure.php.net/manual/en/class.judy.php"}, {"name": "getDescription", "synopsis": null, "usage": "public string getDescription ( void )", "url": "https://secure.php.net/manual/en/class.ktaglib-id3v2-attachedpictureframe.php"}, {"name": "getSize", "synopsis": null, "usage": "public int getSize ( void )", "url": "https://secure.php.net/manual/en/class.ktaglib-id3v2-frame.php"}, {"name": "addFrame", "synopsis": null, "usage": "public bool addFrame ( KTaglib_ID3v2_Frame $frame )", "url": "https://secure.php.net/manual/en/class.ktaglib-id3v2-tag.php"}, {"name": "KTaglib_MPEG_AudioProperties::getBitrate", "synopsis": null, "usage": "public int KTaglib_MPEG_AudioProperties::getBitrate ( void )", "url": "https://secure.php.net/manual/en/class.ktaglib-mpeg-audioproperties.php"}, {"name": "getAudioProperties", "synopsis": null, "usage": "public KTaglib_MPEG_File getAudioProperties ( void )", "url": "https://secure.php.net/manual/en/class.ktaglib-mpeg-file.php"}, {"name": "getAlbum", "synopsis": null, "usage": "public string getAlbum ( void )", "url": "https://secure.php.net/manual/en/class.ktaglib-tag.php"}, {"name": "eigenValues", "synopsis": null, "usage": "public static array eigenValues ( array $a [, array $left [, array $right ]] )", "url": "https://secure.php.net/manual/en/class.lapack.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.lapackexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.lengthexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Iterator $iterator [, int $offset = 0 [, int $count = -1 ]] )", "url": "https://secure.php.net/manual/en/class.limititerator.php"}, {"name": "acceptFromHttp", "synopsis": null, "usage": "public static string acceptFromHttp ( string $header )", "url": "https://secure.php.net/manual/en/class.locale.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.logicexception.php"}, {"name": "assign", "synopsis": null, "usage": "public mixed assign ( string $name , string $value )", "url": "https://secure.php.net/manual/en/class.lua.php"}, {"name": "__invoke", "synopsis": null, "usage": "public void __invoke ( mixed $arg [, mixed $... ] )", "url": "https://secure.php.net/manual/en/class.luaclosure.php"}, {"name": "add", "synopsis": null, "usage": "bool add ( string $key , mixed $var [, int $flag [, int $expire ]] )", "url": "https://secure.php.net/manual/en/class.memcache.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool add ( string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/class.memcached.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.memcachedexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public static MessageFormatter create ( string $locale , string $pattern )", "url": "https://secure.php.net/manual/en/class.messageformatter.php"}, {"name": "connectUtil", "synopsis": null, "usage": "protected bool connectUtil ( void )", "url": "https://secure.php.net/manual/en/class.mongo.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $data [, int $type = 0 ] )", "url": "https://secure.php.net/manual/en/class.mongobindata.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool close ([ boolean|string $connection ] )", "url": "https://secure.php.net/manual/en/class.mongoclient.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $code [, array $scope = array() ] )", "url": "https://secure.php.net/manual/en/class.mongocode.php"}, {"name": "aggregate", "synopsis": null, "usage": "public array aggregate ( array $pipeline [, array $options ] )", "url": "https://secure.php.net/manual/en/class.mongocollection.php"}, {"name": "batchSize", "synopsis": null, "usage": "public MongoCommandCursor batchSize ( int $batchSize )", "url": "https://secure.php.net/manual/en/class.mongocommandcursor.php"}, {"name": "addOption", "synopsis": null, "usage": "public MongoCursor addOption ( string $key , mixed $value )", "url": "https://secure.php.net/manual/en/class.mongocursor.php"}, {"name": "batchSize", "synopsis": null, "usage": "abstract public MongoCursorInterface batchSize ( int $batchSize )", "url": "https://secure.php.net/manual/en/class.mongocursorinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ int $sec = time() [, int $usec = 0 ]] )", "url": "https://secure.php.net/manual/en/class.mongodate.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( string $data , int $type )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-binary.php"}, {"name": "getData", "synopsis": null, "usage": "abstract public string getData ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-binaryinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-dbpointer.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ([ string $value ] )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-decimal128.php"}, {"name": "__toString", "synopsis": null, "usage": "abstract public string __toString ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-decimal128interface.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( string $code [, array|object $scope ] )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-javascript.php"}, {"name": "getCode", "synopsis": null, "usage": "abstract public string getCode ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-javascriptinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-maxkey.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-minkey.php"}, {"name": "MongoDB\\BSON\\ObjectId::getTimestamp()", "synopsis": null, "usage": "final public __construct ([ string $id ] )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-objectid.php"}, {"name": "getTimestamp", "synopsis": null, "usage": "abstract public int getTimestamp ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-objectidinterface.php"}, {"name": "MongoDB\\BSON\\Serializable::bsonSerialize", "synopsis": null, "usage": "abstract public array|object MongoDB\\BSON\\Serializable::bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-persistable.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( string $pattern [, string $flags = \"\" ] )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-regex.php"}, {"name": "getFlags", "synopsis": null, "usage": "abstract public string getFlags ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-regexinterface.php"}, {"name": "bsonSerialize", "synopsis": null, "usage": "abstract public array|object bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-serializable.php"}, {"name": "__construct", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-symbol.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( int $increment , int $timestamp )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-timestamp.php"}, {"name": "getIncrement", "synopsis": null, "usage": "abstract public int getIncrement ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-timestampinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-undefined.php"}, {"name": "bsonUnserialize", "synopsis": null, "usage": "abstract public void bsonUnserialize ( array $data )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-unserializable.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ([ integer|float|string|DateTimeInterface $milliseconds = NULL ] )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-utcdatetime.php"}, {"name": "toDateTime", "synopsis": null, "usage": "abstract public DateTime toDateTime ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-bson-utcdatetimeinterface.php"}, {"name": "MongoDB\\Driver\\Manager::executeBulkWrite()", "synopsis": null, "usage": "public __construct ([ array $options ] )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-bulkwrite.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( array|object $document [, array $commandOptions ] )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-command.php"}, {"name": "MongoDB\\Driver\\Manager::executeCommand()", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-cursor.php"}, {"name": "__construct", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-cursorid.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-authenticationexception.php"}, {"name": "MongoDB\\Driver\\Exception\\WriteException::getWriteResult", "synopsis": null, "usage": "final public MongoDB\\Driver\\WriteResult MongoDB\\Driver\\Exception\\WriteException::getWriteResult ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-bulkwriteexception.php"}, {"name": "getResultDocument", "synopsis": null, "usage": "final public object getResultDocument ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-commandexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-connectionexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-connectiontimeoutexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-executiontimeoutexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-invalidargumentexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-logicexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-runtimeexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-serverexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-sslconnectionexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-unexpectedvalueexception.php"}, {"name": "getWriteResult", "synopsis": null, "usage": "final public MongoDB\\Driver\\WriteResult getWriteResult ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-exception-writeexception.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ([ string $uri = \"mongodb://127.0.0.1/ [, array $uriOptions = array() [, array $driverOptions = array() ]]] )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-manager.php"}, {"name": "getCommandName", "synopsis": null, "usage": "final public string getCommandName ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-monitoring-commandfailedevent.php"}, {"name": "getCommand", "synopsis": null, "usage": "final public object getCommand ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-monitoring-commandstartedevent.php"}, {"name": "commandFailed", "synopsis": null, "usage": "abstract public void commandFailed ( MongoDB\\Driver\\Monitoring\\CommandFailedEvent $event )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-monitoring-commandsubscriber.php"}, {"name": "getCommandName", "synopsis": null, "usage": "final public string getCommandName ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-monitoring-commandsucceededevent.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( array|object $filter [, array $queryOptions ] )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-query.php"}, {"name": "bsonSerialize", "synopsis": null, "usage": "final public object bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-readconcern.php"}, {"name": "bsonSerialize", "synopsis": null, "usage": "final public object bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-readpreference.php"}, {"name": "__construct", "synopsis": null, "usage": "final private __construct ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-server.php"}, {"name": "MongoDB\\Driver\\Manager::startSession()", "synopsis": null, "usage": "final public void advanceClusterTime ( array|object $clusterTime )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-session.php"}, {"name": "bsonSerialize", "synopsis": null, "usage": "final public object bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-writeconcern.php"}, {"name": "MongoDB\\Driver\\WriteResult::getWriteConcernError()", "synopsis": null, "usage": "final public int getCode ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-writeconcernerror.php"}, {"name": "MongoDB\\Driver\\WriteResult::getWriteErrors()", "synopsis": null, "usage": "final public int getCode ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-writeerror.php"}, {"name": "MongoDB\\Driver\\Manager::executeBulkWrite()", "synopsis": null, "usage": "final public integer|null getDeletedCount ( void )", "url": "https://secure.php.net/manual/en/class.mongodb-driver-writeresult.php"}, {"name": "authenticate", "synopsis": null, "usage": "public array authenticate ( string $username , string $password )", "url": "https://secure.php.net/manual/en/class.mongodb.php"}, {"name": "create", "synopsis": null, "usage": "public static array create ( string $collection , mixed $id [, string $database ] )", "url": "https://secure.php.net/manual/en/class.mongodbref.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/class.mongodeletebatch.php"}, {"name": "MongoWriteConcernException::getDocument", "synopsis": null, "usage": "public array MongoWriteConcernException::getDocument ( void )", "url": "https://secure.php.net/manual/en/class.mongoduplicatekeyexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( MongoDB $db [, string $prefix = \"fs\" [, mixed $chunks = \"fs\" ]] )", "url": "https://secure.php.net/manual/en/class.mongogridfs.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( MongoGridFS $gridfs , resource $connection , string $ns , array $query , array $fields )", "url": "https://secure.php.net/manual/en/class.mongogridfscursor.php"}, {"name": "MongoGridfsFile::__construct", "synopsis": null, "usage": "public MongoGridfsFile::__construct ( MongoGridFS $gridfs , array $file )", "url": "https://secure.php.net/manual/en/class.mongogridfsfile.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string|MongoId $id = NULL ] )", "url": "https://secure.php.net/manual/en/class.mongoid.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/class.mongoinsertbatch.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $value )", "url": "https://secure.php.net/manual/en/class.mongoint32.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $value )", "url": "https://secure.php.net/manual/en/class.mongoint64.php"}, {"name": "getCallback", "synopsis": null, "usage": "public static callable getCallback ( void )", "url": "https://secure.php.net/manual/en/class.mongolog.php"}, {"name": "getSize", "synopsis": null, "usage": "public static int getSize ( void )", "url": "https://secure.php.net/manual/en/class.mongopool.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $regex )", "url": "https://secure.php.net/manual/en/class.mongoregex.php"}, {"name": "MongoCollection::findAndModify()", "synopsis": null, "usage": "public array getDocument ( void )", "url": "https://secure.php.net/manual/en/class.mongoresultexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ int $sec = time() [, int $inc ]] )", "url": "https://secure.php.net/manual/en/class.mongotimestamp.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/class.mongoupdatebatch.php"}, {"name": "MongoCollection::batchInsert()", "synopsis": null, "usage": "public bool add ( array $item )", "url": "https://secure.php.net/manual/en/class.mongowritebatch.php"}, {"name": "getDocument", "synopsis": null, "usage": "public array getDocument ( void )", "url": "https://secure.php.net/manual/en/class.mongowriteconcernexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public void attachIterator ( Iterator $iterator [, string $infos ] )", "url": "https://secure.php.net/manual/en/class.multipleiterator.php"}, {"name": "create", "synopsis": null, "usage": "final public static int create ([ bool $lock ] )", "url": "https://secure.php.net/manual/en/class.mutex.php"}, {"name": "getWarningCount", "synopsis": null, "usage": "abstract public integer getWarningCount ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-baseresult.php"}, {"name": "add", "synopsis": null, "usage": "public mysql_xdevapi\\Result add ( mixed $document )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-collection.php"}, {"name": "execute", "synopsis": null, "usage": "public mysql_xdevapi\\Result execute ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-collectionadd.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\CollectionFind bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-collectionfind.php"}, {"name": "arrayAppend", "synopsis": null, "usage": "public mysql_xdevapi\\CollectionModify arrayAppend ( string $collection_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-collectionmodify.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\CollectionRemove bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-collectionremove.php"}, {"name": "getCharacterSetName", "synopsis": null, "usage": "public string getCharacterSetName ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-columnresult.php"}, {"name": "bind", "synopsis": null, "usage": "abstract public mysql_xdevapi\\CrudOperationBindable bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-crudoperationbindable.php"}, {"name": "limit", "synopsis": null, "usage": "abstract public mysql_xdevapi\\CrudOperationLimitable limit ( integer $rows )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-crudoperationlimitable.php"}, {"name": "skip", "synopsis": null, "usage": "abstract public mysql_xdevapi\\CrudOperationSkippable skip ( integer $skip )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-crudoperationskippable.php"}, {"name": "sort", "synopsis": null, "usage": "abstract public mysql_xdevapi\\CrudOperationSortable sort ( string $sort_expr )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-crudoperationsortable.php"}, {"name": "existsInDatabase", "synopsis": null, "usage": "abstract public bool existsInDatabase ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-databaseobject.php"}, {"name": "fetchAll", "synopsis": null, "usage": "public Array fetchAll ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-docresult.php"}, {"name": "execute", "synopsis": null, "usage": "abstract public mysql_xdevapi\\Result execute ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-executable.php"}, {"name": "getAffectedItemsCount", "synopsis": null, "usage": "public int getAffectedItemsCount ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-result.php"}, {"name": "fetchAll", "synopsis": null, "usage": "public array fetchAll ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-rowresult.php"}, {"name": "createCollection", "synopsis": null, "usage": "public mysql_xdevapi\\Collection createCollection ( string $name )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-schema.php"}, {"name": "getSchema", "synopsis": null, "usage": "abstract mysql_xdevapi\\Schema getSchema ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-schemaobject.php"}, {"name": "close", "synopsis": null, "usage": "public bool close ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-session.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\SqlStatement bind ( string $param )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-sqlstatement.php"}, {"name": "fetchAll", "synopsis": null, "usage": "public array fetchAll ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-sqlstatementresult.php"}, {"name": "getNextResult", "synopsis": null, "usage": "public mysql_xdevapi\\Result getNextResult ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-statement.php"}, {"name": "count", "synopsis": null, "usage": "public integer count ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-table.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\TableDelete bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-tabledelete.php"}, {"name": "execute", "synopsis": null, "usage": "public mysql_xdevapi\\Result execute ( void )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-tableinsert.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\TableSelect bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-tableselect.php"}, {"name": "bind", "synopsis": null, "usage": "public mysql_xdevapi\\TableUpdate bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/class.mysql-xdevapi-tableupdate.php"}, {"name": "embedded_server_end", "synopsis": null, "usage": "void embedded_server_end ( void )", "url": "https://secure.php.net/manual/en/class.mysqli-driver.php"}, {"name": "data_seek", "synopsis": null, "usage": "bool data_seek ( int $offset )", "url": "https://secure.php.net/manual/en/class.mysqli-result.php"}, {"name": "__construct", "synopsis": null, "usage": "int attr_get ( int $attr )", "url": "https://secure.php.net/manual/en/class.mysqli-stmt.php"}, {"name": "__construct", "synopsis": null, "usage": "protected __construct ( void )", "url": "https://secure.php.net/manual/en/class.mysqli-warning.php"}, {"name": "__construct", "synopsis": null, "usage": "bool autocommit ( bool $mode )", "url": "https://secure.php.net/manual/en/class.mysqli.php"}, {"name": "changeUser", "synopsis": null, "usage": "public bool changeUser ( mysqlnd_connection $connection , string $user , string $password , string $database , bool $silent , int $passwd_len )", "url": "https://secure.php.net/manual/en/class.mysqlnduhconnection.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.mysqlnduhpreparedstatement.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/class.norewinditerator.php"}, {"name": "getRawDecomposition", "synopsis": null, "usage": "public static string getRawDecomposition ( string $input )", "url": "https://secure.php.net/manual/en/class.normalizer.php"}, {"name": "__construct", "synopsis": null, "usage": "public static NumberFormatter create ( string $locale , int $style [, string $pattern ] )", "url": "https://secure.php.net/manual/en/class.numberformatter.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $consumer_key , string $consumer_secret [, string $signature_method = OAUTH_SIG_METHOD_HMACSHA1 [, int $auth_type = 0 ]] )", "url": "https://secure.php.net/manual/en/class.oauth.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.oauthexception.php"}, {"name": "addRequiredParameter", "synopsis": null, "usage": "final public bool addRequiredParameter ( string $req_params )", "url": "https://secure.php.net/manual/en/class.oauthprovider.php"}, {"name": "append", "synopsis": null, "usage": "bool append ( mixed $value )", "url": "https://secure.php.net/manual/en/class.OCI-Collection.php"}, {"name": "append", "synopsis": null, "usage": "bool append ( OCI-Lob $lob_from )", "url": "https://secure.php.net/manual/en/class.OCI-Lob.php"}, {"name": "getInnerIterator", "synopsis": null, "usage": "public Iterator getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/class.outeriterator.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.outofboundsexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.outofrangeexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.overflowexception.php"}, {"name": "accept", "synopsis": null, "usage": "public bool accept ( void )", "url": "https://secure.php.net/manual/en/class.parentiterator.php"}, {"name": "advance", "synopsis": null, "usage": "public void advance ( void )", "url": "https://secure.php.net/manual/en/class.parle-lexer.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.parle-lexerexception.php"}, {"name": "advance", "synopsis": null, "usage": "public void advance ( void )", "url": "https://secure.php.net/manual/en/class.parle-parser.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.parle-parserexception.php"}, {"name": "advance", "synopsis": null, "usage": "public void advance ( void )", "url": "https://secure.php.net/manual/en/class.parle-rlexer.php"}, {"name": "advance", "synopsis": null, "usage": "public void advance ( void )", "url": "https://secure.php.net/manual/en/class.parle-rparser.php"}, {"name": "pop", "synopsis": null, "usage": "public void pop ( void )", "url": "https://secure.php.net/manual/en/class.parle-stack.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.parseerror.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool beginTransaction ( void )", "url": "https://secure.php.net/manual/en/class.pdo.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.pdoexception.php"}, {"name": "bindColumn", "synopsis": null, "usage": "public bool bindColumn ( mixed $column , mixed &$param [, int $type [, int $maxlen [, mixed $driverdata ]]] )", "url": "https://secure.php.net/manual/en/class.pdostatement.php"}, {"name": "addEmptyDir", "synopsis": null, "usage": "public void addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/class.phar.php"}, {"name": "addEmptyDir", "synopsis": null, "usage": "void addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/class.phardata.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.pharexception.php"}, {"name": "chmod", "synopsis": null, "usage": "public void chmod ( int $permissions )", "url": "https://secure.php.net/manual/en/class.pharfileinfo.php"}, {"name": "connect", "synopsis": null, "usage": "public bool connect ( void )", "url": "https://secure.php.net/manual/en/class.phdfs.php"}, {"name": "filter", "synopsis": null, "usage": "public int filter ( resource $in , resource $out , int &$consumed , bool $closing )", "url": "https://secure.php.net/manual/en/class.php-user-filter.php"}, {"name": "pht\\AtomicInteger::lock()", "synopsis": null, "usage": "public AtomicInteger __construct ([ int $value = 0 ] )", "url": "https://secure.php.net/manual/en/class.pht-atomicinteger.php"}, {"name": "lock", "synopsis": null, "usage": "public void lock ( void )", "url": "https://secure.php.net/manual/en/class.pht-hashtable.php"}, {"name": "front", "synopsis": null, "usage": "public mixed front ( void )", "url": "https://secure.php.net/manual/en/class.pht-queue.php"}, {"name": "run", "synopsis": null, "usage": "public void run ( void )", "url": "https://secure.php.net/manual/en/class.pht-runnable.php"}, {"name": "pht\\Thread::addClassTask()", "synopsis": null, "usage": "public void addClassTask ( string $className [, mixed $...ctorArgs ] )", "url": "https://secure.php.net/manual/en/class.pht-thread.php"}, {"name": "pht\\Threaded::lock()", "synopsis": null, "usage": "public void lock ( void )", "url": "https://secure.php.net/manual/en/class.pht-threaded.php"}, {"name": "__construct", "synopsis": null, "usage": "public Vector __construct ([ int $size = 0 [, mixed $value = 0 ]] )", "url": "https://secure.php.net/manual/en/class.pht-vector.php"}, {"name": "collect", "synopsis": null, "usage": "public int collect ([ Callable $collector ] )", "url": "https://secure.php.net/manual/en/class.pool.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( int $key [, int $value ] )", "url": "https://secure.php.net/manual/en/class.quickhashinthash.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( int $key )", "url": "https://secure.php.net/manual/en/class.quickhashintset.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( int $key , string $value )", "url": "https://secure.php.net/manual/en/class.quickhashintstringhash.php"}, {"name": "add", "synopsis": null, "usage": "public bool add ( string $key , int $value )", "url": "https://secure.php.net/manual/en/class.quickhashstringinthash.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.rangeexception.php"}, {"name": "RarArchive::getEntry()", "synopsis": null, "usage": "public bool close ( void )", "url": "https://secure.php.net/manual/en/class.rararchive.php"}, {"name": "extract", "synopsis": null, "usage": "public bool extract ( string $dir [, string $filepath = \"\" [, string $password = NULL [, bool $extended_data = FALSE ]]] )", "url": "https://secure.php.net/manual/en/class.rarentry.php"}, {"name": "isUsingExceptions", "synopsis": null, "usage": "public static bool isUsingExceptions ( void )", "url": "https://secure.php.net/manual/en/class.rarexception.php"}, {"name": "getChildren", "synopsis": null, "usage": "public RecursiveArrayIterator getChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursivearrayiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Iterator $iterator [, string $flags = self::CALL_TOSTRING ] )", "url": "https://secure.php.net/manual/en/class.recursivecachingiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public RecursiveCallbackFilterIterator getChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursivecallbackfilteriterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )", "url": "https://secure.php.net/manual/en/class.recursivedirectoryiterator.php"}, {"name": "RecursiveFilterIterator::accept()", "synopsis": null, "usage": "public __construct ( RecursiveIterator $iterator )", "url": "https://secure.php.net/manual/en/class.recursivefilteriterator.php"}, {"name": "getChildren", "synopsis": null, "usage": "public RecursiveIterator getChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursiveiterator.php"}, {"name": "beginChildren", "synopsis": null, "usage": "public void beginChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursiveiteratoriterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public RecursiveRegexIterator getChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursiveregexiterator.php"}, {"name": "beginChildren", "synopsis": null, "usage": "public void beginChildren ( void )", "url": "https://secure.php.net/manual/en/class.recursivetreeiterator.php"}, {"name": "export", "synopsis": null, "usage": "public static string export ( Reflector $reflector [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/class.reflection.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $argument )", "url": "https://secure.php.net/manual/en/class.reflectionclass.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $class , string $name )", "url": "https://secure.php.net/manual/en/class.reflectionclassconstant.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.reflectionexception.php"}, {"name": "__clone", "synopsis": null, "usage": "final private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.reflectionextension.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $name )", "url": "https://secure.php.net/manual/en/class.reflectionfunction.php"}, {"name": "__clone", "synopsis": null, "usage": "final private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.reflectionfunctionabstract.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( Generator $generator )", "url": "https://secure.php.net/manual/en/class.reflectiongenerator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $class , string $name )", "url": "https://secure.php.net/manual/en/class.reflectionmethod.php"}, {"name": "getName", "synopsis": null, "usage": "public string getName ( void )", "url": "https://secure.php.net/manual/en/class.reflectionnamedtype.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( object $argument )", "url": "https://secure.php.net/manual/en/class.reflectionobject.php"}, {"name": "ReflectionFunctionAbstract::getParameters()", "synopsis": null, "usage": "public bool allowsNull ( void )", "url": "https://secure.php.net/manual/en/class.reflectionparameter.php"}, {"name": "__clone", "synopsis": null, "usage": "final private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.reflectionproperty.php"}, {"name": "allowsNull", "synopsis": null, "usage": "public bool allowsNull ( void )", "url": "https://secure.php.net/manual/en/class.reflectiontype.php"}, {"name": "__clone", "synopsis": null, "usage": "final private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.reflectionzendextension.php"}, {"name": "export", "synopsis": null, "usage": "public static string export ( void )", "url": "https://secure.php.net/manual/en/class.reflector.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool accept ( void )", "url": "https://secure.php.net/manual/en/class.regexiterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public int count ( void )", "url": "https://secure.php.net/manual/en/class.resourcebundle.php"}, {"name": "addArchive", "synopsis": null, "usage": "public void addArchive ( string $description )", "url": "https://secure.php.net/manual/en/class.rrdcreator.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $path )", "url": "https://secure.php.net/manual/en/class.rrdgraph.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $path )", "url": "https://secure.php.net/manual/en/class.rrdupdater.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.runtimeexception.php"}, {"name": "seek", "synopsis": null, "usage": "abstract public void seek ( int $position )", "url": "https://secure.php.net/manual/en/class.seekableiterator.php"}, {"name": "serialize", "synopsis": null, "usage": "abstract public string serialize ( void )", "url": "https://secure.php.net/manual/en/class.serializable.php"}, {"name": "close", "synopsis": null, "usage": "public bool close ( void )", "url": "https://secure.php.net/manual/en/class.sessionhandler.php"}, {"name": "close", "synopsis": null, "usage": "abstract public bool close ( void )", "url": "https://secure.php.net/manual/en/class.sessionhandlerinterface.php"}, {"name": "create_sid", "synopsis": null, "usage": "abstract public string create_sid ( void )", "url": "https://secure.php.net/manual/en/class.sessionidinterface.php"}, {"name": "updateTimestamp", "synopsis": null, "usage": "abstract public bool updateTimestamp ( string $key , string $val )", "url": "https://secure.php.net/manual/en/class.sessionupdatetimestamphandlerinterface.php"}, {"name": "__construct", "synopsis": null, "usage": "public void addAttribute ( string $name [, string $value [, string $namespace ]] )", "url": "https://secure.php.net/manual/en/class.simplexmlelement.php"}, {"name": "current", "synopsis": null, "usage": "public mixed current ( void )", "url": "https://secure.php.net/manual/en/class.simplexmliterator.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool close ( void )", "url": "https://secure.php.net/manual/en/class.snmp.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.snmpexception.php"}, {"name": "__call", "synopsis": null, "usage": "public mixed __call ( string $function_name , string $arguments )", "url": "https://secure.php.net/manual/en/class.soapclient.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )", "url": "https://secure.php.net/manual/en/class.soapfault.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( string $namespace , string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]] )", "url": "https://secure.php.net/manual/en/class.soapheader.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( mixed $data , string $name )", "url": "https://secure.php.net/manual/en/class.soapparam.php"}, {"name": "addFunction", "synopsis": null, "usage": "public void addFunction ( mixed $functions )", "url": "https://secure.php.net/manual/en/class.soapserver.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( mixed $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )", "url": "https://secure.php.net/manual/en/class.soapvar.php"}, {"name": "addDocument", "synopsis": null, "usage": "public SolrUpdateResponse addDocument ( SolrInputDocument $doc [, bool $overwrite = TRUE [, int $commitWithin = 0 ]] )", "url": "https://secure.php.net/manual/en/class.solrclient.php"}, {"name": "getInternalInfo", "synopsis": null, "usage": "public array getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/class.solrclientexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getField ( void )", "url": "https://secure.php.net/manual/en/class.solrcollapsefunction.php"}, {"name": "addBigramPhraseField", "synopsis": null, "usage": "public SolrDisMaxQuery addBigramPhraseField ( string $field , string $boost [, string $slop ] )", "url": "https://secure.php.net/manual/en/class.solrdismaxquery.php"}, {"name": "addField", "synopsis": null, "usage": "public bool addField ( string $fieldName , string $fieldValue )", "url": "https://secure.php.net/manual/en/class.solrdocument.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrdocumentfield.php"}, {"name": "getInternalInfo", "synopsis": null, "usage": "public array getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/class.solrexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrgenericresponse.php"}, {"name": "getInternalInfo", "synopsis": null, "usage": "public array getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/class.solrillegalargumentexception.php"}, {"name": "getInternalInfo", "synopsis": null, "usage": "public array getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/class.solrillegaloperationexception.php"}, {"name": "addChildDocument", "synopsis": null, "usage": "public void addChildDocument ( SolrInputDocument $child )", "url": "https://secure.php.net/manual/en/class.solrinputdocument.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.solrmissingmandatoryparameterexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrmodifiableparams.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrobject.php"}, {"name": "add", "synopsis": null, "usage": "final public SolrParams add ( string $name , string $value )", "url": "https://secure.php.net/manual/en/class.solrparams.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrpingresponse.php"}, {"name": "addExpandFilterQuery", "synopsis": null, "usage": "public SolrQuery addExpandFilterQuery ( string $fq )", "url": "https://secure.php.net/manual/en/class.solrquery.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrqueryresponse.php"}, {"name": "getDigestedResponse", "synopsis": null, "usage": "public string getDigestedResponse ( void )", "url": "https://secure.php.net/manual/en/class.solrresponse.php"}, {"name": "getInternalInfo", "synopsis": null, "usage": "public array getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/class.solrserverexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.solrupdateresponse.php"}, {"name": "digestXmlResponse", "synopsis": null, "usage": "public static SolrObject digestXmlResponse ( string $xmlresponse [, int $parse_mode = 0 ] )", "url": "https://secure.php.net/manual/en/class.solrutils.php"}, {"name": "addQuery", "synopsis": null, "usage": "public int addQuery ( string $query [, string $index = \"*\" [, string $comment = \"\" ]] )", "url": "https://secure.php.net/manual/en/class.sphinxclient.php"}, {"name": "SplEnum::getConstList", "synopsis": null, "usage": "public array SplEnum::getConstList ([ bool $include_default = FALSE ] )", "url": "https://secure.php.net/manual/en/class.splbool.php"}, {"name": "__construct", "synopsis": null, "usage": "public void add ( mixed $index , mixed $newval )", "url": "https://secure.php.net/manual/en/class.spldoublylinkedlist.php"}, {"name": "getConstList", "synopsis": null, "usage": "public array getConstList ([ bool $include_default = FALSE ] )", "url": "https://secure.php.net/manual/en/class.splenum.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $file_name )", "url": "https://secure.php.net/manual/en/class.splfileinfo.php"}, {"name": "current", "synopsis": null, "usage": "public string|array current ( void )", "url": "https://secure.php.net/manual/en/class.splfileobject.php"}, {"name": "__construct", "synopsis": null, "usage": "public int count ( void )", "url": "https://secure.php.net/manual/en/class.splfixedarray.php"}, {"name": "SplType::__construct", "synopsis": null, "usage": "SplType::__construct ([ mixed $initial_value [, bool $strict ]] )", "url": "https://secure.php.net/manual/en/class.splfloat.php"}, {"name": "__construct", "synopsis": null, "usage": "abstract protected int compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/class.splheap.php"}, {"name": "SplType::__construct", "synopsis": null, "usage": "SplType::__construct ([ mixed $initial_value [, bool $strict ]] )", "url": "https://secure.php.net/manual/en/class.splint.php"}, {"name": "compare", "synopsis": null, "usage": "protected int compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/class.splmaxheap.php"}, {"name": "compare", "synopsis": null, "usage": "protected int compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/class.splminheap.php"}, {"name": "addAll", "synopsis": null, "usage": "public void addAll ( SplObjectStorage $storage )", "url": "https://secure.php.net/manual/en/class.splobjectstorage.php"}, {"name": "update", "synopsis": null, "usage": "abstract public void update ( SplSubject $subject )", "url": "https://secure.php.net/manual/en/class.splobserver.php"}, {"name": "__construct", "synopsis": null, "usage": "public int compare ( mixed $priority1 , mixed $priority2 )", "url": "https://secure.php.net/manual/en/class.splpriorityqueue.php"}, {"name": "__construct", "synopsis": null, "usage": "mixed dequeue ( void )", "url": "https://secure.php.net/manual/en/class.splqueue.php"}, {"name": "__construct", "synopsis": null, "usage": "void setIteratorMode ( int $mode )", "url": "https://secure.php.net/manual/en/class.splstack.php"}, {"name": "SplType::__construct", "synopsis": null, "usage": "SplType::__construct ([ mixed $initial_value [, bool $strict ]] )", "url": "https://secure.php.net/manual/en/class.splstring.php"}, {"name": "attach", "synopsis": null, "usage": "abstract public void attach ( SplObserver $observer )", "url": "https://secure.php.net/manual/en/class.splsubject.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ int $max_memory ] )", "url": "https://secure.php.net/manual/en/class.spltempfileobject.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ([ mixed $initial_value [, bool $strict ]] )", "url": "https://secure.php.net/manual/en/class.spltype.php"}, {"name": "areConfusable", "synopsis": null, "usage": "public bool areConfusable ( string $str1 , string $str2 [, string &$error ] )", "url": "https://secure.php.net/manual/en/class.spoofchecker.php"}, {"name": "busyTimeout", "synopsis": null, "usage": "public bool busyTimeout ( int $msecs )", "url": "https://secure.php.net/manual/en/class.sqlite3.php"}, {"name": "columnName", "synopsis": null, "usage": "public string columnName ( int $column_number )", "url": "https://secure.php.net/manual/en/class.sqlite3result.php"}, {"name": "bindParam", "synopsis": null, "usage": "public bool bindParam ( mixed $sql_param , mixed &$param [, int $type ] )", "url": "https://secure.php.net/manual/en/class.sqlite3stmt.php"}, {"name": "abort", "synopsis": null, "usage": "public bool abort ( string $transaction_id [, array $headers ] )", "url": "https://secure.php.net/manual/en/class.stomp.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.stompexception.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ([ string $command [, array $headers [, string $body ]]] )", "url": "https://secure.php.net/manual/en/class.stompframe.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( void )", "url": "https://secure.php.net/manual/en/class.streamwrapper.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.svm.php"}, {"name": "checkProbabilityModel", "synopsis": null, "usage": "public bool checkProbabilityModel ( void )", "url": "https://secure.php.net/manual/en/class.svmmodel.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( string $script )", "url": "https://secure.php.net/manual/en/class.swfaction.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( mixed $file [, mixed $alphafile ] )", "url": "https://secure.php.net/manual/en/class.swfbitmap.php"}, {"name": "addAction", "synopsis": null, "usage": "void addAction ( SWFAction $action , int $flags )", "url": "https://secure.php.net/manual/en/class.swfbutton.php"}, {"name": "addAction", "synopsis": null, "usage": "void addAction ( SWFAction $action , int $flags )", "url": "https://secure.php.net/manual/en/class.swfdisplayitem.php"}, {"name": "moveTo", "synopsis": null, "usage": "void moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/class.swffill.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( string $filename )", "url": "https://secure.php.net/manual/en/class.swffont.php"}, {"name": "addChars", "synopsis": null, "usage": "void addChars ( string $char )", "url": "https://secure.php.net/manual/en/class.swffontchar.php"}, {"name": "addEntry", "synopsis": null, "usage": "void addEntry ( float $ratio , int $red , int $green , int $blue [, int $alpha = 255 ] )", "url": "https://secure.php.net/manual/en/class.swfgradient.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( void )", "url": "https://secure.php.net/manual/en/class.swfmorph.php"}, {"name": "add", "synopsis": null, "usage": "mixed add ( object $instance )", "url": "https://secure.php.net/manual/en/class.swfmovie.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( mixed $file )", "url": "https://secure.php.net/manual/en/class.swfprebuiltclip.php"}, {"name": "addFill", "synopsis": null, "usage": "SWFFill addFill ( int $red , int $green , int $blue [, int $alpha = 255 ] )", "url": "https://secure.php.net/manual/en/class.swfshape.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( string $filename [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/class.swfsound.php"}, {"name": "loopCount", "synopsis": null, "usage": "void loopCount ( int $point )", "url": "https://secure.php.net/manual/en/class.swfsoundinstance.php"}, {"name": "add", "synopsis": null, "usage": "void add ( object $object )", "url": "https://secure.php.net/manual/en/class.swfsprite.php"}, {"name": "addString", "synopsis": null, "usage": "void addString ( string $string )", "url": "https://secure.php.net/manual/en/class.swftext.php"}, {"name": "addChars", "synopsis": null, "usage": "void addChars ( string $chars )", "url": "https://secure.php.net/manual/en/class.swftextfield.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ([ string $file ] )", "url": "https://secure.php.net/manual/en/class.swfvideostream.php"}, {"name": "dnsLookup", "synopsis": null, "usage": "public static void dnsLookup ( string $hostname , callable $callback )", "url": "https://secure.php.net/manual/en/class.swoole-async.php"}, {"name": "add", "synopsis": null, "usage": "public integer add ([ integer $add_value ] )", "url": "https://secure.php.net/manual/en/class.swoole-atomic.php"}, {"name": "append", "synopsis": null, "usage": "public integer append ( string $data )", "url": "https://secure.php.net/manual/en/class.swoole-buffer.php"}, {"name": "__destruct", "synopsis": null, "usage": "public void __destruct ( void )", "url": "https://secure.php.net/manual/en/class.swoole-channel.php"}, {"name": "close", "synopsis": null, "usage": "public bool close ([ bool $force ] )", "url": "https://secure.php.net/manual/en/class.swoole-client.php"}, {"name": "count", "synopsis": null, "usage": "public int count ( void )", "url": "https://secure.php.net/manual/en/class.swoole-connection-iterator.php"}, {"name": "call_user_func_array", "synopsis": null, "usage": "public static mixed call_user_func_array ( callable $callback , array $param_array )", "url": "https://secure.php.net/manual/en/class.swoole-coroutine.php"}, {"name": "add", "synopsis": null, "usage": "public static boolean add ( int $fd , callable $read_callback [, callable $write_callback [, string $events ]] )", "url": "https://secure.php.net/manual/en/class.swoole-event.php"}, {"name": "addFile", "synopsis": null, "usage": "public void addFile ( string $path , string $name [, string $type [, string $filename [, string $offset ]]] )", "url": "https://secure.php.net/manual/en/class.swoole-http-client.php"}, {"name": "__destruct", "synopsis": null, "usage": "public void __destruct ( void )", "url": "https://secure.php.net/manual/en/class.swoole-http-request.php"}, {"name": "cookie", "synopsis": null, "usage": "public string cookie ( string $name [, string $value [, string $expires [, string $path [, string $domain [, string $secure [, string $httponly ]]]]]] )", "url": "https://secure.php.net/manual/en/class.swoole-http-response.php"}, {"name": "on", "synopsis": null, "usage": "public void on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/class.swoole-http-server.php"}, {"name": "__destruct", "synopsis": null, "usage": "public void __destruct ( void )", "url": "https://secure.php.net/manual/en/class.swoole-lock.php"}, {"name": "open", "synopsis": null, "usage": "public static ReturnType open ( string $filename [, string $size [, string $offset ]] )", "url": "https://secure.php.net/manual/en/class.swoole-mmap.php"}, {"name": "close", "synopsis": null, "usage": "public void close ( void )", "url": "https://secure.php.net/manual/en/class.swoole-mysql.php"}, {"name": "alarm", "synopsis": null, "usage": "public static void alarm ( integer $interval_usec )", "url": "https://secure.php.net/manual/en/class.swoole-process.php"}, {"name": "format", "synopsis": null, "usage": "public static ReturnType format ( string $type [, string $value ] )", "url": "https://secure.php.net/manual/en/class.swoole-redis-server.php"}, {"name": "pack", "synopsis": null, "usage": "public static ReturnType pack ( string $data [, int $is_fast ] )", "url": "https://secure.php.net/manual/en/class.swoole-serialize.php"}, {"name": "addlistener", "synopsis": null, "usage": "public void addlistener ( string $host , integer $port , string $socket_type )", "url": "https://secure.php.net/manual/en/class.swoole-server.php"}, {"name": "column", "synopsis": null, "usage": "public ReturnType column ( string $name , string $type [, integer $size ] )", "url": "https://secure.php.net/manual/en/class.swoole-table.php"}, {"name": "after", "synopsis": null, "usage": "public static void after ( int $after_time_ms , callable $callback )", "url": "https://secure.php.net/manual/en/class.swoole-timer.php"}, {"name": "exist", "synopsis": null, "usage": "public boolean exist ( integer $fd )", "url": "https://secure.php.net/manual/en/class.swoole-websocket-server.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $name [, bool $manual = FALSE [, bool $prefire = FALSE ]]] )", "url": "https://secure.php.net/manual/en/class.syncevent.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $name ] )", "url": "https://secure.php.net/manual/en/class.syncmutex.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $name [, bool $autounlock = TRUE ]] )", "url": "https://secure.php.net/manual/en/class.syncreaderwriter.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $name [, int $initialval = 1 [, bool $autounlock = TRUE ]]] )", "url": "https://secure.php.net/manual/en/class.syncsemaphore.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $name , int $size )", "url": "https://secure.php.net/manual/en/class.syncsharedmemory.php"}, {"name": "detach", "synopsis": null, "usage": "public void detach ( void )", "url": "https://secure.php.net/manual/en/class.thread.php"}, {"name": "chunk", "synopsis": null, "usage": "public array chunk ( int $size , bool $preserve )", "url": "https://secure.php.net/manual/en/class.threaded.php"}, {"name": "getMessage", "synopsis": null, "usage": "abstract public string getMessage ( void )", "url": "https://secure.php.net/manual/en/class.throwable.php"}, {"name": "body", "synopsis": null, "usage": "tidyNode body ( void )", "url": "https://secure.php.net/manual/en/class.tidy.php"}, {"name": "getParent", "synopsis": null, "usage": "tidyNode getParent ( void )", "url": "https://secure.php.net/manual/en/class.tidynode.php"}, {"name": "add", "synopsis": null, "usage": "public number add ( string $key , number $increment [, int $type = 0 ] )", "url": "https://secure.php.net/manual/en/class.tokyotyrant.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.tokyotyrantexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( mixed $object )", "url": "https://secure.php.net/manual/en/class.tokyotyrantiterator.php"}, {"name": "addCond", "synopsis": null, "usage": "public mixed addCond ( string $name , int $op , string $expr )", "url": "https://secure.php.net/manual/en/class.tokyotyrantquery.php"}, {"name": "add", "synopsis": null, "usage": "public void add ( string $key , mixed $increment [, string $type ] )", "url": "https://secure.php.net/manual/en/class.tokyotyranttable.php"}, {"name": "__construct", "synopsis": null, "usage": "public static Transliterator create ( string $id [, int $direction ] )", "url": "https://secure.php.net/manual/en/class.transliterator.php"}, {"name": "Error::getMessage", "synopsis": null, "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.typeerror.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $destination_encoding [, string $source_encoding ]] )", "url": "https://secure.php.net/manual/en/class.uconverter.php"}, {"name": "onDraw", "synopsis": null, "usage": "protected onDraw ( UI\\Draw\\Pen $pen , UI\\Size $areaSize , UI\\Point $clipPoint , UI\\Size $clipSize )", "url": "https://secure.php.net/manual/en/class.ui-area.php"}, {"name": "destroy", "synopsis": null, "usage": "public destroy ( void )", "url": "https://secure.php.net/manual/en/class.ui-control.php"}, {"name": "__construct", "synopsis": null, "usage": "public int append ( Control $control [, bool $stretchy = FALSE ] )", "url": "https://secure.php.net/manual/en/class.ui-controls-box.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getText ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-button.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getText ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-check.php"}, {"name": "getColor", "synopsis": null, "usage": "public UI\\Color getColor ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-colorbutton.php"}, {"name": "append", "synopsis": null, "usage": "public append ( string $text )", "url": "https://secure.php.net/manual/en/class.ui-controls-combo.php"}, {"name": "append", "synopsis": null, "usage": "public append ( string $text )", "url": "https://secure.php.net/manual/en/class.ui-controls-editablecombo.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getText ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-entry.php"}, {"name": "append", "synopsis": null, "usage": "public int append ( string $label , UI\\Control $control [, bool $stretchy = FALSE ] )", "url": "https://secure.php.net/manual/en/class.ui-controls-form.php"}, {"name": "append", "synopsis": null, "usage": "public append ( UI\\Control $control , int $left , int $top , int $xspan , int $yspan , bool $hexpand , int $halign , bool $vexpand , int $valign )", "url": "https://secure.php.net/manual/en/class.ui-controls-grid.php"}, {"name": "__construct", "synopsis": null, "usage": "public append ( UI\\Control $control )", "url": "https://secure.php.net/manual/en/class.ui-controls-group.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getText ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-label.php"}, {"name": "__construct", "synopsis": null, "usage": "public append ( string $text )", "url": "https://secure.php.net/manual/en/class.ui-controls-multilineentry.php"}, {"name": "__construct", "synopsis": null, "usage": "public UI\\Control::destroy ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-picker.php"}, {"name": "getValue", "synopsis": null, "usage": "public int getValue ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-progress.php"}, {"name": "append", "synopsis": null, "usage": "public append ( string $text )", "url": "https://secure.php.net/manual/en/class.ui-controls-radio.php"}, {"name": "__construct", "synopsis": null, "usage": "public UI\\Control::destroy ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-separator.php"}, {"name": "__construct", "synopsis": null, "usage": "public int getValue ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-slider.php"}, {"name": "__construct", "synopsis": null, "usage": "public int getValue ( void )", "url": "https://secure.php.net/manual/en/class.ui-controls-spin.php"}, {"name": "append", "synopsis": null, "usage": "public int append ( string $name , UI\\Control $control )", "url": "https://secure.php.net/manual/en/class.ui-controls-tab.php"}, {"name": "addStop", "synopsis": null, "usage": "public int addStop ( float $position , UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/class.ui-draw-brush-gradient.php"}, {"name": "__construct", "synopsis": null, "usage": "public int UI\\Draw\\Brush\\Gradient::addStop ( float $position , UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/class.ui-draw-brush-lineargradient.php"}, {"name": "__construct", "synopsis": null, "usage": "public int UI\\Draw\\Brush\\Gradient::addStop ( float $position , UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/class.ui-draw-brush-radialgradient.php"}, {"name": "__construct", "synopsis": null, "usage": "public UI\\Draw\\Color getColor ( void )", "url": "https://secure.php.net/manual/en/class.ui-draw-brush.php"}, {"name": "__construct", "synopsis": null, "usage": "public float getChannel ( int $channel )", "url": "https://secure.php.net/manual/en/class.ui-draw-color.php"}, {"name": "invert", "synopsis": null, "usage": "public invert ( void )", "url": "https://secure.php.net/manual/en/class.ui-draw-matrix.php"}, {"name": "__construct", "synopsis": null, "usage": "public addRectangle ( UI\\Point $point , UI\\Size $size )", "url": "https://secure.php.net/manual/en/class.ui-draw-path.php"}, {"name": "clip", "synopsis": null, "usage": "public clip ( UI\\Draw\\Path $path )", "url": "https://secure.php.net/manual/en/class.ui-draw-pen.php"}, {"name": "__construct", "synopsis": null, "usage": "public int getCap ( void )", "url": "https://secure.php.net/manual/en/class.ui-draw-stroke.php"}, {"name": "__construct", "synopsis": null, "usage": "public string getFamily ( void )", "url": "https://secure.php.net/manual/en/class.ui-draw-text-font-descriptor.php"}, {"name": "__construct", "synopsis": null, "usage": "public float getAscent ( void )", "url": "https://secure.php.net/manual/en/class.ui-draw-text-font.php"}, {"name": "__construct", "synopsis": null, "usage": "public setColor ( UI\\Draw\\Color $color [, int $start = 0 [, int $end ]] )", "url": "https://secure.php.net/manual/en/class.ui-draw-text-layout.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.ui-exception-invalidargumentexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.ui-exception-runtimeexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public void kill ( void )", "url": "https://secure.php.net/manual/en/class.ui-executor.php"}, {"name": "__construct", "synopsis": null, "usage": "public UI\\MenuItem append ( string $name [, string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/class.ui-menu.php"}, {"name": "disable", "synopsis": null, "usage": "public disable ( void )", "url": "https://secure.php.net/manual/en/class.ui-menuitem.php"}, {"name": "__construct", "synopsis": null, "usage": "public static UI\\Point at ( float $point )", "url": "https://secure.php.net/manual/en/class.ui-point.php"}, {"name": "__construct", "synopsis": null, "usage": "public float getHeight ( void )", "url": "https://secure.php.net/manual/en/class.ui-size.php"}, {"name": "__construct", "synopsis": null, "usage": "public add ( UI\\Control $control )", "url": "https://secure.php.net/manual/en/class.ui-window.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.underflowexception.php"}, {"name": "Exception::getMessage", "synopsis": null, "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/class.unexpectedvalueexception.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ string $object_name = \"PHP\" [, array $variables = array() [, array $extensions = array() [, bool $report_uncaught_exceptions = TRUE ]]]] )", "url": "https://secure.php.net/manual/en/class.v8js.php"}, {"name": "getJsFileName", "synopsis": null, "usage": "final public string getJsFileName ( void )", "url": "https://secure.php.net/manual/en/class.v8jsexception.php"}, {"name": "VARIANT::__construct", "synopsis": null, "usage": "VARIANT::__construct ([ mixed $value [, int $type [, int $codepage ]]] )", "url": "https://secure.php.net/manual/en/class.variant.php"}, {"name": "auth", "synopsis": null, "usage": "public bool auth ( void )", "url": "https://secure.php.net/manual/en/class.varnishadmin.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ array $args ] )", "url": "https://secure.php.net/manual/en/class.varnishlog.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ([ array $args ] )", "url": "https://secure.php.net/manual/en/class.varnishstat.php"}, {"name": "Threaded::chunk", "synopsis": null, "usage": "public array Threaded::chunk ( int $size , bool $preserve )", "url": "https://secure.php.net/manual/en/class.volatile.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.weakmap.php"}, {"name": "Weakref::__construct", "synopsis": null, "usage": "public bool Weakref::acquire ( void )", "url": "https://secure.php.net/manual/en/class.weakref.php"}, {"name": "__construct", "synopsis": null, "usage": "public ?string convert ( void )", "url": "https://secure.php.net/manual/en/class.wkhtmltox-image-converter.php"}, {"name": "__construct", "synopsis": null, "usage": "public void add ( wkhtmltox\\PDF\\Object $object )", "url": "https://secure.php.net/manual/en/class.wkhtmltox-pdf-converter.php"}, {"name": "collect", "synopsis": null, "usage": "public int collect ([ Callable $collector ] )", "url": "https://secure.php.net/manual/en/class.worker.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $nsname )", "url": "https://secure.php.net/manual/en/class.xmldiff-base.php"}, {"name": "diff", "synopsis": null, "usage": "public DOMDocument diff ( DOMDocument $from , DOMDocument $to )", "url": "https://secure.php.net/manual/en/class.xmldiff-dom.php"}, {"name": "diff", "synopsis": null, "usage": "public string diff ( string $from , string $to )", "url": "https://secure.php.net/manual/en/class.xmldiff-file.php"}, {"name": "diff", "synopsis": null, "usage": "public string diff ( string $from , string $to )", "url": "https://secure.php.net/manual/en/class.xmldiff-memory.php"}, {"name": "close", "synopsis": null, "usage": "public bool close ( void )", "url": "https://secure.php.net/manual/en/class.xmlreader.php"}, {"name": "getParameter", "synopsis": null, "usage": "string getParameter ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/class.xsltprocessor.php"}, {"name": "get", "synopsis": null, "usage": "public static mixed get ( string $name [, mixed $default_value = NULL ] )", "url": "https://secure.php.net/manual/en/class.yaconf.php"}, {"name": "Yaf_Action_Abstract::execute()", "synopsis": null, "usage": "abstract publicmixed execute ([ mixed $arg [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/class.yaf-action-abstract.php"}, {"name": "app", "synopsis": null, "usage": "public staticmixed app ( void )", "url": "https://secure.php.net/manual/en/class.yaf-application.php"}, {"name": "get", "synopsis": null, "usage": "abstract public mixed get ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/class.yaf-config-abstract.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $config_file [, string $section ] )", "url": "https://secure.php.net/manual/en/class.yaf-config-ini.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( string $config_file [, string $section ] )", "url": "https://secure.php.net/manual/en/class.yaf-config-simple.php"}, {"name": "Yaf_Controller_Abstract::init()", "synopsis": null, "usage": "final private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.yaf-controller-abstract.php"}, {"name": "autoRender", "synopsis": null, "usage": "public Yaf_Dispatcher autoRender ([ bool $flag ] )", "url": "https://secure.php.net/manual/en/class.yaf-dispatcher.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-dispatchfailed.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-loadfailed-action.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-loadfailed-controller.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-loadfailed-module.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-loadfailed-view.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-loadfailed.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-routerfailed.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-startuperror.php"}, {"name": "Yaf_Exception::__construct", "synopsis": null, "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception-typeerror.php"}, {"name": "__construct", "synopsis": null, "usage": "public __construct ( void )", "url": "https://secure.php.net/manual/en/class.yaf-exception.php"}, {"name": "Yaf_Loader::getInstance()", "synopsis": null, "usage": "public void autoload ( void )", "url": "https://secure.php.net/manual/en/class.yaf-loader.php"}, {"name": "Yaf_Dispatcher::registerPlugin()", "synopsis": null, "usage": "public void dispatchLoopShutdown ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/class.yaf-plugin-abstract.php"}, {"name": "__clone", "synopsis": null, "usage": "private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.yaf-registry.php"}, {"name": "getActionName", "synopsis": null, "usage": "public void getActionName ( void )", "url": "https://secure.php.net/manual/en/class.yaf-request-abstract.php"}, {"name": "Yaf_Request_Http::getQuery()", "synopsis": null, "usage": "private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.yaf-request-http.php"}, {"name": "__clone", "synopsis": null, "usage": "private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.yaf-request-simple.php"}, {"name": "appendBody", "synopsis": null, "usage": "public bool appendBody ( string $content [, string $key ] )", "url": "https://secure.php.net/manual/en/class.yaf-response-abstract.php"}, {"name": "assemble", "synopsis": null, "usage": "abstract public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-interface.php"}, {"name": "Yaf_Request_Abstract::setBaseUri()", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-map.php"}, {"name": "assemble", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-regex.php"}, {"name": "Yaf_Route_Rewrite::__construct()", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-rewrite.php"}, {"name": "Yaf_Route_Simple::route()", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-simple.php"}, {"name": "assemble", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-static.php"}, {"name": "assemble", "synopsis": null, "usage": "public string assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/class.yaf-route-supervar.php"}, {"name": "Yaf_Request_Abstract::setBaseUri()", "synopsis": null, "usage": "public bool addConfig ( Yaf_Config_Abstract $config )", "url": "https://secure.php.net/manual/en/class.yaf-router.php"}, {"name": "__clone", "synopsis": null, "usage": "private void __clone ( void )", "url": "https://secure.php.net/manual/en/class.yaf-session.php"}, {"name": "Yaf_Dispatcher::setView()", "synopsis": null, "usage": "abstract public bool assign ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/class.yaf-view-interface.php"}, {"name": "assign", "synopsis": null, "usage": "public bool assign ( string $name [, mixed $value ] )", "url": "https://secure.php.net/manual/en/class.yaf-view-simple.php"}, {"name": "getType", "synopsis": null, "usage": "public string getType ( void )", "url": "https://secure.php.net/manual/en/class.yar-client-exception.php"}, {"name": "__call", "synopsis": null, "usage": "public void __call ( string $method , array $parameters )", "url": "https://secure.php.net/manual/en/class.yar-client.php"}, {"name": "call", "synopsis": null, "usage": "public static int call ( string $uri , string $method [, array $parameters [, callable $callback [, callable $error_callback [, array $options ]]]] )", "url": "https://secure.php.net/manual/en/class.yar-concurrent-client.php"}, {"name": "getType", "synopsis": null, "usage": "public string getType ( void )", "url": "https://secure.php.net/manual/en/class.yar-server-exception.php"}, {"name": "__construct", "synopsis": null, "usage": "final public __construct ( Object $obj )", "url": "https://secure.php.net/manual/en/class.yar-server.php"}, {"name": "addEmptyDir", "synopsis": null, "usage": "bool addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/class.ziparchive.php"}, {"name": "__construct", "synopsis": null, "usage": "private__construct ( void )", "url": "https://secure.php.net/manual/en/class.zmq.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ([ int $io_threads = 1 [, bool $is_persistent = TRUE ]] )", "url": "https://secure.php.net/manual/en/class.zmqcontext.php"}, {"name": "__construct", "synopsis": null, "usage": "__construct ( ZMQSocket $frontend , ZMQSocket $backend [, ZMQSocket $listener ] )", "url": "https://secure.php.net/manual/en/class.zmqdevice.php"}, {"name": "add", "synopsis": null, "usage": "public string add ( mixed $entry , int $type )", "url": "https://secure.php.net/manual/en/class.zmqpoll.php"}, {"name": "bind", "synopsis": null, "usage": "public ZMQSocket bind ( string $dsn [, bool $force = FALSE ] )", "url": "https://secure.php.net/manual/en/class.zmqsocket.php"}, {"name": "__construct", "synopsis": null, "usage": "public bool addAuth ( string $scheme , string $cert [, callable $completion_cb = NULL ] )", "url": "https://secure.php.net/manual/en/class.zookeeper.php"}, {"name": "Closure::bind", "synopsis": "This method is a static version of Closure::bindTo(). See the documentation of that method for more information.", "usage": "public static Closure Closure::bind ( Closure $closure , object $newthis [, mixed $newscope = \"static\" ] )", "url": "https://secure.php.net/manual/en/closure.bind.php"}, {"name": "Closure::bindTo", "synopsis": "Create and return a new anonymous function with the same body and bound variables as this one, but possibly with a different bound object and a new class scope.", "usage": "public Closure Closure::bindTo ( object $newthis [, mixed $newscope = \"static\" ] )", "url": "https://secure.php.net/manual/en/closure.bindto.php"}, {"name": "Closure::call", "synopsis": "Temporarily binds the closure to newthis, and calls it with any given parameters.", "usage": "public mixed Closure::call ( object $newthis [, mixed $... ] )", "url": "https://secure.php.net/manual/en/closure.call.php"}, {"name": "Closure::__construct", "synopsis": "This method exists only to disallow instantiation of the Closure class. Objects of this class are created in the fashion described on the anonymous functions page.", "usage": "private Closure::__construct ( void )", "url": "https://secure.php.net/manual/en/closure.construct.php"}, {"name": "Closure::fromCallable", "synopsis": "Create and return a new anonymous function from given callable using the current scope. This method checks if the callable is callable in the current scope and throws a TypeError if it is not.", "usage": "public static Closure Closure::fromCallable ( callable $callable )", "url": "https://secure.php.net/manual/en/closure.fromcallable.php"}, {"name": "Collator::asort", "synopsis": "Procedural style", "usage": "public bool Collator::asort ( array &$arr [, int $sort_flag ] )", "url": "https://secure.php.net/manual/en/collator.asort.php"}, {"name": "Collator::compare", "synopsis": "Procedural style", "usage": "public int Collator::compare ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/collator.compare.php"}, {"name": "Collator::create", "synopsis": "Procedural style", "usage": "public static Collator Collator::create ( string $locale )", "url": "https://secure.php.net/manual/en/collator.create.php"}, {"name": "Collator::getAttribute", "synopsis": "Procedural style", "usage": "public int Collator::getAttribute ( int $attr )", "url": "https://secure.php.net/manual/en/collator.getattribute.php"}, {"name": "Collator::getErrorCode", "synopsis": "Procedural style", "usage": "public int Collator::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/collator.geterrorcode.php"}, {"name": "Collator::getErrorMessage", "synopsis": "Procedural style", "usage": "public string Collator::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/collator.geterrormessage.php"}, {"name": "Collator::getLocale", "synopsis": "Procedural style", "usage": "public string Collator::getLocale ( int $type )", "url": "https://secure.php.net/manual/en/collator.getlocale.php"}, {"name": "Collator::getSortKey", "synopsis": "Procedural style", "usage": "public string Collator::getSortKey ( string $str )", "url": "https://secure.php.net/manual/en/collator.getsortkey.php"}, {"name": "Collator::getStrength", "synopsis": "Procedural style", "usage": "public int Collator::getStrength ( void )", "url": "https://secure.php.net/manual/en/collator.getstrength.php"}, {"name": "Collator::setAttribute", "synopsis": "Procedural style", "usage": "public bool Collator::setAttribute ( int $attr , int $val )", "url": "https://secure.php.net/manual/en/collator.setattribute.php"}, {"name": "Collator::setStrength", "synopsis": "Procedural style", "usage": "public bool Collator::setStrength ( int $strength )", "url": "https://secure.php.net/manual/en/collator.setstrength.php"}, {"name": "Collator::sort", "synopsis": "Procedural style", "usage": "public bool Collator::sort ( array &$arr [, int $sort_flag ] )", "url": "https://secure.php.net/manual/en/collator.sort.php"}, {"name": "Collator::sortWithSortKeys", "synopsis": "Procedural style", "usage": "public bool Collator::sortWithSortKeys ( array &$arr )", "url": "https://secure.php.net/manual/en/collator.sortwithsortkeys.php"}, {"name": "Collectable::isGarbage", "synopsis": "Can be called in Pool::collect() to determine if this object is garbage.", "usage": "public bool Collectable::isGarbage ( void )", "url": "https://secure.php.net/manual/en/collectable.isgarbage.php"}, {"name": "Collectable::setGarbage", "synopsis": "Should be called once per object when the object is finished being executed or referenced.", "usage": "public void Collectable::setGarbage ( void )", "url": "https://secure.php.net/manual/en/collectable.setgarbage.php"}, {"name": "CommonMark\\CQL::__invoke", "synopsis": "Shall invoke the current CQL function on the given root, executing the given handler on entry to a \\CommonMark\\Node", "usage": "public CommonMark\\CQL::__invoke ( \\CommonMark\\Node $root , callable $handler )", "url": "https://secure.php.net/manual/en/commonmark-cql.invoke.php"}, {"name": "CommonMark\\Interfaces\\IVisitable::accept", "synopsis": null, "usage": "abstract public void CommonMark\\Interfaces\\IVisitable::accept ( CommonMark\\Interfaces\\IVisitor $visitor )", "url": "https://secure.php.net/manual/en/commonmark-interfaces-ivisitable.accept.php"}, {"name": "CommonMark\\Interfaces\\IVisitor::enter", "synopsis": null, "usage": "abstract public ?int|IVisitable CommonMark\\Interfaces\\IVisitor::enter ( IVisitable $visitable )", "url": "https://secure.php.net/manual/en/commonmark-interfaces-ivisitor.enter.php"}, {"name": "CommonMark\\Interfaces\\IVisitor::leave", "synopsis": null, "usage": "abstract public ?int|IVisitable CommonMark\\Interfaces\\IVisitor::leave ( IVisitable $visitable )", "url": "https://secure.php.net/manual/en/commonmark-interfaces-ivisitor.leave.php"}, {"name": "CommonMark\\Node::accept", "synopsis": null, "usage": "public void CommonMark\\Node::accept ( CommonMark\\Interfaces\\IVisitor $visitor )", "url": "https://secure.php.net/manual/en/commonmark-node.accept.php"}, {"name": "CommonMark\\Node::appendChild", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Node::appendChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/commonmark-node.appendchild.php"}, {"name": "CommonMark\\Node::insertAfter", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Node::insertAfter ( CommonMark\\Node $sibling )", "url": "https://secure.php.net/manual/en/commonmark-node.insertafter.php"}, {"name": "CommonMark\\Node::insertBefore", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Node::insertBefore ( CommonMark\\Node $sibling )", "url": "https://secure.php.net/manual/en/commonmark-node.insertbefore.php"}, {"name": "CommonMark\\Node::prependChild", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Node::prependChild ( CommonMark\\Node $child )", "url": "https://secure.php.net/manual/en/commonmark-node.prependchild.php"}, {"name": "CommonMark\\Node::replace", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Node::replace ( CommonMark\\Node $target )", "url": "https://secure.php.net/manual/en/commonmark-node.replace.php"}, {"name": "CommonMark\\Node::unlink", "synopsis": "", "usage": "public void CommonMark\\Node::unlink ( void )", "url": "https://secure.php.net/manual/en/commonmark-node.unlink.php"}, {"name": "CommonMark\\Parser::finish", "synopsis": "", "usage": "public CommonMark\\Node CommonMark\\Parser::finish ( void )", "url": "https://secure.php.net/manual/en/commonmark-parser.finish.php"}, {"name": "CommonMark\\Parser::parse", "synopsis": "", "usage": "public void CommonMark\\Parser::parse ( string $buffer )", "url": "https://secure.php.net/manual/en/commonmark-parser.parse.php"}, {"name": "Componere\\Abstract\\Definition::addInterface", "synopsis": "Shall implement the given interface on the current definition", "usage": "public Definition Componere\\Abstract\\Definition::addInterface ( string $interface )", "url": "https://secure.php.net/manual/en/componere-abstract-definition.addinterface.php"}, {"name": "Componere\\Abstract\\Definition::addMethod", "synopsis": "Shall create or override a method on the current definition.", "usage": "public Definition Componere\\Abstract\\Definition::addMethod ( string $name , \\Componere\\Method $method )", "url": "https://secure.php.net/manual/en/componere-abstract-definition.addmethod.php"}, {"name": "Componere\\Abstract\\Definition::addTrait", "synopsis": "Shall use the given trait for the current definition", "usage": "public Definition Componere\\Abstract\\Definition::addTrait ( string $trait )", "url": "https://secure.php.net/manual/en/componere-abstract-definition.addtrait.php"}, {"name": "Componere\\Abstract\\Definition::getReflector", "synopsis": "Shall create or return a ReflectionClass", "usage": "public \\ReflectionClass Componere\\Abstract\\Definition::getReflector ( void )", "url": "https://secure.php.net/manual/en/componere-abstract-definition.getreflector.php"}, {"name": "Componere\\Definition::addConstant", "synopsis": "Shall declare a class constant on the current Definition", "usage": "public Definition Componere\\Definition::addConstant ( string $name , \\Componere\\Value $value )", "url": "https://secure.php.net/manual/en/componere-definition.addconstant.php"}, {"name": "Componere\\Definition::addProperty", "synopsis": "Shall declare a class property on the current Definition", "usage": "public Definition Componere\\Definition::addProperty ( string $name , \\Componere\\Value $value )", "url": "https://secure.php.net/manual/en/componere-definition.addproperty.php"}, {"name": "Componere\\Definition::getClosure", "synopsis": "Shall return a Closure for the method specified by name", "usage": "public \\Closure Componere\\Definition::getClosure ( string $name )", "url": "https://secure.php.net/manual/en/componere-definition.getclosure.php"}, {"name": "Componere\\Definition::getClosures", "synopsis": "Shall return an array of Closures", "usage": "public array Componere\\Definition::getClosures ( void )", "url": "https://secure.php.net/manual/en/componere-definition.getclosures.php"}, {"name": "Componere\\Definition::isRegistered", "synopsis": "Shall detect the registration state of this Definition", "usage": "public bool Componere\\Definition::isRegistered ( void )", "url": "https://secure.php.net/manual/en/componere-definition.isregistered.php"}, {"name": "Componere\\Definition::register", "synopsis": "Shall register the current Definition", "usage": "public void Componere\\Definition::register ( void )", "url": "https://secure.php.net/manual/en/componere-definition.register.php"}, {"name": "Componere\\Method::getReflector", "synopsis": "Shall create or return a ReflectionMethod", "usage": "public \\ReflectionMethod Componere\\Method::getReflector ( void )", "url": "https://secure.php.net/manual/en/componere-method.getreflector.php"}, {"name": "Componere\\Method::setPrivate", "synopsis": null, "usage": "public Method Componere\\Method::setPrivate ( void )", "url": "https://secure.php.net/manual/en/componere-method.setprivate.php"}, {"name": "Componere\\Method::setProtected", "synopsis": null, "usage": "public Method Componere\\Method::setProtected ( void )", "url": "https://secure.php.net/manual/en/componere-method.setprotected.php"}, {"name": "Componere\\Method::setStatic", "synopsis": null, "usage": "public Method Componere\\Method::setStatic ( void )", "url": "https://secure.php.net/manual/en/componere-method.setstatic.php"}, {"name": "Componere\\Patch::apply", "synopsis": "Shall apply the current patch", "usage": "public void Componere\\Patch::apply ( void )", "url": "https://secure.php.net/manual/en/componere-patch.apply.php"}, {"name": "Componere\\Patch::derive", "synopsis": "Shall derive a Patch for the given instance", "usage": "public Patch Componere\\Patch::derive ( object $instance )", "url": "https://secure.php.net/manual/en/componere-patch.derive.php"}, {"name": "Componere\\Patch::getClosure", "synopsis": "Shall return a Closure for the method specified by name", "usage": "public \\Closure Componere\\Patch::getClosure ( string $name )", "url": "https://secure.php.net/manual/en/componere-patch.getclosure.php"}, {"name": "Componere\\Patch::getClosures", "synopsis": "Shall return an array of Closures", "usage": "public array Componere\\Patch::getClosures ( void )", "url": "https://secure.php.net/manual/en/componere-patch.getclosures.php"}, {"name": "Componere\\Patch::isApplied", "synopsis": null, "usage": "public bool Componere\\Patch::isApplied ( void )", "url": "https://secure.php.net/manual/en/componere-patch.isapplied.php"}, {"name": "Componere\\Patch::revert", "synopsis": "Shall revert the current patch", "usage": "public void Componere\\Patch::revert ( void )", "url": "https://secure.php.net/manual/en/componere-patch.revert.php"}, {"name": "Componere\\Value::hasDefault", "synopsis": "", "usage": "public bool Componere\\Value::hasDefault ( void )", "url": "https://secure.php.net/manual/en/componere-value.hasdefault.php"}, {"name": "Componere\\Value::isPrivate", "synopsis": "", "usage": "public bool Componere\\Value::isPrivate ( void )", "url": "https://secure.php.net/manual/en/componere-value.isprivate.php"}, {"name": "Componere\\Value::isProtected", "synopsis": "", "usage": "public bool Componere\\Value::isProtected ( void )", "url": "https://secure.php.net/manual/en/componere-value.isprotected.php"}, {"name": "Componere\\Value::isStatic", "synopsis": "", "usage": "public bool Componere\\Value::isStatic ( void )", "url": "https://secure.php.net/manual/en/componere-value.isstatic.php"}, {"name": "Componere\\Value::setPrivate", "synopsis": "", "usage": "public Value Componere\\Value::setPrivate ( void )", "url": "https://secure.php.net/manual/en/componere-value.setprivate.php"}, {"name": "Componere\\Value::setProtected", "synopsis": "", "usage": "public Value Componere\\Value::setProtected ( void )", "url": "https://secure.php.net/manual/en/componere-value.setprotected.php"}, {"name": "Componere\\Value::setStatic", "synopsis": "", "usage": "public Value Componere\\Value::setStatic ( void )", "url": "https://secure.php.net/manual/en/componere-value.setstatic.php"}, {"name": "Componere\\cast", "synopsis": null, "usage": "Type Componere\\cast ( Type , $object )", "url": "https://secure.php.net/manual/en/componere.cast.php"}, {"name": "Componere\\cast_by_ref", "synopsis": null, "usage": "Type Componere\\cast_by_ref ( Type , $object )", "url": "https://secure.php.net/manual/en/componere.cast_by_ref.php"}, {"name": "Cond::broadcast", "synopsis": "Broadcast to all Threads blocking on a call to Cond::wait().", "usage": "final public static bool Cond::broadcast ( int $condition )", "url": "https://secure.php.net/manual/en/cond.broadcast.php"}, {"name": "Cond::create", "synopsis": "Creates a new Condition Variable for the caller.", "usage": "final public static int Cond::create ( void )", "url": "https://secure.php.net/manual/en/cond.create.php"}, {"name": "Cond::destroy", "synopsis": "Destroying Condition Variable handles must be carried out explicitly by the programmer when they are finished with the Condition Variable. No Threads should be blocking on a call to Cond::wait() when the call to Cond::destroy() takes place.", "usage": "final public static bool Cond::destroy ( int $condition )", "url": "https://secure.php.net/manual/en/cond.destroy.php"}, {"name": "Cond::signal", "synopsis": "", "usage": "final public static bool Cond::signal ( int $condition )", "url": "https://secure.php.net/manual/en/cond.signal.php"}, {"name": "Cond::wait", "synopsis": "Wait for a signal on a Condition Variable, optionally specifying a timeout to limit waiting time.", "usage": "final public static bool Cond::wait ( int $condition , int $mutex [, int $timeout ] )", "url": "https://secure.php.net/manual/en/cond.wait.php"}, {"name": "Countable::count", "synopsis": "This method is executed when using the count() function on an object implementing Countable.", "usage": "abstract public int Countable::count ( void )", "url": "https://secure.php.net/manual/en/countable.count.php"}, {"name": "CURLFile::__construct", "synopsis": "Procedural style", "usage": "public CURLFile::__construct ( string $filename [, string $mimetype [, string $postname ]] )", "url": "https://secure.php.net/manual/en/curlfile.construct.php"}, {"name": "CURLFile::getFilename", "synopsis": null, "usage": "public string CURLFile::getFilename ( void )", "url": "https://secure.php.net/manual/en/curlfile.getfilename.php"}, {"name": "CURLFile::getMimeType", "synopsis": null, "usage": "public string CURLFile::getMimeType ( void )", "url": "https://secure.php.net/manual/en/curlfile.getmimetype.php"}, {"name": "CURLFile::getPostFilename", "synopsis": null, "usage": "public string CURLFile::getPostFilename ( void )", "url": "https://secure.php.net/manual/en/curlfile.getpostfilename.php"}, {"name": "CURLFile::setMimeType", "synopsis": null, "usage": "public void CURLFile::setMimeType ( string $mime )", "url": "https://secure.php.net/manual/en/curlfile.setmimetype.php"}, {"name": "CURLFile::setPostFilename", "synopsis": null, "usage": "public void CURLFile::setPostFilename ( string $postname )", "url": "https://secure.php.net/manual/en/curlfile.setpostfilename.php"}, {"name": "CURLFile::__wakeup", "synopsis": "", "usage": "public void CURLFile::__wakeup ( void )", "url": "https://secure.php.net/manual/en/curlfile.wakeup.php"}, {"name": "DateInterval::createFromDateString", "synopsis": "Uses the normal date parsers and sets up a DateInterval from the relative parts of the parsed string.", "usage": "public static DateInterval DateInterval::createFromDateString ( string $time )", "url": "https://secure.php.net/manual/en/dateinterval.createfromdatestring.php"}, {"name": "DateInterval::format", "synopsis": "Formats the interval.", "usage": "public string DateInterval::format ( string $format )", "url": "https://secure.php.net/manual/en/dateinterval.format.php"}, {"name": "DatePeriod::getDateInterval", "synopsis": "Gets a DateInterval object representing the interval used for the period.", "usage": "public DateInterval DatePeriod::getDateInterval ( void )", "url": "https://secure.php.net/manual/en/dateperiod.getdateinterval.php"}, {"name": "DatePeriod::getEndDate", "synopsis": "Gets the end date of the period.", "usage": "public DateTimeInterface DatePeriod::getEndDate ( void )", "url": "https://secure.php.net/manual/en/dateperiod.getenddate.php"}, {"name": "DatePeriod::getStartDate", "synopsis": "Gets the start date of the period.", "usage": "public DateTimeInterface DatePeriod::getStartDate ( void )", "url": "https://secure.php.net/manual/en/dateperiod.getstartdate.php"}, {"name": "DateTime::add", "synopsis": "Procedural style", "usage": "public DateTime DateTime::add ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/datetime.add.php"}, {"name": "DateTime::__construct", "synopsis": "Procedural style", "usage": "DateTime date_create ([ string $time = \"now\" [, DateTimeZone $timezone = NULL ]] )", "url": "https://secure.php.net/manual/en/datetime.construct.php"}, {"name": "DateTime::createFromFormat", "synopsis": "Procedural style", "usage": "public static DateTime DateTime::createFromFormat ( string $format , string $time [, DateTimeZone $timezone ] )", "url": "https://secure.php.net/manual/en/datetime.createfromformat.php"}, {"name": "DateTime::diff", "synopsis": "Procedural style", "usage": "public DateInterval DateTime::diff ( DateTimeInterface $datetime2 [, bool $absolute = FALSE ] )", "url": "https://secure.php.net/manual/en/datetime.diff.php"}, {"name": "DateTime::format", "synopsis": "Procedural style", "usage": "public string DateTime::format ( string $format )", "url": "https://secure.php.net/manual/en/datetime.format.php"}, {"name": "DateTime::getLastErrors", "synopsis": "Procedural style", "usage": "public static array DateTime::getLastErrors ( void )", "url": "https://secure.php.net/manual/en/datetime.getlasterrors.php"}, {"name": "DateTime::getOffset", "synopsis": "Procedural style", "usage": "public int DateTime::getOffset ( void )", "url": "https://secure.php.net/manual/en/datetime.getoffset.php"}, {"name": "DateTime::getTimestamp", "synopsis": "Procedural style", "usage": "public int DateTime::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/datetime.gettimestamp.php"}, {"name": "DateTime::getTimezone", "synopsis": "Procedural style", "usage": "public DateTimeZone DateTime::getTimezone ( void )", "url": "https://secure.php.net/manual/en/datetime.gettimezone.php"}, {"name": "DateTime::modify", "synopsis": "Procedural style", "usage": "public DateTime DateTime::modify ( string $modify )", "url": "https://secure.php.net/manual/en/datetime.modify.php"}, {"name": "DateTime::__set_state", "synopsis": "The __set_state() handler.", "usage": "public static DateTime DateTime::__set_state ( array $array )", "url": "https://secure.php.net/manual/en/datetime.set-state.php"}, {"name": "DateTime::setDate", "synopsis": "Procedural style", "usage": "public DateTime DateTime::setDate ( int $year , int $month , int $day )", "url": "https://secure.php.net/manual/en/datetime.setdate.php"}, {"name": "DateTime::setISODate", "synopsis": "Procedural style", "usage": "public DateTime DateTime::setISODate ( int $year , int $week [, int $day = 1 ] )", "url": "https://secure.php.net/manual/en/datetime.setisodate.php"}, {"name": "DateTime::setTime", "synopsis": "Procedural style", "usage": "public DateTime DateTime::setTime ( int $hour , int $minute [, int $second = 0 [, int $microseconds = 0 ]] )", "url": "https://secure.php.net/manual/en/datetime.settime.php"}, {"name": "DateTime::setTimestamp", "synopsis": "Procedural style", "usage": "public DateTime DateTime::setTimestamp ( int $unixtimestamp )", "url": "https://secure.php.net/manual/en/datetime.settimestamp.php"}, {"name": "DateTime::setTimezone", "synopsis": "Procedural style", "usage": "public DateTime DateTime::setTimezone ( DateTimeZone $timezone )", "url": "https://secure.php.net/manual/en/datetime.settimezone.php"}, {"name": "DateTime::sub", "synopsis": "Procedural style", "usage": "public DateTime DateTime::sub ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/datetime.sub.php"}, {"name": "DateTime::__wakeup", "synopsis": "The __wakeup() handler.", "usage": "public DateTime::__wakeup ( void )", "url": "https://secure.php.net/manual/en/datetime.wakeup.php"}, {"name": "DateTimeImmutable::add", "synopsis": "Like DateTime::add() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::add ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/datetimeimmutable.add.php"}, {"name": "DateTimeImmutable::__construct", "synopsis": "Procedural style", "usage": "DateTimeImmutable date_create_immutable ([ string $time = \"now\" [, DateTimeZone $timezone = NULL ]] )", "url": "https://secure.php.net/manual/en/datetimeimmutable.construct.php"}, {"name": "DateTimeImmutable::createFromFormat", "synopsis": "Procedural style", "usage": "public static DateTimeImmutable DateTimeImmutable::createFromFormat ( string $format , string $time [, DateTimeZone $timezone ] )", "url": "https://secure.php.net/manual/en/datetimeimmutable.createfromformat.php"}, {"name": "DateTimeImmutable::createFromMutable", "synopsis": null, "usage": "public static DateTimeImmutable DateTimeImmutable::createFromMutable ( DateTime $datetime )", "url": "https://secure.php.net/manual/en/datetimeimmutable.createfrommutable.php"}, {"name": "DateTimeImmutable::getLastErrors", "synopsis": "Like DateTime::getLastErrors() but works with DateTimeImmutable.", "usage": "public static array DateTimeImmutable::getLastErrors ( void )", "url": "https://secure.php.net/manual/en/datetimeimmutable.getlasterrors.php"}, {"name": "DateTimeImmutable::modify", "synopsis": "Creates a new DateTimeImmutable object with modified timestamp. The original object is not modified.", "usage": "public DateTimeImmutable DateTimeImmutable::modify ( string $modify )", "url": "https://secure.php.net/manual/en/datetimeimmutable.modify.php"}, {"name": "DateTimeImmutable::__set_state", "synopsis": "Like DateTime::__set_state() but works with DateTimeImmutable.", "usage": "public static DateTimeImmutable DateTimeImmutable::__set_state ( array $array )", "url": "https://secure.php.net/manual/en/datetimeimmutable.set-state.php"}, {"name": "DateTimeImmutable::setDate", "synopsis": "Like DateTime::setDate() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::setDate ( int $year , int $month , int $day )", "url": "https://secure.php.net/manual/en/datetimeimmutable.setdate.php"}, {"name": "DateTimeImmutable::setISODate", "synopsis": "Like DateTime::setISODate() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::setISODate ( int $year , int $week [, int $day = 1 ] )", "url": "https://secure.php.net/manual/en/datetimeimmutable.setisodate.php"}, {"name": "DateTimeImmutable::setTime", "synopsis": "Like DateTime::setTime() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::setTime ( int $hour , int $minute [, int $second = 0 [, int $microseconds = 0 ]] )", "url": "https://secure.php.net/manual/en/datetimeimmutable.settime.php"}, {"name": "DateTimeImmutable::setTimestamp", "synopsis": "Like DateTime::setTimestamp() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::setTimestamp ( int $unixtimestamp )", "url": "https://secure.php.net/manual/en/datetimeimmutable.settimestamp.php"}, {"name": "DateTimeImmutable::setTimezone", "synopsis": "Like DateTime::setTimezone() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::setTimezone ( DateTimeZone $timezone )", "url": "https://secure.php.net/manual/en/datetimeimmutable.settimezone.php"}, {"name": "DateTimeImmutable::sub", "synopsis": "Like DateTime::sub() but works with DateTimeImmutable.", "usage": "public DateTimeImmutable DateTimeImmutable::sub ( DateInterval $interval )", "url": "https://secure.php.net/manual/en/datetimeimmutable.sub.php"}, {"name": "DateTimeZone::__construct", "synopsis": "Procedural style", "usage": "DateTimeZone timezone_open ( string $timezone )", "url": "https://secure.php.net/manual/en/datetimezone.construct.php"}, {"name": "DateTimeZone::getLocation", "synopsis": "Procedural style", "usage": "public array DateTimeZone::getLocation ( void )", "url": "https://secure.php.net/manual/en/datetimezone.getlocation.php"}, {"name": "DateTimeZone::getName", "synopsis": "Procedural style", "usage": "public string DateTimeZone::getName ( void )", "url": "https://secure.php.net/manual/en/datetimezone.getname.php"}, {"name": "DateTimeZone::getOffset", "synopsis": "Procedural style", "usage": "public int DateTimeZone::getOffset ( DateTime $datetime )", "url": "https://secure.php.net/manual/en/datetimezone.getoffset.php"}, {"name": "DateTimeZone::getTransitions", "synopsis": "Procedural style", "usage": "public array DateTimeZone::getTransitions ([ int $timestamp_begin [, int $timestamp_end ]] )", "url": "https://secure.php.net/manual/en/datetimezone.gettransitions.php"}, {"name": "DateTimeZone::listAbbreviations", "synopsis": "Procedural style", "usage": "public static array DateTimeZone::listAbbreviations ( void )", "url": "https://secure.php.net/manual/en/datetimezone.listabbreviations.php"}, {"name": "DateTimeZone::listIdentifiers", "synopsis": "Procedural style", "usage": "public static array DateTimeZone::listIdentifiers ([ int $what = DateTimeZone::ALL [, string $country = NULL ]] )", "url": "https://secure.php.net/manual/en/datetimezone.listidentifiers.php"}, {"name": "Directory::close", "synopsis": "Same as closedir(), only dir_handle defaults to $this.", "usage": "public void Directory::close ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/directory.close.php"}, {"name": "Directory::read", "synopsis": "Same as readdir(), only dir_handle defaults to $this.", "usage": "public string Directory::read ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/directory.read.php"}, {"name": "Directory::rewind", "synopsis": "Same as rewinddir(), only dir_handle defaults to $this.", "usage": "public void Directory::rewind ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/directory.rewind.php"}, {"name": "DirectoryIterator::current", "synopsis": "Get the current DirectoryIterator item.", "usage": "public DirectoryIterator DirectoryIterator::current ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.current.php"}, {"name": "DirectoryIterator::getATime", "synopsis": "Get the last access time of the current DirectoryIterator item.", "usage": "public int DirectoryIterator::getATime ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getatime.php"}, {"name": "DirectoryIterator::getBasename", "synopsis": "Get the base name of the current DirectoryIterator item.", "usage": "public string DirectoryIterator::getBasename ([ string $suffix ] )", "url": "https://secure.php.net/manual/en/directoryiterator.getbasename.php"}, {"name": "DirectoryIterator::getCTime", "synopsis": "Get the inode change time for the current DirectoryIterator item.", "usage": "public int DirectoryIterator::getCTime ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getctime.php"}, {"name": "DirectoryIterator::getExtension", "synopsis": "Retrieves the file extension.", "usage": "public string DirectoryIterator::getExtension ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getextension.php"}, {"name": "DirectoryIterator::getFilename", "synopsis": "Get the file name of the current DirectoryIterator item.", "usage": "public string DirectoryIterator::getFilename ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getfilename.php"}, {"name": "DirectoryIterator::getGroup", "synopsis": "Get the group id of the file.", "usage": "public int DirectoryIterator::getGroup ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getgroup.php"}, {"name": "DirectoryIterator::getInode", "synopsis": "Get the inode number for the current DirectoryIterator item.", "usage": "public int DirectoryIterator::getInode ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getinode.php"}, {"name": "DirectoryIterator::getMTime", "synopsis": "Get the last modification time of the current DirectoryIterator item, as a Unix timestamp.", "usage": "public int DirectoryIterator::getMTime ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getmtime.php"}, {"name": "DirectoryIterator::getOwner", "synopsis": "Get the owner of the current DirectoryIterator item, in numerical format.", "usage": "public int DirectoryIterator::getOwner ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getowner.php"}, {"name": "DirectoryIterator::getPath", "synopsis": "Get the path to the current DirectoryIterator item.", "usage": "public string DirectoryIterator::getPath ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getpath.php"}, {"name": "DirectoryIterator::getPathname", "synopsis": "Get the path and file name of the current file.", "usage": "public string DirectoryIterator::getPathname ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getpathname.php"}, {"name": "DirectoryIterator::getPerms", "synopsis": "Get the permissions of the current DirectoryIterator item.", "usage": "public int DirectoryIterator::getPerms ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getperms.php"}, {"name": "DirectoryIterator::getSize", "synopsis": "Get the file size for the current DirectoryIterator item.", "usage": "public int DirectoryIterator::getSize ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.getsize.php"}, {"name": "DirectoryIterator::getType", "synopsis": "Determines which file type the current DirectoryIterator item belongs to. One of file, link, or dir.", "usage": "public string DirectoryIterator::getType ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.gettype.php"}, {"name": "DirectoryIterator::isDir", "synopsis": "Determines if the current DirectoryIterator item is a directory.", "usage": "public bool DirectoryIterator::isDir ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.isdir.php"}, {"name": "DirectoryIterator::isDot", "synopsis": "Determines if the current DirectoryIterator item is a directory and either . or ..", "usage": "public bool DirectoryIterator::isDot ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.isdot.php"}, {"name": "DirectoryIterator::isExecutable", "synopsis": "Determines if the current DirectoryIterator item is executable.", "usage": "public bool DirectoryIterator::isExecutable ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.isexecutable.php"}, {"name": "DirectoryIterator::isFile", "synopsis": "Determines if the current DirectoryIterator item is a regular file.", "usage": "public bool DirectoryIterator::isFile ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.isfile.php"}, {"name": "DirectoryIterator::isLink", "synopsis": "Determines if the current DirectoryIterator item is a symbolic link.", "usage": "public bool DirectoryIterator::isLink ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.islink.php"}, {"name": "DirectoryIterator::isReadable", "synopsis": "Determines if the current DirectoryIterator item is readable.", "usage": "public bool DirectoryIterator::isReadable ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.isreadable.php"}, {"name": "DirectoryIterator::isWritable", "synopsis": "Determines if the current DirectoryIterator item is writable.", "usage": "public bool DirectoryIterator::isWritable ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.iswritable.php"}, {"name": "DirectoryIterator::key", "synopsis": "Get the key for the current DirectoryIterator item.", "usage": "public string DirectoryIterator::key ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.key.php"}, {"name": "DirectoryIterator::next", "synopsis": "Move forward to the next DirectoryIterator item.", "usage": "public void DirectoryIterator::next ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.next.php"}, {"name": "DirectoryIterator::rewind", "synopsis": "Rewind the DirectoryIterator back to the start.", "usage": "public void DirectoryIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.rewind.php"}, {"name": "DirectoryIterator::seek", "synopsis": "Seek to a given position in the DirectoryIterator.", "usage": "public void DirectoryIterator::seek ( int $position )", "url": "https://secure.php.net/manual/en/directoryiterator.seek.php"}, {"name": "DirectoryIterator::__toString", "synopsis": "Get the file name of the current DirectoryIterator item.", "usage": "public string DirectoryIterator::__toString ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.tostring.php"}, {"name": "DirectoryIterator::valid", "synopsis": "Check whether current DirectoryIterator position is a valid file.", "usage": "public bool DirectoryIterator::valid ( void )", "url": "https://secure.php.net/manual/en/directoryiterator.valid.php"}, {"name": "DOMAttr::__construct", "synopsis": "Creates a new DOMAttr object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writable node, use DOMDocument::createAttribute.", "usage": "public DOMAttr::__construct ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/domattr.construct.php"}, {"name": "DOMAttr::isId", "synopsis": "This function checks if the attribute is a defined ID.", "usage": "public bool DOMAttr::isId ( void )", "url": "https://secure.php.net/manual/en/domattr.isid.php"}, {"name": "DOMCharacterData::appendData", "synopsis": "Append the string data to the end of the character data of the node.", "usage": "public void DOMCharacterData::appendData ( string $data )", "url": "https://secure.php.net/manual/en/domcharacterdata.appenddata.php"}, {"name": "DOMCharacterData::deleteData", "synopsis": "Deletes count characters starting from position offset.", "usage": "public void DOMCharacterData::deleteData ( int $offset , int $count )", "url": "https://secure.php.net/manual/en/domcharacterdata.deletedata.php"}, {"name": "DOMCharacterData::insertData", "synopsis": "Inserts string data at position offset.", "usage": "public void DOMCharacterData::insertData ( int $offset , string $data )", "url": "https://secure.php.net/manual/en/domcharacterdata.insertdata.php"}, {"name": "DOMCharacterData::replaceData", "synopsis": "Replace count characters starting from position offset with data.", "usage": "public void DOMCharacterData::replaceData ( int $offset , int $count , string $data )", "url": "https://secure.php.net/manual/en/domcharacterdata.replacedata.php"}, {"name": "DOMCharacterData::substringData", "synopsis": "Returns the specified substring.", "usage": "public string DOMCharacterData::substringData ( int $offset , int $count )", "url": "https://secure.php.net/manual/en/domcharacterdata.substringdata.php"}, {"name": "DOMComment::__construct", "synopsis": "Creates a new DOMComment object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writeable node, use DOMDocument::createComment.", "usage": "public DOMComment::__construct ([ string $value ] )", "url": "https://secure.php.net/manual/en/domcomment.construct.php"}, {"name": "DOMDocument::__construct", "synopsis": "Creates a new DOMDocument object.", "usage": "public DOMDocument::__construct ([ string $version [, string $encoding ]] )", "url": "https://secure.php.net/manual/en/domdocument.construct.php"}, {"name": "DOMDocument::createAttribute", "synopsis": "This function creates a new instance of class DOMAttr. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMAttr DOMDocument::createAttribute ( string $name )", "url": "https://secure.php.net/manual/en/domdocument.createattribute.php"}, {"name": "DOMDocument::createAttributeNS", "synopsis": "This function creates a new instance of class DOMAttr. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMAttr DOMDocument::createAttributeNS ( string $namespaceURI , string $qualifiedName )", "url": "https://secure.php.net/manual/en/domdocument.createattributens.php"}, {"name": "DOMDocument::createCDATASection", "synopsis": "This function creates a new instance of class DOMCDATASection. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMCDATASection DOMDocument::createCDATASection ( string $data )", "url": "https://secure.php.net/manual/en/domdocument.createcdatasection.php"}, {"name": "DOMDocument::createComment", "synopsis": "This function creates a new instance of class DOMComment. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMComment DOMDocument::createComment ( string $data )", "url": "https://secure.php.net/manual/en/domdocument.createcomment.php"}, {"name": "DOMDocument::createDocumentFragment", "synopsis": "This function creates a new instance of class DOMDocumentFragment. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMDocumentFragment DOMDocument::createDocumentFragment ( void )", "url": "https://secure.php.net/manual/en/domdocument.createdocumentfragment.php"}, {"name": "DOMDocument::createElement", "synopsis": "This function creates a new instance of class DOMElement. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMElement DOMDocument::createElement ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/domdocument.createelement.php"}, {"name": "DOMDocument::createElementNS", "synopsis": "This function creates a new element node with an associated namespace. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMElement DOMDocument::createElementNS ( string $namespaceURI , string $qualifiedName [, string $value ] )", "url": "https://secure.php.net/manual/en/domdocument.createelementns.php"}, {"name": "DOMDocument::createEntityReference", "synopsis": "This function creates a new instance of class DOMEntityReference. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMEntityReference DOMDocument::createEntityReference ( string $name )", "url": "https://secure.php.net/manual/en/domdocument.createentityreference.php"}, {"name": "DOMDocument::createProcessingInstruction", "synopsis": "This function creates a new instance of class DOMProcessingInstruction. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMProcessingInstruction DOMDocument::createProcessingInstruction ( string $target [, string $data ] )", "url": "https://secure.php.net/manual/en/domdocument.createprocessinginstruction.php"}, {"name": "DOMDocument::createTextNode", "synopsis": "This function creates a new instance of class DOMText. This node will not show up in the document unless it is inserted with (e.g.) DOMNode::appendChild().", "usage": "public DOMText DOMDocument::createTextNode ( string $content )", "url": "https://secure.php.net/manual/en/domdocument.createtextnode.php"}, {"name": "DOMDocument::getElementById", "synopsis": "This function is similar to DOMDocument::getElementsByTagName but searches for an element with a given id.", "usage": "public DOMElement DOMDocument::getElementById ( string $elementId )", "url": "https://secure.php.net/manual/en/domdocument.getelementbyid.php"}, {"name": "DOMDocument::getElementsByTagName", "synopsis": "This function returns a new instance of class DOMNodeList containing all the elements with a given local tag name.", "usage": "public DOMNodeList DOMDocument::getElementsByTagName ( string $name )", "url": "https://secure.php.net/manual/en/domdocument.getelementsbytagname.php"}, {"name": "DOMDocument::getElementsByTagNameNS", "synopsis": "Returns a DOMNodeList of all elements with a given local name and a namespace URI.", "usage": "public DOMNodeList DOMDocument::getElementsByTagNameNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domdocument.getelementsbytagnamens.php"}, {"name": "DOMDocument::importNode", "synopsis": "This function returns a copy of the node to import and associates it with the current document.", "usage": "public DOMNode DOMDocument::importNode ( DOMNode $importedNode [, bool $deep ] )", "url": "https://secure.php.net/manual/en/domdocument.importnode.php"}, {"name": "DOMDocument::load", "synopsis": "Loads an XML document from a file.", "usage": "public mixed DOMDocument::load ( string $filename [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/domdocument.load.php"}, {"name": "DOMDocument::loadHTML", "synopsis": "The function parses the HTML contained in the string source. Unlike loading XML, HTML does not have to be well-formed to load. This function may also be called statically to load and create a DOMDocument object. The static invocation may be used when no DOMDocument properties need to be set prior to loading.", "usage": "public bool DOMDocument::loadHTML ( string $source [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/domdocument.loadhtml.php"}, {"name": "DOMDocument::loadHTMLFile", "synopsis": "The function parses the HTML document in the file named filename. Unlike loading XML, HTML does not have to be well-formed to load.", "usage": "public bool DOMDocument::loadHTMLFile ( string $filename [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/domdocument.loadhtmlfile.php"}, {"name": "DOMDocument::loadXML", "synopsis": "Loads an XML document from a string.", "usage": "public mixed DOMDocument::loadXML ( string $source [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/domdocument.loadxml.php"}, {"name": "DOMDocument::normalizeDocument", "synopsis": "This method acts as if you saved and then loaded the document, putting the document in a \"normal\" form.", "usage": "public void DOMDocument::normalizeDocument ( void )", "url": "https://secure.php.net/manual/en/domdocument.normalizedocument.php"}, {"name": "DOMDocument::registerNodeClass", "synopsis": "This method allows you to register your own extended DOM class to be used afterward by the PHP DOM extension.", "usage": "public bool DOMDocument::registerNodeClass ( string $baseclass , string $extendedclass )", "url": "https://secure.php.net/manual/en/domdocument.registernodeclass.php"}, {"name": "DOMDocument::relaxNGValidate", "synopsis": "Performs \u00bb\u00a0relaxNG validation on the document based on the given RNG schema.", "usage": "public bool DOMDocument::relaxNGValidate ( string $filename )", "url": "https://secure.php.net/manual/en/domdocument.relaxngvalidate.php"}, {"name": "DOMDocument::relaxNGValidateSource", "synopsis": "Performs \u00bb\u00a0relaxNG validation on the document based on the given RNG source.", "usage": "public bool DOMDocument::relaxNGValidateSource ( string $source )", "url": "https://secure.php.net/manual/en/domdocument.relaxngvalidatesource.php"}, {"name": "DOMDocument::save", "synopsis": "Creates an XML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.", "usage": "public int DOMDocument::save ( string $filename [, int $options ] )", "url": "https://secure.php.net/manual/en/domdocument.save.php"}, {"name": "DOMDocument::saveHTML", "synopsis": "Creates an HTML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.", "usage": "public string DOMDocument::saveHTML ([ DOMNode $node = NULL ] )", "url": "https://secure.php.net/manual/en/domdocument.savehtml.php"}, {"name": "DOMDocument::saveHTMLFile", "synopsis": "Creates an HTML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.", "usage": "public int DOMDocument::saveHTMLFile ( string $filename )", "url": "https://secure.php.net/manual/en/domdocument.savehtmlfile.php"}, {"name": "DOMDocument::saveXML", "synopsis": "Creates an XML document from the DOM representation. This function is usually called after building a new dom document from scratch as in the example below.", "usage": "public string DOMDocument::saveXML ([ DOMNode $node [, int $options ]] )", "url": "https://secure.php.net/manual/en/domdocument.savexml.php"}, {"name": "DOMDocument::schemaValidate", "synopsis": "Validates a document based on the given schema file.", "usage": "public bool DOMDocument::schemaValidate ( string $filename [, int $flags ] )", "url": "https://secure.php.net/manual/en/domdocument.schemavalidate.php"}, {"name": "DOMDocument::schemaValidateSource", "synopsis": "Validates a document based on a schema defined in the given string.", "usage": "public bool DOMDocument::schemaValidateSource ( string $source [, int $flags ] )", "url": "https://secure.php.net/manual/en/domdocument.schemavalidatesource.php"}, {"name": "DOMDocument::validate", "synopsis": "Validates the document based on its DTD.", "usage": "public bool DOMDocument::validate ( void )", "url": "https://secure.php.net/manual/en/domdocument.validate.php"}, {"name": "DOMDocument::xinclude", "synopsis": "This method substitutes \u00bb\u00a0XIncludes in a DOMDocument object.", "usage": "public int DOMDocument::xinclude ([ int $options ] )", "url": "https://secure.php.net/manual/en/domdocument.xinclude.php"}, {"name": "DOMDocumentFragment::appendXML", "synopsis": "Appends raw XML data to a DOMDocumentFragment.", "usage": "public bool DOMDocumentFragment::appendXML ( string $data )", "url": "https://secure.php.net/manual/en/domdocumentfragment.appendxml.php"}, {"name": "DOMElement::__construct", "synopsis": "Creates a new DOMElement object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writeable node, use DOMDocument::createElement or DOMDocument::createElementNS.", "usage": "public DOMElement::__construct ( string $name [, string $value [, string $namespaceURI ]] )", "url": "https://secure.php.net/manual/en/domelement.construct.php"}, {"name": "DOMElement::getAttribute", "synopsis": "Gets the value of the attribute with name name for the current node.", "usage": "public string DOMElement::getAttribute ( string $name )", "url": "https://secure.php.net/manual/en/domelement.getattribute.php"}, {"name": "DOMElement::getAttributeNode", "synopsis": "Returns the attribute node with name name for the current element.", "usage": "public DOMAttr DOMElement::getAttributeNode ( string $name )", "url": "https://secure.php.net/manual/en/domelement.getattributenode.php"}, {"name": "DOMElement::getAttributeNodeNS", "synopsis": "Returns the attribute node in namespace namespaceURI with local name localName for the current node.", "usage": "public DOMAttr DOMElement::getAttributeNodeNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domelement.getattributenodens.php"}, {"name": "DOMElement::getAttributeNS", "synopsis": "Gets the value of the attribute in namespace namespaceURI with local name localName for the current node.", "usage": "public string DOMElement::getAttributeNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domelement.getattributens.php"}, {"name": "DOMElement::getElementsByTagName", "synopsis": "This function returns a new instance of the class DOMNodeList of all descendant elements with a given tag name, in the order in which they are encountered in a preorder traversal of this element tree.", "usage": "public DOMNodeList DOMElement::getElementsByTagName ( string $name )", "url": "https://secure.php.net/manual/en/domelement.getelementsbytagname.php"}, {"name": "DOMElement::getElementsByTagNameNS", "synopsis": "This function fetch all the descendant elements with a given localName and namespaceURI.", "usage": "public DOMNodeList DOMElement::getElementsByTagNameNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domelement.getelementsbytagnamens.php"}, {"name": "DOMElement::hasAttribute", "synopsis": "Indicates whether attribute named name exists as a member of the element.", "usage": "public bool DOMElement::hasAttribute ( string $name )", "url": "https://secure.php.net/manual/en/domelement.hasattribute.php"}, {"name": "DOMElement::hasAttributeNS", "synopsis": "Indicates whether attribute in namespace namespaceURI named localName exists as a member of the element.", "usage": "public bool DOMElement::hasAttributeNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domelement.hasattributens.php"}, {"name": "DOMElement::removeAttribute", "synopsis": "Removes attribute named name from the element.", "usage": "public bool DOMElement::removeAttribute ( string $name )", "url": "https://secure.php.net/manual/en/domelement.removeattribute.php"}, {"name": "DOMElement::removeAttributeNode", "synopsis": "Removes attribute oldnode from the element.", "usage": "public bool DOMElement::removeAttributeNode ( DOMAttr $oldnode )", "url": "https://secure.php.net/manual/en/domelement.removeattributenode.php"}, {"name": "DOMElement::removeAttributeNS", "synopsis": "Removes attribute is namespace namespaceURI named localName from the element.", "usage": "public bool DOMElement::removeAttributeNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domelement.removeattributens.php"}, {"name": "DOMElement::setAttribute", "synopsis": "Sets an attribute with name name to the given value. If the attribute does not exist, it will be created.", "usage": "public DOMAttr DOMElement::setAttribute ( string $name , string $value )", "url": "https://secure.php.net/manual/en/domelement.setattribute.php"}, {"name": "DOMElement::setAttributeNode", "synopsis": "Adds new attribute node attr to element.", "usage": "public DOMAttr DOMElement::setAttributeNode ( DOMAttr $attr )", "url": "https://secure.php.net/manual/en/domelement.setattributenode.php"}, {"name": "DOMElement::setAttributeNodeNS", "synopsis": "Adds new attribute node attr to element.", "usage": "public DOMAttr DOMElement::setAttributeNodeNS ( DOMAttr $attr )", "url": "https://secure.php.net/manual/en/domelement.setattributenodens.php"}, {"name": "DOMElement::setAttributeNS", "synopsis": "Sets an attribute with namespace namespaceURI and name name to the given value. If the attribute does not exist, it will be created.", "usage": "public void DOMElement::setAttributeNS ( string $namespaceURI , string $qualifiedName , string $value )", "url": "https://secure.php.net/manual/en/domelement.setattributens.php"}, {"name": "DOMElement::setIdAttribute", "synopsis": "Declares the attribute name to be of type ID.", "usage": "public void DOMElement::setIdAttribute ( string $name , bool $isId )", "url": "https://secure.php.net/manual/en/domelement.setidattribute.php"}, {"name": "DOMElement::setIdAttributeNode", "synopsis": "Declares the attribute specified by attr to be of type ID.", "usage": "public void DOMElement::setIdAttributeNode ( DOMAttr $attr , bool $isId )", "url": "https://secure.php.net/manual/en/domelement.setidattributenode.php"}, {"name": "DOMElement::setIdAttributeNS", "synopsis": "Declares the attribute specified by localName and namespaceURI to be of type ID.", "usage": "public void DOMElement::setIdAttributeNS ( string $namespaceURI , string $localName , bool $isId )", "url": "https://secure.php.net/manual/en/domelement.setidattributens.php"}, {"name": "DOMEntityReference::__construct", "synopsis": "Creates a new DOMEntityReference object.", "usage": "public DOMEntityReference::__construct ( string $name )", "url": "https://secure.php.net/manual/en/domentityreference.construct.php"}, {"name": "DOMImplementation::__construct", "synopsis": "Creates a new DOMImplementation object.", "usage": "DOMImplementation::__construct ( void )", "url": "https://secure.php.net/manual/en/domimplementation.construct.php"}, {"name": "DOMImplementation::createDocument", "synopsis": "Creates a DOMDocument object of the specified type with its document element.", "usage": "public DOMDocument DOMImplementation::createDocument ([ string $namespaceURI = NULL [, string $qualifiedName = NULL [, DOMDocumentType $doctype = NULL ]]] )", "url": "https://secure.php.net/manual/en/domimplementation.createdocument.php"}, {"name": "DOMImplementation::createDocumentType", "synopsis": "Creates an empty DOMDocumentType object. Entity declarations and notations are not made available. Entity reference expansions and default attribute additions do not occur.", "usage": "public DOMDocumentType DOMImplementation::createDocumentType ([ string $qualifiedName = NULL [, string $publicId = NULL [, string $systemId = NULL ]]] )", "url": "https://secure.php.net/manual/en/domimplementation.createdocumenttype.php"}, {"name": "DOMImplementation::hasFeature", "synopsis": "Test if the DOM implementation implements a specific feature.", "usage": "public bool DOMImplementation::hasFeature ( string $feature , string $version )", "url": "https://secure.php.net/manual/en/domimplementation.hasfeature.php"}, {"name": "DOMNamedNodeMap::getNamedItem", "synopsis": "Retrieves a node specified by its nodeName.", "usage": "DOMNode DOMNamedNodeMap::getNamedItem ( string $name )", "url": "https://secure.php.net/manual/en/domnamednodemap.getnameditem.php"}, {"name": "DOMNamedNodeMap::getNamedItemNS", "synopsis": "Retrieves a node specified by localName and namespaceURI.", "usage": "DOMNode DOMNamedNodeMap::getNamedItemNS ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/domnamednodemap.getnameditemns.php"}, {"name": "DOMNamedNodeMap::item", "synopsis": "Retrieves a node specified by index within the DOMNamedNodeMap object.", "usage": "DOMNode DOMNamedNodeMap::item ( int $index )", "url": "https://secure.php.net/manual/en/domnamednodemap.item.php"}, {"name": "DOMNode::appendChild", "synopsis": "This function appends a child to an existing list of children or creates a new list of children. The child can be created with e.g. DOMDocument::createElement(), DOMDocument::createTextNode() etc. or simply by using any other node.", "usage": "public DOMNode DOMNode::appendChild ( DOMNode $newnode )", "url": "https://secure.php.net/manual/en/domnode.appendchild.php"}, {"name": "DOMNode::C14N", "synopsis": "Canonicalize nodes to a string", "usage": "public string DOMNode::C14N ([ bool $exclusive [, bool $with_comments [, array $xpath [, array $ns_prefixes ]]]] )", "url": "https://secure.php.net/manual/en/domnode.c14n.php"}, {"name": "DOMNode::C14NFile", "synopsis": "Canonicalize nodes to a file.", "usage": "public int DOMNode::C14NFile ( string $uri [, bool $exclusive = FALSE [, bool $with_comments = FALSE [, array $xpath [, array $ns_prefixes ]]]] )", "url": "https://secure.php.net/manual/en/domnode.c14nfile.php"}, {"name": "DOMNode::cloneNode", "synopsis": "Creates a copy of the node.", "usage": "public DOMNode DOMNode::cloneNode ([ bool $deep ] )", "url": "https://secure.php.net/manual/en/domnode.clonenode.php"}, {"name": "DOMNode::getLineNo", "synopsis": "Gets line number for where the node is defined.", "usage": "public int DOMNode::getLineNo ( void )", "url": "https://secure.php.net/manual/en/domnode.getlineno.php"}, {"name": "DOMNode::getNodePath", "synopsis": "Gets an XPath location path for the node.", "usage": "public string DOMNode::getNodePath ( void )", "url": "https://secure.php.net/manual/en/domnode.getnodepath.php"}, {"name": "DOMNode::hasAttributes", "synopsis": "This method checks if the node has attributes. The tested node has to be an XML_ELEMENT_NODE.", "usage": "public bool DOMNode::hasAttributes ( void )", "url": "https://secure.php.net/manual/en/domnode.hasattributes.php"}, {"name": "DOMNode::hasChildNodes", "synopsis": "This function checks if the node has children.", "usage": "public bool DOMNode::hasChildNodes ( void )", "url": "https://secure.php.net/manual/en/domnode.haschildnodes.php"}, {"name": "DOMNode::insertBefore", "synopsis": "This function inserts a new node right before the reference node. If you plan to do further modifications on the appended child you must use the returned node.", "usage": "public DOMNode DOMNode::insertBefore ( DOMNode $newnode [, DOMNode $refnode ] )", "url": "https://secure.php.net/manual/en/domnode.insertbefore.php"}, {"name": "DOMNode::isDefaultNamespace", "synopsis": "Tells whether namespaceURI is the default namespace.", "usage": "public bool DOMNode::isDefaultNamespace ( string $namespaceURI )", "url": "https://secure.php.net/manual/en/domnode.isdefaultnamespace.php"}, {"name": "DOMNode::isSameNode", "synopsis": "This function indicates if two nodes are the same node. The comparison is not based on content", "usage": "public bool DOMNode::isSameNode ( DOMNode $node )", "url": "https://secure.php.net/manual/en/domnode.issamenode.php"}, {"name": "DOMNode::isSupported", "synopsis": "Checks if the asked feature is supported for the specified version.", "usage": "public bool DOMNode::isSupported ( string $feature , string $version )", "url": "https://secure.php.net/manual/en/domnode.issupported.php"}, {"name": "DOMNode::lookupNamespaceUri", "synopsis": "Gets the namespace URI of the node based on the prefix.", "usage": "public string DOMNode::lookupNamespaceUri ( string $prefix )", "url": "https://secure.php.net/manual/en/domnode.lookupnamespaceuri.php"}, {"name": "DOMNode::lookupPrefix", "synopsis": "Gets the namespace prefix of the node based on the namespace URI.", "usage": "public string DOMNode::lookupPrefix ( string $namespaceURI )", "url": "https://secure.php.net/manual/en/domnode.lookupprefix.php"}, {"name": "DOMNode::normalize", "synopsis": "Remove empty text nodes and merge adjacent text nodes in this node and all its children.", "usage": "public void DOMNode::normalize ( void )", "url": "https://secure.php.net/manual/en/domnode.normalize.php"}, {"name": "DOMNode::removeChild", "synopsis": "This functions removes a child from a list of children.", "usage": "public DOMNode DOMNode::removeChild ( DOMNode $oldnode )", "url": "https://secure.php.net/manual/en/domnode.removechild.php"}, {"name": "DOMNode::replaceChild", "synopsis": "This function replaces the child oldnode with the passed new node. If the newnode is already a child it will not be added a second time. If the replacement succeeds the old node is returned.", "usage": "public DOMNode DOMNode::replaceChild ( DOMNode $newnode , DOMNode $oldnode )", "url": "https://secure.php.net/manual/en/domnode.replacechild.php"}, {"name": "DOMNodeList::count", "synopsis": "", "usage": "public int DOMNodeList::count ( void )", "url": "https://secure.php.net/manual/en/domnodelist.count.php"}, {"name": "DOMNodeList::item", "synopsis": "Retrieves a node specified by index within the DOMNodeList object.", "usage": "DOMNode DOMNodeList::item ( int $index )", "url": "https://secure.php.net/manual/en/domnodelist.item.php"}, {"name": "DOMProcessingInstruction::__construct", "synopsis": "Creates a new DOMProcessingInstruction object. This object is read only. It may be appended to a document, but additional nodes may not be appended to this node until the node is associated with a document. To create a writeable node, use DOMDocument::createProcessingInstruction.", "usage": "public DOMProcessingInstruction::__construct ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/domprocessinginstruction.construct.php"}, {"name": "DOMText::isElementContentWhitespace", "synopsis": "", "usage": "public bool DOMText::isElementContentWhitespace ( void )", "url": "https://secure.php.net/manual/en/domtext.iselementcontentwhitespace.php"}, {"name": "DOMText::isWhitespaceInElementContent", "synopsis": "Indicates whether this text node contains only whitespace or it is empty. The text node is determined to contain whitespace in element content during the load of the document.", "usage": "public bool DOMText::isWhitespaceInElementContent ( void )", "url": "https://secure.php.net/manual/en/domtext.iswhitespaceinelementcontent.php"}, {"name": "DOMText::splitText", "synopsis": "Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings.", "usage": "public DOMText DOMText::splitText ( int $offset )", "url": "https://secure.php.net/manual/en/domtext.splittext.php"}, {"name": "DOMXPath::__construct", "synopsis": "Creates a new DOMXPath object.", "usage": "public DOMXPath::__construct ( DOMDocument $doc )", "url": "https://secure.php.net/manual/en/domxpath.construct.php"}, {"name": "DOMXPath::evaluate", "synopsis": "Executes the given XPath expression and returns a typed result if possible.", "usage": "public mixed DOMXPath::evaluate ( string $expression [, DOMNode $contextnode [, bool $registerNodeNS = TRUE ]] )", "url": "https://secure.php.net/manual/en/domxpath.evaluate.php"}, {"name": "DOMXPath::query", "synopsis": "Executes the given XPath expression.", "usage": "public DOMNodeList DOMXPath::query ( string $expression [, DOMNode $contextnode [, bool $registerNodeNS = TRUE ]] )", "url": "https://secure.php.net/manual/en/domxpath.query.php"}, {"name": "DOMXPath::registerNamespace", "synopsis": "Registers the namespaceURI and prefix with the DOMXPath object.", "usage": "public bool DOMXPath::registerNamespace ( string $prefix , string $namespaceURI )", "url": "https://secure.php.net/manual/en/domxpath.registernamespace.php"}, {"name": "DOMXPath::registerPhpFunctions", "synopsis": "This method enables the ability to use PHP functions within XPath expressions.", "usage": "public void DOMXPath::registerPhpFunctions ([ mixed $restrict ] )", "url": "https://secure.php.net/manual/en/domxpath.registerphpfunctions.php"}, {"name": "Ds\\Collection::clear", "synopsis": "Removes all values from the collection.", "usage": "abstract public void Ds\\Collection::clear ( void )", "url": "https://secure.php.net/manual/en/ds-collection.clear.php"}, {"name": "Ds\\Collection::copy", "synopsis": "Returns a shallow copy of the collection.", "usage": "abstract public Ds\\Collection Ds\\Collection::copy ( void )", "url": "https://secure.php.net/manual/en/ds-collection.copy.php"}, {"name": "Ds\\Collection::isEmpty", "synopsis": "Returns whether the collection is empty.", "usage": "abstract public bool Ds\\Collection::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-collection.isempty.php"}, {"name": "Ds\\Collection::toArray", "synopsis": "Converts the collection to an array.", "usage": "abstract public array Ds\\Collection::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-collection.toarray.php"}, {"name": "Ds\\Deque::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "public void Ds\\Deque::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-deque.allocate.php"}, {"name": "Ds\\Deque::apply", "synopsis": "Updates all values by applying a callback function to each value in the deque.", "usage": "public void Ds\\Deque::apply ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-deque.apply.php"}, {"name": "Ds\\Deque::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Deque::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-deque.capacity.php"}, {"name": "Ds\\Deque::clear", "synopsis": "Removes all values from the deque.", "usage": "public void Ds\\Deque::clear ( void )", "url": "https://secure.php.net/manual/en/ds-deque.clear.php"}, {"name": "Ds\\Deque::contains", "synopsis": "Determines if the deque contains all values.", "usage": "public bool Ds\\Deque::contains ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-deque.contains.php"}, {"name": "Ds\\Deque::copy", "synopsis": "Returns a shallow copy of the deque.", "usage": "public Ds\\Deque Ds\\Deque::copy ( void )", "url": "https://secure.php.net/manual/en/ds-deque.copy.php"}, {"name": "Ds\\Deque::filter", "synopsis": "Creates a new deque using a callable to determine which values to include.", "usage": "public Ds\\Deque Ds\\Deque::filter ([ callable $callback ] )", "url": "https://secure.php.net/manual/en/ds-deque.filter.php"}, {"name": "Ds\\Deque::find", "synopsis": "Returns the index of the value, or FALSE if not found.", "usage": "public mixed Ds\\Deque::find ( mixed $value )", "url": "https://secure.php.net/manual/en/ds-deque.find.php"}, {"name": "Ds\\Deque::first", "synopsis": "Returns the first value in the deque.", "usage": "public mixed Ds\\Deque::first ( void )", "url": "https://secure.php.net/manual/en/ds-deque.first.php"}, {"name": "Ds\\Deque::get", "synopsis": "Returns the value at a given index.", "usage": "public mixed Ds\\Deque::get ( int $index )", "url": "https://secure.php.net/manual/en/ds-deque.get.php"}, {"name": "Ds\\Deque::insert", "synopsis": "Inserts values into the deque at a given index.", "usage": "public void Ds\\Deque::insert ( int $index [, mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-deque.insert.php"}, {"name": "Ds\\Deque::isEmpty", "synopsis": "Returns whether the deque is empty.", "usage": "public bool Ds\\Deque::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-deque.isempty.php"}, {"name": "Ds\\Deque::join", "synopsis": "Joins all values together as a string using an optional separator between each value.", "usage": "public string Ds\\Deque::join ([ string $glue ] )", "url": "https://secure.php.net/manual/en/ds-deque.join.php"}, {"name": "Ds\\Deque::last", "synopsis": "Returns the last value in the deque.", "usage": "public mixed Ds\\Deque::last ( void )", "url": "https://secure.php.net/manual/en/ds-deque.last.php"}, {"name": "Ds\\Deque::map", "synopsis": "Returns the result of applying a callback function to each value in the deque.", "usage": "public Ds\\Deque Ds\\Deque::map ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-deque.map.php"}, {"name": "Ds\\Deque::merge", "synopsis": "Returns the result of adding all given values to the deque.", "usage": "public Ds\\Deque Ds\\Deque::merge ( mixed $values )", "url": "https://secure.php.net/manual/en/ds-deque.merge.php"}, {"name": "Ds\\Deque::pop", "synopsis": "Removes and returns the last value.", "usage": "public mixed Ds\\Deque::pop ( void )", "url": "https://secure.php.net/manual/en/ds-deque.pop.php"}, {"name": "Ds\\Deque::push", "synopsis": "Adds values to the end of the deque.", "usage": "public void Ds\\Deque::push ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-deque.push.php"}, {"name": "Ds\\Deque::reduce", "synopsis": "Reduces the deque to a single value using a callback function.", "usage": "public mixed Ds\\Deque::reduce ( callable $callback [, mixed $initial ] )", "url": "https://secure.php.net/manual/en/ds-deque.reduce.php"}, {"name": "Ds\\Deque::remove", "synopsis": "Removes and returns a value by index.", "usage": "public mixed Ds\\Deque::remove ( int $index )", "url": "https://secure.php.net/manual/en/ds-deque.remove.php"}, {"name": "Ds\\Deque::reverse", "synopsis": "Reverses the deque in-place.", "usage": "public void Ds\\Deque::reverse ( void )", "url": "https://secure.php.net/manual/en/ds-deque.reverse.php"}, {"name": "Ds\\Deque::reversed", "synopsis": "Returns a reversed copy of the deque.", "usage": "public Ds\\Deque Ds\\Deque::reversed ( void )", "url": "https://secure.php.net/manual/en/ds-deque.reversed.php"}, {"name": "Ds\\Deque::rotate", "synopsis": "Rotates the deque by a given number of rotations, which is equivalent to successively calling $deque->push($deque->shift()) if the number of rotations is positive, or $deque->unshift($deque->pop()) if negative.", "usage": "public void Ds\\Deque::rotate ( int $rotations )", "url": "https://secure.php.net/manual/en/ds-deque.rotate.php"}, {"name": "Ds\\Deque::set", "synopsis": "Updates a value at a given index.", "usage": "public void Ds\\Deque::set ( int $index , mixed $value )", "url": "https://secure.php.net/manual/en/ds-deque.set.php"}, {"name": "Ds\\Deque::shift", "synopsis": "Removes and returns the first value.", "usage": "public mixed Ds\\Deque::shift ( void )", "url": "https://secure.php.net/manual/en/ds-deque.shift.php"}, {"name": "Ds\\Deque::slice", "synopsis": "Creates a sub-deque of a given range.", "usage": "public Ds\\Deque Ds\\Deque::slice ( int $index [, int $length ] )", "url": "https://secure.php.net/manual/en/ds-deque.slice.php"}, {"name": "Ds\\Deque::sort", "synopsis": "Sorts the deque in-place, using an optional comparator function.", "usage": "public void Ds\\Deque::sort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-deque.sort.php"}, {"name": "Ds\\Deque::sorted", "synopsis": "Returns a sorted copy, using an optional comparator function.", "usage": "public Ds\\Deque Ds\\Deque::sorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-deque.sorted.php"}, {"name": "Ds\\Deque::sum", "synopsis": "Returns the sum of all values in the deque.", "usage": "public number Ds\\Deque::sum ( void )", "url": "https://secure.php.net/manual/en/ds-deque.sum.php"}, {"name": "Ds\\Deque::toArray", "synopsis": "Converts the deque to an array.", "usage": "public array Ds\\Deque::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-deque.toarray.php"}, {"name": "Ds\\Deque::unshift", "synopsis": "Adds values to the front of the deque, moving all the current values forward to make room for the new values.", "usage": "public void Ds\\Deque::unshift ([ mixed $values ] )", "url": "https://secure.php.net/manual/en/ds-deque.unshift.php"}, {"name": "Ds\\Hashable::equals", "synopsis": "Determines whether another object is equal to the current instance.", "usage": "abstract public bool Ds\\Hashable::equals ( object $obj )", "url": "https://secure.php.net/manual/en/ds-hashable.equals.php"}, {"name": "Ds\\Hashable::hash", "synopsis": "Returns a scalar value to be used as the hash value of the objects.", "usage": "abstract public mixed Ds\\Hashable::hash ( void )", "url": "https://secure.php.net/manual/en/ds-hashable.hash.php"}, {"name": "Ds\\Map::allocate", "synopsis": "Allocates enough memory for a required capacity.", "usage": "public void Ds\\Map::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-map.allocate.php"}, {"name": "Ds\\Map::apply", "synopsis": "Updates all values by applying a callback function to each value in the map.", "usage": "public void Ds\\Map::apply ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-map.apply.php"}, {"name": "Ds\\Map::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Map::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-map.capacity.php"}, {"name": "Ds\\Map::clear", "synopsis": "Removes all values from the map.", "usage": "public void Ds\\Map::clear ( void )", "url": "https://secure.php.net/manual/en/ds-map.clear.php"}, {"name": "Ds\\Map::copy", "synopsis": "Returns a shallow copy of the map.", "usage": "public Ds\\Map Ds\\Map::copy ( void )", "url": "https://secure.php.net/manual/en/ds-map.copy.php"}, {"name": "Ds\\Map::diff", "synopsis": "Returns the result of removing all keys from the current instance that are present in a given map.", "usage": "public Ds\\Map Ds\\Map::diff ( Ds\\Map $map )", "url": "https://secure.php.net/manual/en/ds-map.diff.php"}, {"name": "Ds\\Map::filter", "synopsis": "Creates a new map using a callable to determine which pairs to include.", "usage": "public Ds\\Map Ds\\Map::filter ([ callable $callback ] )", "url": "https://secure.php.net/manual/en/ds-map.filter.php"}, {"name": "Ds\\Map::first", "synopsis": "Returns the first pair in the map.", "usage": "public Ds\\Pair Ds\\Map::first ( void )", "url": "https://secure.php.net/manual/en/ds-map.first.php"}, {"name": "Ds\\Map::get", "synopsis": "Returns the value for a given key, or an optional default value if the key could not be found.", "usage": "public mixed Ds\\Map::get ( mixed $key [, mixed $default ] )", "url": "https://secure.php.net/manual/en/ds-map.get.php"}, {"name": "Ds\\Map::hasKey", "synopsis": "Determines whether the map contains a given key.", "usage": "public bool Ds\\Map::hasKey ( mixed $key )", "url": "https://secure.php.net/manual/en/ds-map.haskey.php"}, {"name": "Ds\\Map::hasValue", "synopsis": "Determines whether the map contains a given value.", "usage": "public bool Ds\\Map::hasValue ( mixed $value )", "url": "https://secure.php.net/manual/en/ds-map.hasvalue.php"}, {"name": "Ds\\Map::intersect", "synopsis": "Creates a new map containing the pairs of the current instance whose keys are also present in the given map. In other words, returns a copy of the current instance with all keys removed that are not also in the other map.", "usage": "public Ds\\Map Ds\\Map::intersect ( Ds\\Map $map )", "url": "https://secure.php.net/manual/en/ds-map.intersect.php"}, {"name": "Ds\\Map::isEmpty", "synopsis": "Returns whether the map is empty.", "usage": "public bool Ds\\Map::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-map.isempty.php"}, {"name": "Ds\\Map::keys", "synopsis": "Returns a set containing all the keys of the map, in the same order.", "usage": "public Ds\\Set Ds\\Map::keys ( void )", "url": "https://secure.php.net/manual/en/ds-map.keys.php"}, {"name": "Ds\\Map::ksort", "synopsis": "Sorts the map in-place by key, using an optional comparator function.", "usage": "public void Ds\\Map::ksort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-map.ksort.php"}, {"name": "Ds\\Map::ksorted", "synopsis": "Returns a copy sorted by key, using an optional comparator function.", "usage": "public Ds\\Map Ds\\Map::ksorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-map.ksorted.php"}, {"name": "Ds\\Map::last", "synopsis": "Returns the last pair of the map.", "usage": "public Ds\\Pair Ds\\Map::last ( void )", "url": "https://secure.php.net/manual/en/ds-map.last.php"}, {"name": "Ds\\Map::map", "synopsis": "Returns the result of applying a callback function to each value of the map.", "usage": "public Ds\\Map Ds\\Map::map ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-map.map.php"}, {"name": "Ds\\Map::merge", "synopsis": "Returns the result of associating all keys of a given traversable object or array with their corresponding values, combined with the current instance.", "usage": "public Ds\\Map Ds\\Map::merge ( mixed $values )", "url": "https://secure.php.net/manual/en/ds-map.merge.php"}, {"name": "Ds\\Map::pairs", "synopsis": "Returns a Ds\\Sequence containing all the pairs of the map.", "usage": "public Ds\\Sequence Ds\\Map::pairs ( void )", "url": "https://secure.php.net/manual/en/ds-map.pairs.php"}, {"name": "Ds\\Map::put", "synopsis": "Associates a key with a value, overwriting a previous association if one exists.", "usage": "public void Ds\\Map::put ( mixed $key , mixed $value )", "url": "https://secure.php.net/manual/en/ds-map.put.php"}, {"name": "Ds\\Map::putAll", "synopsis": "Associates all key-value pairs of a traversable object or array.", "usage": "public void Ds\\Map::putAll ( mixed $pairs )", "url": "https://secure.php.net/manual/en/ds-map.putall.php"}, {"name": "Ds\\Map::reduce", "synopsis": "Reduces the map to a single value using a callback function.", "usage": "public mixed Ds\\Map::reduce ( callable $callback [, mixed $initial ] )", "url": "https://secure.php.net/manual/en/ds-map.reduce.php"}, {"name": "Ds\\Map::remove", "synopsis": "Removes and returns a value by key, or return an optional default value if the key could not be found.", "usage": "public mixed Ds\\Map::remove ( mixed $key [, mixed $default ] )", "url": "https://secure.php.net/manual/en/ds-map.remove.php"}, {"name": "Ds\\Map::reverse", "synopsis": "Reverses the map in-place.", "usage": "public void Ds\\Map::reverse ( void )", "url": "https://secure.php.net/manual/en/ds-map.reverse.php"}, {"name": "Ds\\Map::reversed", "synopsis": "Returns a reversed copy of the map.", "usage": "public Ds\\Map Ds\\Map::reversed ( void )", "url": "https://secure.php.net/manual/en/ds-map.reversed.php"}, {"name": "Ds\\Map::skip", "synopsis": "Returns the pair at a given zero-based position.", "usage": "public Ds\\Pair Ds\\Map::skip ( int $position )", "url": "https://secure.php.net/manual/en/ds-map.skip.php"}, {"name": "Ds\\Map::slice", "synopsis": "Returns a subset of the map defined by a starting index and length.", "usage": "public Ds\\Map Ds\\Map::slice ( int $index [, int $length ] )", "url": "https://secure.php.net/manual/en/ds-map.slice.php"}, {"name": "Ds\\Map::sort", "synopsis": "Sorts the map in-place by value, using an optional comparator function.", "usage": "public void Ds\\Map::sort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-map.sort.php"}, {"name": "Ds\\Map::sorted", "synopsis": "Returns a copy, sorted by value using an optional comparator function.", "usage": "public Ds\\Map Ds\\Map::sorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-map.sorted.php"}, {"name": "Ds\\Map::sum", "synopsis": "Returns the sum of all values in the map.", "usage": "public number Ds\\Map::sum ( void )", "url": "https://secure.php.net/manual/en/ds-map.sum.php"}, {"name": "Ds\\Map::toArray", "synopsis": "Converts the map to an array.", "usage": "public array Ds\\Map::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-map.toarray.php"}, {"name": "Ds\\Map::union", "synopsis": "Creates a new map that contains the pairs of the current instance as well as the pairs of another map.", "usage": "public Ds\\Map Ds\\Map::union ( Ds\\Map $map )", "url": "https://secure.php.net/manual/en/ds-map.union.php"}, {"name": "Ds\\Map::values", "synopsis": "Returns a sequence containing all the values of the map, in the same order.", "usage": "public Ds\\Sequence Ds\\Map::values ( void )", "url": "https://secure.php.net/manual/en/ds-map.values.php"}, {"name": "Ds\\Map::xor", "synopsis": "Creates a new map containing keys of the current instance as well as another map, but not of both.", "usage": "public Ds\\Map Ds\\Map::xor ( Ds\\Map $map )", "url": "https://secure.php.net/manual/en/ds-map.xor.php"}, {"name": "Ds\\Pair::clear", "synopsis": "Removes all values from the pair.", "usage": "public void Ds\\Pair::clear ( void )", "url": "https://secure.php.net/manual/en/ds-pair.clear.php"}, {"name": "Ds\\Pair::copy", "synopsis": "Returns a shallow copy of the pair.", "usage": "public Ds\\Pair Ds\\Pair::copy ( void )", "url": "https://secure.php.net/manual/en/ds-pair.copy.php"}, {"name": "Ds\\Pair::isEmpty", "synopsis": "Returns whether the pair is empty.", "usage": "public bool Ds\\Pair::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-pair.isempty.php"}, {"name": "Ds\\Pair::toArray", "synopsis": "Converts the pair to an array.", "usage": "public array Ds\\Pair::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-pair.toarray.php"}, {"name": "Ds\\PriorityQueue::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "public void Ds\\PriorityQueue::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.allocate.php"}, {"name": "Ds\\PriorityQueue::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\PriorityQueue::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.capacity.php"}, {"name": "Ds\\PriorityQueue::clear", "synopsis": "Removes all values from the queue.", "usage": "public void Ds\\PriorityQueue::clear ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.clear.php"}, {"name": "Ds\\PriorityQueue::copy", "synopsis": "Returns a shallow copy of the queue.", "usage": "public Ds\\PriorityQueue Ds\\PriorityQueue::copy ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.copy.php"}, {"name": "Ds\\PriorityQueue::isEmpty", "synopsis": "Returns whether the queue is empty.", "usage": "public bool Ds\\PriorityQueue::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.isempty.php"}, {"name": "Ds\\PriorityQueue::peek", "synopsis": "Returns the value at the front of the queue, but does not remove it.", "usage": "public mixed Ds\\PriorityQueue::peek ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.peek.php"}, {"name": "Ds\\PriorityQueue::pop", "synopsis": "Removes and returns the value at the front of the queue, ie. the value with the highest priority.", "usage": "public mixed Ds\\PriorityQueue::pop ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.pop.php"}, {"name": "Ds\\PriorityQueue::push", "synopsis": "Pushes a value with a given priority into the queue.", "usage": "public void Ds\\PriorityQueue::push ( mixed $value , int $priority )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.push.php"}, {"name": "Ds\\PriorityQueue::toArray", "synopsis": "Converts the queue to an array.", "usage": "public array Ds\\PriorityQueue::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-priorityqueue.toarray.php"}, {"name": "Ds\\Queue::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "public void Ds\\Queue::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-queue.allocate.php"}, {"name": "Ds\\Queue::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Queue::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-queue.capacity.php"}, {"name": "Ds\\Queue::clear", "synopsis": "Removes all values from the queue.", "usage": "public void Ds\\Queue::clear ( void )", "url": "https://secure.php.net/manual/en/ds-queue.clear.php"}, {"name": "Ds\\Queue::copy", "synopsis": "Returns a shallow copy of the queue.", "usage": "public Ds\\Queue Ds\\Queue::copy ( void )", "url": "https://secure.php.net/manual/en/ds-queue.copy.php"}, {"name": "Ds\\Queue::isEmpty", "synopsis": "Returns whether the queue is empty.", "usage": "public bool Ds\\Queue::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-queue.isempty.php"}, {"name": "Ds\\Queue::peek", "synopsis": "Returns the value at the front of the queue, but does not remove it.", "usage": "public mixed Ds\\Queue::peek ( void )", "url": "https://secure.php.net/manual/en/ds-queue.peek.php"}, {"name": "Ds\\Queue::pop", "synopsis": "Removes and returns the value at the front of the queue.", "usage": "public mixed Ds\\Queue::pop ( void )", "url": "https://secure.php.net/manual/en/ds-queue.pop.php"}, {"name": "Ds\\Queue::push", "synopsis": "Pushes values into the queue.", "usage": "public void Ds\\Queue::push ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-queue.push.php"}, {"name": "Ds\\Queue::toArray", "synopsis": "Converts the queue to an array.", "usage": "public array Ds\\Queue::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-queue.toarray.php"}, {"name": "Ds\\Sequence::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "abstract public void Ds\\Sequence::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-sequence.allocate.php"}, {"name": "Ds\\Sequence::apply", "synopsis": "Updates all values by applying a callback function to each value in the sequence.", "usage": "abstract public void Ds\\Sequence::apply ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-sequence.apply.php"}, {"name": "Ds\\Sequence::capacity", "synopsis": "Returns the current capacity.", "usage": "abstract public int Ds\\Sequence::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.capacity.php"}, {"name": "Ds\\Sequence::contains", "synopsis": "Determines if the sequence contains all values.", "usage": "abstract public bool Ds\\Sequence::contains ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-sequence.contains.php"}, {"name": "Ds\\Sequence::filter", "synopsis": "Creates a new sequence using a callable to determine which values to include.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::filter ([ callable $callback ] )", "url": "https://secure.php.net/manual/en/ds-sequence.filter.php"}, {"name": "Ds\\Sequence::find", "synopsis": "Returns the index of the value, or FALSE if not found.", "usage": "abstract public mixed Ds\\Sequence::find ( mixed $value )", "url": "https://secure.php.net/manual/en/ds-sequence.find.php"}, {"name": "Ds\\Sequence::first", "synopsis": "Returns the first value in the sequence.", "usage": "abstract public mixed Ds\\Sequence::first ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.first.php"}, {"name": "Ds\\Sequence::get", "synopsis": "Returns the value at a given index.", "usage": "abstract public mixed Ds\\Sequence::get ( int $index )", "url": "https://secure.php.net/manual/en/ds-sequence.get.php"}, {"name": "Ds\\Sequence::insert", "synopsis": "Inserts values into the sequence at a given index.", "usage": "abstract public void Ds\\Sequence::insert ( int $index [, mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-sequence.insert.php"}, {"name": "Ds\\Sequence::join", "synopsis": "Joins all values together as a string using an optional separator between each value.", "usage": "abstract public string Ds\\Sequence::join ([ string $glue ] )", "url": "https://secure.php.net/manual/en/ds-sequence.join.php"}, {"name": "Ds\\Sequence::last", "synopsis": "Returns the last value in the sequence.", "usage": "abstract public mixed Ds\\Sequence::last ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.last.php"}, {"name": "Ds\\Sequence::map", "synopsis": "Returns the result of applying a callback function to each value in the sequence.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::map ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-sequence.map.php"}, {"name": "Ds\\Sequence::merge", "synopsis": "Returns the result of adding all given values to the sequence.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::merge ( mixed $values )", "url": "https://secure.php.net/manual/en/ds-sequence.merge.php"}, {"name": "Ds\\Sequence::pop", "synopsis": "Removes and returns the last value.", "usage": "abstract public mixed Ds\\Sequence::pop ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.pop.php"}, {"name": "Ds\\Sequence::push", "synopsis": "Adds values to the end of the sequence.", "usage": "abstract public void Ds\\Sequence::push ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-sequence.push.php"}, {"name": "Ds\\Sequence::reduce", "synopsis": "Reduces the sequence to a single value using a callback function.", "usage": "abstract public mixed Ds\\Sequence::reduce ( callable $callback [, mixed $initial ] )", "url": "https://secure.php.net/manual/en/ds-sequence.reduce.php"}, {"name": "Ds\\Sequence::remove", "synopsis": "Removes and returns a value by index.", "usage": "abstract public mixed Ds\\Sequence::remove ( int $index )", "url": "https://secure.php.net/manual/en/ds-sequence.remove.php"}, {"name": "Ds\\Sequence::reverse", "synopsis": "Reverses the sequence in-place.", "usage": "abstract public void Ds\\Sequence::reverse ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.reverse.php"}, {"name": "Ds\\Sequence::reversed", "synopsis": "Returns a reversed copy of the sequence.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::reversed ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.reversed.php"}, {"name": "Ds\\Sequence::rotate", "synopsis": "Rotates the sequence by a given number of rotations, which is equivalent to successively calling $sequence->push($sequence->shift()) if the number of rotations is positive, or $sequence->unshift($sequence->pop()) if negative.", "usage": "abstract public void Ds\\Sequence::rotate ( int $rotations )", "url": "https://secure.php.net/manual/en/ds-sequence.rotate.php"}, {"name": "Ds\\Sequence::set", "synopsis": "Updates a value at a given index.", "usage": "abstract public void Ds\\Sequence::set ( int $index , mixed $value )", "url": "https://secure.php.net/manual/en/ds-sequence.set.php"}, {"name": "Ds\\Sequence::shift", "synopsis": "Removes and returns the first value.", "usage": "abstract public mixed Ds\\Sequence::shift ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.shift.php"}, {"name": "Ds\\Sequence::slice", "synopsis": "Creates a sub-sequence of a given range.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::slice ( int $index [, int $length ] )", "url": "https://secure.php.net/manual/en/ds-sequence.slice.php"}, {"name": "Ds\\Sequence::sort", "synopsis": "Sorts the sequence in-place, using an optional comparator function.", "usage": "abstract public void Ds\\Sequence::sort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-sequence.sort.php"}, {"name": "Ds\\Sequence::sorted", "synopsis": "Returns a sorted copy, using an optional comparator function.", "usage": "abstract public Ds\\Sequence Ds\\Sequence::sorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-sequence.sorted.php"}, {"name": "Ds\\Sequence::sum", "synopsis": "Returns the sum of all values in the sequence.", "usage": "abstract public number Ds\\Sequence::sum ( void )", "url": "https://secure.php.net/manual/en/ds-sequence.sum.php"}, {"name": "Ds\\Sequence::unshift", "synopsis": "Adds values to the front of the sequence, moving all the current values forward to make room for the new values.", "usage": "abstract public void Ds\\Sequence::unshift ([ mixed $values ] )", "url": "https://secure.php.net/manual/en/ds-sequence.unshift.php"}, {"name": "Ds\\Set::add", "synopsis": "Adds all given values to the set that haven't already been added.", "usage": "public void Ds\\Set::add ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-set.add.php"}, {"name": "Ds\\Set::allocate", "synopsis": "Allocates enough memory for a required capacity.", "usage": "public void Ds\\Set::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-set.allocate.php"}, {"name": "Ds\\Set::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Set::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-set.capacity.php"}, {"name": "Ds\\Set::clear", "synopsis": "Removes all values from the set.", "usage": "public void Ds\\Set::clear ( void )", "url": "https://secure.php.net/manual/en/ds-set.clear.php"}, {"name": "Ds\\Set::contains", "synopsis": "Determines if the set contains all values.", "usage": "public bool Ds\\Set::contains ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-set.contains.php"}, {"name": "Ds\\Set::copy", "synopsis": "Returns a shallow copy of the set.", "usage": "public Ds\\Set Ds\\Set::copy ( void )", "url": "https://secure.php.net/manual/en/ds-set.copy.php"}, {"name": "Ds\\Set::diff", "synopsis": "Creates a new set using values that aren't in another set.", "usage": "public Ds\\Set Ds\\Set::diff ( Ds\\Set $set )", "url": "https://secure.php.net/manual/en/ds-set.diff.php"}, {"name": "Ds\\Set::filter", "synopsis": "Creates a new set using a callable to determine which values to include.", "usage": "public Ds\\Set Ds\\Set::filter ([ callable $callback ] )", "url": "https://secure.php.net/manual/en/ds-set.filter.php"}, {"name": "Ds\\Set::first", "synopsis": "Returns the first value in the set.", "usage": "public void Ds\\Set::first ( void )", "url": "https://secure.php.net/manual/en/ds-set.first.php"}, {"name": "Ds\\Set::get", "synopsis": "Returns the value at a given index.", "usage": "public mixed Ds\\Set::get ( int $index )", "url": "https://secure.php.net/manual/en/ds-set.get.php"}, {"name": "Ds\\Set::intersect", "synopsis": "Creates a new set using values common to both the current instance and another set. In other words, returns a copy of the current instance with all values removed that are not in the other set.", "usage": "public Ds\\Set Ds\\Set::intersect ( Ds\\Set $set )", "url": "https://secure.php.net/manual/en/ds-set.intersect.php"}, {"name": "Ds\\Set::isEmpty", "synopsis": "Returns whether the set is empty.", "usage": "public bool Ds\\Set::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-set.isempty.php"}, {"name": "Ds\\Set::join", "synopsis": "Joins all values together as a string using an optional separator between each value.", "usage": "public string Ds\\Set::join ([ string $glue ] )", "url": "https://secure.php.net/manual/en/ds-set.join.php"}, {"name": "Ds\\Set::last", "synopsis": "Returns the last value in the set.", "usage": "public void Ds\\Set::last ( void )", "url": "https://secure.php.net/manual/en/ds-set.last.php"}, {"name": "Ds\\Set::merge", "synopsis": "Returns the result of adding all given values to the set.", "usage": "public Ds\\Set Ds\\Set::merge ( mixed $values )", "url": "https://secure.php.net/manual/en/ds-set.merge.php"}, {"name": "Ds\\Set::reduce", "synopsis": "Reduces the set to a single value using a callback function.", "usage": "public mixed Ds\\Set::reduce ( callable $callback [, mixed $initial ] )", "url": "https://secure.php.net/manual/en/ds-set.reduce.php"}, {"name": "Ds\\Set::remove", "synopsis": "Removes all given values from the set, ignoring any that are not in the set.", "usage": "public void Ds\\Set::remove ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-set.remove.php"}, {"name": "Ds\\Set::reverse", "synopsis": "Reverses the set in-place.", "usage": "public void Ds\\Set::reverse ( void )", "url": "https://secure.php.net/manual/en/ds-set.reverse.php"}, {"name": "Ds\\Set::reversed", "synopsis": "Returns a reversed copy of the set.", "usage": "public Ds\\Set Ds\\Set::reversed ( void )", "url": "https://secure.php.net/manual/en/ds-set.reversed.php"}, {"name": "Ds\\Set::slice", "synopsis": "Creates a sub-set of a given range.", "usage": "public Ds\\Set Ds\\Set::slice ( int $index [, int $length ] )", "url": "https://secure.php.net/manual/en/ds-set.slice.php"}, {"name": "Ds\\Set::sort", "synopsis": "Sorts the set in-place, using an optional comparator function.", "usage": "public void Ds\\Set::sort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-set.sort.php"}, {"name": "Ds\\Set::sorted", "synopsis": "Returns a sorted copy, using an optional comparator function.", "usage": "public Ds\\Set Ds\\Set::sorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-set.sorted.php"}, {"name": "Ds\\Set::sum", "synopsis": "Returns the sum of all values in the set.", "usage": "public number Ds\\Set::sum ( void )", "url": "https://secure.php.net/manual/en/ds-set.sum.php"}, {"name": "Ds\\Set::toArray", "synopsis": "Converts the set to an array.", "usage": "public array Ds\\Set::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-set.toarray.php"}, {"name": "Ds\\Set::union", "synopsis": "Creates a new set that contains the values of the current instance as well as the values of another set.", "usage": "public Ds\\Set Ds\\Set::union ( Ds\\Set $set )", "url": "https://secure.php.net/manual/en/ds-set.union.php"}, {"name": "Ds\\Set::xor", "synopsis": "Creates a new set containing values in the current instance as well as another set, but not in both.", "usage": "public Ds\\Set Ds\\Set::xor ( Ds\\Set $set )", "url": "https://secure.php.net/manual/en/ds-set.xor.php"}, {"name": "Ds\\Stack::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "public void Ds\\Stack::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-stack.allocate.php"}, {"name": "Ds\\Stack::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Stack::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-stack.capacity.php"}, {"name": "Ds\\Stack::clear", "synopsis": "Removes all values from the stack.", "usage": "public void Ds\\Stack::clear ( void )", "url": "https://secure.php.net/manual/en/ds-stack.clear.php"}, {"name": "Ds\\Stack::copy", "synopsis": "Returns a shallow copy of the stack.", "usage": "public Ds\\Stack Ds\\Stack::copy ( void )", "url": "https://secure.php.net/manual/en/ds-stack.copy.php"}, {"name": "Ds\\Stack::isEmpty", "synopsis": "Returns whether the stack is empty.", "usage": "public bool Ds\\Stack::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-stack.isempty.php"}, {"name": "Ds\\Stack::peek", "synopsis": "Returns the value at the top of the stack, but does not remove it.", "usage": "public mixed Ds\\Stack::peek ( void )", "url": "https://secure.php.net/manual/en/ds-stack.peek.php"}, {"name": "Ds\\Stack::pop", "synopsis": "Removes and returns the value at the top of the stack.", "usage": "public mixed Ds\\Stack::pop ( void )", "url": "https://secure.php.net/manual/en/ds-stack.pop.php"}, {"name": "Ds\\Stack::push", "synopsis": "Pushes values onto the stack.", "usage": "public void Ds\\Stack::push ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-stack.push.php"}, {"name": "Ds\\Stack::toArray", "synopsis": "Converts the stack to an array.", "usage": "public array Ds\\Stack::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-stack.toarray.php"}, {"name": "Ds\\Vector::allocate", "synopsis": "Ensures that enough memory is allocated for a required capacity. This removes the need to reallocate the internal as values are added.", "usage": "public void Ds\\Vector::allocate ( int $capacity )", "url": "https://secure.php.net/manual/en/ds-vector.allocate.php"}, {"name": "Ds\\Vector::apply", "synopsis": "Updates all values by applying a callback function to each value in the vector.", "usage": "public void Ds\\Vector::apply ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-vector.apply.php"}, {"name": "Ds\\Vector::capacity", "synopsis": "Returns the current capacity.", "usage": "public int Ds\\Vector::capacity ( void )", "url": "https://secure.php.net/manual/en/ds-vector.capacity.php"}, {"name": "Ds\\Vector::clear", "synopsis": "Removes all values from the vector.", "usage": "public void Ds\\Vector::clear ( void )", "url": "https://secure.php.net/manual/en/ds-vector.clear.php"}, {"name": "Ds\\Vector::contains", "synopsis": "Determines if the vector contains all values.", "usage": "public bool Ds\\Vector::contains ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-vector.contains.php"}, {"name": "Ds\\Vector::copy", "synopsis": "Returns a shallow copy of the vector.", "usage": "public Ds\\Vector Ds\\Vector::copy ( void )", "url": "https://secure.php.net/manual/en/ds-vector.copy.php"}, {"name": "Ds\\Vector::filter", "synopsis": "Creates a new vector using a callable to determine which values to include.", "usage": "public Ds\\Vector Ds\\Vector::filter ([ callable $callback ] )", "url": "https://secure.php.net/manual/en/ds-vector.filter.php"}, {"name": "Ds\\Vector::find", "synopsis": "Returns the index of the value, or FALSE if not found.", "usage": "public mixed Ds\\Vector::find ( mixed $value )", "url": "https://secure.php.net/manual/en/ds-vector.find.php"}, {"name": "Ds\\Vector::first", "synopsis": "Returns the first value in the vector.", "usage": "public mixed Ds\\Vector::first ( void )", "url": "https://secure.php.net/manual/en/ds-vector.first.php"}, {"name": "Ds\\Vector::get", "synopsis": "Returns the value at a given index.", "usage": "public mixed Ds\\Vector::get ( int $index )", "url": "https://secure.php.net/manual/en/ds-vector.get.php"}, {"name": "Ds\\Vector::insert", "synopsis": "Inserts values into the vector at a given index.", "usage": "public void Ds\\Vector::insert ( int $index [, mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-vector.insert.php"}, {"name": "Ds\\Vector::isEmpty", "synopsis": "Returns whether the vector is empty.", "usage": "public bool Ds\\Vector::isEmpty ( void )", "url": "https://secure.php.net/manual/en/ds-vector.isempty.php"}, {"name": "Ds\\Vector::join", "synopsis": "Joins all values together as a string using an optional separator between each value.", "usage": "public string Ds\\Vector::join ([ string $glue ] )", "url": "https://secure.php.net/manual/en/ds-vector.join.php"}, {"name": "Ds\\Vector::last", "synopsis": "Returns the last value in the vector.", "usage": "public mixed Ds\\Vector::last ( void )", "url": "https://secure.php.net/manual/en/ds-vector.last.php"}, {"name": "Ds\\Vector::map", "synopsis": "Returns the result of applying a callback function to each value in the vector.", "usage": "public Ds\\Vector Ds\\Vector::map ( callable $callback )", "url": "https://secure.php.net/manual/en/ds-vector.map.php"}, {"name": "Ds\\Vector::merge", "synopsis": "Returns the result of adding all given values to the vector.", "usage": "public Ds\\Vector Ds\\Vector::merge ( mixed $values )", "url": "https://secure.php.net/manual/en/ds-vector.merge.php"}, {"name": "Ds\\Vector::pop", "synopsis": "Removes and returns the last value.", "usage": "public mixed Ds\\Vector::pop ( void )", "url": "https://secure.php.net/manual/en/ds-vector.pop.php"}, {"name": "Ds\\Vector::push", "synopsis": "Adds values to the end of the vector.", "usage": "public void Ds\\Vector::push ([ mixed $...values ] )", "url": "https://secure.php.net/manual/en/ds-vector.push.php"}, {"name": "Ds\\Vector::reduce", "synopsis": "Reduces the vector to a single value using a callback function.", "usage": "public mixed Ds\\Vector::reduce ( callable $callback [, mixed $initial ] )", "url": "https://secure.php.net/manual/en/ds-vector.reduce.php"}, {"name": "Ds\\Vector::remove", "synopsis": "Removes and returns a value by index.", "usage": "public mixed Ds\\Vector::remove ( int $index )", "url": "https://secure.php.net/manual/en/ds-vector.remove.php"}, {"name": "Ds\\Vector::reverse", "synopsis": "Reverses the vector in-place.", "usage": "public void Ds\\Vector::reverse ( void )", "url": "https://secure.php.net/manual/en/ds-vector.reverse.php"}, {"name": "Ds\\Vector::reversed", "synopsis": "Returns a reversed copy of the vector.", "usage": "public Ds\\Vector Ds\\Vector::reversed ( void )", "url": "https://secure.php.net/manual/en/ds-vector.reversed.php"}, {"name": "Ds\\Vector::rotate", "synopsis": "Rotates the vector by a given number of rotations, which is equivalent to successively calling $vector->push($vector->shift()) if the number of rotations is positive, or $vector->unshift($vector->pop()) if negative.", "usage": "public void Ds\\Vector::rotate ( int $rotations )", "url": "https://secure.php.net/manual/en/ds-vector.rotate.php"}, {"name": "Ds\\Vector::set", "synopsis": "Updates a value at a given index.", "usage": "public void Ds\\Vector::set ( int $index , mixed $value )", "url": "https://secure.php.net/manual/en/ds-vector.set.php"}, {"name": "Ds\\Vector::shift", "synopsis": "Removes and returns the first value.", "usage": "public mixed Ds\\Vector::shift ( void )", "url": "https://secure.php.net/manual/en/ds-vector.shift.php"}, {"name": "Ds\\Vector::slice", "synopsis": "Creates a sub-vector of a given range.", "usage": "public Ds\\Vector Ds\\Vector::slice ( int $index [, int $length ] )", "url": "https://secure.php.net/manual/en/ds-vector.slice.php"}, {"name": "Ds\\Vector::sort", "synopsis": "Sorts the vector in-place, using an optional comparator function.", "usage": "public void Ds\\Vector::sort ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-vector.sort.php"}, {"name": "Ds\\Vector::sorted", "synopsis": "Returns a sorted copy, using an optional comparator function.", "usage": "public Ds\\Vector Ds\\Vector::sorted ([ callable $comparator ] )", "url": "https://secure.php.net/manual/en/ds-vector.sorted.php"}, {"name": "Ds\\Vector::sum", "synopsis": "Returns the sum of all values in the vector.", "usage": "public number Ds\\Vector::sum ( void )", "url": "https://secure.php.net/manual/en/ds-vector.sum.php"}, {"name": "Ds\\Vector::toArray", "synopsis": "Converts the vector to an array.", "usage": "public array Ds\\Vector::toArray ( void )", "url": "https://secure.php.net/manual/en/ds-vector.toarray.php"}, {"name": "Ds\\Vector::unshift", "synopsis": "Adds values to the front of the vector, moving all the current values forward to make room for the new values.", "usage": "public void Ds\\Vector::unshift ([ mixed $values ] )", "url": "https://secure.php.net/manual/en/ds-vector.unshift.php"}, {"name": "EmptyIterator::current", "synopsis": "This function must not be called. It throws an exception upon access.", "usage": "public mixed EmptyIterator::current ( void )", "url": "https://secure.php.net/manual/en/emptyiterator.current.php"}, {"name": "EmptyIterator::key", "synopsis": "This function must not be called. It throws an exception upon access.", "usage": "public scalar EmptyIterator::key ( void )", "url": "https://secure.php.net/manual/en/emptyiterator.key.php"}, {"name": "EmptyIterator::next", "synopsis": "No operation, nothing to do.", "usage": "public void EmptyIterator::next ( void )", "url": "https://secure.php.net/manual/en/emptyiterator.next.php"}, {"name": "EmptyIterator::rewind", "synopsis": "No operation, nothing to do.", "usage": "public void EmptyIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/emptyiterator.rewind.php"}, {"name": "EmptyIterator::valid", "synopsis": "The EmptyIterator valid() method.", "usage": "public bool EmptyIterator::valid ( void )", "url": "https://secure.php.net/manual/en/emptyiterator.valid.php"}, {"name": "Error::__clone", "synopsis": "Error can not be clone, so this method results in fatal error.", "usage": "final private void Error::__clone ( void )", "url": "https://secure.php.net/manual/en/error.clone.php"}, {"name": "Error::getCode", "synopsis": "Returns the error code.", "usage": "final public mixed Error::getCode ( void )", "url": "https://secure.php.net/manual/en/error.getcode.php"}, {"name": "Error::getFile", "synopsis": "Get the name of the file the error occurred.", "usage": "final public string Error::getFile ( void )", "url": "https://secure.php.net/manual/en/error.getfile.php"}, {"name": "Error::getLine", "synopsis": "Get line number where the error occurred.", "usage": "final public int Error::getLine ( void )", "url": "https://secure.php.net/manual/en/error.getline.php"}, {"name": "Error::getMessage", "synopsis": "Returns the error message.", "usage": "final public string Error::getMessage ( void )", "url": "https://secure.php.net/manual/en/error.getmessage.php"}, {"name": "Error::getPrevious", "synopsis": "Returns previous Throwable (the third parameter of Error::__construct()).", "usage": "final public Throwable Error::getPrevious ( void )", "url": "https://secure.php.net/manual/en/error.getprevious.php"}, {"name": "Error::getTrace", "synopsis": "Returns the stack trace.", "usage": "final public array Error::getTrace ( void )", "url": "https://secure.php.net/manual/en/error.gettrace.php"}, {"name": "Error::getTraceAsString", "synopsis": "Returns the stack trace as a string.", "usage": "final public string Error::getTraceAsString ( void )", "url": "https://secure.php.net/manual/en/error.gettraceasstring.php"}, {"name": "Error::__toString", "synopsis": "Returns the string representation of the error.", "usage": "public string Error::__toString ( void )", "url": "https://secure.php.net/manual/en/error.tostring.php"}, {"name": "ErrorException::getSeverity", "synopsis": "Returns the severity of the exception.", "usage": "final public int ErrorException::getSeverity ( void )", "url": "https://secure.php.net/manual/en/errorexception.getseverity.php"}, {"name": "Ev::backend", "synopsis": "Returns an integer describing the backend used by libev . See Backend flags", "usage": "final public static int Ev::backend ( void )", "url": "https://secure.php.net/manual/en/ev.backend.php"}, {"name": "Ev::depth", "synopsis": "The number of times Ev::run() was entered minus the number of times Ev::run() was exited normally, in other words, the recursion depth. Outside Ev::run() , this number is 0 . In a callback, this number is 1 , unless Ev::run() was invoked recursively (or from another thread), in which case it is higher.", "usage": "final public static int Ev::depth ( void )", "url": "https://secure.php.net/manual/en/ev.depth.php"}, {"name": "Ev::embeddableBackends", "synopsis": "Returns the set of backends that are embeddable in other event loops.", "usage": "final public static void Ev::embeddableBackends ( void )", "url": "https://secure.php.net/manual/en/ev.embeddablebackends.php"}, {"name": "Ev::feedSignal", "synopsis": "Simulates a signal receive. It is safe to call this function at any time, from any context, including signal handlers or random threads. Its main use is to customise signal handling in the process.", "usage": "final public static void Ev::feedSignal ( int $signum )", "url": "https://secure.php.net/manual/en/ev.feedsignal.php"}, {"name": "Ev::feedSignalEvent", "synopsis": "Feed signal event into the default loop. Ev will react to this call as if the signal specified by signal had occurred.", "usage": "final public static void Ev::feedSignalEvent ( int $signum )", "url": "https://secure.php.net/manual/en/ev.feedsignalevent.php"}, {"name": "Ev::iteration", "synopsis": "Return the number of times the event loop has polled for new events. Sometimes useful as a generation counter.", "usage": "final public static int Ev::iteration ( void )", "url": "https://secure.php.net/manual/en/ev.iteration.php"}, {"name": "Ev::now", "synopsis": "Returns the time when the last iteration of the default event loop has started. This is the time that timers( EvTimer and EvPeriodic ) are based on, and referring to it is usually faster then calling Ev::time() .", "usage": "final public static float Ev::now ( void )", "url": "https://secure.php.net/manual/en/ev.now.php"}, {"name": "Ev::nowUpdate", "synopsis": "Establishes the current time by querying the kernel, updating the time returned by Ev::now() in the progress. This is a costly operation and is usually done automatically within Ev::run() .", "usage": "final public static void Ev::nowUpdate ( void )", "url": "https://secure.php.net/manual/en/ev.nowupdate.php"}, {"name": "Ev::recommendedBackends", "synopsis": "Returns the set of all backends compiled into this binary of libev and also recommended for this platform, meaning it will work for most file descriptor types. This set is often smaller than the one returned by ev_supported_backends() , as for example kqueue is broken on most BSD systems and will not be auto-detected unless it is requested explicitly. This is the set of backends that libev will probe no backends specified explicitly.", "usage": "final public static void Ev::recommendedBackends ( void )", "url": "https://secure.php.net/manual/en/ev.recommendedbackends.php"}, {"name": "Ev::resume", "synopsis": "Ev::suspend() and Ev::resume() methods suspend and resume a loop correspondingly.", "usage": "final public static void Ev::resume ( void )", "url": "https://secure.php.net/manual/en/ev.resume.php"}, {"name": "Ev::run", "synopsis": "Begin checking for events and calling callbacks for the default loop . Returns when a callback calls Ev::stop() method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( EvWatcher::keepalive() is TRUE), in which case the return value will be FALSE. The return value can generally be interpreted as if TRUE, there is more work left to do .", "usage": "final public static void Ev::run ([ int $flags ] )", "url": "https://secure.php.net/manual/en/ev.run.php"}, {"name": "Ev::sleep", "synopsis": "Block the process for the given number of seconds.", "usage": "final public static void Ev::sleep ( float $seconds )", "url": "https://secure.php.net/manual/en/ev.sleep.php"}, {"name": "Ev::stop", "synopsis": "Stops the default event loop", "usage": "final public static void Ev::stop ([ int $how ] )", "url": "https://secure.php.net/manual/en/ev.stop.php"}, {"name": "Ev::supportedBackends", "synopsis": "Returns the set of backends supported by current libev configuration.", "usage": "final public static void Ev::supportedBackends ( void )", "url": "https://secure.php.net/manual/en/ev.supportedbackends.php"}, {"name": "Ev::suspend", "synopsis": "Ev::suspend() and Ev::resume() methods suspend and resume the default loop correspondingly.", "usage": "final public static void Ev::suspend ( void )", "url": "https://secure.php.net/manual/en/ev.suspend.php"}, {"name": "Ev::time", "synopsis": "Returns the current time in fractional seconds since the epoch. Consider using Ev::now()", "usage": "final public static float Ev::time ( void )", "url": "https://secure.php.net/manual/en/ev.time.php"}, {"name": "Ev::verify", "synopsis": "Performs internal consistency checks(for debugging libev ) and abort the program if any data structures were found to be corrupted.", "usage": "final public static void Ev::verify ( void )", "url": "https://secure.php.net/manual/en/ev.verify.php"}, {"name": "EvCheck::__construct()", "synopsis": null, "usage": "void callback ([ object $watcher = NULL [, int $revents = NULL ]] )", "url": "https://secure.php.net/manual/en/ev.watcher-callbacks.php"}, {"name": "EvCheck::__construct", "synopsis": "Constructs the EvCheck watcher object.", "usage": "public EvCheck::__construct ( callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/evcheck.construct.php"}, {"name": "EvCheck::createStopped", "synopsis": "Create instance of a stopped EvCheck watcher", "usage": "final public static object EvCheck::createStopped ( string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/evcheck.createstopped.php"}, {"name": "EvChild::__construct", "synopsis": "Constructs the EvChild watcher object.", "usage": "public EvChild::__construct ( int $pid , bool $trace , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evchild.construct.php"}, {"name": "EvChild::createStopped", "synopsis": "The same as EvChild::__construct() , but doesn't start the watcher automatically.", "usage": "final public static object EvChild::createStopped ( int $pid , bool $trace , callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/evchild.createstopped.php"}, {"name": "EvChild::set", "synopsis": "", "usage": "public void EvChild::set ( int $pid , bool $trace )", "url": "https://secure.php.net/manual/en/evchild.set.php"}, {"name": "EvEmbed::__construct", "synopsis": "This is a rather advanced watcher type that lets to embed one event loop into another(currently only IO events are supported in the embedded loop, other types of watchers might be handled in a delayed or incorrect fashion and must not be used).", "usage": "public EvEmbed::__construct ( object $other [, callable $callback [, mixed $data [, int $priority ]]] )", "url": "https://secure.php.net/manual/en/evembed.construct.php"}, {"name": "EvEmbed::createStopped", "synopsis": "The same as EvEmbed::__construct() , but doesn't start the watcher automatically.", "usage": "final public static void EvEmbed::createStopped ( object $other [, callable $callback [, mixed $data [, int $priority ]]] )", "url": "https://secure.php.net/manual/en/evembed.createstopped.php"}, {"name": "EvEmbed::set", "synopsis": "Configures the watcher to use other event loop object.", "usage": "public void EvEmbed::set ( object $other )", "url": "https://secure.php.net/manual/en/evembed.set.php"}, {"name": "EvEmbed::sweep", "synopsis": "Make a single, non-blocking sweep over the embedded loop. Works similarly to the following, but in the most appropriate way for embedded loops:", "usage": "public void EvEmbed::sweep ( void )", "url": "https://secure.php.net/manual/en/evembed.sweep.php"}, {"name": "Event::add", "synopsis": "Marks event pending. Non-pending event will never occur, and the event callback will never be called. In conjuction with Event::del() an event could be re-scheduled by user at any time.", "usage": "public bool Event::add ([ float $timeout ] )", "url": "https://secure.php.net/manual/en/event.add.php"}, {"name": "Event::addSignal", "synopsis": "Event::addSignal() is an alias of Event::add()", "usage": "public bool Event::addSignal ([ float $timeout ] )", "url": "https://secure.php.net/manual/en/event.addsignal.php"}, {"name": "Event::addTimer", "synopsis": "Event::addTimer() is an alias of Event::add()", "usage": "public bool Event::addTimer ([ float $timeout ] )", "url": "https://secure.php.net/manual/en/event.addtimer.php"}, {"name": "Event::__construct()", "synopsis": null, "usage": "void callback ([ mixed $fd = NULL [, int $what [, mixed $arg = NULL ]]] )", "url": "https://secure.php.net/manual/en/event.callbacks.php"}, {"name": "Event::__construct", "synopsis": "Constructs Event object.", "usage": "public Event::__construct ( EventBase $base , mixed $fd , int $what , callable $cb [, mixed $arg = NULL ] )", "url": "https://secure.php.net/manual/en/event.construct.php"}, {"name": "Event::del", "synopsis": "Removes an event from the set of monitored events, i.e. makes it non-pending.", "usage": "public bool Event::del ( void )", "url": "https://secure.php.net/manual/en/event.del.php"}, {"name": "Event::delSignal", "synopsis": "Event::delSignal() is an alias of Event::del()", "usage": "public bool Event::delSignal ( void )", "url": "https://secure.php.net/manual/en/event.delsignal.php"}, {"name": "Event::delTimer", "synopsis": "Event::delTimer() is an alias of Event::del() .", "usage": "public bool Event::delTimer ( void )", "url": "https://secure.php.net/manual/en/event.deltimer.php"}, {"name": "Event::free", "synopsis": "Removes event from the list of events monitored by libevent, and free resources allocated for the event.", "usage": "public void Event::free ( void )", "url": "https://secure.php.net/manual/en/event.free.php"}, {"name": "Event::getSupportedMethods", "synopsis": "Returns array with of the names of the methods(backends) supported in this version of Libevent.", "usage": "public static array Event::getSupportedMethods ( void )", "url": "https://secure.php.net/manual/en/event.getsupportedmethods.php"}, {"name": "Event::pending", "synopsis": "Detects whether event is pending or scheduled", "usage": "public bool Event::pending ( int $flags )", "url": "https://secure.php.net/manual/en/event.pending.php"}, {"name": "Event::set", "synopsis": "Re-configures event. Note, this function doesn't invoke obsolete libevent's event_set. It calls event_assign instead.", "usage": "public bool Event::set ( EventBase $base , mixed $fd [, int $what [, callable $cb [, mixed $arg ]]] )", "url": "https://secure.php.net/manual/en/event.set.php"}, {"name": "Event::setPriority", "synopsis": "Set event priority.", "usage": "public bool Event::setPriority ( int $priority )", "url": "https://secure.php.net/manual/en/event.setpriority.php"}, {"name": "Event::setTimer", "synopsis": "Re-configures timer event. Note, this function doesn't invoke obsolete libevent's event_set . It calls event_assign instead.", "usage": "public bool Event::setTimer ( EventBase $base , callable $cb [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/event.settimer.php"}, {"name": "Event::signal", "synopsis": "Constructs signal event object. This is a straightforward method to create a signal event. Note, the generic Event::__construct() method can contruct signal event objects too.", "usage": "public static Event Event::signal ( EventBase $base , int $signum , callable $cb [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/event.signal.php"}, {"name": "Event::timer", "synopsis": "Constructs timer event object. This is a straightforward method to create a timer event. Note, the generic Event::__construct() method can contruct signal event objects too.", "usage": "public static Event Event::timer ( EventBase $base , callable $cb [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/event.timer.php"}, {"name": "EventBase::__construct", "synopsis": "Constructs EventBase object", "usage": "public EventBase::__construct ([ EventConfig $cfg ] )", "url": "https://secure.php.net/manual/en/eventbase.construct.php"}, {"name": "EventBase::dispatch", "synopsis": "Wait for events to become active, and run their callbacks. The same as EventBase::loop() with no flags set.", "usage": "public void EventBase::dispatch ( void )", "url": "https://secure.php.net/manual/en/eventbase.dispatch.php"}, {"name": "EventBase::exit", "synopsis": "Tells event base to stop optionally after given number of seconds.", "usage": "public bool EventBase::exit ([ float $timeout ] )", "url": "https://secure.php.net/manual/en/eventbase.exit.php"}, {"name": "EventBase::free", "synopsis": "Deallocates resources allocated by libevent for the EventBase object.", "usage": "public void EventBase::free ( void )", "url": "https://secure.php.net/manual/en/eventbase.free.php"}, {"name": "EventBase::getFeatures", "synopsis": "Returns bitmask of features supported.", "usage": "public int EventBase::getFeatures ( void )", "url": "https://secure.php.net/manual/en/eventbase.getfeatures.php"}, {"name": "EventBase::getMethod", "synopsis": "", "usage": "public string EventBase::getMethod ( void )", "url": "https://secure.php.net/manual/en/eventbase.getmethod.php"}, {"name": "EventBase::getTimeOfDayCached", "synopsis": "On success returns the current time(as returned by gettimeofday() ), looking at the cached value in base if possible, and calling gettimeofday() or clock_gettime() as appropriate if there is no cached time.", "usage": "public float EventBase::getTimeOfDayCached ( void )", "url": "https://secure.php.net/manual/en/eventbase.gettimeofdaycached.php"}, {"name": "EventBase::gotExit", "synopsis": "Checks if the event loop was told to exit by EventBase::exit() .", "usage": "public bool EventBase::gotExit ( void )", "url": "https://secure.php.net/manual/en/eventbase.gotexit.php"}, {"name": "EventBase::gotStop", "synopsis": "Checks if the event loop was told to exit by EventBase::stop() .", "usage": "public bool EventBase::gotStop ( void )", "url": "https://secure.php.net/manual/en/eventbase.gotstop.php"}, {"name": "EventBase::loop", "synopsis": "Wait for events to become active, and run their callbacks.", "usage": "public bool EventBase::loop ([ int $flags ] )", "url": "https://secure.php.net/manual/en/eventbase.loop.php"}, {"name": "EventBase::priorityInit", "synopsis": "Sets number of priorities per event base.", "usage": "public bool EventBase::priorityInit ( int $n_priorities )", "url": "https://secure.php.net/manual/en/eventbase.priorityinit.php"}, {"name": "EventBase::reInit", "synopsis": "Re-initialize event base. Should be called after a fork.", "usage": "public bool EventBase::reInit ( void )", "url": "https://secure.php.net/manual/en/eventbase.reinit.php"}, {"name": "EventBase::stop", "synopsis": "Tells event_base to stop dispatching events", "usage": "public bool EventBase::stop ( void )", "url": "https://secure.php.net/manual/en/eventbase.stop.php"}, {"name": "EventBuffer::add", "synopsis": "Append data to the end of an event buffer.", "usage": "public bool EventBuffer::add ( string $data )", "url": "https://secure.php.net/manual/en/eventbuffer.add.php"}, {"name": "EventBuffer::addBuffer", "synopsis": "Move all data from the buffer provided in buf parameter to the end of current EventBuffer . This is a destructive add. The data from one buffer moves into the other buffer. However, no unnecessary memory copies occur.", "usage": "public bool EventBuffer::addBuffer ( EventBuffer $buf )", "url": "https://secure.php.net/manual/en/eventbuffer.addbuffer.php"}, {"name": "EventBuffer::appendFrom", "synopsis": "Moves the specified number of bytes from a source buffer to the end of the current buffer. If there are fewer number of bytes, it moves all the bytes available from the source buffer.", "usage": "public int EventBuffer::appendFrom ( EventBuffer $buf , int $len )", "url": "https://secure.php.net/manual/en/eventbuffer.appendfrom.php"}, {"name": "EventBuffer::__construct", "synopsis": "Constructs EventBuffer object", "usage": "public EventBuffer::__construct ( void )", "url": "https://secure.php.net/manual/en/eventbuffer.construct.php"}, {"name": "EventBuffer::copyout", "synopsis": "Behaves just like EventBuffer::read() , but does not drain any data from the buffer. I.e. it copies the first max_bytes bytes from the front of the buffer into data . If there are fewer than max_bytes bytes available, the function copies all the bytes there are.", "usage": "public int EventBuffer::copyout ( string &$data , int $max_bytes )", "url": "https://secure.php.net/manual/en/eventbuffer.copyout.php"}, {"name": "EventBuffer::drain", "synopsis": "Behaves as EventBuffer::read() , except that it does not copy the data: it just removes it from the front of the buffer.", "usage": "public bool EventBuffer::drain ( int $len )", "url": "https://secure.php.net/manual/en/eventbuffer.drain.php"}, {"name": "EventBuffer::enableLocking", "synopsis": "Enable locking on an EventBuffer so that it can safely be used by multiple threads at the same time. When locking is enabled, the lock will be held when callbacks are invoked. This could result in deadlock if you aren't careful. Plan accordingly!", "usage": "public void EventBuffer::enableLocking ( void )", "url": "https://secure.php.net/manual/en/eventbuffer.enablelocking.php"}, {"name": "EventBuffer::expand", "synopsis": "Alters the last chunk of memory in the buffer, or adds a new chunk, such that the buffer is now large enough to contain len bytes without any further allocations.", "usage": "public bool EventBuffer::expand ( int $len )", "url": "https://secure.php.net/manual/en/eventbuffer.expand.php"}, {"name": "EventBuffer::freeze", "synopsis": "Prevent calls that modify an event buffer from succeeding", "usage": "public bool EventBuffer::freeze ( bool $at_front )", "url": "https://secure.php.net/manual/en/eventbuffer.freeze.php"}, {"name": "EventBuffer::lock", "synopsis": "Acquires a lock on buffer. Can be used in pair with EventBuffer::unlock() to make a set of operations atomic, i.e. thread-safe. Note, it is not needed to lock buffers for individual operations. When locking is enabled(see EventBuffer::enableLocking() ), individual operations on event buffers are already atomic.", "usage": "public void EventBuffer::lock ( void )", "url": "https://secure.php.net/manual/en/eventbuffer.lock.php"}, {"name": "EventBuffer::prepend", "synopsis": "Prepend data to the front of the buffer.", "usage": "public bool EventBuffer::prepend ( string $data )", "url": "https://secure.php.net/manual/en/eventbuffer.prepend.php"}, {"name": "EventBuffer::prependBuffer", "synopsis": "Behaves as EventBuffer::addBuffer() , except that it moves data to the front of the buffer.", "usage": "public bool EventBuffer::prependBuffer ( EventBuffer $buf )", "url": "https://secure.php.net/manual/en/eventbuffer.prependbuffer.php"}, {"name": "EventBuffer::pullup", "synopsis": "\"Linearizes\" the first size bytes of the buffer, copying or moving them as needed to ensure that they are all contiguous and occupying the same chunk of memory. If size is negative, the function linearizes the entire buffer.", "usage": "public string EventBuffer::pullup ( int $size )", "url": "https://secure.php.net/manual/en/eventbuffer.pullup.php"}, {"name": "EventBuffer::read", "synopsis": "Read the first max_bytes from the buffer and drain the bytes read. If more max_bytes are requested than are available in the buffer, it only extracts as many bytes as available.", "usage": "public string EventBuffer::read ( int $max_bytes )", "url": "https://secure.php.net/manual/en/eventbuffer.read.php"}, {"name": "EventBuffer::read", "synopsis": "Read data from the file specified by fd onto the end of the buffer.", "usage": "public int EventBuffer::read ( mixed $fd , int $howmuch )", "url": "https://secure.php.net/manual/en/eventbuffer.readfrom.php"}, {"name": "EventBuffer::readLine", "synopsis": "Extracts a line from the front of the buffer and returns it in a newly allocated string. If there is not a whole line to read, the function returns NULL. The line terminator is not included in the copied string.", "usage": "public string EventBuffer::readLine ( int $eol_style )", "url": "https://secure.php.net/manual/en/eventbuffer.readline.php"}, {"name": "EventBuffer::search", "synopsis": "Scans the buffer for an occurrence of the string what . It returns numeric position of the string, or FALSE if the string was not found.", "usage": "public mixed EventBuffer::search ( string $what [, int $start = -1 [, int $end = -1 ]] )", "url": "https://secure.php.net/manual/en/eventbuffer.search.php"}, {"name": "EventBuffer::searchEol", "synopsis": "Scans the buffer for an occurrence of an end of line specified by eol_style parameter . It returns numeric position of the string, or FALSE if the string was not found.", "usage": "public mixed EventBuffer::searchEol ([ int $start = -1 [, int $eol_style = EventBuffer::EOL_ANY ]] )", "url": "https://secure.php.net/manual/en/eventbuffer.searcheol.php"}, {"name": "EventBuffer::substr", "synopsis": "Substracts up to length bytes of the buffer data beginning at start position.", "usage": "public string EventBuffer::substr ( int $start [, int $length ] )", "url": "https://secure.php.net/manual/en/eventbuffer.substr.php"}, {"name": "EventBuffer::unfreeze", "synopsis": "Re-enable calls that modify an event buffer.", "usage": "public bool EventBuffer::unfreeze ( bool $at_front )", "url": "https://secure.php.net/manual/en/eventbuffer.unfreeze.php"}, {"name": "EventBuffer::unlock", "synopsis": "Releases lock acquired by EventBuffer::lock() .", "usage": "public bool EventBuffer::unlock ( void )", "url": "https://secure.php.net/manual/en/eventbuffer.unlock.php"}, {"name": "EventBuffer::write", "synopsis": "Write contents of the buffer to a file descriptor. The buffer will be drained after the bytes have been successfully written.", "usage": "public int EventBuffer::write ( mixed $fd [, int $howmuch ] )", "url": "https://secure.php.net/manual/en/eventbuffer.write.php"}, {"name": "callback", "synopsis": null, "usage": "void callback ([ EventBufferEvent $bev = NULL [, mixed $arg = NULL ]] )", "url": "https://secure.php.net/manual/en/eventbufferevent.about.callbacks.php"}, {"name": "EventBufferEvent::close", "synopsis": "Closes file descriptor associated with the current buffer event.", "usage": "public void EventBufferEvent::close ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.close.php"}, {"name": "EventBufferEvent::connect", "synopsis": "Connect buffer event's file descriptor to given address(optionally with port), or a UNIX domain socket.", "usage": "public bool EventBufferEvent::connect ( string $addr )", "url": "https://secure.php.net/manual/en/eventbufferevent.connect.php"}, {"name": "EventBufferEvent::connectHost", "synopsis": "Resolves the DNS name hostname, looking for addresses of type family ( EventUtil::AF_* constants). If the name resolution fails, it invokes the event callback with an error event. If it succeeds, it launches a connection attempt just as EventBufferEvent::connect() would.", "usage": "public bool EventBufferEvent::connectHost ( EventDnsBase $dns_base , string $hostname , int $port [, int $family = EventUtil::AF_UNSPEC ] )", "url": "https://secure.php.net/manual/en/eventbufferevent.connecthost.php"}, {"name": "EventBufferEvent::__construct", "synopsis": "Create a buffer event on a socket, stream or a file descriptor. Passing NULL to socket means that the socket should be created later, e.g. by means of EventBufferEvent::connect() .", "usage": "public EventBufferEvent::__construct ( EventBase $base [, mixed $socket = NULL [, int $options = 0 [, callable $readcb = NULL [, callable $writecb = NULL [, callable $eventcb = NULL ]]]]] )", "url": "https://secure.php.net/manual/en/eventbufferevent.construct.php"}, {"name": "EventBufferEvent::createPair", "synopsis": "Returns array of two EventBufferEvent objects connected to each other. All the usual options are supported, except for EventBufferEvent::OPT_CLOSE_ON_FREE , which has no effect, and EventBufferEvent::OPT_DEFER_CALLBACKS , which is always on.", "usage": "public static array EventBufferEvent::createPair ( EventBase $base [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/eventbufferevent.createpair.php"}, {"name": "EventBufferEvent::disable", "synopsis": "Disable events Event::READ , Event::WRITE , or Event::READ | Event::WRITE on a buffer event.", "usage": "public bool EventBufferEvent::disable ( int $events )", "url": "https://secure.php.net/manual/en/eventbufferevent.disable.php"}, {"name": "EventBufferEvent::enable", "synopsis": "Enable events Event::READ , Event::WRITE , or Event::READ | Event::WRITE on a buffer event.", "usage": "public bool EventBufferEvent::enable ( int $events )", "url": "https://secure.php.net/manual/en/eventbufferevent.enable.php"}, {"name": "EventBufferEvent::free", "synopsis": "Free resources allocated by buffer event.", "usage": "public void EventBufferEvent::free ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.free.php"}, {"name": "EventBufferEvent::getDnsErrorString", "synopsis": "Returns string describing the last failed DNS lookup attempt made by EventBufferEvent::connectHost() , or an empty string, if there is no DNS error detected.", "usage": "public string EventBufferEvent::getDnsErrorString ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.getdnserrorstring.php"}, {"name": "EventBufferEvent::getEnabled", "synopsis": "Returns bitmask of events currently enabled on the buffer event", "usage": "public int EventBufferEvent::getEnabled ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.getenabled.php"}, {"name": "EventBufferEvent::getInput", "synopsis": "Returns underlying input buffer associated with current buffer event. An input buffer is a storage for data to read.", "usage": "public EventBuffer EventBufferEvent::getInput ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.getinput.php"}, {"name": "EventBufferEvent::getOutput", "synopsis": "Returns underlying output buffer associated with current buffer event. An output buffer is a storage for data to be written.", "usage": "public EventBuffer EventBufferEvent::getOutput ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.getoutput.php"}, {"name": "EventBufferEvent::read", "synopsis": "Removes up to size bytes from the input buffer. Returns a string of data read from the input buffer.", "usage": "public string EventBufferEvent::read ( int $size )", "url": "https://secure.php.net/manual/en/eventbufferevent.read.php"}, {"name": "EventBufferEvent::readBuffer", "synopsis": "Drains the entire contents of the input buffer and places them into buf .", "usage": "public bool EventBufferEvent::readBuffer ( EventBuffer $buf )", "url": "https://secure.php.net/manual/en/eventbufferevent.readbuffer.php"}, {"name": "EventBufferEvent::setCallbacks", "synopsis": "Assigns read, write and event(status) callbacks.", "usage": "public void EventBufferEvent::setCallbacks ( callable $readcb , callable $writecb , callable $eventcb [, string $arg ] )", "url": "https://secure.php.net/manual/en/eventbufferevent.setcallbacks.php"}, {"name": "EventBufferEvent::setPriority", "synopsis": "Assign a priority to a bufferevent", "usage": "public bool EventBufferEvent::setPriority ( int $priority )", "url": "https://secure.php.net/manual/en/eventbufferevent.setpriority.php"}, {"name": "EventBufferEvent::setTimeouts", "synopsis": "Set the read and write timeout for a buffer event", "usage": "public bool EventBufferEvent::setTimeouts ( float $timeout_read , float $timeout_write )", "url": "https://secure.php.net/manual/en/eventbufferevent.settimeouts.php"}, {"name": "EventBufferEvent::setWatermark", "synopsis": "Adjusts the read watermarks, the write watermarks , or both, of a single buffer event.", "usage": "public void EventBufferEvent::setWatermark ( int $events , int $lowmark , int $highmark )", "url": "https://secure.php.net/manual/en/eventbufferevent.setwatermark.php"}, {"name": "EventBufferEvent::sslError", "synopsis": "Returns most recent OpenSSL error reported on the buffer event.", "usage": "public string EventBufferEvent::sslError ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslerror.php"}, {"name": "EventBufferEvent::sslFilter", "synopsis": "Create a new SSL buffer event to send its data over another buffer event", "usage": "public static EventBufferEvent EventBufferEvent::sslFilter ( EventBase $base , EventBufferEvent $underlying , EventSslContext $ctx , int $state [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslfilter.php"}, {"name": "EventBufferEvent::sslGetCipherInfo", "synopsis": "Retrieves description of the current cipher by means of the SSL_CIPHER_description SSL API function (see SSL_CIPHER_get_name(3) man page).", "usage": "public string EventBufferEvent::sslGetCipherInfo ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslgetcipherinfo.php"}, {"name": "EventBufferEvent::sslGetCipherName", "synopsis": "Retrieves name of cipher used by current SSL connection.", "usage": "public string EventBufferEvent::sslGetCipherName ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslgetciphername.php"}, {"name": "EventBufferEvent::sslGetCipherVersion", "synopsis": "Retrieves version of cipher used by current SSL connection.", "usage": "public string EventBufferEvent::sslGetCipherVersion ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslgetcipherversion.php"}, {"name": "EventBufferEvent::sslGetProtocol", "synopsis": "Returns the name of the protocol used for current SSL connection.", "usage": "public string EventBufferEvent::sslGetProtocol ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslgetprotocol.php"}, {"name": "EventBufferEvent::sslRenegotiate", "synopsis": "Tells a bufferevent to begin SSL renegotiation.", "usage": "public void EventBufferEvent::sslRenegotiate ( void )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslrenegotiate.php"}, {"name": "EventBufferEvent::sslSocket", "synopsis": "Creates a new SSL buffer event to send its data over an SSL on a socket.", "usage": "public static EventBufferEvent EventBufferEvent::sslSocket ( EventBase $base , mixed $socket , EventSslContext $ctx , int $state [, int $options ] )", "url": "https://secure.php.net/manual/en/eventbufferevent.sslsocket.php"}, {"name": "EventBufferEvent::write", "synopsis": "Adds data to a buffer event's output buffer", "usage": "public bool EventBufferEvent::write ( string $data )", "url": "https://secure.php.net/manual/en/eventbufferevent.write.php"}, {"name": "EventBufferEvent::writeBuffer", "synopsis": "Adds contents of the entire buffer to a buffer event's output buffer", "usage": "public bool EventBufferEvent::writeBuffer ( EventBuffer $buf )", "url": "https://secure.php.net/manual/en/eventbufferevent.writebuffer.php"}, {"name": "EventConfig::avoidMethod", "synopsis": "Tells libevent to avoid specific event method(backend). See \u00bb\u00a0Creating an event base .", "usage": "public bool EventConfig::avoidMethod ( string $method )", "url": "https://secure.php.net/manual/en/eventconfig.avoidmethod.php"}, {"name": "EventConfig::__construct", "synopsis": "Constructs EventConfig object which could be passed to EventBase::__construct() constructor.", "usage": "public EventConfig::__construct ( void )", "url": "https://secure.php.net/manual/en/eventconfig.construct.php"}, {"name": "EventConfig::requireFeatures", "synopsis": "Enters a required event method feature that the application demands", "usage": "public bool EventConfig::requireFeatures ( int $feature )", "url": "https://secure.php.net/manual/en/eventconfig.requirefeatures.php"}, {"name": "EventConfig::setMaxDispatchInterval", "synopsis": "Prevents priority inversion by limiting how many low-priority event callbacks can be invoked before checking for more high-priority events.", "usage": "public void EventConfig::setMaxDispatchInterval ( int $max_interval , int $max_callbacks , int $min_priority )", "url": "https://secure.php.net/manual/en/eventconfig.setmaxdispatchinterval.php"}, {"name": "EventDnsBase::addNameserverIp", "synopsis": "Adds a nameserver to the evdns_base.", "usage": "public bool EventDnsBase::addNameserverIp ( string $ip )", "url": "https://secure.php.net/manual/en/eventdnsbase.addnameserverip.php"}, {"name": "EventDnsBase::addSearch", "synopsis": "Adds a domain to the list of search domains", "usage": "public void EventDnsBase::addSearch ( string $domain )", "url": "https://secure.php.net/manual/en/eventdnsbase.addsearch.php"}, {"name": "EventDnsBase::clearSearch", "synopsis": "Removes all current search suffixes from the DNS base; the EventDnsBase::addSearch() function adds a suffix.", "usage": "public void EventDnsBase::clearSearch ( void )", "url": "https://secure.php.net/manual/en/eventdnsbase.clearsearch.php"}, {"name": "EventDnsBase::__construct", "synopsis": "Constructs EventDnsBase object.", "usage": "public EventDnsBase::__construct ( EventBase $base , bool $initialize )", "url": "https://secure.php.net/manual/en/eventdnsbase.construct.php"}, {"name": "EventDnsBase::countNameservers", "synopsis": "Gets the number of configured nameservers", "usage": "public int EventDnsBase::countNameservers ( void )", "url": "https://secure.php.net/manual/en/eventdnsbase.countnameservers.php"}, {"name": "EventDnsBase::loadHosts", "synopsis": "Loads a hosts file (in the same format as /etc/hosts ) from hosts file.", "usage": "public bool EventDnsBase::loadHosts ( string $hosts )", "url": "https://secure.php.net/manual/en/eventdnsbase.loadhosts.php"}, {"name": "EventDnsBase::parseResolvConf", "synopsis": "Scans the resolv.conf-formatted file stored in filename, and read in all the options from it that are listed in flags", "usage": "public bool EventDnsBase::parseResolvConf ( int $flags , string $filename )", "url": "https://secure.php.net/manual/en/eventdnsbase.parseresolvconf.php"}, {"name": "EventDnsBase::setOption", "synopsis": "Set the value of a configuration option.", "usage": "public bool EventDnsBase::setOption ( string $option , string $value )", "url": "https://secure.php.net/manual/en/eventdnsbase.setoption.php"}, {"name": "EventDnsBase::setSearchNdots", "synopsis": "Set the 'ndots' parameter for searches. Sets the number of dots which, when found in a name, causes the first query to be without any search domain.", "usage": "public bool EventDnsBase::setSearchNdots ( int $ndots )", "url": "https://secure.php.net/manual/en/eventdnsbase.setsearchndots.php"}, {"name": "EventHttp::accept", "synopsis": "Makes an HTTP server accept connections on the specified socket stream or resource. The socket should be ready to accept connections.", "usage": "public bool EventHttp::accept ( mixed $socket )", "url": "https://secure.php.net/manual/en/eventhttp.accept.php"}, {"name": "EventHttp::addServerAlias", "synopsis": "Adds a server alias to the HTTP server object.", "usage": "public bool EventHttp::addServerAlias ( string $alias )", "url": "https://secure.php.net/manual/en/eventhttp.addserveralias.php"}, {"name": "EventHttp::bind", "synopsis": "Binds an HTTP server on the specified address and port.", "usage": "public void EventHttp::bind ( string $address , int $port )", "url": "https://secure.php.net/manual/en/eventhttp.bind.php"}, {"name": "EventHttp::__construct", "synopsis": "Constructs the HTTP server object.", "usage": "public EventHttp::__construct ( EventBase $base [, EventSslContext $ctx = NULL ] )", "url": "https://secure.php.net/manual/en/eventhttp.construct.php"}, {"name": "EventHttp::removeServerAlias", "synopsis": "Removes server alias added with EventHttp::addServerAlias()", "usage": "public bool EventHttp::removeServerAlias ( string $alias )", "url": "https://secure.php.net/manual/en/eventhttp.removeserveralias.php"}, {"name": "EventHttp::setAllowedMethods", "synopsis": "Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks", "usage": "public void EventHttp::setAllowedMethods ( int $methods )", "url": "https://secure.php.net/manual/en/eventhttp.setallowedmethods.php"}, {"name": "EventHttp::setCallback", "synopsis": "Sets a callback for specified URI.", "usage": "public void EventHttp::setCallback ( string $path , string $cb [, string $arg ] )", "url": "https://secure.php.net/manual/en/eventhttp.setcallback.php"}, {"name": "EventHttp::setDefaultCallback", "synopsis": "Sets default callback to handle requests that are not caught by specific callbacks", "usage": "public void EventHttp::setDefaultCallback ( string $cb [, string $arg ] )", "url": "https://secure.php.net/manual/en/eventhttp.setdefaultcallback.php"}, {"name": "EventHttp::setMaxBodySize", "synopsis": "Sets maximum request body size.", "usage": "public void EventHttp::setMaxBodySize ( int $value )", "url": "https://secure.php.net/manual/en/eventhttp.setmaxbodysize.php"}, {"name": "EventHttp::setMaxHeadersSize", "synopsis": "Sets maximum HTTP header size.", "usage": "public void EventHttp::setMaxHeadersSize ( int $value )", "url": "https://secure.php.net/manual/en/eventhttp.setmaxheaderssize.php"}, {"name": "EventHttp::setTimeout", "synopsis": "Sets the timeout for an HTTP request.", "usage": "public void EventHttp::setTimeout ( int $value )", "url": "https://secure.php.net/manual/en/eventhttp.settimeout.php"}, {"name": "EventHttpConnection::__construct", "synopsis": "Constructs EventHttpConnection object.", "usage": "public EventHttpConnection::__construct ( EventBase $base , EventDnsBase $dns_base , string $address , int $port [, EventSslContext $ctx = NULL ] )", "url": "https://secure.php.net/manual/en/eventhttpconnection.construct.php"}, {"name": "EventHttpConnection::getBase", "synopsis": "Returns event base associated with the connection.", "usage": "public EventBase EventHttpConnection::getBase ( void )", "url": "https://secure.php.net/manual/en/eventhttpconnection.getbase.php"}, {"name": "EventHttpConnection::getPeer", "synopsis": "Gets the remote address and port associated with the connection", "usage": "public void EventHttpConnection::getPeer ( string &$address , int &$port )", "url": "https://secure.php.net/manual/en/eventhttpconnection.getpeer.php"}, {"name": "EventHttpConnection::makeRequest", "synopsis": "Makes an HTTP request over the specified connection. type is one of EventHttpRequest::CMD_* constants.", "usage": "public bool EventHttpConnection::makeRequest ( EventHttpRequest $req , int $type , string $uri )", "url": "https://secure.php.net/manual/en/eventhttpconnection.makerequest.php"}, {"name": "EventHttpConnection::setCloseCallback", "synopsis": "Sets callback for connection close.", "usage": "public void EventHttpConnection::setCloseCallback ( callable $callback [, mixed $data ] )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setclosecallback.php"}, {"name": "EventHttpConnection::setLocalAddress", "synopsis": "Sets the IP address from which http connections are made.", "usage": "public void EventHttpConnection::setLocalAddress ( string $address )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setlocaladdress.php"}, {"name": "EventHttpConnection::setLocalPort", "synopsis": "Sets the local port from which connections are made.", "usage": "public void EventHttpConnection::setLocalPort ( int $port )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setlocalport.php"}, {"name": "EventHttpConnection::setMaxBodySize", "synopsis": "Sets maximum body size for the connection.", "usage": "public void EventHttpConnection::setMaxBodySize ( string $max_size )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setmaxbodysize.php"}, {"name": "EventHttpConnection::setMaxHeadersSize", "synopsis": "Sets maximum header size for the connection.", "usage": "public void EventHttpConnection::setMaxHeadersSize ( string $max_size )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setmaxheaderssize.php"}, {"name": "EventHttpConnection::setRetries", "synopsis": "Sets the retry limit for the connection", "usage": "public void EventHttpConnection::setRetries ( int $retries )", "url": "https://secure.php.net/manual/en/eventhttpconnection.setretries.php"}, {"name": "EventHttpConnection::setTimeout", "synopsis": "Sets the timeout for the connection", "usage": "public void EventHttpConnection::setTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/eventhttpconnection.settimeout.php"}, {"name": "EventHttpRequest::addHeader", "synopsis": "Adds an HTTP header to the headers of the request.", "usage": "public bool EventHttpRequest::addHeader ( string $key , string $value , int $type )", "url": "https://secure.php.net/manual/en/eventhttprequest.addheader.php"}, {"name": "EventHttpRequest::cancel", "synopsis": "Cancels a pending HTTP request.", "usage": "public void EventHttpRequest::cancel ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.cancel.php"}, {"name": "EventHttpRequest::clearHeaders", "synopsis": "Removes all output headers from the header list of the request.", "usage": "public void EventHttpRequest::clearHeaders ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.clearheaders.php"}, {"name": "EventHttpRequest::closeConnection", "synopsis": "Closes HTTP connection associated with the request.", "usage": "public void EventHttpRequest::closeConnection ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.closeconnection.php"}, {"name": "EventHttpRequest::__construct", "synopsis": "Constructs EventHttpRequest object.", "usage": "public EventHttpRequest::__construct ( callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/eventhttprequest.construct.php"}, {"name": "EventHttpRequest::findHeader", "synopsis": "Finds the value belonging a header.", "usage": "public void EventHttpRequest::findHeader ( string $key , string $type )", "url": "https://secure.php.net/manual/en/eventhttprequest.findheader.php"}, {"name": "EventHttpRequest::free", "synopsis": "Frees the object and removes associated events.", "usage": "public void EventHttpRequest::free ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.free.php"}, {"name": "EventHttpRequest::closeConnection", "synopsis": "Returns EventBufferEvent object which represents buffer event that the connection is using.", "usage": "public EventBufferEvent EventHttpRequest::closeConnection ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getbufferevent.php"}, {"name": "EventHttpRequest::getCommand", "synopsis": "Returns the request command, one of EventHttpRequest::CMD_* constants.", "usage": "public void EventHttpRequest::getCommand ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getcommand.php"}, {"name": "EventHttpRequest::closeConnection", "synopsis": "Returns EventHttpConnection object which represents HTTP connection associated with the request.", "usage": "public EventHttpConnection EventHttpRequest::closeConnection ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getconnection.php"}, {"name": "EventHttpRequest::getHost", "synopsis": "Returns the request host.", "usage": "public string EventHttpRequest::getHost ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.gethost.php"}, {"name": "EventHttpRequest::getInputBuffer", "synopsis": "Returns the input buffer.", "usage": "public EventBuffer EventHttpRequest::getInputBuffer ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getinputbuffer.php"}, {"name": "EventHttpRequest::getInputHeaders", "synopsis": "Returns associative array of the input headers.", "usage": "public array EventHttpRequest::getInputHeaders ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getinputheaders.php"}, {"name": "EventHttpRequest::getOutputBuffer", "synopsis": "Returns the output buffer of the request.", "usage": "public EventBuffer EventHttpRequest::getOutputBuffer ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getoutputbuffer.php"}, {"name": "EventHttpRequest::getOutputHeaders", "synopsis": "Returns associative array of the output headers.", "usage": "public void EventHttpRequest::getOutputHeaders ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getoutputheaders.php"}, {"name": "EventHttpRequest::getResponseCode", "synopsis": "Returns the response code.", "usage": "public int EventHttpRequest::getResponseCode ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.getresponsecode.php"}, {"name": "EventHttpRequest::getUri", "synopsis": "Returns the request URI", "usage": "public string EventHttpRequest::getUri ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.geturi.php"}, {"name": "EventHttpRequest::removeHeader", "synopsis": "Removes an HTTP header from the headers of the request.", "usage": "public void EventHttpRequest::removeHeader ( string $key , string $type )", "url": "https://secure.php.net/manual/en/eventhttprequest.removeheader.php"}, {"name": "EventHttpRequest::sendError", "synopsis": "Send an HTML error message to the client.", "usage": "public void EventHttpRequest::sendError ( int $error [, string $reason = NULL ] )", "url": "https://secure.php.net/manual/en/eventhttprequest.senderror.php"}, {"name": "EventHttpRequest::sendReply", "synopsis": "Send an HTML reply to the client. The body of the reply consists of data in optional buf parameter.", "usage": "public void EventHttpRequest::sendReply ( int $code , string $reason [, EventBuffer $buf ] )", "url": "https://secure.php.net/manual/en/eventhttprequest.sendreply.php"}, {"name": "EventHttpRequest::sendReplyChunk", "synopsis": "Send another data chunk as part of an ongoing chunked reply. After calling this method buf will be empty.", "usage": "public void EventHttpRequest::sendReplyChunk ( EventBuffer $buf )", "url": "https://secure.php.net/manual/en/eventhttprequest.sendreplychunk.php"}, {"name": "EventHttpRequest::sendReplyEnd", "synopsis": "Complete a chunked reply, freeing the request as appropriate.", "usage": "public void EventHttpRequest::sendReplyEnd ( void )", "url": "https://secure.php.net/manual/en/eventhttprequest.sendreplyend.php"}, {"name": "EventHttpRequest::sendReplyStart", "synopsis": "Initiate a reply that uses Transfer-Encoding chunked .", "usage": "public void EventHttpRequest::sendReplyStart ( int $code , string $reason )", "url": "https://secure.php.net/manual/en/eventhttprequest.sendreplystart.php"}, {"name": "EventListener::__construct", "synopsis": "Creates new connection listener associated with an event base.", "usage": "public EventListener::__construct ( EventBase $base , callable $cb , mixed $data , int $flags , int $backlog , mixed $target )", "url": "https://secure.php.net/manual/en/eventlistener.construct.php"}, {"name": "EventListener::disable", "synopsis": "Disables an event connect listener object", "usage": "public bool EventListener::disable ( void )", "url": "https://secure.php.net/manual/en/eventlistener.disable.php"}, {"name": "EventListener::enable", "synopsis": "Enables an event connect listener object", "usage": "public bool EventListener::enable ( void )", "url": "https://secure.php.net/manual/en/eventlistener.enable.php"}, {"name": "EventListener::getBase", "synopsis": "Returns event base associated with the event listener.", "usage": "public void EventListener::getBase ( void )", "url": "https://secure.php.net/manual/en/eventlistener.getbase.php"}, {"name": "EventListener::getSocketName", "synopsis": "Retreives the current address to which the listener's socket is bound.", "usage": "public static bool EventListener::getSocketName ( string &$address [, mixed &$port ] )", "url": "https://secure.php.net/manual/en/eventlistener.getsocketname.php"}, {"name": "EventListener::setCallback", "synopsis": "Adjust event connect listener's callback and optionally the callback argument.", "usage": "public void EventListener::setCallback ( callable $cb [, mixed $arg = NULL ] )", "url": "https://secure.php.net/manual/en/eventlistener.setcallback.php"}, {"name": "EventListener::setErrorCallback", "synopsis": "Set event listener's error callback", "usage": "public void EventListener::setErrorCallback ( string $cb )", "url": "https://secure.php.net/manual/en/eventlistener.seterrorcallback.php"}, {"name": "EventSslContext::__construct", "synopsis": "Creates SSL context holding pointer to SSL_CTX (see the system manual).", "usage": "public EventSslContext::__construct ( string $method , string $options )", "url": "https://secure.php.net/manual/en/eventsslcontext.construct.php"}, {"name": "EventUtil::__construct", "synopsis": "EventUtil is a singleton. Therefore the constructor is abstract, and it is impossible to create objects based on this class.", "usage": "abstract public EventUtil::__construct ( void )", "url": "https://secure.php.net/manual/en/eventutil.construct.php"}, {"name": "EventUtil::getLastSocketErrno", "synopsis": "Returns the most recent socket error number( errno ).", "usage": "public static int EventUtil::getLastSocketErrno ([ mixed $socket = NULL ] )", "url": "https://secure.php.net/manual/en/eventutil.getlastsocketerrno.php"}, {"name": "EventUtil::getLastSocketError", "synopsis": "Returns the most recent socket error.", "usage": "public static string EventUtil::getLastSocketError ([ mixed $socket ] )", "url": "https://secure.php.net/manual/en/eventutil.getlastsocketerror.php"}, {"name": "EventUtil::getSocketFd", "synopsis": "Returns numeric file descriptor of a socket or stream specified by socket argument just like the Event extension does it internally for all methods accepting socket resource or stream.", "usage": "public static int EventUtil::getSocketFd ( mixed $socket )", "url": "https://secure.php.net/manual/en/eventutil.getsocketfd.php"}, {"name": "EventUtil::getSocketName", "synopsis": "Retreives the current address to which the socket is bound.", "usage": "public static bool EventUtil::getSocketName ( mixed $socket , string &$address [, mixed &$port ] )", "url": "https://secure.php.net/manual/en/eventutil.getsocketname.php"}, {"name": "EventUtil::setSocketOption", "synopsis": "Sets socket options.", "usage": "public static bool EventUtil::setSocketOption ( mixed $socket , int $level , int $optname , mixed $optval )", "url": "https://secure.php.net/manual/en/eventutil.setsocketoption.php"}, {"name": "EventUtil::sslRandPoll", "synopsis": "Generates entropy by means of OpenSSL's RAND_poll() (see the system manual).", "usage": "public static void EventUtil::sslRandPoll ( void )", "url": "https://secure.php.net/manual/en/eventutil.sslrandpoll.php"}, {"name": "EvFork::__construct", "synopsis": "Constructs the EvFork watcher object and starts the watcher automatically.", "usage": "public EvFork::__construct ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evfork.construct.php"}, {"name": "EvFork::createStopped", "synopsis": "The same as EvFork::__construct() , but doesn't start the watcher automatically.", "usage": "final public static object EvFork::createStopped ( string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/evfork.createstopped.php"}, {"name": "EvIdle::__construct", "synopsis": "Constructs the EvIdle watcher object and starts the watcher automatically.", "usage": "public EvIdle::__construct ( callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/evidle.construct.php"}, {"name": "EvIdle::createStopped", "synopsis": "The same as EvIdle::__construct() , but doesn't start the watcher automatically.", "usage": "final public static object EvIdle::createStopped ( string $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/evidle.createstopped.php"}, {"name": "EvIo::__construct", "synopsis": "Constructs EvIo watcher object and starts the watcher automatically.", "usage": "public EvIo::__construct ( mixed $fd , int $events , callable $callback [, mixed $data [, int $priority ]] )", "url": "https://secure.php.net/manual/en/evio.construct.php"}, {"name": "EvIo::createStopped", "synopsis": "The same as EvIo::__construct() , but doesn't start the watcher automatically.", "usage": "final public static EvIo EvIo::createStopped ( mixed $fd , int $events , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evio.createstopped.php"}, {"name": "EvIo::set", "synopsis": "Configures the EvIo watcher", "usage": "public void EvIo::set ( mixed $fd , int $events )", "url": "https://secure.php.net/manual/en/evio.set.php"}, {"name": "EvLoop::backend", "synopsis": "The same as Ev::backend() , but for the loop instance.", "usage": "public int EvLoop::backend ( void )", "url": "https://secure.php.net/manual/en/evloop.backend.php"}, {"name": "EvLoop::check", "synopsis": "Creates EvCheck object associated with the current event loop instance.", "usage": "final public EvCheck EvLoop::check ( string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/evloop.check.php"}, {"name": "EvLoop::child", "synopsis": "Creates EvChild object associated with the current event loop.", "usage": "final public EvChild EvLoop::child ( string $pid , string $trace , string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/evloop.child.php"}, {"name": "EvLoop::__construct", "synopsis": "Constructs the event loop object.", "usage": "public EvLoop::__construct ([ int $flags [, mixed $data = NULL [, float $io_interval = 0.0 [, float $timeout_interval = 0.0 ]]]] )", "url": "https://secure.php.net/manual/en/evloop.construct.php"}, {"name": "EvLoop::defaultLoop", "synopsis": "If the default event loop is not created, EvLoop::defaultLoop() creates it with the specified parameters. Otherwise, it just returns the object representing previously created instance ignoring all the parameters.", "usage": "public static EvLoop EvLoop::defaultLoop ([ int $flags = Ev::FLAG_AUTO [, mixed $data = NULL [, float $io_interval = 0. [, float $timeout_interval = 0. ]]]] )", "url": "https://secure.php.net/manual/en/evloop.defaultloop.php"}, {"name": "EvLoop::embed", "synopsis": "Creates an instance of EvEmbed watcher associated with the current EvLoop object.", "usage": "final public EvEmbed EvLoop::embed ( string $other [, string $callback [, string $data [, string $priority ]]] )", "url": "https://secure.php.net/manual/en/evloop.embed.php"}, {"name": "EvLoop::fork", "synopsis": "Creates EvFork watcher object associated with the current event loop instance", "usage": "final public EvFork EvLoop::fork ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.fork.php"}, {"name": "EvLoop::idle", "synopsis": "Creates EvIdle watcher object associated with the current event loop instance", "usage": "final public EvIdle EvLoop::idle ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.idle.php"}, {"name": "EvLoop::invokePending", "synopsis": "Invoke all pending watchers while resetting their pending state.", "usage": "public void EvLoop::invokePending ( void )", "url": "https://secure.php.net/manual/en/evloop.invokepending.php"}, {"name": "EvLoop::io", "synopsis": "Create EvIo watcher object associated with the current event loop instance.", "usage": "final public EvIo EvLoop::io ( mixed $fd , int $events , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.io.php"}, {"name": "EvLoop::loopFork", "synopsis": "Must be called after a fork in the child, before entering or continuing the event loop. An alternative is to use Ev::FLAG_FORKCHECK which calls this function automatically, at some performance loss (refer to the \u00bb\u00a0libev documentation ).", "usage": "public void EvLoop::loopFork ( void )", "url": "https://secure.php.net/manual/en/evloop.loopfork.php"}, {"name": "EvLoop::now", "synopsis": "Returns the current \"event loop time\", which is the time the event loop received events and started processing them. This timestamp does not change as long as callbacks are being processed, and this is also the base time used for relative timers. You can treat it as the timestamp of the event occurring(or more correctly, libev finding out about it).", "usage": "public float EvLoop::now ( void )", "url": "https://secure.php.net/manual/en/evloop.now.php"}, {"name": "EvLoop::nowUpdate", "synopsis": "Establishes the current time by querying the kernel, updating the time returned by EvLoop::now() in the progress. This is a costly operation and is usually done automatically within EvLoop::run() .", "usage": "public void EvLoop::nowUpdate ( void )", "url": "https://secure.php.net/manual/en/evloop.nowupdate.php"}, {"name": "EvLoop::periodic", "synopsis": "Creates EvPeriodic watcher object associated with the current event loop instance", "usage": "final public EvPeriodic EvLoop::periodic ( float $offset , float $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.periodic.php"}, {"name": "EvLoop::prepare", "synopsis": "Creates EvPrepare watcher object associated with the current event loop instance", "usage": "final public EvPrepare EvLoop::prepare ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.prepare.php"}, {"name": "EvLoop::resume", "synopsis": "EvLoop::suspend() and EvLoop::resume() methods suspend and resume a loop correspondingly.", "usage": "public void EvLoop::resume ( void )", "url": "https://secure.php.net/manual/en/evloop.resume.php"}, {"name": "EvLoop::run", "synopsis": "Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls Ev::stop() method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( EvWatcher::keepalive() is TRUE), in which case the return value will be FALSE. The return value can generally be interpreted as if TRUE, there is more work left to do .", "usage": "public void EvLoop::run ([ int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/evloop.run.php"}, {"name": "EvLoop::signal", "synopsis": "Creates EvSignal watcher object associated with the current event loop instance", "usage": "final public EvSignal EvLoop::signal ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.signal.php"}, {"name": "EvLoop::stat", "synopsis": "Creates EvStat watcher object associated with the current event loop instance", "usage": "final public EvStat EvLoop::stat ( string $path , float $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.stat.php"}, {"name": "EvLoop::stop", "synopsis": "Stops the event loop", "usage": "public void EvLoop::stop ([ int $how ] )", "url": "https://secure.php.net/manual/en/evloop.stop.php"}, {"name": "EvLoop::suspend", "synopsis": "EvLoop::suspend() and EvLoop::resume() methods suspend and resume a loop correspondingly.", "usage": "public void EvLoop::suspend ( void )", "url": "https://secure.php.net/manual/en/evloop.suspend.php"}, {"name": "EvLoop::timer", "synopsis": "Creates EvTimer watcher object associated with the current event loop instance", "usage": "final public EvTimer EvLoop::timer ( float $after , float $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evloop.timer.php"}, {"name": "EvLoop::verify", "synopsis": "Performs internal consistency checks(for debugging libev ) and abort the program if any data structures were found to be corrupted.", "usage": "public void EvLoop::verify ( void )", "url": "https://secure.php.net/manual/en/evloop.verify.php"}, {"name": "EvPeriodic::again", "synopsis": "Simply stops and restarts the periodic watcher again. This is only useful when attributes are changed.", "usage": "public void EvPeriodic::again ( void )", "url": "https://secure.php.net/manual/en/evperiodic.again.php"}, {"name": "EvPeriodic::at", "synopsis": "When the watcher is active, returns the absolute time that this watcher is supposed to trigger next. This is not the same as the offset argument to EvPeriodic::set() or EvPeriodic::__construct() , but indeed works even in interval mode.", "usage": "public float EvPeriodic::at ( void )", "url": "https://secure.php.net/manual/en/evperiodic.at.php"}, {"name": "EvPeriodic::__construct", "synopsis": "Constructs EvPeriodic watcher object and starts it automatically. EvPeriodic::createStopped() method creates stopped periodic watcher.", "usage": "public EvPeriodic::__construct ( float $offset , string $interval , callable $reschedule_cb , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evperiodic.construct.php"}, {"name": "EvPeriodic::createStopped", "synopsis": "Create EvPeriodic object. Unlike EvPeriodic::__construct() this method doesn't start the watcher automatically.", "usage": "final public static EvPeriodic EvPeriodic::createStopped ( float $offset , float $interval , callable $reschedule_cb , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evperiodic.createstopped.php"}, {"name": "EvPeriodic::set", "synopsis": "(Re-)Configures EvPeriodic watcher", "usage": "public void EvPeriodic::set ( float $offset , float $interval )", "url": "https://secure.php.net/manual/en/evperiodic.set.php"}, {"name": "EvPrepare::__construct", "synopsis": "Constructs EvPrepare watcher object. And starts the watcher automatically. If need a stopped watcher consider using EvPrepare::createStopped()", "usage": "public EvPrepare::__construct ( string $callback [, string $data [, string $priority ]] )", "url": "https://secure.php.net/manual/en/evprepare.construct.php"}, {"name": "EvPrepare::createStopped", "synopsis": "Creates a stopped instance of EvPrepare watcher. Unlike EvPrepare::__construct() , this method doesn' start the watcher automatically.", "usage": "final public static EvPrepare EvPrepare::createStopped ( callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evprepare.createstopped.php"}, {"name": "EvSignal::__construct", "synopsis": "Constructs EvSignal watcher object and starts it automatically. For a stopped periodic watcher consider using EvSignal::createStopped() method.", "usage": "public EvSignal::__construct ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evsignal.construct.php"}, {"name": "EvSignal::createStopped", "synopsis": "Create stopped EvSignal watcher object. Unlike EvSignal::__construct() , this method does't start the watcher automatically.", "usage": "final public static EvSignal EvSignal::createStopped ( int $signum , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evsignal.createstopped.php"}, {"name": "EvSignal::set", "synopsis": "Configures the watcher.", "usage": "public void EvSignal::set ( int $signum )", "url": "https://secure.php.net/manual/en/evsignal.set.php"}, {"name": "EvStat::attr", "synopsis": "Returns array of the values most recently detected by Ev", "usage": "public array EvStat::attr ( void )", "url": "https://secure.php.net/manual/en/evstat.attr.php"}, {"name": "EvStat::__construct", "synopsis": "Constructs EvStat watcher object and starts the watcher automatically.", "usage": "public EvStat::__construct ( string $path , float $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evstat.construct.php"}, {"name": "EvStat::createStopped", "synopsis": "Creates EvStat watcher object, but doesn't start it automatically(unlike EvStat::__construct() ).", "usage": "final public static void EvStat::createStopped ( string $path , float $interval , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evstat.createstopped.php"}, {"name": "EvStat::prev", "synopsis": "Just like EvStat::attr() , but returns the previous set of values.", "usage": "public void EvStat::prev ( void )", "url": "https://secure.php.net/manual/en/evstat.prev.php"}, {"name": "EvStat::set", "synopsis": "Configures the watcher.", "usage": "public void EvStat::set ( string $path , float $interval )", "url": "https://secure.php.net/manual/en/evstat.set.php"}, {"name": "EvStat::stat", "synopsis": "Initiates the stat call(updates internal cache). It stats(using lstat ) the path specified in the watcher and sets to the values found.", "usage": "public bool EvStat::stat ( void )", "url": "https://secure.php.net/manual/en/evstat.stat.php"}, {"name": "EvTimer::again", "synopsis": "This will act as if the timer timed out and restart it again if it is repeating. The exact semantics are:", "usage": "public void EvTimer::again ( void )", "url": "https://secure.php.net/manual/en/evtimer.again.php"}, {"name": "EvTimer::__construct", "synopsis": "Constructs an EvTimer watcher object.", "usage": "public EvTimer::__construct ( float $after , float $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evtimer.construct.php"}, {"name": "EvTimer::createStopped", "synopsis": "Creates EvTimer stopped watcher object. Unlike EvTimer::__construct() , this method doesn't start the watcher automatically.", "usage": "final public static EvTimer EvTimer::createStopped ( float $after , float $repeat , callable $callback [, mixed $data = NULL [, int $priority = 0 ]] )", "url": "https://secure.php.net/manual/en/evtimer.createstopped.php"}, {"name": "EvTimer::set", "synopsis": "Configures the watcher", "usage": "public void EvTimer::set ( float $after , float $repeat )", "url": "https://secure.php.net/manual/en/evtimer.set.php"}, {"name": "EvWatcher::clear", "synopsis": "If the watcher is pending, this method clears its pending status and returns its revents bitset(as if its callback was invoked). If the watcher isn't pending it does nothing and returns 0 .", "usage": "public int EvWatcher::clear ( void )", "url": "https://secure.php.net/manual/en/evwatcher.clear.php"}, {"name": "EvWatcher::__construct", "synopsis": "EvWatcher::__construct() is an abstract constructor of a watcher object implemented in the derived classes.", "usage": "abstract public EvWatcher::__construct ( void )", "url": "https://secure.php.net/manual/en/evwatcher.construct.php"}, {"name": "EvWatcher::feed", "synopsis": "Feeds the given revents set into the event loop, as if the specified event had happened for the watcher.", "usage": "public void EvWatcher::feed ( int $revents )", "url": "https://secure.php.net/manual/en/evwatcher.feed.php"}, {"name": "EvWatcher::getLoop", "synopsis": "Returns the loop responsible for the watcher", "usage": "public EvLoop EvWatcher::getLoop ( void )", "url": "https://secure.php.net/manual/en/evwatcher.getloop.php"}, {"name": "EvWatcher::invoke", "synopsis": "Invokes the watcher callback with the given received events bit mask.", "usage": "public void EvWatcher::invoke ( int $revents )", "url": "https://secure.php.net/manual/en/evwatcher.invoke.php"}, {"name": "EvWatcher::keepalive", "synopsis": "Configures whether to keep the loop from returning. With keepalive value set to FALSE the watcher won't keep Ev::run() / EvLoop::run() from returning even though the watcher is active.", "usage": "public bool EvWatcher::keepalive ([ bool $value ] )", "url": "https://secure.php.net/manual/en/evwatcher.keepalive.php"}, {"name": "EvWatcher::setCallback", "synopsis": "Sets new callback for the watcher", "usage": "public void EvWatcher::setCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/evwatcher.setcallback.php"}, {"name": "EvWatcher::start", "synopsis": "Marks the watcher as active. Note that only active watchers will receive events.", "usage": "public void EvWatcher::start ( void )", "url": "https://secure.php.net/manual/en/evwatcher.start.php"}, {"name": "EvWatcher::stop", "synopsis": "Marks the watcher as inactive. Note that only active watchers will receive events.", "usage": "public void EvWatcher::stop ( void )", "url": "https://secure.php.net/manual/en/evwatcher.stop.php"}, {"name": "Exception::__clone", "synopsis": "Tries to clone the Exception, which results in Fatal error.", "usage": "final private void Exception::__clone ( void )", "url": "https://secure.php.net/manual/en/exception.clone.php"}, {"name": "Exception::getCode", "synopsis": "Returns the Exception code.", "usage": "final public mixed Exception::getCode ( void )", "url": "https://secure.php.net/manual/en/exception.getcode.php"}, {"name": "Exception::getFile", "synopsis": "Get the name of the file in which the exception was created.", "usage": "final public string Exception::getFile ( void )", "url": "https://secure.php.net/manual/en/exception.getfile.php"}, {"name": "Exception::getLine", "synopsis": "Get line number where the exception was created.", "usage": "final public int Exception::getLine ( void )", "url": "https://secure.php.net/manual/en/exception.getline.php"}, {"name": "Exception::getMessage", "synopsis": "Returns the Exception message.", "usage": "final public string Exception::getMessage ( void )", "url": "https://secure.php.net/manual/en/exception.getmessage.php"}, {"name": "Exception::getPrevious", "synopsis": "Returns previous exception (the third parameter of Exception::__construct()).", "usage": "final public Throwable Exception::getPrevious ( void )", "url": "https://secure.php.net/manual/en/exception.getprevious.php"}, {"name": "Exception::getTrace", "synopsis": "Returns the Exception stack trace.", "usage": "final public array Exception::getTrace ( void )", "url": "https://secure.php.net/manual/en/exception.gettrace.php"}, {"name": "Exception::getTraceAsString", "synopsis": "Returns the Exception stack trace as a string.", "usage": "final public string Exception::getTraceAsString ( void )", "url": "https://secure.php.net/manual/en/exception.gettraceasstring.php"}, {"name": "Exception::__toString", "synopsis": "Returns the string representation of the exception.", "usage": "public string Exception::__toString ( void )", "url": "https://secure.php.net/manual/en/exception.tostring.php"}, {"name": "FANNConnection::__construct", "synopsis": "Create new connection and initialize its params. After creating the connection, only weight can be changed.", "usage": "public FANNConnection::__construct ( int $from_neuron , int $to_neuron , float $weight )", "url": "https://secure.php.net/manual/en/fannconnection.construct.php"}, {"name": "FANNConnection::getFromNeuron", "synopsis": "Returns the postions of starting neuron.", "usage": "public int FANNConnection::getFromNeuron ( void )", "url": "https://secure.php.net/manual/en/fannconnection.getfromneuron.php"}, {"name": "FANNConnection::getToNeuron", "synopsis": "Returns the postions of terminating neuron.", "usage": "public int FANNConnection::getToNeuron ( void )", "url": "https://secure.php.net/manual/en/fannconnection.gettoneuron.php"}, {"name": "FANNConnection::getWeight", "synopsis": "Returns the connection weight.", "usage": "public void FANNConnection::getWeight ( void )", "url": "https://secure.php.net/manual/en/fannconnection.getweight.php"}, {"name": "FANNConnection::setWeight", "synopsis": "Sets the connection weight.", "usage": "public void FANNConnection::setWeight ( float $weight )", "url": "https://secure.php.net/manual/en/fannconnection.setweight.php"}, {"name": "FilesystemIterator::__construct", "synopsis": "Constructs a new filesystem iterator from the path.", "usage": "public FilesystemIterator::__construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS ] )", "url": "https://secure.php.net/manual/en/filesystemiterator.construct.php"}, {"name": "FilesystemIterator::current", "synopsis": "Get file information of the current element.", "usage": "public mixed FilesystemIterator::current ( void )", "url": "https://secure.php.net/manual/en/filesystemiterator.current.php"}, {"name": "FilesystemIterator::getFlags", "synopsis": "Gets the handling flags, as set in FilesystemIterator::__construct() or FilesystemIterator::setFlags().", "usage": "public int FilesystemIterator::getFlags ( void )", "url": "https://secure.php.net/manual/en/filesystemiterator.getflags.php"}, {"name": "FilesystemIterator::key", "synopsis": null, "usage": "public string FilesystemIterator::key ( void )", "url": "https://secure.php.net/manual/en/filesystemiterator.key.php"}, {"name": "FilesystemIterator::next", "synopsis": "Move to the next file.", "usage": "public void FilesystemIterator::next ( void )", "url": "https://secure.php.net/manual/en/filesystemiterator.next.php"}, {"name": "FilesystemIterator::rewind", "synopsis": "Rewinds the directory back to the start.", "usage": "public void FilesystemIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/filesystemiterator.rewind.php"}, {"name": "FilesystemIterator::setFlags", "synopsis": "Sets handling flags.", "usage": "public void FilesystemIterator::setFlags ([ int $flags ] )", "url": "https://secure.php.net/manual/en/filesystemiterator.setflags.php"}, {"name": "FilterIterator::accept", "synopsis": "Returns whether the current element of the iterator is acceptable through this filter.", "usage": "public abstract bool FilterIterator::accept ( void )", "url": "https://secure.php.net/manual/en/filteriterator.accept.php"}, {"name": "FilterIterator::__construct", "synopsis": "Constructs a new FilterIterator, which consists of a passed in iterator with filters applied to it.", "usage": "public FilterIterator::__construct ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/filteriterator.construct.php"}, {"name": "FilterIterator::current", "synopsis": null, "usage": "public mixed FilterIterator::current ( void )", "url": "https://secure.php.net/manual/en/filteriterator.current.php"}, {"name": "FilterIterator::getInnerIterator", "synopsis": null, "usage": "public Iterator FilterIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/filteriterator.getinneriterator.php"}, {"name": "FilterIterator::key", "synopsis": null, "usage": "public mixed FilterIterator::key ( void )", "url": "https://secure.php.net/manual/en/filteriterator.key.php"}, {"name": "FilterIterator::next", "synopsis": null, "usage": "public void FilterIterator::next ( void )", "url": "https://secure.php.net/manual/en/filteriterator.next.php"}, {"name": "FilterIterator::rewind", "synopsis": null, "usage": "public void FilterIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/filteriterator.rewind.php"}, {"name": "FilterIterator::valid", "synopsis": null, "usage": "public bool FilterIterator::valid ( void )", "url": "https://secure.php.net/manual/en/filteriterator.valid.php"}, {"name": "finfo::buffer", "synopsis": "This function is an alias of: finfo_buffer()", "usage": "public string finfo::buffer ( string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/finfo.buffer.php"}, {"name": "finfo::file", "synopsis": "This function is an alias of: finfo_file()", "usage": "public string finfo::file ( string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/finfo.file.php"}, {"name": "finfo::set_flags", "synopsis": "This function is an alias of: finfo_set_flags()", "usage": "public bool finfo::set_flags ( int $options )", "url": "https://secure.php.net/manual/en/finfo.set-flags.php"}, {"name": "abs", "synopsis": "Returns the absolute value of number.", "usage": "number abs ( mixed $number )", "url": "https://secure.php.net/manual/en/function.abs.php"}, {"name": "acos", "synopsis": "Returns the arc cosine of arg in radians. acos() is the inverse function of cos(), which means that a==cos(acos(a)) for every value of a that is within acos()' range.", "usage": "float acos ( float $arg )", "url": "https://secure.php.net/manual/en/function.acos.php"}, {"name": "acosh", "synopsis": "Returns the inverse hyperbolic cosine of arg, i.e. the value whose hyperbolic cosine is arg.", "usage": "float acosh ( float $arg )", "url": "https://secure.php.net/manual/en/function.acosh.php"}, {"name": "addcslashes", "synopsis": "Returns a string with backslashes before characters that are listed in charlist parameter.", "usage": "string addcslashes ( string $str , string $charlist )", "url": "https://secure.php.net/manual/en/function.addcslashes.php"}, {"name": "addslashes", "synopsis": "Returns a string with backslashes added before characters that need to be escaped. These characters are:", "usage": "string addslashes ( string $str )", "url": "https://secure.php.net/manual/en/function.addslashes.php"}, {"name": "apache_child_terminate", "synopsis": "apache_child_terminate() will register the Apache process executing the current PHP request for termination once execution of PHP code is completed. It may be used to terminate a process after a script with high memory consumption has been run as memory will usually only be freed internally but not given back to the operating system.", "usage": "bool apache_child_terminate ( void )", "url": "https://secure.php.net/manual/en/function.apache-child-terminate.php"}, {"name": "apache_get_modules", "synopsis": "Get a list of loaded Apache modules.", "usage": "array apache_get_modules ( void )", "url": "https://secure.php.net/manual/en/function.apache-get-modules.php"}, {"name": "apache_get_version", "synopsis": "Fetch the Apache version.", "usage": "string apache_get_version ( void )", "url": "https://secure.php.net/manual/en/function.apache-get-version.php"}, {"name": "apache_getenv", "synopsis": "Retrieve an Apache environment variable specified by variable.", "usage": "string apache_getenv ( string $variable [, bool $walk_to_top = FALSE ] )", "url": "https://secure.php.net/manual/en/function.apache-getenv.php"}, {"name": "apache_lookup_uri", "synopsis": "This performs a partial request for a URI. It goes just far enough to obtain all the important information about the given resource.", "usage": "object apache_lookup_uri ( string $filename )", "url": "https://secure.php.net/manual/en/function.apache-lookup-uri.php"}, {"name": "apache_note", "synopsis": "This function is a wrapper for Apache's table_get and table_set. It edits the table of notes that exists during a request. The table's purpose is to allow Apache modules to communicate.", "usage": "string apache_note ( string $note_name [, string $note_value = \"\" ] )", "url": "https://secure.php.net/manual/en/function.apache-note.php"}, {"name": "apache_request_headers", "synopsis": "Fetches all HTTP request headers from the current request.", "usage": "array apache_request_headers ( void )", "url": "https://secure.php.net/manual/en/function.apache-request-headers.php"}, {"name": "apache_reset_timeout", "synopsis": "apache_reset_timeout() resets the Apache write timer, which defaults to 300 seconds. With set_time_limit(0); ignore_user_abort(true) and periodic apache_reset_timeout() calls, Apache can theoretically run forever.", "usage": "bool apache_reset_timeout ( void )", "url": "https://secure.php.net/manual/en/function.apache-reset-timeout.php"}, {"name": "apache_response_headers", "synopsis": "Fetch all HTTP response headers.", "usage": "array apache_response_headers ( void )", "url": "https://secure.php.net/manual/en/function.apache-response-headers.php"}, {"name": "apache_setenv", "synopsis": "apache_setenv() sets the value of the Apache environment variable specified by variable.", "usage": "bool apache_setenv ( string $variable , string $value [, bool $walk_to_top = FALSE ] )", "url": "https://secure.php.net/manual/en/function.apache-setenv.php"}, {"name": "apc_add", "synopsis": "Caches a variable in the data store, only if it's not already stored.", "usage": "bool apc_add ( string $key , mixed $var [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.apc-add.php"}, {"name": "apc_bin_dump", "synopsis": "Returns a binary dump of the given files and user variables from the APC cache. A NULL for files or user_vars signals a dump of every entry, whereas array() will dump nothing.", "usage": "string apc_bin_dump ([ array $files = NULL [, array $user_vars = NULL ]] )", "url": "https://secure.php.net/manual/en/function.apc-bin-dump.php"}, {"name": "apc_bin_dumpfile", "synopsis": "Outputs a binary dump of the given files and user variables from the APC cache to the named file.", "usage": "int apc_bin_dumpfile ( array $files , array $user_vars , string $filename [, int $flags = 0 [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/function.apc-bin-dumpfile.php"}, {"name": "apc_bin_load", "synopsis": "Loads the given binary dump into the APC file/user cache.", "usage": "bool apc_bin_load ( string $data [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.apc-bin-load.php"}, {"name": "apc_bin_loadfile", "synopsis": "Loads a binary dump from a file into the APC file/user cache.", "usage": "bool apc_bin_loadfile ( string $filename [, resource $context = NULL [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/function.apc-bin-loadfile.php"}, {"name": "apc_cache_info", "synopsis": "Retrieves cached information and meta-data from APC's data store.", "usage": "array apc_cache_info ([ string $cache_type = \"\" [, bool $limited = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.apc-cache-info.php"}, {"name": "apc_cas", "synopsis": "apc_cas() updates an already existing integer value if the old parameter matches the currently stored value with the value of the new parameter.", "usage": "bool apc_cas ( string $key , int $old , int $new )", "url": "https://secure.php.net/manual/en/function.apc-cas.php"}, {"name": "apc_clear_cache", "synopsis": "Clears the user/system cache.", "usage": "bool apc_clear_cache ([ string $cache_type = \"\" ] )", "url": "https://secure.php.net/manual/en/function.apc-clear-cache.php"}, {"name": "apc_compile_file", "synopsis": "Stores a file in the bytecode cache, bypassing all filters.", "usage": "mixed apc_compile_file ( string $filename [, bool $atomic = TRUE ] )", "url": "https://secure.php.net/manual/en/function.apc-compile-file.php"}, {"name": "apc_dec", "synopsis": "Decreases a stored integer value.", "usage": "int apc_dec ( string $key [, int $step = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.apc-dec.php"}, {"name": "apc_define_constants", "synopsis": "define() is notoriously slow. Since the main benefit of APC is to increase the performance of scripts/applications, this mechanism is provided to streamline the process of mass constant definition. However, this function does not perform as well as anticipated.", "usage": "bool apc_define_constants ( string $key , array $constants [, bool $case_sensitive = TRUE ] )", "url": "https://secure.php.net/manual/en/function.apc-define-constants.php"}, {"name": "apc_delete_file", "synopsis": "Deletes the given files from the opcode cache.", "usage": "mixed apc_delete_file ( mixed $keys )", "url": "https://secure.php.net/manual/en/function.apc-delete-file.php"}, {"name": "apc_delete", "synopsis": "Removes a stored variable from the cache.", "usage": "mixed apc_delete ( string $key )", "url": "https://secure.php.net/manual/en/function.apc-delete.php"}, {"name": "apc_exists", "synopsis": "Checks if one or more APC keys exist.", "usage": "mixed apc_exists ( mixed $keys )", "url": "https://secure.php.net/manual/en/function.apc-exists.php"}, {"name": "apc_fetch", "synopsis": "Fetchs a stored variable from the cache.", "usage": "mixed apc_fetch ( mixed $key [, bool &$success ] )", "url": "https://secure.php.net/manual/en/function.apc-fetch.php"}, {"name": "apc_inc", "synopsis": "Increases a stored number.", "usage": "int apc_inc ( string $key [, int $step = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.apc-inc.php"}, {"name": "apc_load_constants", "synopsis": "Loads a set of constants from the cache.", "usage": "bool apc_load_constants ( string $key [, bool $case_sensitive = TRUE ] )", "url": "https://secure.php.net/manual/en/function.apc-load-constants.php"}, {"name": "apc_sma_info", "synopsis": "Retrieves APC's Shared Memory Allocation information.", "usage": "array apc_sma_info ([ bool $limited = FALSE ] )", "url": "https://secure.php.net/manual/en/function.apc-sma-info.php"}, {"name": "apc_store", "synopsis": "Cache a variable in the data store.", "usage": "bool apc_store ( string $key , mixed $var [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.apc-store.php"}, {"name": "apcu_add", "synopsis": "Caches a variable in the data store, only if it's not already stored.", "usage": "bool apcu_add ( string $key , mixed $var [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.apcu-add.php"}, {"name": "apcu_cache_info", "synopsis": "Retrieves cached information and meta-data from APC's data store.", "usage": "array apcu_cache_info ([ bool $limited = FALSE ] )", "url": "https://secure.php.net/manual/en/function.apcu-cache-info.php"}, {"name": "apcu_cas", "synopsis": "apcu_cas() updates an already existing integer value if the old parameter matches the currently stored value with the value of the new parameter.", "usage": "bool apcu_cas ( string $key , int $old , int $new )", "url": "https://secure.php.net/manual/en/function.apcu-cas.php"}, {"name": "apcu_clear_cache", "synopsis": "Clears the cache.", "usage": "bool apcu_clear_cache ( void )", "url": "https://secure.php.net/manual/en/function.apcu-clear-cache.php"}, {"name": "apcu_dec", "synopsis": "Decreases a stored integer value.", "usage": "int apcu_dec ( string $key [, int $step = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.apcu-dec.php"}, {"name": "apcu_delete", "synopsis": "Removes a stored variable from the cache.", "usage": "bool apcu_delete ( mixed $key )", "url": "https://secure.php.net/manual/en/function.apcu-delete.php"}, {"name": "apcu_entry", "synopsis": "Atomically attempts to find key in the cache, if it cannot be found generator is called, passing key as the only argument. The return value of the call is then cached with the optionally specified ttl, and returned.", "usage": "mixed apcu_entry ( string $key , callable $generator [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.apcu-entry.php"}, {"name": "apcu_exists", "synopsis": "Checks if one or more APCu entries exist.", "usage": "mixed apcu_exists ( mixed $keys )", "url": "https://secure.php.net/manual/en/function.apcu-exists.php"}, {"name": "apcu_fetch", "synopsis": "Fetchs an entry from the cache.", "usage": "mixed apcu_fetch ( mixed $key [, bool &$success ] )", "url": "https://secure.php.net/manual/en/function.apcu-fetch.php"}, {"name": "apcu_inc", "synopsis": "Increases a stored number.", "usage": "int apcu_inc ( string $key [, int $step = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.apcu-inc.php"}, {"name": "apcu_sma_info", "synopsis": "Retrieves APCu Shared Memory Allocation information.", "usage": "array apcu_sma_info ([ bool $limited = FALSE ] )", "url": "https://secure.php.net/manual/en/function.apcu-sma-info.php"}, {"name": "apcu_store", "synopsis": "Cache a variable in the data store.", "usage": "bool apcu_store ( string $key , mixed $var [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.apcu-store.php"}, {"name": "apd_breakpoint", "synopsis": "This can be used to stop the running of your script, and await responses on the connected socket. To step the program, just send enter (a blank line), or enter a php command to be executed.", "usage": "bool apd_breakpoint ( int $debug_level )", "url": "https://secure.php.net/manual/en/function.apd-breakpoint.php"}, {"name": "apd_callstack", "synopsis": "Returns the current call stack as an array", "usage": "array apd_callstack ( void )", "url": "https://secure.php.net/manual/en/function.apd-callstack.php"}, {"name": "apd_clunk", "synopsis": "Behaves like perl's Carp::cluck. Throw a warning and a callstack.", "usage": "void apd_clunk ( string $warning [, string $delimiter = \"<BR />\" ] )", "url": "https://secure.php.net/manual/en/function.apd-clunk.php"}, {"name": "apd_continue", "synopsis": "Usually sent via the socket to restart the interpreter.", "usage": "bool apd_continue ( int $debug_level )", "url": "https://secure.php.net/manual/en/function.apd-continue.php"}, {"name": "apd_croak", "synopsis": "Behaves like perl's Carp::croak. Throw an error, a callstack and then exit.", "usage": "void apd_croak ( string $warning [, string $delimiter = \"<BR />\" ] )", "url": "https://secure.php.net/manual/en/function.apd-croak.php"}, {"name": "apd_dump_function_table", "synopsis": "Outputs the current function table.", "usage": "void apd_dump_function_table ( void )", "url": "https://secure.php.net/manual/en/function.apd-dump-function-table.php"}, {"name": "apd_dump_persistent_resources", "synopsis": "Return all persistent resources as an array.", "usage": "array apd_dump_persistent_resources ( void )", "url": "https://secure.php.net/manual/en/function.apd-dump-persistent-resources.php"}, {"name": "apd_dump_regular_resources", "synopsis": "Return all current regular resources as an array.", "usage": "array apd_dump_regular_resources ( void )", "url": "https://secure.php.net/manual/en/function.apd-dump-regular-resources.php"}, {"name": "apd_echo", "synopsis": "Usually sent via the socket to request information about the running script.", "usage": "bool apd_echo ( string $output )", "url": "https://secure.php.net/manual/en/function.apd-echo.php"}, {"name": "apd_get_active_symbols", "synopsis": "Returns the names of all the variables defined in the active scope, (not their values).", "usage": "array apd_get_active_symbols ( void )", "url": "https://secure.php.net/manual/en/function.apd-get-active-symbols.php"}, {"name": "apd_set_pprof_trace", "synopsis": "Starts debugging to pprof_{process_id} in the dump directory.", "usage": "string apd_set_pprof_trace ([ string $dump_directory = ini_get(\"apd.dumpdir\") [, string $fragment = \"pprof\" ]] )", "url": "https://secure.php.net/manual/en/function.apd-set-pprof-trace.php"}, {"name": "apd_set_session_trace_socket", "synopsis": "Connects to the specified tcp_server (eg. tcplisten) and sends debugging data to the socket.", "usage": "bool apd_set_session_trace_socket ( string $tcp_server , int $socket_type , int $port , int $debug_level )", "url": "https://secure.php.net/manual/en/function.apd-set-session-trace-socket.php"}, {"name": "apd_set_session_trace", "synopsis": "Starts debugging to apd_dump_{process_id} in the dump directory.", "usage": "void apd_set_session_trace ( int $debug_level [, string $dump_directory = ini_get(\"apd.dumpdir\") ] )", "url": "https://secure.php.net/manual/en/function.apd-set-session-trace.php"}, {"name": "apd_set_session", "synopsis": "This can be used to increase or decrease debugging in a different area of your application.", "usage": "void apd_set_session ( int $debug_level )", "url": "https://secure.php.net/manual/en/function.apd-set-session.php"}, {"name": "array_change_key_case", "synopsis": "Returns an array with all keys from array lowercased or uppercased. Numbered indices are left as is.", "usage": "array array_change_key_case ( array $array [, int $case = CASE_LOWER ] )", "url": "https://secure.php.net/manual/en/function.array-change-key-case.php"}, {"name": "array_chunk", "synopsis": "Chunks an array into arrays with size elements. The last chunk may contain less than size elements.", "usage": "array array_chunk ( array $array , int $size [, bool $preserve_keys = FALSE ] )", "url": "https://secure.php.net/manual/en/function.array-chunk.php"}, {"name": "array_column", "synopsis": "array_column() returns the values from a single column of the input, identified by the column_key. Optionally, an index_key may be provided to index the values in the returned array by the values from the index_key column of the input array.", "usage": "array array_column ( array $input , mixed $column_key [, mixed $index_key = NULL ] )", "url": "https://secure.php.net/manual/en/function.array-column.php"}, {"name": "array_combine", "synopsis": "Creates an array by using the values from the keys array as keys and the values from the values array as the corresponding values.", "usage": "array array_combine ( array $keys , array $values )", "url": "https://secure.php.net/manual/en/function.array-combine.php"}, {"name": "array_count_values", "synopsis": "array_count_values() returns an array using the values of array as keys and their frequency in array as values.", "usage": "array array_count_values ( array $array )", "url": "https://secure.php.net/manual/en/function.array-count-values.php"}, {"name": "array_diff_assoc", "synopsis": "Compares array1 against array2 and returns the difference. Unlike array_diff() the array keys are also used in the comparison.", "usage": "array array_diff_assoc ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-diff-assoc.php"}, {"name": "array_diff_key", "synopsis": "Compares the keys from array1 against the keys from array2 and returns the difference. This function is like array_diff() except the comparison is done on the keys instead of the values.", "usage": "array array_diff_key ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-diff-key.php"}, {"name": "array_diff_uassoc", "synopsis": "Compares array1 against array2 and returns the difference. Unlike array_diff() the array keys are used in the comparison.", "usage": "array array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-diff-uassoc.php"}, {"name": "array_diff_ukey", "synopsis": "Compares the keys from array1 against the keys from array2 and returns the difference. This function is like array_diff() except the comparison is done on the keys instead of the values.", "usage": "array array_diff_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-diff-ukey.php"}, {"name": "array_diff", "synopsis": "Compares array1 against one or more other arrays and returns the values in array1 that are not present in any of the other arrays.", "usage": "array array_diff ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-diff.php"}, {"name": "array_fill_keys", "synopsis": "Fills an array with the value of the value parameter, using the values of the keys array as keys.", "usage": "array array_fill_keys ( array $keys , mixed $value )", "url": "https://secure.php.net/manual/en/function.array-fill-keys.php"}, {"name": "array_fill", "synopsis": "Fills an array with num entries of the value of the value parameter, keys starting at the start_index parameter.", "usage": "array array_fill ( int $start_index , int $num , mixed $value )", "url": "https://secure.php.net/manual/en/function.array-fill.php"}, {"name": "array_filter", "synopsis": "Iterates over each value in the array passing them to the callback function. If the callback function returns true, the current value from array is returned into the result array. Array keys are preserved.", "usage": "array array_filter ( array $array [, callable $callback [, int $flag = 0 ]] )", "url": "https://secure.php.net/manual/en/function.array-filter.php"}, {"name": "array_flip", "synopsis": "array_flip() returns an array in flip order, i.e. keys from array become values and values from array become keys.", "usage": "array array_flip ( array $array )", "url": "https://secure.php.net/manual/en/function.array-flip.php"}, {"name": "array_intersect_assoc", "synopsis": null, "usage": "array array_intersect_assoc ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-intersect-assoc.php"}, {"name": "array_intersect_key", "synopsis": "array_intersect_key() returns an array containing all the entries of array1 which have keys that are present in all the arguments.", "usage": "array array_intersect_key ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-intersect-key.php"}, {"name": "array_intersect_uassoc", "synopsis": "array_intersect_uassoc() returns an array containing all the values of array1 that are present in all the arguments. Note that the keys are used in the comparison unlike in array_intersect().", "usage": "array array_intersect_uassoc ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-intersect-uassoc.php"}, {"name": "array_intersect_ukey", "synopsis": "array_intersect_ukey() returns an array containing all the values of array1 which have matching keys that are present in all the arguments.", "usage": "array array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-intersect-ukey.php"}, {"name": "array_intersect", "synopsis": "array_intersect() returns an array containing all the values of array1 that are present in all the arguments. Note that keys are preserved.", "usage": "array array_intersect ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-intersect.php"}, {"name": "array_key_exists", "synopsis": "array_key_exists() returns TRUE if the given key is set in the array. key can be any value possible for an array index.", "usage": "bool array_key_exists ( mixed $key , array $array )", "url": "https://secure.php.net/manual/en/function.array-key-exists.php"}, {"name": "array_keys", "synopsis": "array_keys() returns the keys, numeric and string, from the array.", "usage": "array array_keys ( array $array [, mixed $search_value = NULL [, bool $strict = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.array-keys.php"}, {"name": "array_map", "synopsis": "array_map() returns an array containing all the elements of array1 after applying the callback function to each one. The number of parameters that the callback function accepts should match the number of arrays passed to the array_map()", "usage": "array array_map ( callable $callback , array $array1 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-map.php"}, {"name": "array_merge_recursive", "synopsis": "array_merge_recursive() merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array.", "usage": "array array_merge_recursive ( array $array1 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-merge-recursive.php"}, {"name": "array_merge", "synopsis": "Merges the elements of one or more arrays together so that the values of one are appended to the end of the previous one. It returns the resulting array.", "usage": "array array_merge ( array $array1 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-merge.php"}, {"name": "array_multisort", "synopsis": "array_multisort() can be used to sort several arrays at once, or a multi-dimensional array by one or more dimensions.", "usage": "bool array_multisort ( array &$array1 [, mixed $array1_sort_order = SORT_ASC [, mixed $array1_sort_flags = SORT_REGULAR [, mixed $... ]]] )", "url": "https://secure.php.net/manual/en/function.array-multisort.php"}, {"name": "array_pad", "synopsis": "array_pad() returns a copy of the array padded to size specified by size with value value. If size is positive then the array is padded on the right, if it's negative then on the left. If the absolute value of size is less than or equal to the length of the array then no padding takes place. It is possible to add at most 1048576 elements at a time.", "usage": "array array_pad ( array $array , int $size , mixed $value )", "url": "https://secure.php.net/manual/en/function.array-pad.php"}, {"name": "array_pop", "synopsis": "array_pop() pops and returns the last value of the array, shortening the array by one element.", "usage": "mixed array_pop ( array &$array )", "url": "https://secure.php.net/manual/en/function.array-pop.php"}, {"name": "array_product", "synopsis": "array_product() returns the product of values in an array.", "usage": "number array_product ( array $array )", "url": "https://secure.php.net/manual/en/function.array-product.php"}, {"name": "array_push", "synopsis": "array_push() treats array as a stack, and pushes the passed variables onto the end of array. The length of array increases by the number of variables pushed. Has the same effect as:", "usage": "int array_push ( array &$array [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.array-push.php"}, {"name": "array_rand", "synopsis": "Picks one or more random entries out of an array, and returns the key (or keys) of the random entries. It uses a pseudo random number generator that is not suitable for cryptographic purposes.", "usage": "mixed array_rand ( array $array [, int $num = 1 ] )", "url": "https://secure.php.net/manual/en/function.array-rand.php"}, {"name": "array_reduce", "synopsis": "array_reduce() applies iteratively the callback function to the elements of the array, so as to reduce the array to a single value.", "usage": "mixed array_reduce ( array $array , callable $callback [, mixed $initial = NULL ] )", "url": "https://secure.php.net/manual/en/function.array-reduce.php"}, {"name": "array_replace_recursive", "synopsis": "array_replace_recursive() replaces the values of array1 with the same values from all the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later array overwriting the previous values.", "usage": "array array_replace_recursive ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-replace-recursive.php"}, {"name": "array_replace", "synopsis": "array_replace() replaces the values of array1 with values having the same keys in each of the following arrays. If a key from the first array exists in the second array, its value will be replaced by the value from the second array. If the key exists in the second array, and not the first, it will be created in the first array. If a key only exists in the first array, it will be left as is. If several arrays are passed for replacement, they will be processed in order, the later arrays overwriting the previous values.", "usage": "array array_replace ( array $array1 , array $array2 [, array $... ] )", "url": "https://secure.php.net/manual/en/function.array-replace.php"}, {"name": "array_reverse", "synopsis": "Takes an input array and returns a new array with the order of the elements reversed.", "usage": "array array_reverse ( array $array [, bool $preserve_keys = FALSE ] )", "url": "https://secure.php.net/manual/en/function.array-reverse.php"}, {"name": "array_search", "synopsis": "Searches haystack for needle.", "usage": "mixed array_search ( mixed $needle , array $haystack [, bool $strict = FALSE ] )", "url": "https://secure.php.net/manual/en/function.array-search.php"}, {"name": "array_shift", "synopsis": "array_shift() shifts the first value of the array off and returns it, shortening the array by one element and moving everything down. All numerical array keys will be modified to start counting from zero while literal keys won't be touched.", "usage": "mixed array_shift ( array &$array )", "url": "https://secure.php.net/manual/en/function.array-shift.php"}, {"name": "array_slice", "synopsis": "array_slice() returns the sequence of elements from the array array as specified by the offset and length parameters.", "usage": "array array_slice ( array $array , int $offset [, int $length = NULL [, bool $preserve_keys = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.array-slice.php"}, {"name": "array_splice", "synopsis": "Removes the elements designated by offset and length from the input array, and replaces them with the elements of the replacement array, if supplied.", "usage": "array array_splice ( array &$input , int $offset [, int $length = count($input) [, mixed $replacement = array() ]] )", "url": "https://secure.php.net/manual/en/function.array-splice.php"}, {"name": "array_sum", "synopsis": "array_sum() returns the sum of values in an array.", "usage": "number array_sum ( array $array )", "url": "https://secure.php.net/manual/en/function.array-sum.php"}, {"name": "array_udiff_assoc", "synopsis": "Computes the difference of arrays with additional index check, compares data by a callback function.", "usage": "array array_udiff_assoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.array-udiff-assoc.php"}, {"name": "array_udiff_uassoc", "synopsis": "Computes the difference of arrays with additional index check, compares data and indexes by a callback function.", "usage": "array array_udiff_uassoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func , callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-udiff-uassoc.php"}, {"name": "array_udiff", "synopsis": "Computes the difference of arrays by using a callback function for data comparison. This is unlike array_diff() which uses an internal function for comparing the data.", "usage": "array array_udiff ( array $array1 , array $array2 [, array $... ], callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.array-udiff.php"}, {"name": "array_uintersect_assoc", "synopsis": "Computes the intersection of arrays with additional index check, compares data by a callback function.", "usage": "array array_uintersect_assoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.array-uintersect-assoc.php"}, {"name": "array_uintersect_uassoc", "synopsis": "Computes the intersection of arrays with additional index check, compares data and indexes by separate callback functions.", "usage": "array array_uintersect_uassoc ( array $array1 , array $array2 [, array $... ], callable $value_compare_func , callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.array-uintersect-uassoc.php"}, {"name": "array_uintersect", "synopsis": "Computes the intersection of arrays, compares data by a callback function.", "usage": "array array_uintersect ( array $array1 , array $array2 [, array $... ], callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.array-uintersect.php"}, {"name": "array_unique", "synopsis": "Takes an input array and returns a new array without duplicate values.", "usage": "array array_unique ( array $array [, int $sort_flags = SORT_STRING ] )", "url": "https://secure.php.net/manual/en/function.array-unique.php"}, {"name": "array_unshift", "synopsis": "array_unshift() prepends passed elements to the front of the array. Note that the list of elements is prepended as a whole, so that the prepended elements stay in the same order. All numerical array keys will be modified to start counting from zero while literal keys won't be changed.", "usage": "int array_unshift ( array &$array [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.array-unshift.php"}, {"name": "array_values", "synopsis": "array_values() returns all the values from the array and indexes the array numerically.", "usage": "array array_values ( array $array )", "url": "https://secure.php.net/manual/en/function.array-values.php"}, {"name": "array_walk_recursive", "synopsis": "Applies the user-defined callback function to each element of the array. This function will recurse into deeper arrays.", "usage": "bool array_walk_recursive ( array &$array , callable $callback [, mixed $userdata = NULL ] )", "url": "https://secure.php.net/manual/en/function.array-walk-recursive.php"}, {"name": "array_walk", "synopsis": null, "usage": "bool array_walk ( array &$array , callable $callback [, mixed $userdata = NULL ] )", "url": "https://secure.php.net/manual/en/function.array-walk.php"}, {"name": "array", "synopsis": "Creates an array. Read the section on the array type for more information on what an array is.", "usage": "array array ([ mixed $... ] )", "url": "https://secure.php.net/manual/en/function.array.php"}, {"name": "arsort", "synopsis": "This function sorts an array such that array indices maintain their correlation with the array elements they are associated with.", "usage": "bool arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.arsort.php"}, {"name": "asin", "synopsis": "Returns the arc sine of arg in radians. asin() is the inverse function of sin(), which means that a==sin(asin(a)) for every value of a that is within asin()'s range.", "usage": "float asin ( float $arg )", "url": "https://secure.php.net/manual/en/function.asin.php"}, {"name": "asinh", "synopsis": "Returns the inverse hyperbolic sine of arg, i.e. the value whose hyperbolic sine is arg.", "usage": "float asinh ( float $arg )", "url": "https://secure.php.net/manual/en/function.asinh.php"}, {"name": "asort", "synopsis": "This function sorts an array such that array indices maintain their correlation with the array elements they are associated with. This is used mainly when sorting associative arrays where the actual element order is significant.", "usage": "bool asort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.asort.php"}, {"name": "assert_options", "synopsis": "Set the various assert() control options or just query their current settings.", "usage": "mixed assert_options ( int $what [, mixed $value ] )", "url": "https://secure.php.net/manual/en/function.assert-options.php"}, {"name": "assert", "synopsis": "PHP 7", "usage": "bool assert ( mixed $assertion [, string $description ] )", "url": "https://secure.php.net/manual/en/function.assert.php"}, {"name": "atan", "synopsis": "Returns the arc tangent of arg in radians. atan() is the inverse function of tan(), which means that a==tan(atan(a)) for every value of a that is within atan()'s range.", "usage": "float atan ( float $arg )", "url": "https://secure.php.net/manual/en/function.atan.php"}, {"name": "atan2", "synopsis": null, "usage": "float atan2 ( float $y , float $x )", "url": "https://secure.php.net/manual/en/function.atan2.php"}, {"name": "atanh", "synopsis": "Returns the inverse hyperbolic tangent of arg, i.e. the value whose hyperbolic tangent is arg.", "usage": "float atanh ( float $arg )", "url": "https://secure.php.net/manual/en/function.atanh.php"}, {"name": "__autoload", "synopsis": "You can define this function to enable classes autoloading.", "usage": "void __autoload ( string $class )", "url": "https://secure.php.net/manual/en/function.autoload.php"}, {"name": "base_convert", "synopsis": "Returns a string containing number represented in base tobase. The base in which number is given is specified in frombase. Both frombase and tobase have to be between 2 and 36, inclusive. Digits in numbers with a base higher than 10 will be represented with the letters a-z, with a meaning 10, b meaning 11 and z meaning 35. The case of the letters doesn't matter, i.e. number is interpreted case-insensitively.", "usage": "string base_convert ( string $number , int $frombase , int $tobase )", "url": "https://secure.php.net/manual/en/function.base-convert.php"}, {"name": "base64_decode", "synopsis": "Decodes a base64 encoded data.", "usage": "string base64_decode ( string $data [, bool $strict = FALSE ] )", "url": "https://secure.php.net/manual/en/function.base64-decode.php"}, {"name": "base64_encode", "synopsis": "Encodes the given data with base64.", "usage": "string base64_encode ( string $data )", "url": "https://secure.php.net/manual/en/function.base64-encode.php"}, {"name": "basename", "synopsis": "Given a string containing the path to a file or directory, this function will return the trailing name component.", "usage": "string basename ( string $path [, string $suffix ] )", "url": "https://secure.php.net/manual/en/function.basename.php"}, {"name": "bbcode_add_element", "synopsis": "Adds a tag to an existing BBCode_Container tag_set using tag_rules.", "usage": "bool bbcode_add_element ( resource $bbcode_container , string $tag_name , array $tag_rules )", "url": "https://secure.php.net/manual/en/function.bbcode-add-element.php"}, {"name": "bbcode_add_smiley", "synopsis": "Adds a smiley to the parser", "usage": "bool bbcode_add_smiley ( resource $bbcode_container , string $smiley , string $replace_by )", "url": "https://secure.php.net/manual/en/function.bbcode-add-smiley.php"}, {"name": "bbcode_create", "synopsis": "This function returns a new BBCode Resource used to parse BBCode strings.", "usage": "resource bbcode_create ([ array $bbcode_initial_tags = NULL ] )", "url": "https://secure.php.net/manual/en/function.bbcode-create.php"}, {"name": "bbcode_destroy", "synopsis": "This function closes the resource opened by bbcode_create().", "usage": "bool bbcode_destroy ( resource $bbcode_container )", "url": "https://secure.php.net/manual/en/function.bbcode-destroy.php"}, {"name": "bbcode_parse", "synopsis": "This function parse the string to_parse following the rules in the bbcode_container created by bbcode_create()", "usage": "string bbcode_parse ( resource $bbcode_container , string $to_parse )", "url": "https://secure.php.net/manual/en/function.bbcode-parse.php"}, {"name": "bbcode_set_arg_parser", "synopsis": "Attaches another parser to the bbcode_container. This parser is used only when arguments must be parsed. If this function is not used, the default argument parser is the parser itself.", "usage": "bool bbcode_set_arg_parser ( resource $bbcode_container , resource $bbcode_arg_parser )", "url": "https://secure.php.net/manual/en/function.bbcode-set-arg-parser.php"}, {"name": "bbcode_set_flags", "synopsis": "Set or alter parser options", "usage": "bool bbcode_set_flags ( resource $bbcode_container , int $flags [, int $mode = BBCODE_SET_FLAGS_SET ] )", "url": "https://secure.php.net/manual/en/function.bbcode-set-flags.php"}, {"name": "bcadd", "synopsis": "Sums left_operand and right_operand.", "usage": "string bcadd ( string $left_operand , string $right_operand [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcadd.php"}, {"name": "bccomp", "synopsis": "Compares the left_operand to the right_operand and returns the result as an integer.", "usage": "int bccomp ( string $left_operand , string $right_operand [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bccomp.php"}, {"name": "bcdiv", "synopsis": "Divides the dividend by the divisor.", "usage": "string bcdiv ( string $dividend , string $divisor [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcdiv.php"}, {"name": "bcmod", "synopsis": "Get the remainder of dividing dividend by divisor. Unless divisor is zero, the result has the same sign as dividend.", "usage": "string bcmod ( string $dividend , string $divisor [, int $scale ] )", "url": "https://secure.php.net/manual/en/function.bcmod.php"}, {"name": "bcmul", "synopsis": "Multiply the left_operand by the right_operand.", "usage": "string bcmul ( string $left_operand , string $right_operand [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcmul.php"}, {"name": "bcompiler_load_exe", "synopsis": "Reads data from a bcompiler exe file and creates classes from the bytecodes.", "usage": "bool bcompiler_load_exe ( string $filename )", "url": "https://secure.php.net/manual/en/function.bcompiler-load-exe.php"}, {"name": "bcompiler_load", "synopsis": "Reads data from a bzcompressed file and creates classes from the bytecodes.", "usage": "bool bcompiler_load ( string $filename )", "url": "https://secure.php.net/manual/en/function.bcompiler-load.php"}, {"name": "bcompiler_parse_class", "synopsis": "Reads the bytecodes of a class and calls back to a user function.", "usage": "bool bcompiler_parse_class ( string $class , string $callback )", "url": "https://secure.php.net/manual/en/function.bcompiler-parse-class.php"}, {"name": "bcompiler_read", "synopsis": "Reads data from a open file handle and creates classes from the bytecodes.", "usage": "bool bcompiler_read ( resource $filehandle )", "url": "https://secure.php.net/manual/en/function.bcompiler-read.php"}, {"name": "bcompiler_write_class", "synopsis": "Reads the bytecodes from PHP for an existing class, and writes them to the open file handle.", "usage": "bool bcompiler_write_class ( resource $filehandle , string $className [, string $extends ] )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-class.php"}, {"name": "bcompiler_write_constant", "synopsis": "Reads the bytecodes from PHP for an existing constant, and writes them to the open file handle.", "usage": "bool bcompiler_write_constant ( resource $filehandle , string $constantName )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-constant.php"}, {"name": "bcompiler_write_exe_footer", "synopsis": "An EXE (or self executable) file consists of 3 parts:", "usage": "bool bcompiler_write_exe_footer ( resource $filehandle , int $startpos )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-exe-footer.php"}, {"name": "bcompiler_write_file", "synopsis": "This function compiles specified source file into bytecodes, and writes them to the open file handle.", "usage": "bool bcompiler_write_file ( resource $filehandle , string $filename )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-file.php"}, {"name": "bcompiler_write_footer", "synopsis": "Writes the single character \\x00 to indicate End of compiled data.", "usage": "bool bcompiler_write_footer ( resource $filehandle )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-footer.php"}, {"name": "bcompiler_write_function", "synopsis": "Reads the bytecodes from PHP for an existing function, and writes them to the open file handle. Order is not important, (eg. if function b uses function a, and you compile it like the example below, it will work perfectly OK).", "usage": "bool bcompiler_write_function ( resource $filehandle , string $functionName )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-function.php"}, {"name": "bcompiler_write_functions_from_file", "synopsis": "Searches for all functions declared in the given file, and writes their correspondent bytecodes to the open file handle.", "usage": "bool bcompiler_write_functions_from_file ( resource $filehandle , string $fileName )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-functions-from-file.php"}, {"name": "bcompiler_write_header", "synopsis": "Writes the header part of a bcompiler file.", "usage": "bool bcompiler_write_header ( resource $filehandle [, string $write_ver ] )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-header.php"}, {"name": "bcompiler_write_included_filename", "synopsis": null, "usage": "bool bcompiler_write_included_filename ( resource $filehandle , string $filename )", "url": "https://secure.php.net/manual/en/function.bcompiler-write-included-filename.php"}, {"name": "bcpow", "synopsis": "Raise base to the power exponent.", "usage": "string bcpow ( string $base , string $exponent [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcpow.php"}, {"name": "bcpowmod", "synopsis": "Use the fast-exponentiation method to raise base to the power exponent with respect to the modulus modulus.", "usage": "string bcpowmod ( string $base , string $exponent , string $modulus [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcpowmod.php"}, {"name": "bcscale", "synopsis": "Sets the default scale parameter for all subsequent calls to bc math functions that do not explicitly specify a scale parameter. If scale is omitted, the function gets the current scale factor.", "usage": "int bcscale ([ int $scale ] )", "url": "https://secure.php.net/manual/en/function.bcscale.php"}, {"name": "bcsqrt", "synopsis": "Return the square root of the operand.", "usage": "string bcsqrt ( string $operand [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcsqrt.php"}, {"name": "bcsub", "synopsis": "Subtracts the right_operand from the left_operand.", "usage": "string bcsub ( string $left_operand , string $right_operand [, int $scale = 0 ] )", "url": "https://secure.php.net/manual/en/function.bcsub.php"}, {"name": "bin2hex", "synopsis": "Returns an ASCII string containing the hexadecimal representation of str. The conversion is done byte-wise with the high-nibble first.", "usage": "string bin2hex ( string $str )", "url": "https://secure.php.net/manual/en/function.bin2hex.php"}, {"name": "bind_textdomain_codeset", "synopsis": "With bind_textdomain_codeset(), you can set in which encoding will be messages from domain returned by gettext() and similar functions.", "usage": "string bind_textdomain_codeset ( string $domain , string $codeset )", "url": "https://secure.php.net/manual/en/function.bind-textdomain-codeset.php"}, {"name": "bindec", "synopsis": "Returns the decimal equivalent of the binary number represented by the binary_string argument.", "usage": "number bindec ( string $binary_string )", "url": "https://secure.php.net/manual/en/function.bindec.php"}, {"name": "bindtextdomain", "synopsis": "The bindtextdomain() function sets the path for a domain.", "usage": "string bindtextdomain ( string $domain , string $directory )", "url": "https://secure.php.net/manual/en/function.bindtextdomain.php"}, {"name": "blenc_encrypt", "synopsis": "Encrypt the plaintext content and write it into encodedfile", "usage": "string blenc_encrypt ( string $plaintext , string $encodedfile [, string $encryption_key ] )", "url": "https://secure.php.net/manual/en/function.blenc-encrypt.php"}, {"name": "boolval", "synopsis": "Returns the boolean value of var.", "usage": "bool boolval ( mixed $var )", "url": "https://secure.php.net/manual/en/function.boolval.php"}, {"name": "bson_decode", "synopsis": "This function is very beta and entirely useless for 99% of users. It is only useful if you're doing something weird, such as writing your own driver on top of the PHP driver.", "usage": "array bson_decode ( string $bson )", "url": "https://secure.php.net/manual/en/function.bson-decode.php"}, {"name": "bson_encode", "synopsis": "This function is very beta and entirely useless for 99% of users. It is only useful if you're doing something weird, such as writing your own driver on top of the PHP driver.", "usage": "string bson_encode ( mixed $anything )", "url": "https://secure.php.net/manual/en/function.bson-encode.php"}, {"name": "bzclose", "synopsis": "Closes the given bzip2 file pointer.", "usage": "int bzclose ( resource $bz )", "url": "https://secure.php.net/manual/en/function.bzclose.php"}, {"name": "bzcompress", "synopsis": "bzcompress() compresses the given string and returns it as bzip2 encoded data.", "usage": "mixed bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] )", "url": "https://secure.php.net/manual/en/function.bzcompress.php"}, {"name": "bzdecompress", "synopsis": "bzdecompress() decompresses the given string containing bzip2 encoded data.", "usage": "mixed bzdecompress ( string $source [, int $small = 0 ] )", "url": "https://secure.php.net/manual/en/function.bzdecompress.php"}, {"name": "bzerrno", "synopsis": "Returns the error number of any bzip2 error returned by the given file pointer.", "usage": "int bzerrno ( resource $bz )", "url": "https://secure.php.net/manual/en/function.bzerrno.php"}, {"name": "bzerror", "synopsis": "Returns the error number and error string of any bzip2 error returned by the given file pointer.", "usage": "array bzerror ( resource $bz )", "url": "https://secure.php.net/manual/en/function.bzerror.php"}, {"name": "bzerrstr", "synopsis": "Gets the error string of any bzip2 error returned by the given file pointer.", "usage": "string bzerrstr ( resource $bz )", "url": "https://secure.php.net/manual/en/function.bzerrstr.php"}, {"name": "bzflush", "synopsis": "Forces a write of all buffered bzip2 data for the file pointer bz.", "usage": "bool bzflush ( resource $bz )", "url": "https://secure.php.net/manual/en/function.bzflush.php"}, {"name": "bzopen", "synopsis": "bzopen() opens a bzip2 (.bz2) file for reading or writing.", "usage": "resource bzopen ( mixed $file , string $mode )", "url": "https://secure.php.net/manual/en/function.bzopen.php"}, {"name": "bzread", "synopsis": "bzread() reads from the given bzip2 file pointer.", "usage": "string bzread ( resource $bz [, int $length = 1024 ] )", "url": "https://secure.php.net/manual/en/function.bzread.php"}, {"name": "bzwrite", "synopsis": "bzwrite() writes a string into the given bzip2 file stream.", "usage": "int bzwrite ( resource $bz , string $data [, int $length ] )", "url": "https://secure.php.net/manual/en/function.bzwrite.php"}, {"name": "cairo_create", "synopsis": "The function description goes here.", "usage": "CairoContext cairo_create ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-create.php"}, {"name": "cairo_font_options_create", "synopsis": "The function description goes here.", "usage": "CairoFontOptions cairo_font_options_create ( void )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-create.php"}, {"name": "cairo_font_options_equal", "synopsis": "The function description goes here.", "usage": "bool cairo_font_options_equal ( CairoFontOptions $options , CairoFontOptions $other )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-equal.php"}, {"name": "cairo_font_options_get_antialias", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_get_antialias ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-get-antialias.php"}, {"name": "cairo_font_options_get_hint_metrics", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_get_hint_metrics ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-get-hint-metrics.php"}, {"name": "cairo_font_options_get_hint_style", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_get_hint_style ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-get-hint-style.php"}, {"name": "cairo_font_options_get_subpixel_order", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_get_subpixel_order ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-get-subpixel-order.php"}, {"name": "cairo_font_options_hash", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_hash ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-hash.php"}, {"name": "cairo_font_options_merge", "synopsis": "The function description goes here.", "usage": "void cairo_font_options_merge ( CairoFontOptions $options , CairoFontOptions $other )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-merge.php"}, {"name": "cairo_font_options_set_antialias", "synopsis": "The function description goes here.", "usage": "void cairo_font_options_set_antialias ( CairoFontOptions $options , int $antialias )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-set-antialias.php"}, {"name": "cairo_font_options_set_hint_metrics", "synopsis": "The function description goes here.", "usage": "void cairo_font_options_set_hint_metrics ( CairoFontOptions $options , int $hint_metrics )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-set-hint-metrics.php"}, {"name": "cairo_font_options_set_hint_style", "synopsis": "The function description goes here.", "usage": "void cairo_font_options_set_hint_style ( CairoFontOptions $options , int $hint_style )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-set-hint-style.php"}, {"name": "cairo_font_options_set_subpixel_order", "synopsis": "The function description goes here.", "usage": "void cairo_font_options_set_subpixel_order ( CairoFontOptions $options , int $subpixel_order )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-set-subpixel-order.php"}, {"name": "cairo_font_options_status", "synopsis": "The function description goes here.", "usage": "int cairo_font_options_status ( CairoFontOptions $options )", "url": "https://secure.php.net/manual/en/function.cairo-font-options-status.php"}, {"name": "cairo_format_stride_for_width", "synopsis": "The function description goes here.", "usage": "int cairo_format_stride_for_width ( int $format , int $width )", "url": "https://secure.php.net/manual/en/function.cairo-format-stride-for-width.php"}, {"name": "cairo_image_surface_create_for_data", "synopsis": "The function description goes here.", "usage": "CairoImageSurface cairo_image_surface_create_for_data ( string $data , int $format , int $width , int $height [, int $stride = -1 ] )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-create-for-data.php"}, {"name": "cairo_image_surface_create_from_png", "synopsis": "The function description goes here.", "usage": "CairoImageSurface cairo_image_surface_create_from_png ( mixed $file )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-create-from-png.php"}, {"name": "cairo_image_surface_create", "synopsis": "The function description goes here.", "usage": "CairoImageSurface cairo_image_surface_create ( int $format , int $width , int $height )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-create.php"}, {"name": "cairo_image_surface_get_data", "synopsis": "The function description goes here.", "usage": "string cairo_image_surface_get_data ( CairoImageSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-get-data.php"}, {"name": "cairo_image_surface_get_format", "synopsis": "The function description goes here.", "usage": "int cairo_image_surface_get_format ( CairoImageSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-get-format.php"}, {"name": "cairo_image_surface_get_height", "synopsis": "The function description goes here.", "usage": "int cairo_image_surface_get_height ( CairoImageSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-get-height.php"}, {"name": "cairo_image_surface_get_stride", "synopsis": "The function description goes here.", "usage": "int cairo_image_surface_get_stride ( CairoImageSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-get-stride.php"}, {"name": "cairo_image_surface_get_width", "synopsis": "The function description goes here.", "usage": "int cairo_image_surface_get_width ( CairoImageSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-image-surface-get-width.php"}, {"name": "cairo_matrix_invert", "synopsis": "The function description goes here.", "usage": "void cairo_matrix_invert ( CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/function.cairo-matrix-invert.php"}, {"name": "cairo_matrix_multiply", "synopsis": "The function description goes here.", "usage": "CairoMatrix cairo_matrix_multiply ( CairoMatrix $matrix1 , CairoMatrix $matrix2 )", "url": "https://secure.php.net/manual/en/function.cairo-matrix-multiply.php"}, {"name": "cairo_matrix_transform_distance", "synopsis": "The function description goes here.", "usage": "array cairo_matrix_transform_distance ( CairoMatrix $matrix , float $dx , float $dy )", "url": "https://secure.php.net/manual/en/function.cairo-matrix-transform-distance.php"}, {"name": "cairo_matrix_transform_point", "synopsis": "The function description goes here.", "usage": "array cairo_matrix_transform_point ( CairoMatrix $matrix , float $dx , float $dy )", "url": "https://secure.php.net/manual/en/function.cairo-matrix-transform-point.php"}, {"name": "cairo_matrix_translate", "synopsis": "The function description goes here.", "usage": "void cairo_matrix_translate ( CairoMatrix $matrix , float $tx , float $ty )", "url": "https://secure.php.net/manual/en/function.cairo-matrix-translate.php"}, {"name": "cairo_pattern_add_color_stop_rgb", "synopsis": "The function description goes here.", "usage": "void cairo_pattern_add_color_stop_rgb ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-add-color-stop-rgb.php"}, {"name": "cairo_pattern_add_color_stop_rgba", "synopsis": "The function description goes here.", "usage": "void cairo_pattern_add_color_stop_rgba ( CairoGradientPattern $pattern , float $offset , float $red , float $green , float $blue , float $alpha )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-add-color-stop-rgba.php"}, {"name": "cairo_pattern_create_for_surface", "synopsis": "The function description goes here.", "usage": "CairoPattern cairo_pattern_create_for_surface ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-create-for-surface.php"}, {"name": "cairo_pattern_create_linear", "synopsis": "The function description goes here.", "usage": "CairoPattern cairo_pattern_create_linear ( float $x0 , float $y0 , float $x1 , float $y1 )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-create-linear.php"}, {"name": "cairo_pattern_create_radial", "synopsis": "The function description goes here.", "usage": "CairoPattern cairo_pattern_create_radial ( float $x0 , float $y0 , float $r0 , float $x1 , float $y1 , float $r1 )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-create-radial.php"}, {"name": "cairo_pattern_create_rgb", "synopsis": "The function description goes here.", "usage": "CairoPattern cairo_pattern_create_rgb ( float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-create-rgb.php"}, {"name": "cairo_pattern_create_rgba", "synopsis": "The function description goes here.", "usage": "CairoPattern cairo_pattern_create_rgba ( float $red , float $green , float $blue , float $alpha )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-create-rgba.php"}, {"name": "cairo_pattern_get_color_stop_count", "synopsis": "The function description goes here.", "usage": "int cairo_pattern_get_color_stop_count ( CairoGradientPattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-color-stop-count.php"}, {"name": "cairo_pattern_get_color_stop_rgba", "synopsis": "The function description goes here.", "usage": "array cairo_pattern_get_color_stop_rgba ( CairoGradientPattern $pattern , int $index )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-color-stop-rgba.php"}, {"name": "cairo_pattern_get_extend", "synopsis": "The function description goes here.", "usage": "int cairo_pattern_get_extend ( string $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-extend.php"}, {"name": "cairo_pattern_get_filter", "synopsis": "The function description goes here.", "usage": "int cairo_pattern_get_filter ( CairoSurfacePattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-filter.php"}, {"name": "cairo_pattern_get_linear_points", "synopsis": "The function description goes here.", "usage": "array cairo_pattern_get_linear_points ( CairoLinearGradient $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-linear-points.php"}, {"name": "cairo_pattern_get_matrix", "synopsis": "The function description goes here.", "usage": "CairoMatrix cairo_pattern_get_matrix ( CairoPattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-matrix.php"}, {"name": "cairo_pattern_get_radial_circles", "synopsis": "The function description goes here.", "usage": "array cairo_pattern_get_radial_circles ( CairoRadialGradient $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-radial-circles.php"}, {"name": "cairo_pattern_get_rgba", "synopsis": "The function description goes here.", "usage": "array cairo_pattern_get_rgba ( CairoSolidPattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-rgba.php"}, {"name": "cairo_pattern_get_surface", "synopsis": "The function description goes here.", "usage": "CairoSurface cairo_pattern_get_surface ( CairoSurfacePattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-surface.php"}, {"name": "cairo_pattern_get_type", "synopsis": "The function description goes here.", "usage": "int cairo_pattern_get_type ( CairoPattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-get-type.php"}, {"name": "cairo_pattern_set_extend", "synopsis": "The function description goes here.", "usage": "void cairo_pattern_set_extend ( string $pattern , string $extend )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-set-extend.php"}, {"name": "cairo_pattern_set_filter", "synopsis": "The function description goes here.", "usage": "void cairo_pattern_set_filter ( CairoSurfacePattern $pattern , int $filter )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-set-filter.php"}, {"name": "cairo_pattern_set_matrix", "synopsis": "The function description goes here.", "usage": "void cairo_pattern_set_matrix ( CairoPattern $pattern , CairoMatrix $matrix )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-set-matrix.php"}, {"name": "cairo_pattern_status", "synopsis": "The function description goes here.", "usage": "int cairo_pattern_status ( CairoPattern $pattern )", "url": "https://secure.php.net/manual/en/function.cairo-pattern-status.php"}, {"name": "cairo_pdf_surface_create", "synopsis": "The function description goes here.", "usage": "CairoPdfSurface cairo_pdf_surface_create ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-pdf-surface-create.php"}, {"name": "cairo_pdf_surface_set_size", "synopsis": "The function description goes here.", "usage": "void cairo_pdf_surface_set_size ( CairoPdfSurface $surface , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-pdf-surface-set-size.php"}, {"name": "cairo_ps_get_levels", "synopsis": "The function description goes here.", "usage": "array cairo_ps_get_levels ( void )", "url": "https://secure.php.net/manual/en/function.cairo-ps-get-levels.php"}, {"name": "cairo_ps_level_to_string", "synopsis": "The function description goes here.", "usage": "string cairo_ps_level_to_string ( int $level )", "url": "https://secure.php.net/manual/en/function.cairo-ps-level-to-string.php"}, {"name": "cairo_ps_surface_create", "synopsis": "The function description goes here.", "usage": "CairoPsSurface cairo_ps_surface_create ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-create.php"}, {"name": "cairo_ps_surface_dsc_begin_page_setup", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_dsc_begin_page_setup ( CairoPsSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-dsc-begin-page-setup.php"}, {"name": "cairo_ps_surface_dsc_begin_setup", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_dsc_begin_setup ( CairoPsSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-dsc-begin-setup.php"}, {"name": "cairo_ps_surface_dsc_comment", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_dsc_comment ( CairoPsSurface $surface , string $comment )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-dsc-comment.php"}, {"name": "cairo_ps_surface_get_eps", "synopsis": "The function description goes here.", "usage": "bool cairo_ps_surface_get_eps ( CairoPsSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-get-eps.php"}, {"name": "cairo_ps_surface_restrict_to_level", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_restrict_to_level ( CairoPsSurface $surface , int $level )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-restrict-to-level.php"}, {"name": "cairo_ps_surface_set_eps", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_set_eps ( CairoPsSurface $surface , bool $level )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-set-eps.php"}, {"name": "cairo_ps_surface_set_size", "synopsis": "The function description goes here.", "usage": "void cairo_ps_surface_set_size ( CairoPsSurface $surface , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-ps-surface-set-size.php"}, {"name": "cairo_scaled_font_create", "synopsis": "The function description goes here.", "usage": "CairoScaledFont cairo_scaled_font_create ( CairoFontFace $fontface , CairoMatrix $matrix , CairoMatrix $ctm , CairoFontOptions $fontoptions )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-create.php"}, {"name": "cairo_scaled_font_extents", "synopsis": "The function description goes here.", "usage": "array cairo_scaled_font_extents ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-extents.php"}, {"name": "cairo_scaled_font_get_ctm", "synopsis": "The function description goes here.", "usage": "CairoMatrix cairo_scaled_font_get_ctm ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-ctm.php"}, {"name": "cairo_scaled_font_get_font_face", "synopsis": "The function description goes here.", "usage": "CairoFontFace cairo_scaled_font_get_font_face ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-font-face.php"}, {"name": "cairo_scaled_font_get_font_matrix", "synopsis": "The function description goes here.", "usage": "CairoFontOptions cairo_scaled_font_get_font_matrix ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-font-matrix.php"}, {"name": "cairo_scaled_font_get_font_options", "synopsis": "The function description goes here.", "usage": "CairoFontOptions cairo_scaled_font_get_font_options ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-font-options.php"}, {"name": "cairo_scaled_font_get_scale_matrix", "synopsis": "The function description goes here.", "usage": "CairoMatrix cairo_scaled_font_get_scale_matrix ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-scale-matrix.php"}, {"name": "cairo_scaled_font_get_type", "synopsis": "The function description goes here.", "usage": "int cairo_scaled_font_get_type ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-get-type.php"}, {"name": "cairo_scaled_font_glyph_extents", "synopsis": "The function description goes here.", "usage": "array cairo_scaled_font_glyph_extents ( CairoScaledFont $scaledfont , array $glyphs )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-glyph-extents.php"}, {"name": "cairo_scaled_font_status", "synopsis": "The function description goes here.", "usage": "int cairo_scaled_font_status ( CairoScaledFont $scaledfont )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-status.php"}, {"name": "cairo_scaled_font_text_extents", "synopsis": "The function description goes here.", "usage": "array cairo_scaled_font_text_extents ( CairoScaledFont $scaledfont , string $text )", "url": "https://secure.php.net/manual/en/function.cairo-scaled-font-text-extents.php"}, {"name": "cairo_surface_copy_page", "synopsis": "The function description goes here.", "usage": "void cairo_surface_copy_page ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-copy-page.php"}, {"name": "cairo_surface_create_similar", "synopsis": "The function description goes here.", "usage": "CairoSurface cairo_surface_create_similar ( CairoSurface $surface , int $content , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-surface-create-similar.php"}, {"name": "cairo_surface_finish", "synopsis": "The function description goes here.", "usage": "void cairo_surface_finish ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-finish.php"}, {"name": "cairo_surface_flush", "synopsis": "The function description goes here.", "usage": "void cairo_surface_flush ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-flush.php"}, {"name": "cairo_surface_get_content", "synopsis": "The function description goes here.", "usage": "int cairo_surface_get_content ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-get-content.php"}, {"name": "cairo_surface_get_device_offset", "synopsis": "The function description goes here.", "usage": "array cairo_surface_get_device_offset ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-get-device-offset.php"}, {"name": "cairo_surface_get_font_options", "synopsis": "The function description goes here.", "usage": "CairoFontOptions cairo_surface_get_font_options ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-get-font-options.php"}, {"name": "cairo_surface_get_type", "synopsis": "The function description goes here.", "usage": "int cairo_surface_get_type ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-get-type.php"}, {"name": "cairo_surface_mark_dirty_rectangle", "synopsis": "The function description goes here.", "usage": "void cairo_surface_mark_dirty_rectangle ( CairoSurface $surface , float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-surface-mark-dirty-rectangle.php"}, {"name": "cairo_surface_mark_dirty", "synopsis": "The function description goes here.", "usage": "void cairo_surface_mark_dirty ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-mark-dirty.php"}, {"name": "cairo_surface_set_device_offset", "synopsis": "The function description goes here.", "usage": "void cairo_surface_set_device_offset ( CairoSurface $surface , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.cairo-surface-set-device-offset.php"}, {"name": "cairo_surface_set_fallback_resolution", "synopsis": "The function description goes here.", "usage": "void cairo_surface_set_fallback_resolution ( CairoSurface $surface , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.cairo-surface-set-fallback-resolution.php"}, {"name": "cairo_surface_show_page", "synopsis": "The function description goes here.", "usage": "void cairo_surface_show_page ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-show-page.php"}, {"name": "cairo_surface_status", "synopsis": "The function description goes here.", "usage": "int cairo_surface_status ( CairoSurface $surface )", "url": "https://secure.php.net/manual/en/function.cairo-surface-status.php"}, {"name": "cairo_surface_write_to_png", "synopsis": "The function description goes here.", "usage": "void cairo_surface_write_to_png ( CairoSurface $surface , resource $stream )", "url": "https://secure.php.net/manual/en/function.cairo-surface-write-to-png.php"}, {"name": "cairo_svg_surface_create", "synopsis": "The function description goes here.", "usage": "CairoSvgSurface cairo_svg_surface_create ( string $file , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.cairo-svg-surface-create.php"}, {"name": "cairo_svg_surface_restrict_to_version", "synopsis": "The function description goes here.", "usage": "void cairo_svg_surface_restrict_to_version ( CairoSvgSurface $surface , int $version )", "url": "https://secure.php.net/manual/en/function.cairo-svg-surface-restrict-to-version.php"}, {"name": "cairo_svg_version_to_string", "synopsis": "The function description goes here.", "usage": "string cairo_svg_version_to_string ( int $version )", "url": "https://secure.php.net/manual/en/function.cairo-svg-version-to-string.php"}, {"name": "cal_days_in_month", "synopsis": "This function will return the number of days in the month of year for the specified calendar.", "usage": "int cal_days_in_month ( int $calendar , int $month , int $year )", "url": "https://secure.php.net/manual/en/function.cal-days-in-month.php"}, {"name": "cal_from_jd", "synopsis": "cal_from_jd() converts the Julian day given in jd into a date of the specified calendar. Supported calendar values are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.", "usage": "array cal_from_jd ( int $jd , int $calendar )", "url": "https://secure.php.net/manual/en/function.cal-from-jd.php"}, {"name": "cal_info", "synopsis": "cal_info() returns information on the specified calendar.", "usage": "array cal_info ([ int $calendar = -1 ] )", "url": "https://secure.php.net/manual/en/function.cal-info.php"}, {"name": "cal_to_jd", "synopsis": "cal_to_jd() calculates the Julian day count for a date in the specified calendar. Supported calendars are CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH and CAL_FRENCH.", "usage": "int cal_to_jd ( int $calendar , int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.cal-to-jd.php"}, {"name": "call_user_func_array", "synopsis": "Calls the callback given by the first parameter with the parameters in param_arr.", "usage": "mixed call_user_func_array ( callable $callback , array $param_arr )", "url": "https://secure.php.net/manual/en/function.call-user-func-array.php"}, {"name": "call_user_func", "synopsis": "Calls the callback given by the first parameter and passes the remaining parameters as arguments.", "usage": "mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.call-user-func.php"}, {"name": "call_user_method_array", "synopsis": null, "usage": "mixed call_user_method_array ( string $method_name , object &$obj , array $params )", "url": "https://secure.php.net/manual/en/function.call-user-method-array.php"}, {"name": "call_user_method", "synopsis": null, "usage": "mixed call_user_method ( string $method_name , object &$obj [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.call-user-method.php"}, {"name": "ceil", "synopsis": null, "usage": "float ceil ( float $value )", "url": "https://secure.php.net/manual/en/function.ceil.php"}, {"name": "chdb_create", "synopsis": "chdb_create() creates a chdb file containing the specified key-value pairs.", "usage": "bool chdb_create ( string $pathname , array $data )", "url": "https://secure.php.net/manual/en/function.chdb-create.php"}, {"name": "chdir", "synopsis": "Changes PHP's current directory to directory.", "usage": "bool chdir ( string $directory )", "url": "https://secure.php.net/manual/en/function.chdir.php"}, {"name": "checkdate", "synopsis": "Checks the validity of the date formed by the arguments. A date is considered valid if each parameter is properly defined.", "usage": "bool checkdate ( int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.checkdate.php"}, {"name": "checkdnsrr", "synopsis": "Searches DNS for records of type type corresponding to host.", "usage": "bool checkdnsrr ( string $host [, string $type = \"MX\" ] )", "url": "https://secure.php.net/manual/en/function.checkdnsrr.php"}, {"name": "chgrp", "synopsis": "Attempts to change the group of the file filename to group.", "usage": "bool chgrp ( string $filename , mixed $group )", "url": "https://secure.php.net/manual/en/function.chgrp.php"}, {"name": "chmod", "synopsis": "Attempts to change the mode of the specified file to that given in mode.", "usage": "bool chmod ( string $filename , int $mode )", "url": "https://secure.php.net/manual/en/function.chmod.php"}, {"name": "chown", "synopsis": "Attempts to change the owner of the file filename to user user. Only the superuser may change the owner of a file.", "usage": "bool chown ( string $filename , mixed $user )", "url": "https://secure.php.net/manual/en/function.chown.php"}, {"name": "chr", "synopsis": "Returns a one-character string containing the character specified by ascii.", "usage": "string chr ( int $ascii )", "url": "https://secure.php.net/manual/en/function.chr.php"}, {"name": "chroot", "synopsis": "Changes the root directory of the current process to directory, and changes the current working directory to \"/\".", "usage": "bool chroot ( string $directory )", "url": "https://secure.php.net/manual/en/function.chroot.php"}, {"name": "chunk_split", "synopsis": "Can be used to split a string into smaller chunks which is useful for e.g. converting base64_encode() output to match RFC 2045 semantics. It inserts end every chunklen characters.", "usage": "string chunk_split ( string $body [, int $chunklen = 76 [, string $end = \"\\r\\n\" ]] )", "url": "https://secure.php.net/manual/en/function.chunk-split.php"}, {"name": "class_alias", "synopsis": "Creates an alias named alias based on the user defined class original. The aliased class is exactly the same as the original class.", "usage": "bool class_alias ( string $original , string $alias [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.class-alias.php"}, {"name": "class_exists", "synopsis": "This function checks whether or not the given class has been defined.", "usage": "bool class_exists ( string $class_name [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.class-exists.php"}, {"name": "class_implements", "synopsis": "This function returns an array with the names of the interfaces that the given class and its parents implement.", "usage": "array class_implements ( mixed $class [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.class-implements.php"}, {"name": "class_parents", "synopsis": "This function returns an array with the name of the parent classes of the given class.", "usage": "array class_parents ( mixed $class [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.class-parents.php"}, {"name": "class_uses", "synopsis": "This function returns an array with the names of the traits that the given class uses. This does however not include any traits used by a parent class.", "usage": "array class_uses ( mixed $class [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.class-uses.php"}, {"name": "classkit_import", "synopsis": null, "usage": "array classkit_import ( string $filename )", "url": "https://secure.php.net/manual/en/function.classkit-import.php"}, {"name": "classkit_method_add", "synopsis": null, "usage": "bool classkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )", "url": "https://secure.php.net/manual/en/function.classkit-method-add.php"}, {"name": "classkit_method_copy", "synopsis": null, "usage": "bool classkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )", "url": "https://secure.php.net/manual/en/function.classkit-method-copy.php"}, {"name": "classkit_method_redefine", "synopsis": null, "usage": "bool classkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = CLASSKIT_ACC_PUBLIC ] )", "url": "https://secure.php.net/manual/en/function.classkit-method-redefine.php"}, {"name": "classkit_method_remove", "synopsis": null, "usage": "bool classkit_method_remove ( string $classname , string $methodname )", "url": "https://secure.php.net/manual/en/function.classkit-method-remove.php"}, {"name": "classkit_method_rename", "synopsis": null, "usage": "bool classkit_method_rename ( string $classname , string $methodname , string $newname )", "url": "https://secure.php.net/manual/en/function.classkit-method-rename.php"}, {"name": "clearstatcache", "synopsis": "When you use stat(), lstat(), or any of the other functions listed in the affected functions list (below), PHP caches the information those functions return in order to provide faster performance. However, in certain cases, you may want to clear the cached information. For instance, if the same file is being checked multiple times within a single script, and that file is in danger of being removed or changed during that script's operation, you may elect to clear the status cache. In these cases, you can use the clearstatcache() function to clear the information that PHP caches about a file.", "usage": "void clearstatcache ([ bool $clear_realpath_cache = FALSE [, string $filename ]] )", "url": "https://secure.php.net/manual/en/function.clearstatcache.php"}, {"name": "cli_get_process_title", "synopsis": "Returns the current process title, as set by cli_set_process_title(). Note that this may not exactly match what is shown in ps or top, depending on your operating system.", "usage": "string cli_get_process_title ( void )", "url": "https://secure.php.net/manual/en/function.cli-get-process-title.php"}, {"name": "cli_set_process_title", "synopsis": "Sets the process title visible in tools such as top and ps. This function is available only in CLI mode.", "usage": "bool cli_set_process_title ( string $title )", "url": "https://secure.php.net/manual/en/function.cli-set-process-title.php"}, {"name": "closedir", "synopsis": "Closes the directory stream indicated by dir_handle. The stream must have previously been opened by opendir().", "usage": "void closedir ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/function.closedir.php"}, {"name": "closelog", "synopsis": "closelog() closes the descriptor being used to write to the system logger. The use of closelog() is optional.", "usage": "bool closelog ( void )", "url": "https://secure.php.net/manual/en/function.closelog.php"}, {"name": "com_create_guid", "synopsis": "Generates a Globally Unique Identifier (GUID).", "usage": "string com_create_guid ( void )", "url": "https://secure.php.net/manual/en/function.com-create-guid.php"}, {"name": "com_event_sink", "synopsis": "Instructs COM to sink events generated by comobject into the PHP object sinkobject.", "usage": "bool com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] )", "url": "https://secure.php.net/manual/en/function.com-event-sink.php"}, {"name": "com_get_active_object", "synopsis": "com_get_active_object() is similar to creating a new instance of a COM object, except that it will only return an object to your script if the object is already running. OLE applications use something known as the \"Running Object Table\" to allow well-known applications to be launched only once; this function exposes the COM library function GetActiveObject() to get a handle on a running instance.", "usage": "variant com_get_active_object ( string $progid [, int $code_page ] )", "url": "https://secure.php.net/manual/en/function.com-get-active-object.php"}, {"name": "com_load_typelib", "synopsis": "Loads a type-library and registers its constants in the engine, as though they were defined using define().", "usage": "bool com_load_typelib ( string $typelib_name [, bool $case_insensitive = TRUE ] )", "url": "https://secure.php.net/manual/en/function.com-load-typelib.php"}, {"name": "com_message_pump", "synopsis": "This function will sleep for up to timeoutms milliseconds, or until a message arrives in the queue.", "usage": "bool com_message_pump ([ int $timeoutms = 0 ] )", "url": "https://secure.php.net/manual/en/function.com-message-pump.php"}, {"name": "com_print_typeinfo", "synopsis": "The purpose of this function is to help generate a skeleton class for use as an event sink. You may also use it to generate a dump of any COM object, provided that it supports enough of the introspection interfaces, and that you know the name of the interface you want to display.", "usage": "bool com_print_typeinfo ( object $comobject [, string $dispinterface [, bool $wantsink = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.com-print-typeinfo.php"}, {"name": "CommonMark\\Parse", "synopsis": "Shall parse content", "usage": "CommonMark\\Node CommonMark\\Parse ( string $content [, int $options ] )", "url": "https://secure.php.net/manual/en/function.commonmark-parse.php"}, {"name": "CommonMark\\Render\\HTML", "synopsis": "", "usage": "string CommonMark\\Render\\HTML ( CommonMark\\Node $node [, int $options ] )", "url": "https://secure.php.net/manual/en/function.commonmark-render-html.php"}, {"name": "CommonMark\\Render\\Latex", "synopsis": "", "usage": "string CommonMark\\Render\\Latex ( CommonMark\\Node $node [, int $options [, int $width ]] )", "url": "https://secure.php.net/manual/en/function.commonmark-render-latex.php"}, {"name": "CommonMark\\Render\\Man", "synopsis": "", "usage": "string CommonMark\\Render\\Man ( CommonMark\\Node $node [, int $options [, int $width ]] )", "url": "https://secure.php.net/manual/en/function.commonmark-render-man.php"}, {"name": "CommonMark\\Render\\XML", "synopsis": "", "usage": "string CommonMark\\Render\\XML ( CommonMark\\Node $node [, int $options ] )", "url": "https://secure.php.net/manual/en/function.commonmark-render-xml.php"}, {"name": "CommonMark\\Render", "synopsis": "", "usage": "string CommonMark\\Render ( CommonMark\\Node $node [, int $options [, int $width ]] )", "url": "https://secure.php.net/manual/en/function.commonmark-render.php"}, {"name": "compact", "synopsis": "Creates an array containing variables and their values.", "usage": "array compact ( mixed $varname1 [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.compact.php"}, {"name": "connection_aborted", "synopsis": "Checks whether the client disconnected.", "usage": "int connection_aborted ( void )", "url": "https://secure.php.net/manual/en/function.connection-aborted.php"}, {"name": "connection_status", "synopsis": "Gets the connection status bitfield.", "usage": "int connection_status ( void )", "url": "https://secure.php.net/manual/en/function.connection-status.php"}, {"name": "constant", "synopsis": null, "usage": "mixed constant ( string $name )", "url": "https://secure.php.net/manual/en/function.constant.php"}, {"name": "convert_cyr_string", "synopsis": "Converts from one Cyrillic character set to another.", "usage": "string convert_cyr_string ( string $str , string $from , string $to )", "url": "https://secure.php.net/manual/en/function.convert-cyr-string.php"}, {"name": "convert_uudecode", "synopsis": "convert_uudecode() decodes a uuencoded string.", "usage": "string convert_uudecode ( string $data )", "url": "https://secure.php.net/manual/en/function.convert-uudecode.php"}, {"name": "convert_uuencode", "synopsis": "convert_uuencode() encodes a string using the uuencode algorithm.", "usage": "string convert_uuencode ( string $data )", "url": "https://secure.php.net/manual/en/function.convert-uuencode.php"}, {"name": "copy", "synopsis": "Makes a copy of the file source to dest.", "usage": "bool copy ( string $source , string $dest [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.copy.php"}, {"name": "cos", "synopsis": "cos() returns the cosine of the arg parameter. The arg parameter is in radians.", "usage": "float cos ( float $arg )", "url": "https://secure.php.net/manual/en/function.cos.php"}, {"name": "cosh", "synopsis": "Returns the hyperbolic cosine of arg, defined as (exp(arg) + exp(-arg))/2.", "usage": "float cosh ( float $arg )", "url": "https://secure.php.net/manual/en/function.cosh.php"}, {"name": "count_chars", "synopsis": "Counts the number of occurrences of every byte-value (0..255) in string and returns it in various ways.", "usage": "mixed count_chars ( string $string [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/function.count-chars.php"}, {"name": "count", "synopsis": "Counts all elements in an array, or something in an object.", "usage": "int count ( mixed $array_or_countable [, int $mode = COUNT_NORMAL ] )", "url": "https://secure.php.net/manual/en/function.count.php"}, {"name": "crack_check", "synopsis": "Performs an obscure check with the given password on the specified dictionary. The alternative signature also takes into account the username and the GECOS information.", "usage": "bool crack_check ( resource $dictionary , string $password )", "url": "https://secure.php.net/manual/en/function.crack-check.php"}, {"name": "crack_closedict", "synopsis": "crack_closedict() closes the specified dictionary identifier.", "usage": "bool crack_closedict ([ resource $dictionary ] )", "url": "https://secure.php.net/manual/en/function.crack-closedict.php"}, {"name": "crack_getlastmessage", "synopsis": "crack_getlastmessage() returns the message from the last obscure check.", "usage": "string crack_getlastmessage ( void )", "url": "https://secure.php.net/manual/en/function.crack-getlastmessage.php"}, {"name": "crack_opendict", "synopsis": "crack_opendict() opens the specified CrackLib dictionary for use with crack_check().", "usage": "resource crack_opendict ( string $dictionary )", "url": "https://secure.php.net/manual/en/function.crack-opendict.php"}, {"name": "crc32", "synopsis": "Generates the cyclic redundancy checksum polynomial of 32-bit lengths of the str. This is usually used to validate the integrity of data being transmitted.", "usage": "int crc32 ( string $str )", "url": "https://secure.php.net/manual/en/function.crc32.php"}, {"name": "create_function", "synopsis": "Creates an anonymous function from the parameters passed, and returns a unique name for it.", "usage": "string create_function ( string $args , string $code )", "url": "https://secure.php.net/manual/en/function.create-function.php"}, {"name": "crypt", "synopsis": "crypt() will return a hashed string using the standard Unix DES-based algorithm or alternative algorithms that may be available on the system.", "usage": "string crypt ( string $str [, string $salt ] )", "url": "https://secure.php.net/manual/en/function.crypt.php"}, {"name": "ctype_alnum", "synopsis": "Checks if all of the characters in the provided string, text, are alphanumeric.", "usage": "bool ctype_alnum ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-alnum.php"}, {"name": "ctype_alpha", "synopsis": "Checks if all of the characters in the provided string, text, are alphabetic. In the standard C locale letters are just [A-Za-z] and ctype_alpha() is equivalent to (ctype_upper($text) || ctype_lower($text)) if $text is just a single character, but other languages have letters that are considered neither upper nor lower case.", "usage": "bool ctype_alpha ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-alpha.php"}, {"name": "ctype_cntrl", "synopsis": "Checks if all of the characters in the provided string, text, are control characters. Control characters are e.g. line feed, tab, escape.", "usage": "bool ctype_cntrl ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-cntrl.php"}, {"name": "ctype_digit", "synopsis": "Checks if all of the characters in the provided string, text, are numerical.", "usage": "bool ctype_digit ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-digit.php"}, {"name": "ctype_graph", "synopsis": "Checks if all of the characters in the provided string, text, creates visible output.", "usage": "bool ctype_graph ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-graph.php"}, {"name": "ctype_lower", "synopsis": "Checks if all of the characters in the provided string, text, are lowercase letters.", "usage": "bool ctype_lower ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-lower.php"}, {"name": "ctype_print", "synopsis": "Checks if all of the characters in the provided string, text, are printable.", "usage": "bool ctype_print ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-print.php"}, {"name": "ctype_punct", "synopsis": "Checks if all of the characters in the provided string, text, are punctuation character.", "usage": "bool ctype_punct ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-punct.php"}, {"name": "ctype_space", "synopsis": "Checks if all of the characters in the provided string, text, creates whitespace.", "usage": "bool ctype_space ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-space.php"}, {"name": "ctype_upper", "synopsis": "Checks if all of the characters in the provided string, text, are uppercase characters.", "usage": "bool ctype_upper ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-upper.php"}, {"name": "ctype_xdigit", "synopsis": "Checks if all of the characters in the provided string, text, are hexadecimal 'digits'.", "usage": "bool ctype_xdigit ( string $text )", "url": "https://secure.php.net/manual/en/function.ctype-xdigit.php"}, {"name": "cubrid_affected_rows", "synopsis": "The cubrid_affected_rows() function is used to get the number of rows affected by the SQL statement (INSERT, DELETE, UPDATE).", "usage": "int cubrid_affected_rows ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-affected-rows.php"}, {"name": "cubrid_bind", "synopsis": "The cubrid_bind() function is used to bind values to a corresponding named or question mark placeholder in the SQL statement that was passed to cubrid_prepare(). If bind_value_type is not given, string will be the default.", "usage": "bool cubrid_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] )", "url": "https://secure.php.net/manual/en/function.cubrid-bind.php"}, {"name": "cubrid_client_encoding", "synopsis": "This function returns the current CUBRID connection charset and is similar to the CUBRID function cubrid_get_charset().", "usage": "string cubrid_client_encoding ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-client-encoding.php"}, {"name": "cubrid_close_prepare", "synopsis": "The cubrid_close_prepare() function closes the request handle given by the req_identifier argument, and releases the memory region related to the handle. It is an alias of cubrid_close_request().", "usage": "bool cubrid_close_prepare ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-close-prepare.php"}, {"name": "cubrid_close_request", "synopsis": "The cubrid_close_request() function closes the request handle given by the req_identifier argument, and releases the memory region related to the handle. It is an alias of cubrid_close_prepare().", "usage": "bool cubrid_close_request ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-close-request.php"}, {"name": "cubrid_close", "synopsis": "The cubrid_close() function ends the transaction currently in process, closes the connection handle and disconnects from server. If there is any request handles not closed yet at this point, they will be closed. It is similar to the CUBRID function cubrid_disconnect().", "usage": "bool cubrid_close ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-close.php"}, {"name": "cubrid_col_get", "synopsis": "The cubrid_col_get() function is used to get contents of the elements of the collection type (set, multiset, sequence) attribute you requested as an array.", "usage": "array cubrid_col_get ( resource $conn_identifier , string $oid , string $attr_name )", "url": "https://secure.php.net/manual/en/function.cubrid-col-get.php"}, {"name": "cubrid_col_size", "synopsis": "The cubrid_col_size() function is used to get the number of elements in a collection type (set, multiset, sequence) attribute.", "usage": "int cubrid_col_size ( resource $conn_identifier , string $oid , string $attr_name )", "url": "https://secure.php.net/manual/en/function.cubrid-col-size.php"}, {"name": "cubrid_column_names", "synopsis": "The cubrid_column_names() function is used to get the column names of the query result by using req_identifier.", "usage": "array cubrid_column_names ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-column-names.php"}, {"name": "cubrid_column_types", "synopsis": "The cubrid_column_types() function gets column types of query results by using req_identifier.", "usage": "array cubrid_column_types ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-column-types.php"}, {"name": "cubrid_commit", "synopsis": "The cubrid_commit() function is used to execute commit on the transaction pointed by conn_identifier, currently in progress. Connection to the server is closed after the cubrid_commit() function is called; However, the connection handle is still valid.", "usage": "bool cubrid_commit ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-commit.php"}, {"name": "cubrid_connect_with_url", "synopsis": "The cubrid_connect_with_url() function is used to establish the environment for connecting to your server by using connection information passed with an url string argument. If the HA feature is enabled in CUBRID, you must specify the connection information of the standby server, which is used for failover when failure occurs, in the url string argument of this function. If the user name and password is not given, then the \"PUBLIC\" connection will be made by default.", "usage": "resource cubrid_connect_with_url ( string $conn_url [, string $userid [, string $passwd [, bool $new_link = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.cubrid-connect-with-url.php"}, {"name": "cubrid_connect", "synopsis": "The cubrid_connect() function is used to establish the environment for connecting to your server by using your server address, port number, database name, user name, and password. If the user name and password is not given, then the \"PUBLIC\" connection will be made by default.", "usage": "resource cubrid_connect ( string $host , int $port , string $dbname [, string $userid [, string $passwd [, bool $new_link = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.cubrid-connect.php"}, {"name": "cubrid_current_oid", "synopsis": "The cubrid_current_oid() function is used to get the oid of the current cursor location from the query result. To use cubrid_current_oid(), the query executed must be a updatable query, and the CUBRID_INCLUDE_OID option must be included during the query execution.", "usage": "string cubrid_current_oid ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-current-oid.php"}, {"name": "cubrid_data_seek", "synopsis": "This function performs the moving of the internal row pointer of the CUBRID result (associated with the specified result identifier) to point to a specific row number. There are functions, such as cubrid_fetch_assoc(), which use the current stored value of row number.", "usage": "bool cubrid_data_seek ( resource $result , int $row_number )", "url": "https://secure.php.net/manual/en/function.cubrid-data-seek.php"}, {"name": "cubrid_db_name", "synopsis": "Retrieve the database name from a call to cubrid_list_dbs().", "usage": "string cubrid_db_name ( array $result , int $index )", "url": "https://secure.php.net/manual/en/function.cubrid-db-name.php"}, {"name": "cubrid_disconnect", "synopsis": "The cubrid_disconnect() function closes the connection handle and disconnects from server. If any request handle is not closed at this point, it will be closed. It is similar to the CUBRID MySQL compatible function cubrid_close().", "usage": "bool cubrid_disconnect ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-disconnect.php"}, {"name": "cubrid_drop", "synopsis": "The cubrid_drop() function is used to delete an instance from database by using the oid of the instance.", "usage": "bool cubrid_drop ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-drop.php"}, {"name": "cubrid_errno", "synopsis": "Returns the error number from the last CUBRID function.", "usage": "int cubrid_errno ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-errno.php"}, {"name": "cubrid_error_code_facility", "synopsis": "The cubrid_error_code_facility() function is used to get the facility code (level in which the error occurred) from the error code of the error that occurred during the API execution. Usually, you can get the error code when API returns false as its return value.", "usage": "int cubrid_error_code_facility ( void )", "url": "https://secure.php.net/manual/en/function.cubrid-error-code-facility.php"}, {"name": "cubrid_error_code", "synopsis": "The cubrid_error_code() function is used to get the error code of the error that occurred during the API execution. Usually, it gets the error code when API returns false as its return value.", "usage": "int cubrid_error_code ( void )", "url": "https://secure.php.net/manual/en/function.cubrid-error-code.php"}, {"name": "cubrid_error_msg", "synopsis": "The cubrid_error_msg() function is used to get the error message that occurred during the use of CUBRID API. Usually, it gets error message when API returns false as its return value.", "usage": "string cubrid_error_msg ( void )", "url": "https://secure.php.net/manual/en/function.cubrid-error-msg.php"}, {"name": "cubrid_error", "synopsis": "The cubrid_error() function is used to get the error message that occurred during the use of CUBRID API. Usually, it gets error message when API returns false as its return value.", "usage": "string cubrid_error ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.cubrid-error.php"}, {"name": "cubrid_execute", "synopsis": "The cubrid_execute() function is used to execute the given SQL statement. It executes the query by using conn_identifier and SQL, and then returns the request identifier created. It is used for simple execution of query, where the parameter binding is not needed. In addition, the cubrid_execute() function is used to execute the prepared statement by means of cubrid_prepare() and cubrid_bind(). At this time, you need to specify arguments of request_identifier and option.", "usage": "resource cubrid_execute ( resource $conn_identifier , string $sql [, int $option = 0 ] )", "url": "https://secure.php.net/manual/en/function.cubrid-execute.php"}, {"name": "cubrid_fetch_array", "synopsis": "The cubrid_fetch_array() function is used to get a single row from the query result and returns an array. The cursor automatically moves to the next row after getting the result.", "usage": "array cubrid_fetch_array ( resource $result [, int $type = CUBRID_BOTH ] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-array.php"}, {"name": "cubrid_fetch_assoc", "synopsis": "This function returns the associative array, that corresponds to the fetched row, and then moves the internal data pointer ahead, or returns FALSE when the end is reached.", "usage": "array cubrid_fetch_assoc ( resource $result [, int $type ] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-assoc.php"}, {"name": "cubrid_fetch_field", "synopsis": "This function returns an object with certain properties of the specific column. The properties of the object are:", "usage": "object cubrid_fetch_field ( resource $result [, int $field_offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-field.php"}, {"name": "cubrid_fetch_lengths", "synopsis": "This function returns an numeric array with the lengths of the values of each field from the current row of the result set or it returns FALSE on failure.", "usage": "array cubrid_fetch_lengths ( resource $result )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-lengths.php"}, {"name": "cubrid_fetch_object", "synopsis": "This function returns an object with the column names of the result set as properties. The values of these properties are extracted from the current row of the result.", "usage": "object cubrid_fetch_object ( resource $result [, string $class_name [, array $params [, int $type ]]] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-object.php"}, {"name": "cubrid_fetch_row", "synopsis": "This function returns a numerical array with the values of the current row from the result set, starting from 0, and moves the internal data pointer ahead.", "usage": "array cubrid_fetch_row ( resource $result [, int $type ] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch-row.php"}, {"name": "cubrid_fetch", "synopsis": "The cubrid_fetch() function is used to get a single row from the query result. The cursor automatically moves to the next row after getting the result.", "usage": "mixed cubrid_fetch ( resource $result [, int $type = CUBRID_BOTH ] )", "url": "https://secure.php.net/manual/en/function.cubrid-fetch.php"}, {"name": "cubrid_field_flags", "synopsis": "This function returns a string with the flags of the given field offset separated by space. You can split the returned value using explode. The possible flags could be: not_null, primary_key, unique_key, foreign_key, auto_increment, shared, reverse_index, reverse_unique and timestamp.", "usage": "string cubrid_field_flags ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.cubrid-field-flags.php"}, {"name": "cubrid_field_len", "synopsis": "This function returns the maximum length of the specified field on success, or it returns FALSE on failure.", "usage": "int cubrid_field_len ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.cubrid-field-len.php"}, {"name": "cubrid_field_name", "synopsis": "This function returns the name of the specified field index on success or it returns FALSE on failure.", "usage": "string cubrid_field_name ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.cubrid-field-name.php"}, {"name": "cubrid_field_seek", "synopsis": "This function moves the result set cursor to the specified field offset. This offset is used by cubrid_fetch_field() if it doesn't include a field offset. It returns TRUE on success or FALSE on failure.", "usage": "bool cubrid_field_seek ( resource $result [, int $field_offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.cubrid-field-seek.php"}, {"name": "cubrid_field_table", "synopsis": "This function returns the name of the table of the specified field. This is useful when using large select queries with JOINS.", "usage": "string cubrid_field_table ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.cubrid-field-table.php"}, {"name": "cubrid_field_type", "synopsis": "This function returns the type of the column corresponding to the given field offset. The returned field type could be one of the following: \"int\", \"real\", \"string\", etc.", "usage": "string cubrid_field_type ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.cubrid-field-type.php"}, {"name": "cubrid_free_result", "synopsis": "This function frees the memory occupied by the result data. It returns TRUE on success or FALSE on failure. Note that it can only frees the client fetch buffer now, and if you want free all memory, use function cubrid_close_request().", "usage": "bool cubrid_free_result ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-free-result.php"}, {"name": "cubrid_get_autocommit", "synopsis": "The cubrid_get_autocommit() function is used to get the status of CUBRID database connection auto-commit mode.", "usage": "bool cubrid_get_autocommit ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-get-autocommit.php"}, {"name": "cubrid_get_charset", "synopsis": "This function returns the current CUBRID connection charset and is similar to the CUBRID MySQL compatible function cubrid_client_encoding().", "usage": "string cubrid_get_charset ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-get-charset.php"}, {"name": "cubrid_get_class_name", "synopsis": "The cubrid_get_class_name() function is used to get the class name from oid. It doesn't work when selecting data from the system tables, for example db_class.", "usage": "string cubrid_get_class_name ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-get-class-name.php"}, {"name": "cubrid_get_client_info", "synopsis": "This function returns a string that represents the client library version.", "usage": "string cubrid_get_client_info ( void )", "url": "https://secure.php.net/manual/en/function.cubrid-get-client-info.php"}, {"name": "cubrid_get_db_parameter", "synopsis": "This function returns the CUBRID database parameters or it returns FALSE on failure. It returns an associative array with the values for the following parameters:", "usage": "array cubrid_get_db_parameter ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-get-db-parameter.php"}, {"name": "cubrid_get_query_timeout", "synopsis": "The cubrid_get_query_timeout() function is used to get the query timeout of the request.", "usage": "int cubrid_get_query_timeout ( resource $req_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-get-query-timeout.php"}, {"name": "cubrid_get_server_info", "synopsis": "This function returns a string that represents the CUBRID server version.", "usage": "string cubrid_get_server_info ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-get-server-info.php"}, {"name": "cubrid_get", "synopsis": "The cubrid_get() function is used to get the attribute of the instance of the given oid. You can get single attribute by using string data type for the attr argument, or many attributes by using array data type for the attr argument.", "usage": "mixed cubrid_get ( resource $conn_identifier , string $oid [, mixed $attr ] )", "url": "https://secure.php.net/manual/en/function.cubrid-get.php"}, {"name": "cubrid_insert_id", "synopsis": "The cubrid_insert_id() function retrieves the ID generated for the AUTO_INCREMENT column which is updated by the previous INSERT query. It returns 0 if the previous query does not generate new rows, or FALSE on failure.", "usage": "string cubrid_insert_id ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-insert-id.php"}, {"name": "cubrid_is_instance", "synopsis": "The cubrid_is_instance() function is used to check whether the instance pointed by the given oid exists or not.", "usage": "int cubrid_is_instance ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-is-instance.php"}, {"name": "cubrid_list_dbs", "synopsis": "This function returns an array with the list of all existing Cubrid databases.", "usage": "array cubrid_list_dbs ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-list-dbs.php"}, {"name": "cubrid_load_from_glo", "synopsis": "The cubrid_load_from_glo() function is used to read a data from a glo instance, and saves it in a designated file.", "usage": "int cubrid_load_from_glo ( resource $conn_identifier , string $oid , string $file_name )", "url": "https://secure.php.net/manual/en/function.cubrid-load-from-glo.php"}, {"name": "cubrid_lob_close", "synopsis": "cubrid_lob_close() is used to close all BLOB/CLOB returned from cubrid_lob_get().", "usage": "bool cubrid_lob_close ( array $lob_identifier_array )", "url": "https://secure.php.net/manual/en/function.cubrid-lob-close.php"}, {"name": "cubrid_lob_export", "synopsis": "cubrid_lob_export() is used to get BLOB/CLOB data from CUBRID database, and saves its contents to a file. To use this function, you must use cubrid_lob_get() first to get BLOB/CLOB info from CUBRID.", "usage": "bool cubrid_lob_export ( resource $conn_identifier , resource $lob_identifier , string $path_name )", "url": "https://secure.php.net/manual/en/function.cubrid-lob-export.php"}, {"name": "cubrid_lob_get", "synopsis": "cubrid_lob_get() is used to get BLOB/CLOB meta info from CUBRID database, CUBRID gets BLOB/CLOB by executing the SQL statement, and returns all LOBs as a resource array. Be sure that the SQL retrieves only one column and its data type is BLOB or CLOB.", "usage": "array cubrid_lob_get ( resource $conn_identifier , string $sql )", "url": "https://secure.php.net/manual/en/function.cubrid-lob-get.php"}, {"name": "cubrid_lob_send", "synopsis": "cubrid_lob_send() reads BLOB/CLOB data and passes it straight through to the browser. To use this function, you must use cubrid_lob_get() first to get BLOB/CLOB info from CUBRID.", "usage": "bool cubrid_lob_send ( resource $conn_identifier , resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob-send.php"}, {"name": "cubrid_lob_size", "synopsis": "cubrid_lob_size() is used to get BLOB/CLOB data size.", "usage": "string cubrid_lob_size ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob-size.php"}, {"name": "cubrid_lob2_bind", "synopsis": "The cubrid_lob2_bind() function is used to bind BLOB/CLOB datas to a corresponding question mark placeholder in the SQL statement that was passed to cubrid_prepare(). If bind_value_type is not given, string will be \"BLOB\" as the default. But if you use cubrid_lob2_new() before, bind_value_type will be consistent with type in cubrid_lob2_new() as the default.", "usage": "bool cubrid_lob2_bind ( resource $req_identifier , int $bind_index , mixed $bind_value [, string $bind_value_type ] )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-bind.php"}, {"name": "cubrid_lob2_close", "synopsis": "The cubrid_lob2_close() function is used to close LOB object returned from cubrid_lob2_new() or got from the result set.", "usage": "bool cubrid_lob2_close ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-close.php"}, {"name": "cubrid_lob2_export", "synopsis": "The cubrid_lob2_export() function is used to save the contents of BLOB/CLOB data to a file. To use this function, you must use cubrid_lob2_new() or fetch a lob object from CUBRID database first. If the file already exists, the operation will fail. This function will not influence the cursor position of the lob object. It operates the entire lob object.", "usage": "bool cubrid_lob2_export ( resource $lob_identifier , string $file_name )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-export.php"}, {"name": "cubrid_lob2_import", "synopsis": "The cubrid_lob2_import() function is used to save the contents of BLOB/CLOB data from a file. To use this function, you must use cubrid_lob2_new() or fetch a lob object from CUBRID database first. If the file already exists, the operation will fail. This function will not influence the cursor position of the lob object. It operates the entire lob object.", "usage": "bool cubrid_lob2_import ( resource $lob_identifier , string $file_name )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-import.php"}, {"name": "cubrid_lob2_new", "synopsis": "The cubrid_lob2_new() function is used to create a lob object (both BLOB and CLOB). This function should be used before you bind a lob object.", "usage": "resource cubrid_lob2_new ([ resource $conn_identifier [, string $type = \"BLOB\" ]] )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-new.php"}, {"name": "cubrid_lob2_read", "synopsis": "The cubrid_lob2_read() function reads len bytes from the LOB data and returns the bytes read.", "usage": "string cubrid_lob2_read ( resource $lob_identifier , int $len )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-read.php"}, {"name": "cubrid_lob2_seek", "synopsis": "The cubrid_lob2_seek() function is used to move the cursor position of a lob object by the value set in the offset argument, to the direction set in the origin argument.", "usage": "bool cubrid_lob2_seek ( resource $lob_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-seek.php"}, {"name": "cubrid_lob2_seek64", "synopsis": "The cubrid_lob2_seek64() function is used to move the cursor position of a lob object by the value set in the offset argument, to the direction set in the origin argument. If the offset you want to move is larger than an integer data can be stored, you can use this function.", "usage": "bool cubrid_lob2_seek64 ( resource $lob_identifier , string $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-seek64.php"}, {"name": "cubrid_lob2_size", "synopsis": "The cubrid_lob2_size() function is used to get the size of a lob object.", "usage": "int cubrid_lob2_size ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-size.php"}, {"name": "cubrid_lob2_size64", "synopsis": "The cubrid_lob2_size64() function is used to get the size of a lob object. If the size of a lob object is larger than an integer data can be stored, you can use this function and it will return the size as a string.", "usage": "string cubrid_lob2_size64 ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-size64.php"}, {"name": "cubrid_lob2_tell", "synopsis": "The cubrid_lob2_tell() function is used to tell the cursor position of the LOB object.", "usage": "int cubrid_lob2_tell ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-tell.php"}, {"name": "cubrid_lob2_tell64", "synopsis": "The cubrid_lob2_tell64() function is used to tell the cursor position of the LOB object. If the size of a lob object is larger than an integer data can be stored, you can use this function and it will return the position information as a string.", "usage": "string cubrid_lob2_tell64 ( resource $lob_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-tell64.php"}, {"name": "cubrid_lob2_write", "synopsis": "The cubrid_lob2_write() function reads as much as data from buf and stores it to the LOB object. Note that this function can only append characters now.", "usage": "bool cubrid_lob2_write ( resource $lob_identifier , string $buf )", "url": "https://secure.php.net/manual/en/function.cubrid-lob2-write.php"}, {"name": "cubrid_lock_read", "synopsis": "The cubrid_lock_read() function is used to put read lock on the instance pointed by given oid.", "usage": "bool cubrid_lock_read ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-lock-read.php"}, {"name": "cubrid_lock_write", "synopsis": "The cubrid_lock_write() function is used to put write lock on the instance pointed by the given oid.", "usage": "bool cubrid_lock_write ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-lock-write.php"}, {"name": "cubrid_move_cursor", "synopsis": "The cubrid_move_cursor() function is used to move the current cursor location of req_identifier by the value set in the offset argument, to the direction set in the origin argument. To set the origin argument, you can use CUBRID_CURSOR_FIRST for the first part of the result, CUBRID_CURSOR_CURRENT for the current location of the result, or CUBRID_CURSOR_LAST for the last part of the result. If origin argument is not explicitly designated, then the function uses CUBRID_CURSOR_CURRENT as its default value.", "usage": "bool cubrid_move_cursor ( resource $req_identifier , int $offset [, int $origin = CUBRID_CURSOR_CURRENT ] )", "url": "https://secure.php.net/manual/en/function.cubrid-move-cursor.php"}, {"name": "cubrid_new_glo", "synopsis": "The cubrid_new_glo() function is used to create a glo instance in the requested class (glo class). The glo created is a LO type, and is stored in the file_name file.", "usage": "string cubrid_new_glo ( resource $conn_identifier , string $class_name , string $file_name )", "url": "https://secure.php.net/manual/en/function.cubrid-new-glo.php"}, {"name": "cubrid_next_result", "synopsis": "The cubrid_next_result() function is used to get results of next query if multiple SQL statements are executed and CUBRID_EXEC_QUERY_ALL flag is set upon cubrid_execute().", "usage": "bool cubrid_next_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.cubrid-next-result.php"}, {"name": "cubrid_num_cols", "synopsis": "The cubrid_num_cols() function is used to get the number of columns from the query result. It can only be used when the query executed is a select statement.", "usage": "int cubrid_num_cols ( resource $result )", "url": "https://secure.php.net/manual/en/function.cubrid-num-cols.php"}, {"name": "cubrid_num_fields", "synopsis": "This function returns the number of columns in the result set, on success, or it returns FALSE on failure.", "usage": "int cubrid_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.cubrid-num-fields.php"}, {"name": "cubrid_num_rows", "synopsis": "The cubrid_num_rows() function is used to get the number of rows from the query result. You can use it only when the query executed is a select statement. When you want to know such value for INSERT, UPDATE, or DELETE query, you have to use the cubrid_affected_rows() function.", "usage": "int cubrid_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.cubrid-num-rows.php"}, {"name": "cubrid_pconnect_with_url", "synopsis": "Establishes a persistent connection to a CUBRID server.", "usage": "resource cubrid_pconnect_with_url ( string $conn_url [, string $userid [, string $passwd ]] )", "url": "https://secure.php.net/manual/en/function.cubrid-pconnect-with-url.php"}, {"name": "cubrid_pconnect", "synopsis": "Establishes a persistent connection to a CUBRID server.", "usage": "resource cubrid_pconnect ( string $host , int $port , string $dbname [, string $userid [, string $passwd ]] )", "url": "https://secure.php.net/manual/en/function.cubrid-pconnect.php"}, {"name": "cubrid_ping", "synopsis": "Checks whether or not the connection to the server is working.", "usage": "bool cubrid_ping ([ resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-ping.php"}, {"name": "cubrid_prepare", "synopsis": "The cubrid_prepare() function is a sort of API which represents SQL statements compiled previously to a given connection handle. This pre-compiled SQL statement will be included in the cubrid_prepare().", "usage": "resource cubrid_prepare ( resource $conn_identifier , string $prepare_stmt [, int $option = 0 ] )", "url": "https://secure.php.net/manual/en/function.cubrid-prepare.php"}, {"name": "cubrid_put", "synopsis": "The cubrid_put() function is used to update an attribute of the instance of the given oid.", "usage": "bool cubrid_put ( resource $conn_identifier , string $oid [, string $attr ], mixed $value )", "url": "https://secure.php.net/manual/en/function.cubrid-put.php"}, {"name": "cubrid_query", "synopsis": "cubrid_query() sends a unique query (multiple queries are not supported) to the currently active database on the server that's associated with the specified conn_identifier.", "usage": "resource cubrid_query ( string $query [, resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-query.php"}, {"name": "cubrid_real_escape_string", "synopsis": "This function returns the escaped string version of the given string. It will escape the following characters: '. In general, single quotations are used to enclose character string. Double quotations may be used as well depending on the value of ansi_quotes, which is a parameter related to SQL statement. If the ansi_quotes value is set to no, character string enclosed by double quotations is handled as character string, not as an identifier. The default value is yes. If you want to include a single quote as part of a character string, enter two single quotes in a row.", "usage": "string cubrid_real_escape_string ( string $unescaped_string [, resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-real-escape-string.php"}, {"name": "cubrid_result", "synopsis": "This function returns the value of a specific field in a specific row from a result set.", "usage": "string cubrid_result ( resource $result , int $row [, mixed $field = 0 ] )", "url": "https://secure.php.net/manual/en/function.cubrid-result.php"}, {"name": "cubrid_rollback", "synopsis": "The cubrid_rollback() function executes rollback on the transaction pointed by conn_identifier, currently in progress.", "usage": "bool cubrid_rollback ( resource $conn_identifier )", "url": "https://secure.php.net/manual/en/function.cubrid-rollback.php"}, {"name": "cubrid_save_to_glo", "synopsis": "The cubrid_save_to_glo() function is used to save requested file in a glo instance.", "usage": "int cubrid_save_to_glo ( resource $conn_identifier , string $oid , string $file_name )", "url": "https://secure.php.net/manual/en/function.cubrid-save-to-glo.php"}, {"name": "cubrid_schema", "synopsis": "The cubrid_schema() function is used to get the requested schema information from database. You have to designate class_name, if you want to get information on certain class, attr_name, if you want to get information on certain attribute (can be used only with CUBRID_ SCH_ATTR_PRIVILEGE).", "usage": "array cubrid_schema ( resource $conn_identifier , int $schema_type [, string $class_name [, string $attr_name ]] )", "url": "https://secure.php.net/manual/en/function.cubrid-schema.php"}, {"name": "cubrid_send_glo", "synopsis": "The cubrid_send_glo() function is used to read data from glo instance and sends it to the PHP standard output.", "usage": "int cubrid_send_glo ( resource $conn_identifier , string $oid )", "url": "https://secure.php.net/manual/en/function.cubrid-send-glo.php"}, {"name": "cubrid_seq_drop", "synopsis": "The cubrid_seq_drop() function is used to delete an element you request from the given sequence type attribute in the database.", "usage": "bool cubrid_seq_drop ( resource $conn_identifier , string $oid , string $attr_name , int $index )", "url": "https://secure.php.net/manual/en/function.cubrid-seq-drop.php"}, {"name": "cubrid_seq_insert", "synopsis": "The cubrid_col_insert() function is used to insert an element to a sequence type attribute in a requested location.", "usage": "bool cubrid_seq_insert ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )", "url": "https://secure.php.net/manual/en/function.cubrid-seq-insert.php"}, {"name": "cubrid_seq_put", "synopsis": "The cubrid_seq_put() function is used to update the content of the requested element in a sequent type attribute using OID.", "usage": "bool cubrid_seq_put ( resource $conn_identifier , string $oid , string $attr_name , int $index , string $seq_element )", "url": "https://secure.php.net/manual/en/function.cubrid-seq-put.php"}, {"name": "cubrid_set_add", "synopsis": "The cubrid_set_add() function is used to insert a single element to a set type attribute (set, multiset, sequence) you requested.", "usage": "bool cubrid_set_add ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )", "url": "https://secure.php.net/manual/en/function.cubrid-set-add.php"}, {"name": "cubrid_set_autocommit", "synopsis": "The cubrid_set_autocommit() function is used to set the CUBRID database auto-commit mode of the current database connection.", "usage": "bool cubrid_set_autocommit ( resource $conn_identifier , bool $mode )", "url": "https://secure.php.net/manual/en/function.cubrid-set-autocommit.php"}, {"name": "cubrid_set_db_parameter", "synopsis": "The cubrid_set_db_parameter() function is used to set the CUBRID database parameters. It can set the following CUBRID database parameters:", "usage": "bool cubrid_set_db_parameter ( resource $conn_identifier , int $param_type , int $param_value )", "url": "https://secure.php.net/manual/en/function.cubrid-set-db-parameter.php"}, {"name": "cubrid_set_drop", "synopsis": "The cubrid_set_drop() function is used to delete an element that you request from the given set type (set, multiset) attribute of the database.", "usage": "bool cubrid_set_drop ( resource $conn_identifier , string $oid , string $attr_name , string $set_element )", "url": "https://secure.php.net/manual/en/function.cubrid-set-drop.php"}, {"name": "cubrid_set_query_timeout", "synopsis": "The cubrid_set_query_timeout() function is used to set the timeout time of query execution.", "usage": "bool cubrid_set_query_timeout ( resource $req_identifier , int $timeout )", "url": "https://secure.php.net/manual/en/function.cubrid-set-query-timeout.php"}, {"name": "cubrid_unbuffered_query", "synopsis": "This function performs a query without waiting for that all query results have been complete. It will return when the results are being generated.", "usage": "resource cubrid_unbuffered_query ( string $query [, resource $conn_identifier ] )", "url": "https://secure.php.net/manual/en/function.cubrid-unbuffered-query.php"}, {"name": "cubrid_version", "synopsis": "The cubrid_version() function is used to get the CUBRID PHP module's version.", "usage": "string cubrid_version ( void )", "url": "https://secure.php.net/manual/en/function.cubrid-version.php"}, {"name": "curl_close", "synopsis": "Closes a cURL session and frees all resources. The cURL handle, ch, is also deleted.", "usage": "void curl_close ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-close.php"}, {"name": "curl_copy_handle", "synopsis": "Copies a cURL handle keeping the same preferences.", "usage": "resource curl_copy_handle ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-copy-handle.php"}, {"name": "curl_errno", "synopsis": "Returns the error number for the last cURL operation.", "usage": "int curl_errno ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-errno.php"}, {"name": "curl_error", "synopsis": "Returns a clear text error message for the last cURL operation.", "usage": "string curl_error ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-error.php"}, {"name": "curl_escape", "synopsis": "This function URL encodes the given string according to \u00bb\u00a0RFC 3986.", "usage": "string curl_escape ( resource $ch , string $str )", "url": "https://secure.php.net/manual/en/function.curl-escape.php"}, {"name": "curl_exec", "synopsis": "Execute the given cURL session.", "usage": "mixed curl_exec ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-exec.php"}, {"name": "curl_getinfo", "synopsis": "Gets information about the last transfer.", "usage": "mixed curl_getinfo ( resource $ch [, int $opt ] )", "url": "https://secure.php.net/manual/en/function.curl-getinfo.php"}, {"name": "curl_init", "synopsis": "Initializes a new session and return a cURL handle for use with the curl_setopt(), curl_exec(), and curl_close() functions.", "usage": "resource curl_init ([ string $url = NULL ] )", "url": "https://secure.php.net/manual/en/function.curl-init.php"}, {"name": "curl_multi_add_handle", "synopsis": "Adds the ch handle to the multi handle mh", "usage": "int curl_multi_add_handle ( resource $mh , resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-multi-add-handle.php"}, {"name": "curl_multi_close", "synopsis": "Closes a set of cURL handles.", "usage": "void curl_multi_close ( resource $mh )", "url": "https://secure.php.net/manual/en/function.curl-multi-close.php"}, {"name": "curl_multi_errno", "synopsis": "Return an integer containing the last multi curl error number.", "usage": "int curl_multi_errno ( resource $mh )", "url": "https://secure.php.net/manual/en/function.curl-multi-errno.php"}, {"name": "curl_multi_exec", "synopsis": "Processes each of the handles in the stack. This method can be called whether or not a handle needs to read or write data.", "usage": "int curl_multi_exec ( resource $mh , int &$still_running )", "url": "https://secure.php.net/manual/en/function.curl-multi-exec.php"}, {"name": "curl_multi_getcontent", "synopsis": "If CURLOPT_RETURNTRANSFER is an option that is set for a specific handle, then this function will return the content of that cURL handle in the form of a string.", "usage": "string curl_multi_getcontent ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-multi-getcontent.php"}, {"name": "curl_multi_info_read", "synopsis": "Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed.", "usage": "array curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] )", "url": "https://secure.php.net/manual/en/function.curl-multi-info-read.php"}, {"name": "curl_multi_init", "synopsis": "Allows the processing of multiple cURL handles asynchronously.", "usage": "resource curl_multi_init ( void )", "url": "https://secure.php.net/manual/en/function.curl-multi-init.php"}, {"name": "curl_multi_remove_handle", "synopsis": "Removes a given ch handle from the given mh handle. When the ch handle has been removed, it is again perfectly legal to run curl_exec() on this handle. Removing the ch handle while being used, will effectively halt the transfer in progress involving that handle.", "usage": "int curl_multi_remove_handle ( resource $mh , resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-multi-remove-handle.php"}, {"name": "curl_multi_select", "synopsis": "Blocks until there is activity on any of the curl_multi connections.", "usage": "int curl_multi_select ( resource $mh [, float $timeout = 1.0 ] )", "url": "https://secure.php.net/manual/en/function.curl-multi-select.php"}, {"name": "curl_multi_setopt", "synopsis": "", "usage": "bool curl_multi_setopt ( resource $mh , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.curl-multi-setopt.php"}, {"name": "curl_multi_strerror", "synopsis": "Returns a text error message describing the given CURLM error code.", "usage": "string curl_multi_strerror ( int $errornum )", "url": "https://secure.php.net/manual/en/function.curl-multi-strerror.php"}, {"name": "curl_pause", "synopsis": "", "usage": "int curl_pause ( resource $ch , int $bitmask )", "url": "https://secure.php.net/manual/en/function.curl-pause.php"}, {"name": "curl_reset", "synopsis": "This function re-initializes all options set on the given cURL handle to the default values.", "usage": "void curl_reset ( resource $ch )", "url": "https://secure.php.net/manual/en/function.curl-reset.php"}, {"name": "curl_setopt_array", "synopsis": "Sets multiple options for a cURL session. This function is useful for setting a large number of cURL options without repetitively calling curl_setopt().", "usage": "bool curl_setopt_array ( resource $ch , array $options )", "url": "https://secure.php.net/manual/en/function.curl-setopt-array.php"}, {"name": "curl_setopt", "synopsis": "Sets an option on the given cURL session handle.", "usage": "bool curl_setopt ( resource $ch , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.curl-setopt.php"}, {"name": "curl_share_close", "synopsis": "Closes a cURL share handle and frees all resources.", "usage": "void curl_share_close ( resource $sh )", "url": "https://secure.php.net/manual/en/function.curl-share-close.php"}, {"name": "curl_share_errno", "synopsis": "Return an integer containing the last share curl error number.", "usage": "int curl_share_errno ( resource $sh )", "url": "https://secure.php.net/manual/en/function.curl-share-errno.php"}, {"name": "curl_share_init", "synopsis": "Allows to share data between cURL handles.", "usage": "resource curl_share_init ( void )", "url": "https://secure.php.net/manual/en/function.curl-share-init.php"}, {"name": "curl_share_setopt", "synopsis": "Sets an option on the given cURL share handle.", "usage": "bool curl_share_setopt ( resource $sh , int $option , string $value )", "url": "https://secure.php.net/manual/en/function.curl-share-setopt.php"}, {"name": "curl_share_strerror", "synopsis": "Returns a text error message describing the given error code.", "usage": "string curl_share_strerror ( int $errornum )", "url": "https://secure.php.net/manual/en/function.curl-share-strerror.php"}, {"name": "curl_strerror", "synopsis": "Returns a text error message describing the given error code.", "usage": "string curl_strerror ( int $errornum )", "url": "https://secure.php.net/manual/en/function.curl-strerror.php"}, {"name": "curl_unescape", "synopsis": "This function decodes the given URL encoded string.", "usage": "string curl_unescape ( resource $ch , string $str )", "url": "https://secure.php.net/manual/en/function.curl-unescape.php"}, {"name": "curl_version", "synopsis": "Returns information about the cURL version.", "usage": "array curl_version ([ int $age = CURLVERSION_NOW ] )", "url": "https://secure.php.net/manual/en/function.curl-version.php"}, {"name": "current", "synopsis": "Every array has an internal pointer to its \"current\" element, which is initialized to the first element inserted into the array.", "usage": "mixed current ( array $array )", "url": "https://secure.php.net/manual/en/function.current.php"}, {"name": "cyrus_authenticate", "synopsis": null, "usage": "void cyrus_authenticate ( resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]] )", "url": "https://secure.php.net/manual/en/function.cyrus-authenticate.php"}, {"name": "cyrus_bind", "synopsis": "Binds callbacks to a Cyrus IMAP connection.", "usage": "bool cyrus_bind ( resource $connection , array $callbacks )", "url": "https://secure.php.net/manual/en/function.cyrus-bind.php"}, {"name": "cyrus_close", "synopsis": "Closes the connection to a Cyrus IMAP server.", "usage": "bool cyrus_close ( resource $connection )", "url": "https://secure.php.net/manual/en/function.cyrus-close.php"}, {"name": "cyrus_connect", "synopsis": "Connects to a Cyrus IMAP server.", "usage": "resource cyrus_connect ([ string $host [, string $port [, int $flags ]]] )", "url": "https://secure.php.net/manual/en/function.cyrus-connect.php"}, {"name": "cyrus_query", "synopsis": "Sends a query to a Cyrus IMAP server.", "usage": "array cyrus_query ( resource $connection , string $query )", "url": "https://secure.php.net/manual/en/function.cyrus-query.php"}, {"name": "cyrus_unbind", "synopsis": null, "usage": "bool cyrus_unbind ( resource $connection , string $trigger_name )", "url": "https://secure.php.net/manual/en/function.cyrus-unbind.php"}, {"name": "date_default_timezone_get", "synopsis": "In order of preference, this function returns the default timezone by:", "usage": "string date_default_timezone_get ( void )", "url": "https://secure.php.net/manual/en/function.date-default-timezone-get.php"}, {"name": "date_default_timezone_set", "synopsis": "date_default_timezone_set() sets the default timezone used by all date/time functions.", "usage": "bool date_default_timezone_set ( string $timezone_identifier )", "url": "https://secure.php.net/manual/en/function.date-default-timezone-set.php"}, {"name": "date_parse_from_format", "synopsis": "Returns associative array with detailed info about given date.", "usage": "array date_parse_from_format ( string $format , string $date )", "url": "https://secure.php.net/manual/en/function.date-parse-from-format.php"}, {"name": "date_parse", "synopsis": null, "usage": "array date_parse ( string $date )", "url": "https://secure.php.net/manual/en/function.date-parse.php"}, {"name": "date_sun_info", "synopsis": null, "usage": "array date_sun_info ( int $time , float $latitude , float $longitude )", "url": "https://secure.php.net/manual/en/function.date-sun-info.php"}, {"name": "date_sunrise", "synopsis": "date_sunrise() returns the sunrise time for a given day (specified as a timestamp) and location.", "usage": "mixed date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunrise_zenith\") [, float $gmt_offset = 0 ]]]]] )", "url": "https://secure.php.net/manual/en/function.date-sunrise.php"}, {"name": "date_sunset", "synopsis": "date_sunset() returns the sunset time for a given day (specified as a timestamp) and location.", "usage": "mixed date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get(\"date.default_latitude\") [, float $longitude = ini_get(\"date.default_longitude\") [, float $zenith = ini_get(\"date.sunset_zenith\") [, float $gmt_offset = 0 ]]]]] )", "url": "https://secure.php.net/manual/en/function.date-sunset.php"}, {"name": "date", "synopsis": "Returns a string formatted according to the given format string using the given integer timestamp or the current time if no timestamp is given. In other words, timestamp is optional and defaults to the value of time().", "usage": "string date ( string $format [, int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.date.php"}, {"name": "db2_autocommit", "synopsis": "Sets or gets the AUTOCOMMIT behavior of the specified connection resource.", "usage": "mixed db2_autocommit ( resource $connection [, bool $value ] )", "url": "https://secure.php.net/manual/en/function.db2-autocommit.php"}, {"name": "db2_bind_param", "synopsis": "Binds a PHP variable to an SQL statement parameter in a statement resource returned by db2_prepare(). This function gives you more control over the parameter type, data type, precision, and scale for the parameter than simply passing the variable as part of the optional input array to db2_execute().", "usage": "bool db2_bind_param ( resource $stmt , int $parameter-number , string $variable-name [, int $parameter-type [, int $data-type = 0 [, int $precision = -1 [, int $scale = 0 ]]]] )", "url": "https://secure.php.net/manual/en/function.db2-bind-param.php"}, {"name": "db2_client_info", "synopsis": "This function returns an object with read-only properties that return information about the DB2 database client. The following table lists the DB2 client properties:", "usage": "object db2_client_info ( resource $connection )", "url": "https://secure.php.net/manual/en/function.db2-client-info.php"}, {"name": "db2_close", "synopsis": "This function closes a DB2 client connection created with db2_connect() and returns the corresponding resources to the database server.", "usage": "bool db2_close ( resource $connection )", "url": "https://secure.php.net/manual/en/function.db2-close.php"}, {"name": "db2_column_privileges", "synopsis": "Returns a result set listing the columns and associated privileges for a table.", "usage": "resource db2_column_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )", "url": "https://secure.php.net/manual/en/function.db2-column-privileges.php"}, {"name": "db2_columns", "synopsis": "Returns a result set listing the columns and associated metadata for a table.", "usage": "resource db2_columns ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $column-name ]]]] )", "url": "https://secure.php.net/manual/en/function.db2-columns.php"}, {"name": "db2_commit", "synopsis": "Commits an in-progress transaction on the specified connection resource and begins a new transaction. PHP applications normally default to AUTOCOMMIT mode, so db2_commit() is not necessary unless AUTOCOMMIT has been turned off for the connection resource.", "usage": "bool db2_commit ( resource $connection )", "url": "https://secure.php.net/manual/en/function.db2-commit.php"}, {"name": "db2_conn_error", "synopsis": "db2_conn_error() returns an SQLSTATE value representing the reason the last attempt to connect to a database failed. As db2_connect() returns FALSE in the event of a failed connection attempt, you do not pass any parameters to db2_conn_error() to retrieve the SQLSTATE value.", "usage": "string db2_conn_error ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.db2-conn-error.php"}, {"name": "db2_conn_errormsg", "synopsis": "db2_conn_errormsg() returns an error message and SQLCODE value representing the reason the last database connection attempt failed. As db2_connect() returns FALSE in the event of a failed connection attempt, do not pass any parameters to db2_conn_errormsg() to retrieve the associated error message and SQLCODE value.", "usage": "string db2_conn_errormsg ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.db2-conn-errormsg.php"}, {"name": "db2_connect", "synopsis": "Creates a new connection to an IBM DB2 Universal Database, IBM Cloudscape, or Apache Derby database.", "usage": "resource db2_connect ( string $database , string $username , string $password [, array $options ] )", "url": "https://secure.php.net/manual/en/function.db2-connect.php"}, {"name": "db2_cursor_type", "synopsis": "Returns the cursor type used by a statement resource. Use this to determine if you are working with a forward-only cursor or scrollable cursor.", "usage": "int db2_cursor_type ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-cursor-type.php"}, {"name": "db2_escape_string", "synopsis": "Prepends backslashes to special characters in the string argument.", "usage": "string db2_escape_string ( string $string_literal )", "url": "https://secure.php.net/manual/en/function.db2-escape-string.php"}, {"name": "db2_exec", "synopsis": "Executes an SQL statement directly.", "usage": "resource db2_exec ( resource $connection , string $statement [, array $options ] )", "url": "https://secure.php.net/manual/en/function.db2-exec.php"}, {"name": "db2_execute", "synopsis": "db2_execute() executes an SQL statement that was prepared by db2_prepare().", "usage": "bool db2_execute ( resource $stmt [, array $parameters ] )", "url": "https://secure.php.net/manual/en/function.db2-execute.php"}, {"name": "db2_fetch_array", "synopsis": "Returns an array, indexed by column position, representing a row in a result set. The columns are 0-indexed.", "usage": "array db2_fetch_array ( resource $stmt [, int $row_number = -1 ] )", "url": "https://secure.php.net/manual/en/function.db2-fetch-array.php"}, {"name": "db2_fetch_assoc", "synopsis": "Returns an array, indexed by column name, representing a row in a result set.", "usage": "array db2_fetch_assoc ( resource $stmt [, int $row_number = -1 ] )", "url": "https://secure.php.net/manual/en/function.db2-fetch-assoc.php"}, {"name": "db2_fetch_both", "synopsis": "Returns an array, indexed by both column name and position, representing a row in a result set. Note that the row returned by db2_fetch_both() requires more memory than the single-indexed arrays returned by db2_fetch_assoc() or db2_fetch_array().", "usage": "array db2_fetch_both ( resource $stmt [, int $row_number = -1 ] )", "url": "https://secure.php.net/manual/en/function.db2-fetch-both.php"}, {"name": "db2_fetch_object", "synopsis": "Returns an object in which each property represents a column returned in the row fetched from a result set.", "usage": "object db2_fetch_object ( resource $stmt [, int $row_number = -1 ] )", "url": "https://secure.php.net/manual/en/function.db2-fetch-object.php"}, {"name": "db2_fetch_row", "synopsis": "Use db2_fetch_row() to iterate through a result set, or to point to a specific row in a result set if you requested a scrollable cursor.", "usage": "bool db2_fetch_row ( resource $stmt [, int $row_number ] )", "url": "https://secure.php.net/manual/en/function.db2-fetch-row.php"}, {"name": "db2_field_display_size", "synopsis": "Returns the maximum number of bytes required to display a column in a result set.", "usage": "int db2_field_display_size ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-display-size.php"}, {"name": "db2_field_name", "synopsis": "Returns the name of the specified column in the result set.", "usage": "string db2_field_name ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-name.php"}, {"name": "db2_field_num", "synopsis": "Returns the position of the named column in a result set.", "usage": "int db2_field_num ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-num.php"}, {"name": "db2_field_precision", "synopsis": "Returns the precision of the indicated column in a result set.", "usage": "int db2_field_precision ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-precision.php"}, {"name": "db2_field_scale", "synopsis": "Returns the scale of the indicated column in a result set.", "usage": "int db2_field_scale ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-scale.php"}, {"name": "db2_field_type", "synopsis": "Returns the data type of the indicated column in a result set.", "usage": "string db2_field_type ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-type.php"}, {"name": "db2_field_width", "synopsis": "Returns the width of the current value of the indicated column in a result set. This is the maximum width of the column for a fixed-length data type, or the actual width of the column for a variable-length data type.", "usage": "int db2_field_width ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-field-width.php"}, {"name": "db2_foreign_keys", "synopsis": "Returns a result set listing the foreign keys for a table.", "usage": "resource db2_foreign_keys ( resource $connection , string $qualifier , string $schema , string $table-name )", "url": "https://secure.php.net/manual/en/function.db2-foreign-keys.php"}, {"name": "db2_free_result", "synopsis": "Frees the system and database resources that are associated with a result set. These resources are freed implicitly when a script finishes, but you can call db2_free_result() to explicitly free the result set resources before the end of the script.", "usage": "bool db2_free_result ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-free-result.php"}, {"name": "db2_free_stmt", "synopsis": "Frees the system and database resources that are associated with a statement resource. These resources are freed implicitly when a script finishes, but you can call db2_free_stmt() to explicitly free the statement resources before the end of the script.", "usage": "bool db2_free_stmt ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-free-stmt.php"}, {"name": "db2_get_option", "synopsis": "Retrieves the value of a specified option value for a statement resource or a connection resource.", "usage": "string db2_get_option ( resource $resource , string $option )", "url": "https://secure.php.net/manual/en/function.db2-get-option.php"}, {"name": "db2_last_insert_id", "synopsis": "Returns the auto generated ID of the last insert query that successfully executed on this connection.", "usage": "string db2_last_insert_id ( resource $resource )", "url": "https://secure.php.net/manual/en/function.db2-last-insert-id.php"}, {"name": "db2_lob_read", "synopsis": "Use db2_lob_read() to iterate through a specified column of a result set and retrieve a user defined size of LOB data.", "usage": "string db2_lob_read ( resource $stmt , int $colnum , int $length )", "url": "https://secure.php.net/manual/en/function.db2-lob-read.php"}, {"name": "db2_next_result", "synopsis": "A stored procedure can return zero or more result sets. While you handle the first result set in exactly the same way you would handle the results returned by a simple SELECT statement, to fetch the second and subsequent result sets from a stored procedure you must call the db2_next_result() function and return the result to a uniquely named PHP variable.", "usage": "resource db2_next_result ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-next-result.php"}, {"name": "db2_num_fields", "synopsis": "Returns the number of fields contained in a result set. This is most useful for handling the result sets returned by dynamically generated queries, or for result sets returned by stored procedures, where your application cannot otherwise know how to retrieve and use the results.", "usage": "int db2_num_fields ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-num-fields.php"}, {"name": "db2_num_rows", "synopsis": "Returns the number of rows deleted, inserted, or updated by an SQL statement.", "usage": "int db2_num_rows ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.db2-num-rows.php"}, {"name": "db2_pclose", "synopsis": "This function closes a DB2 client connection created with db2_pconnect() and returns the corresponding resources to the database server.", "usage": "bool db2_pclose ( resource $resource )", "url": "https://secure.php.net/manual/en/function.db2-pclose.php"}, {"name": "db2_pconnect", "synopsis": "Returns a persistent connection to an IBM DB2 Universal Database, IBM Cloudscape, or Apache Derby database.", "usage": "resource db2_pconnect ( string $database , string $username , string $password [, array $options ] )", "url": "https://secure.php.net/manual/en/function.db2-pconnect.php"}, {"name": "db2_prepare", "synopsis": "db2_prepare() creates a prepared SQL statement which can include 0 or more parameter markers (? characters) representing parameters for input, output, or input/output. You can pass parameters to the prepared statement using db2_bind_param(), or for input values only, as an array passed to db2_execute().", "usage": "resource db2_prepare ( resource $connection , string $statement [, array $options ] )", "url": "https://secure.php.net/manual/en/function.db2-prepare.php"}, {"name": "db2_primary_keys", "synopsis": "Returns a result set listing the primary keys for a table.", "usage": "resource db2_primary_keys ( resource $connection , string $qualifier , string $schema , string $table-name )", "url": "https://secure.php.net/manual/en/function.db2-primary-keys.php"}, {"name": "db2_procedure_columns", "synopsis": "Returns a result set listing the parameters for one or more stored procedures.", "usage": "resource db2_procedure_columns ( resource $connection , string $qualifier , string $schema , string $procedure , string $parameter )", "url": "https://secure.php.net/manual/en/function.db2-procedure-columns.php"}, {"name": "db2_procedures", "synopsis": "Returns a result set listing the stored procedures registered in a database.", "usage": "resource db2_procedures ( resource $connection , string $qualifier , string $schema , string $procedure )", "url": "https://secure.php.net/manual/en/function.db2-procedures.php"}, {"name": "db2_result", "synopsis": "Use db2_result() to return the value of a specified column in the current row of a result set. You must call db2_fetch_row() before calling db2_result() to set the location of the result set pointer.", "usage": "mixed db2_result ( resource $stmt , mixed $column )", "url": "https://secure.php.net/manual/en/function.db2-result.php"}, {"name": "db2_rollback", "synopsis": "Rolls back an in-progress transaction on the specified connection resource and begins a new transaction. PHP applications normally default to AUTOCOMMIT mode, so db2_rollback() normally has no effect unless AUTOCOMMIT has been turned off for the connection resource.", "usage": "bool db2_rollback ( resource $connection )", "url": "https://secure.php.net/manual/en/function.db2-rollback.php"}, {"name": "db2_server_info", "synopsis": "This function returns an object with read-only properties that return information about the IBM DB2, Cloudscape, or Apache Derby database server. The following table lists the database server properties:", "usage": "object db2_server_info ( resource $connection )", "url": "https://secure.php.net/manual/en/function.db2-server-info.php"}, {"name": "db2_set_option", "synopsis": "Sets options for a statement resource or a connection resource. You cannot set options for result set resources.", "usage": "bool db2_set_option ( resource $resource , array $options , int $type )", "url": "https://secure.php.net/manual/en/function.db2-set-option.php"}, {"name": "db2_special_columns", "synopsis": "Returns a result set listing the unique row identifier columns for a table.", "usage": "resource db2_special_columns ( resource $connection , string $qualifier , string $schema , string $table_name , int $scope )", "url": "https://secure.php.net/manual/en/function.db2-special-columns.php"}, {"name": "db2_statistics", "synopsis": "Returns a result set listing the index and statistics for a table.", "usage": "resource db2_statistics ( resource $connection , string $qualifier , string $schema , string $table-name , bool $unique )", "url": "https://secure.php.net/manual/en/function.db2-statistics.php"}, {"name": "db2_stmt_error", "synopsis": "Returns a string containing the SQLSTATE value returned by an SQL statement.", "usage": "string db2_stmt_error ([ resource $stmt ] )", "url": "https://secure.php.net/manual/en/function.db2-stmt-error.php"}, {"name": "db2_stmt_errormsg", "synopsis": "Returns a string containing the last SQL statement error message.", "usage": "string db2_stmt_errormsg ([ resource $stmt ] )", "url": "https://secure.php.net/manual/en/function.db2-stmt-errormsg.php"}, {"name": "db2_table_privileges", "synopsis": "Returns a result set listing the tables and associated privileges in a database.", "usage": "resource db2_table_privileges ( resource $connection [, string $qualifier [, string $schema [, string $table_name ]]] )", "url": "https://secure.php.net/manual/en/function.db2-table-privileges.php"}, {"name": "db2_tables", "synopsis": "Returns a result set listing the tables and associated metadata in a database.", "usage": "resource db2_tables ( resource $connection [, string $qualifier [, string $schema [, string $table-name [, string $table-type ]]]] )", "url": "https://secure.php.net/manual/en/function.db2-tables.php"}, {"name": "dba_close", "synopsis": "dba_close() closes the established database and frees all resources of the specified database handle.", "usage": "void dba_close ( resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-close.php"}, {"name": "dba_delete", "synopsis": "dba_delete() deletes the specified entry from the database.", "usage": "bool dba_delete ( string $key , resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-delete.php"}, {"name": "dba_exists", "synopsis": "dba_exists() checks whether the specified key exists in the database.", "usage": "bool dba_exists ( string $key , resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-exists.php"}, {"name": "dba_fetch", "synopsis": "dba_fetch() fetches the data specified by key from the database specified with handle.", "usage": "string dba_fetch ( string $key , resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-fetch.php"}, {"name": "dba_firstkey", "synopsis": "dba_firstkey() returns the first key of the database and resets the internal key pointer. This permits a linear search through the whole database.", "usage": "string dba_firstkey ( resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-firstkey.php"}, {"name": "dba_handlers", "synopsis": "dba_handlers() list all the handlers supported by this extension.", "usage": "array dba_handlers ([ bool $full_info = FALSE ] )", "url": "https://secure.php.net/manual/en/function.dba-handlers.php"}, {"name": "dba_insert", "synopsis": "dba_insert() inserts the entry described with key and value into the database.", "usage": "bool dba_insert ( string $key , string $value , resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-insert.php"}, {"name": "dba_key_split", "synopsis": "dba_key_split() splits a key (string representation) into an array representation.", "usage": "mixed dba_key_split ( mixed $key )", "url": "https://secure.php.net/manual/en/function.dba-key-split.php"}, {"name": "dba_list", "synopsis": "dba_list() list all open database files.", "usage": "array dba_list ( void )", "url": "https://secure.php.net/manual/en/function.dba-list.php"}, {"name": "dba_nextkey", "synopsis": "dba_nextkey() returns the next key of the database and advances the internal key pointer.", "usage": "string dba_nextkey ( resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-nextkey.php"}, {"name": "dba_open", "synopsis": "dba_open() establishes a database instance for path with mode using handler.", "usage": "resource dba_open ( string $path , string $mode [, string $handler [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.dba-open.php"}, {"name": "dba_optimize", "synopsis": "dba_optimize() optimizes the underlying database.", "usage": "bool dba_optimize ( resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-optimize.php"}, {"name": "dba_popen", "synopsis": "dba_popen() establishes a persistent database instance for path with mode using handler.", "usage": "resource dba_popen ( string $path , string $mode [, string $handler [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.dba-popen.php"}, {"name": "dba_replace", "synopsis": "dba_replace() replaces or inserts the entry described with key and value into the database specified by handle.", "usage": "bool dba_replace ( string $key , string $value , resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-replace.php"}, {"name": "dba_sync", "synopsis": "dba_sync() synchronizes the database. This will probably trigger a physical write to the disk, if supported.", "usage": "bool dba_sync ( resource $handle )", "url": "https://secure.php.net/manual/en/function.dba-sync.php"}, {"name": "dbase_add_record", "synopsis": "Adds the given data to the database.", "usage": "bool dbase_add_record ( resource $dbase_identifier , array $record )", "url": "https://secure.php.net/manual/en/function.dbase-add-record.php"}, {"name": "dbase_close", "synopsis": "Closes the given database link identifier.", "usage": "bool dbase_close ( resource $dbase_identifier )", "url": "https://secure.php.net/manual/en/function.dbase-close.php"}, {"name": "dbase_create", "synopsis": "dbase_create() creates a dBase database with the given definition. If the file already exists, it is not truncated. dbase_pack() can be called to force truncation.", "usage": "resource dbase_create ( string $filename , array $fields [, int $type = DBASE_TYPE_DBASE ] )", "url": "https://secure.php.net/manual/en/function.dbase-create.php"}, {"name": "dbase_delete_record", "synopsis": "Marks the given record to be deleted from the database.", "usage": "bool dbase_delete_record ( resource $dbase_identifier , int $record_number )", "url": "https://secure.php.net/manual/en/function.dbase-delete-record.php"}, {"name": "dbase_get_header_info", "synopsis": "Returns information on the column structure of the given database link identifier.", "usage": "array dbase_get_header_info ( resource $dbase_identifier )", "url": "https://secure.php.net/manual/en/function.dbase-get-header-info.php"}, {"name": "dbase_get_record_with_names", "synopsis": "Gets a record from a dBase database as an associative array.", "usage": "array dbase_get_record_with_names ( resource $dbase_identifier , int $record_number )", "url": "https://secure.php.net/manual/en/function.dbase-get-record-with-names.php"}, {"name": "dbase_get_record", "synopsis": "Gets a record from a database as an indexed array.", "usage": "array dbase_get_record ( resource $dbase_identifier , int $record_number )", "url": "https://secure.php.net/manual/en/function.dbase-get-record.php"}, {"name": "dbase_numfields", "synopsis": "Gets the number of fields (columns) in the specified database.", "usage": "int dbase_numfields ( resource $dbase_identifier )", "url": "https://secure.php.net/manual/en/function.dbase-numfields.php"}, {"name": "dbase_numrecords", "synopsis": "Gets the number of records (rows) in the specified database.", "usage": "int dbase_numrecords ( resource $dbase_identifier )", "url": "https://secure.php.net/manual/en/function.dbase-numrecords.php"}, {"name": "dbase_open", "synopsis": "dbase_open() opens a dBase database with the given access mode.", "usage": "resource dbase_open ( string $filename , int $mode )", "url": "https://secure.php.net/manual/en/function.dbase-open.php"}, {"name": "dbase_pack", "synopsis": "Packs the specified database by permanently deleting all records marked for deletion using dbase_delete_record(). Note that the file will be truncated after successful packing (contrary to dBASE III's PACK command).", "usage": "bool dbase_pack ( resource $dbase_identifier )", "url": "https://secure.php.net/manual/en/function.dbase-pack.php"}, {"name": "dbase_replace_record", "synopsis": "Replaces the given record in the database with the given data.", "usage": "bool dbase_replace_record ( resource $dbase_identifier , array $record , int $record_number )", "url": "https://secure.php.net/manual/en/function.dbase-replace-record.php"}, {"name": "dbplus_add", "synopsis": "Adds a tuple to a relation.", "usage": "int dbplus_add ( resource $relation , array $tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-add.php"}, {"name": "dbplus_aql", "synopsis": "Executes an AQL query on the given server and dbpath.", "usage": "resource dbplus_aql ( string $query [, string $server [, string $dbpath ]] )", "url": "https://secure.php.net/manual/en/function.dbplus-aql.php"}, {"name": "dbplus_chdir", "synopsis": "Changes the virtual current directory where relation files will be looked for by dbplus_open().", "usage": "string dbplus_chdir ([ string $newdir ] )", "url": "https://secure.php.net/manual/en/function.dbplus-chdir.php"}, {"name": "dbplus_close", "synopsis": "Closes a relation previously opened by dbplus_open().", "usage": "mixed dbplus_close ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-close.php"}, {"name": "dbplus_curr", "synopsis": "Reads the data for the current tuple for the given relation.", "usage": "int dbplus_curr ( resource $relation , array &$tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-curr.php"}, {"name": "dbplus_errcode", "synopsis": "Returns a clear error string for the given error code.", "usage": "string dbplus_errcode ([ int $errno ] )", "url": "https://secure.php.net/manual/en/function.dbplus-errcode.php"}, {"name": "dbplus_errno", "synopsis": "Returns the error code returned by the last db++ operation.", "usage": "int dbplus_errno ( void )", "url": "https://secure.php.net/manual/en/function.dbplus-errno.php"}, {"name": "dbplus_find", "synopsis": "Places a constraint on the given relation.", "usage": "int dbplus_find ( resource $relation , array $constraints , mixed $tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-find.php"}, {"name": "dbplus_first", "synopsis": "Reads the data for the first tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple.", "usage": "int dbplus_first ( resource $relation , array &$tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-first.php"}, {"name": "dbplus_flush", "synopsis": "Writes all changes applied to relation since the last flush to disk.", "usage": "int dbplus_flush ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-flush.php"}, {"name": "dbplus_freealllocks", "synopsis": "Frees all tuple locks held by this client.", "usage": "int dbplus_freealllocks ( void )", "url": "https://secure.php.net/manual/en/function.dbplus-freealllocks.php"}, {"name": "dbplus_freelock", "synopsis": "Releases a write lock on the given tuple previously obtained by dbplus_getlock().", "usage": "int dbplus_freelock ( resource $relation , string $tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-freelock.php"}, {"name": "dbplus_freerlocks", "synopsis": "Frees all tuple locks held on the given relation.", "usage": "int dbplus_freerlocks ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-freerlocks.php"}, {"name": "dbplus_getlock", "synopsis": "Requests a write lock on the specified tuple.", "usage": "int dbplus_getlock ( resource $relation , string $tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-getlock.php"}, {"name": "dbplus_getunique", "synopsis": "Obtains a number guaranteed to be unique for the given relation and will pass it back in the variable given as uniqueid.", "usage": "int dbplus_getunique ( resource $relation , int $uniqueid )", "url": "https://secure.php.net/manual/en/function.dbplus-getunique.php"}, {"name": "dbplus_info", "synopsis": null, "usage": "int dbplus_info ( resource $relation , string $key , array &$result )", "url": "https://secure.php.net/manual/en/function.dbplus-info.php"}, {"name": "dbplus_last", "synopsis": "Reads the data for the last tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple.", "usage": "int dbplus_last ( resource $relation , array &$tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-last.php"}, {"name": "dbplus_lockrel", "synopsis": "Requests a write lock on the given relation.", "usage": "int dbplus_lockrel ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-lockrel.php"}, {"name": "dbplus_next", "synopsis": "Reads the data for the next tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple.", "usage": "int dbplus_next ( resource $relation , array &$tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-next.php"}, {"name": "dbplus_open", "synopsis": "Opens the given relation file.", "usage": "resource dbplus_open ( string $name )", "url": "https://secure.php.net/manual/en/function.dbplus-open.php"}, {"name": "dbplus_prev", "synopsis": "Reads the data for the previous tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple.", "usage": "int dbplus_prev ( resource $relation , array &$tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-prev.php"}, {"name": "dbplus_rchperm", "synopsis": "Changes access permissions as specified by mask, user and group. The values for these are operating system specific.", "usage": "int dbplus_rchperm ( resource $relation , int $mask , string $user , string $group )", "url": "https://secure.php.net/manual/en/function.dbplus-rchperm.php"}, {"name": "dbplus_rcreate", "synopsis": "Creates a new relation. Any existing relation sharing the same name will be overwritten if the relation is currently not in use and overwrite is set to TRUE.", "usage": "resource dbplus_rcreate ( string $name , mixed $domlist [, bool $overwrite ] )", "url": "https://secure.php.net/manual/en/function.dbplus-rcreate.php"}, {"name": "dbplus_rcrtexact", "synopsis": "dbplus_rcrtexact() will create an exact but empty copy of the given relation under a new name.", "usage": "mixed dbplus_rcrtexact ( string $name , resource $relation [, bool $overwrite ] )", "url": "https://secure.php.net/manual/en/function.dbplus-rcrtexact.php"}, {"name": "dbplus_rcrtlike", "synopsis": "dbplus_rcrtexact() will create an empty copy of the given relation under a new name, but with default indices.", "usage": "mixed dbplus_rcrtlike ( string $name , resource $relation [, int $overwrite ] )", "url": "https://secure.php.net/manual/en/function.dbplus-rcrtlike.php"}, {"name": "dbplus_resolve", "synopsis": "dbplus_resolve() will try to resolve the given relation_name and find out internal server id, real hostname and the database path on this host.", "usage": "array dbplus_resolve ( string $relation_name )", "url": "https://secure.php.net/manual/en/function.dbplus-resolve.php"}, {"name": "dbplus_restorepos", "synopsis": null, "usage": "int dbplus_restorepos ( resource $relation , array $tuple )", "url": "https://secure.php.net/manual/en/function.dbplus-restorepos.php"}, {"name": "dbplus_rkeys", "synopsis": "dbplus_rkeys() will replace the current primary key for relation with the combination of domains specified by domlist.", "usage": "mixed dbplus_rkeys ( resource $relation , mixed $domlist )", "url": "https://secure.php.net/manual/en/function.dbplus-rkeys.php"}, {"name": "dbplus_ropen", "synopsis": "dbplus_ropen() will open the relation file locally for quick access without any client/server overhead. Access is read only and only dbplus_curr() and dbplus_next() may be applied to the returned relation.", "usage": "resource dbplus_ropen ( string $name )", "url": "https://secure.php.net/manual/en/function.dbplus-ropen.php"}, {"name": "dbplus_rquery", "synopsis": "dbplus_rquery() performs a local (raw) AQL query using an AQL interpreter embedded into the db++ client library. dbplus_rquery() is faster than dbplus_aql() but will work on local data only.", "usage": "resource dbplus_rquery ( string $query [, string $dbpath ] )", "url": "https://secure.php.net/manual/en/function.dbplus-rquery.php"}, {"name": "dbplus_rrename", "synopsis": "dbplus_rrename() will change the name of relation to name.", "usage": "int dbplus_rrename ( resource $relation , string $name )", "url": "https://secure.php.net/manual/en/function.dbplus-rrename.php"}, {"name": "dbplus_rsecindex", "synopsis": "dbplus_rsecindex() will create a new secondary index for relation with consists of the domains specified by domlist and is of type type", "usage": "mixed dbplus_rsecindex ( resource $relation , mixed $domlist , int $type )", "url": "https://secure.php.net/manual/en/function.dbplus-rsecindex.php"}, {"name": "dbplus_runlink", "synopsis": "dbplus_runlink() will close and remove the relation.", "usage": "int dbplus_runlink ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-runlink.php"}, {"name": "dbplus_rzap", "synopsis": "dbplus_rzap() will remove all tuples from relation.", "usage": "int dbplus_rzap ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-rzap.php"}, {"name": "dbplus_savepos", "synopsis": null, "usage": "int dbplus_savepos ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-savepos.php"}, {"name": "dbplus_setindex", "synopsis": null, "usage": "int dbplus_setindex ( resource $relation , string $idx_name )", "url": "https://secure.php.net/manual/en/function.dbplus-setindex.php"}, {"name": "dbplus_setindexbynumber", "synopsis": null, "usage": "int dbplus_setindexbynumber ( resource $relation , int $idx_number )", "url": "https://secure.php.net/manual/en/function.dbplus-setindexbynumber.php"}, {"name": "dbplus_sql", "synopsis": null, "usage": "resource dbplus_sql ( string $query [, string $server [, string $dbpath ]] )", "url": "https://secure.php.net/manual/en/function.dbplus-sql.php"}, {"name": "dbplus_tcl", "synopsis": "A db++ server will prepare a TCL interpreter for each client connection. This interpreter will enable the server to execute TCL code provided by the client as a sort of stored procedures to improve the performance of database operations by avoiding client/server data transfers and context switches.", "usage": "string dbplus_tcl ( int $sid , string $script )", "url": "https://secure.php.net/manual/en/function.dbplus-tcl.php"}, {"name": "dbplus_tremove", "synopsis": "dbplus_tremove() removes tuple from relation if it perfectly matches a tuple within the relation. current, if given, will contain the data of the new current tuple after calling dbplus_tremove().", "usage": "int dbplus_tremove ( resource $relation , array $tuple [, array &$current ] )", "url": "https://secure.php.net/manual/en/function.dbplus-tremove.php"}, {"name": "dbplus_undo", "synopsis": null, "usage": "int dbplus_undo ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-undo.php"}, {"name": "dbplus_undoprepare", "synopsis": null, "usage": "int dbplus_undoprepare ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-undoprepare.php"}, {"name": "dbplus_unlockrel", "synopsis": "Release a write lock previously obtained by dbplus_lockrel().", "usage": "int dbplus_unlockrel ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-unlockrel.php"}, {"name": "dbplus_unselect", "synopsis": "Calling dbplus_unselect() will remove a constraint previously set by dbplus_find() on relation.", "usage": "int dbplus_unselect ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-unselect.php"}, {"name": "dbplus_update", "synopsis": "dbplus_update() replaces the old tuple with the data from the new one, only if the old completely matches a tuple within relation.", "usage": "int dbplus_update ( resource $relation , array $old , array $new )", "url": "https://secure.php.net/manual/en/function.dbplus-update.php"}, {"name": "dbplus_xlockrel", "synopsis": "Request an exclusive lock on relation preventing even read access from other clients.", "usage": "int dbplus_xlockrel ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-xlockrel.php"}, {"name": "dbplus_xunlockrel", "synopsis": "Releases an exclusive lock previously obtained by dbplus_xlockrel().", "usage": "int dbplus_xunlockrel ( resource $relation )", "url": "https://secure.php.net/manual/en/function.dbplus-xunlockrel.php"}, {"name": "dbx_close", "synopsis": null, "usage": "int dbx_close ( object $link_identifier )", "url": "https://secure.php.net/manual/en/function.dbx-close.php"}, {"name": "dbx_compare", "synopsis": "dbx_compare() is a helper function for dbx_sort() to ease the make and use of the custom sorting function.", "usage": "int dbx_compare ( array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ] )", "url": "https://secure.php.net/manual/en/function.dbx-compare.php"}, {"name": "dbx_connect", "synopsis": "Opens a connection to a database.", "usage": "object dbx_connect ( mixed $module , string $host , string $database , string $username , string $password [, int $persistent ] )", "url": "https://secure.php.net/manual/en/function.dbx-connect.php"}, {"name": "dbx_error", "synopsis": "dbx_error() returns the last error message.", "usage": "string dbx_error ( object $link_identifier )", "url": "https://secure.php.net/manual/en/function.dbx-error.php"}, {"name": "dbx_escape_string", "synopsis": "Escape the given string so that it can safely be used in an sql-statement.", "usage": "string dbx_escape_string ( object $link_identifier , string $text )", "url": "https://secure.php.net/manual/en/function.dbx-escape-string.php"}, {"name": "dbx_fetch_row", "synopsis": "dbx_fetch_row() fetches rows from a result identifier that had the DBX_RESULT_UNBUFFERED flag set.", "usage": "mixed dbx_fetch_row ( object $result_identifier )", "url": "https://secure.php.net/manual/en/function.dbx-fetch-row.php"}, {"name": "dbx_query", "synopsis": "Sends a query and fetch all results.", "usage": "mixed dbx_query ( object $link_identifier , string $sql_statement [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.dbx-query.php"}, {"name": "dbx_sort", "synopsis": "Sort a result from a dbx_query() call with a custom sort function.", "usage": "bool dbx_sort ( object $result , string $user_compare_function )", "url": "https://secure.php.net/manual/en/function.dbx-sort.php"}, {"name": "dcgettext", "synopsis": "This function allows you to override the current domain for a single message lookup.", "usage": "string dcgettext ( string $domain , string $message , int $category )", "url": "https://secure.php.net/manual/en/function.dcgettext.php"}, {"name": "dcngettext", "synopsis": "This function allows you to override the current domain for a single plural message lookup.", "usage": "string dcngettext ( string $domain , string $msgid1 , string $msgid2 , int $n , int $category )", "url": "https://secure.php.net/manual/en/function.dcngettext.php"}, {"name": "debug_backtrace", "synopsis": "debug_backtrace() generates a PHP backtrace.", "usage": "array debug_backtrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]] )", "url": "https://secure.php.net/manual/en/function.debug-backtrace.php"}, {"name": "debug_print_backtrace", "synopsis": "debug_print_backtrace() prints a PHP backtrace. It prints the function calls, included/required files and eval()ed stuff.", "usage": "void debug_print_backtrace ([ int $options = 0 [, int $limit = 0 ]] )", "url": "https://secure.php.net/manual/en/function.debug-print-backtrace.php"}, {"name": "debug_zval_dump", "synopsis": "Dumps a string representation of an internal zend value to output.", "usage": "void debug_zval_dump ( mixed $variable [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.debug-zval-dump.php"}, {"name": "decbin", "synopsis": "Returns a string containing a binary representation of the given number argument.", "usage": "string decbin ( int $number )", "url": "https://secure.php.net/manual/en/function.decbin.php"}, {"name": "dechex", "synopsis": "Returns a string containing a hexadecimal representation of the given unsigned number argument.", "usage": "string dechex ( int $number )", "url": "https://secure.php.net/manual/en/function.dechex.php"}, {"name": "decoct", "synopsis": "Returns a string containing an octal representation of the given number argument. The largest number that can be converted depends on the platform in use. For 32-bit platforms this is usually 4294967295 in decimal resulting in 37777777777. For 64-bit platforms this is usually 9223372036854775807 in decimal resulting in 777777777777777777777.", "usage": "string decoct ( int $number )", "url": "https://secure.php.net/manual/en/function.decoct.php"}, {"name": "define_syslog_variables", "synopsis": "Initializes all variables used in the syslog functions.", "usage": "void define_syslog_variables ( void )", "url": "https://secure.php.net/manual/en/function.define-syslog-variables.php"}, {"name": "define", "synopsis": "Defines a named constant at runtime.", "usage": "bool define ( string $name , mixed $value [, bool $case_insensitive = FALSE ] )", "url": "https://secure.php.net/manual/en/function.define.php"}, {"name": "defined", "synopsis": "Checks whether the given constant exists and is defined.", "usage": "bool defined ( string $name )", "url": "https://secure.php.net/manual/en/function.defined.php"}, {"name": "deflate_add", "synopsis": "Incrementally deflates data in the specified context.", "usage": "string deflate_add ( resource $context , string $data [, int $flush_mode = ZLIB_SYNC_FLUSH ] )", "url": "https://secure.php.net/manual/en/function.deflate-add.php"}, {"name": "deflate_init", "synopsis": "Initializes an incremental deflate context using the specified encoding.", "usage": "resource deflate_init ( int $encoding [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/function.deflate-init.php"}, {"name": "deg2rad", "synopsis": "This function converts number from degrees to the radian equivalent.", "usage": "float deg2rad ( float $number )", "url": "https://secure.php.net/manual/en/function.deg2rad.php"}, {"name": "dgettext", "synopsis": "The dgettext() function allows you to override the current domain for a single message lookup.", "usage": "string dgettext ( string $domain , string $message )", "url": "https://secure.php.net/manual/en/function.dgettext.php"}, {"name": "dio_close", "synopsis": "The function dio_close() closes the file descriptor fd.", "usage": "void dio_close ( resource $fd )", "url": "https://secure.php.net/manual/en/function.dio-close.php"}, {"name": "dio_fcntl", "synopsis": "The dio_fcntl() function performs the operation specified by cmd on the file descriptor fd. Some commands require additional arguments args to be supplied.", "usage": "mixed dio_fcntl ( resource $fd , int $cmd [, mixed $args ] )", "url": "https://secure.php.net/manual/en/function.dio-fcntl.php"}, {"name": "dio_open", "synopsis": "dio_open() opens a file and returns a new file descriptor for it.", "usage": "resource dio_open ( string $filename , int $flags [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/function.dio-open.php"}, {"name": "dio_read", "synopsis": "The function dio_read() reads and returns len bytes from file with descriptor fd.", "usage": "string dio_read ( resource $fd [, int $len = 1024 ] )", "url": "https://secure.php.net/manual/en/function.dio-read.php"}, {"name": "dio_seek", "synopsis": "The function dio_seek() is used to change the file position of the given file descriptor.", "usage": "int dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] )", "url": "https://secure.php.net/manual/en/function.dio-seek.php"}, {"name": "dio_stat", "synopsis": "dio_stat() returns information about the given file descriptor.", "usage": "array dio_stat ( resource $fd )", "url": "https://secure.php.net/manual/en/function.dio-stat.php"}, {"name": "dio_tcsetattr", "synopsis": "dio_tcsetattr() sets the terminal attributes and baud rate of the open fd.", "usage": "bool dio_tcsetattr ( resource $fd , array $options )", "url": "https://secure.php.net/manual/en/function.dio-tcsetattr.php"}, {"name": "dio_truncate", "synopsis": "dio_truncate() truncates a file to at most offset bytes in size.", "usage": "bool dio_truncate ( resource $fd , int $offset )", "url": "https://secure.php.net/manual/en/function.dio-truncate.php"}, {"name": "dio_write", "synopsis": "dio_write() writes up to len bytes from data to file fd.", "usage": "int dio_write ( resource $fd , string $data [, int $len = 0 ] )", "url": "https://secure.php.net/manual/en/function.dio-write.php"}, {"name": "dir", "synopsis": "A pseudo-object oriented mechanism for reading a directory. The given directory is opened.", "usage": "Directory dir ( string $directory [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.dir.php"}, {"name": "dirname", "synopsis": "Given a string containing the path of a file or directory, this function will return the parent directory's path that is levels up from the current directory.", "usage": "string dirname ( string $path [, int $levels = 1 ] )", "url": "https://secure.php.net/manual/en/function.dirname.php"}, {"name": "disk_free_space", "synopsis": "Given a string containing a directory, this function will return the number of bytes available on the corresponding filesystem or disk partition.", "usage": "float disk_free_space ( string $directory )", "url": "https://secure.php.net/manual/en/function.disk-free-space.php"}, {"name": "disk_total_space", "synopsis": "Given a string containing a directory, this function will return the total number of bytes on the corresponding filesystem or disk partition.", "usage": "float disk_total_space ( string $directory )", "url": "https://secure.php.net/manual/en/function.disk-total-space.php"}, {"name": "dl", "synopsis": "Loads the PHP extension given by the parameter library.", "usage": "bool dl ( string $library )", "url": "https://secure.php.net/manual/en/function.dl.php"}, {"name": "dngettext", "synopsis": "The dngettext() function allows you to override the current domain for a single plural message lookup.", "usage": "string dngettext ( string $domain , string $msgid1 , string $msgid2 , int $n )", "url": "https://secure.php.net/manual/en/function.dngettext.php"}, {"name": "dns_get_record", "synopsis": "Fetch DNS Resource Records associated with the given hostname.", "usage": "array dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl [, bool $raw = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.dns-get-record.php"}, {"name": "dom_import_simplexml", "synopsis": "This function takes the node node of class SimpleXML and makes it into a DOMElement node. This new object can then be used as a native DOMElement node.", "usage": "DOMElement dom_import_simplexml ( SimpleXMLElement $node )", "url": "https://secure.php.net/manual/en/function.dom-import-simplexml.php"}, {"name": "each", "synopsis": "Return the current key and value pair from an array and advance the array cursor.", "usage": "array each ( array &$array )", "url": "https://secure.php.net/manual/en/function.each.php"}, {"name": "easter_date", "synopsis": "Returns the Unix timestamp corresponding to midnight on Easter of the given year.", "usage": "int easter_date ([ int $year = date(\"Y\") ] )", "url": "https://secure.php.net/manual/en/function.easter-date.php"}, {"name": "easter_days", "synopsis": "Returns the number of days after March 21 on which Easter falls for a given year. If no year is specified, the current year is assumed.", "usage": "int easter_days ([ int $year = date(\"Y\") [, int $method = CAL_EASTER_DEFAULT ]] )", "url": "https://secure.php.net/manual/en/function.easter-days.php"}, {"name": "echo", "synopsis": null, "usage": "void echo ( string $arg1 [, string $... ] )", "url": "https://secure.php.net/manual/en/function.echo.php"}, {"name": "eio_busy", "synopsis": "eio_busy() artificially increases load taking delay seconds to execute. May be used for debugging, or benchmarking.", "usage": "resource eio_busy ( int $delay [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-busy.php"}, {"name": "eio_cancel", "synopsis": "eio_cancel() cancels a request specified by req", "usage": "void eio_cancel ( resource $req )", "url": "https://secure.php.net/manual/en/function.eio-cancel.php"}, {"name": "eio_chmod", "synopsis": "eio_chmod() changes file, or direcrory permissions. The new permissions are specified by mode.", "usage": "resource eio_chmod ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-chmod.php"}, {"name": "eio_chown", "synopsis": "Changes file, or directory permissions.", "usage": "resource eio_chown ( string $path , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )", "url": "https://secure.php.net/manual/en/function.eio-chown.php"}, {"name": "eio_close", "synopsis": "eio_close() closes file specified by fd.", "usage": "resource eio_close ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-close.php"}, {"name": "eio_custom", "synopsis": "eio_custom() executes custom function specified by execute processing it just like any other eio_* call.", "usage": "resource eio_custom ( callable $execute , int $pri , callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-custom.php"}, {"name": "eio_dup2", "synopsis": "eio_dup2() duplicates file descriptor.", "usage": "resource eio_dup2 ( mixed $fd , mixed $fd2 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-dup2.php"}, {"name": "eio_event_loop", "synopsis": "eio_event_loop() polls libeio until all requests proceeded.", "usage": "bool eio_event_loop ( void )", "url": "https://secure.php.net/manual/en/function.eio-event-loop.php"}, {"name": "eio_fallocate", "synopsis": "eio_fallocate() allows the caller to directly manipulate the allocated disk space for the file specified by fd file descriptor for the byte range starting at offset and continuing for length bytes.", "usage": "resource eio_fallocate ( mixed $fd , int $mode , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-fallocate.php"}, {"name": "eio_fchmod", "synopsis": "eio_fchmod() changes permissions for the file specified by fd file descriptor.", "usage": "resource eio_fchmod ( mixed $fd , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-fchmod.php"}, {"name": "eio_fchown", "synopsis": "eio_fchown() changes ownership of the file specified by fd file descriptor.", "usage": "resource eio_fchown ( mixed $fd , int $uid [, int $gid = -1 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )", "url": "https://secure.php.net/manual/en/function.eio-fchown.php"}, {"name": "eio_fdatasync", "synopsis": "eio_fdatasync() synchronizes a file's in-core state with storage device.", "usage": "resource eio_fdatasync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-fdatasync.php"}, {"name": "eio_fstat", "synopsis": "eio_fstat() returns file status information in result argument of callback", "usage": "resource eio_fstat ( mixed $fd , int $pri , callable $callback [, mixed $data ] )", "url": "https://secure.php.net/manual/en/function.eio-fstat.php"}, {"name": "eio_fstatvfs", "synopsis": "eio_fstatvfs() returns file system statistics in result of callback.", "usage": "resource eio_fstatvfs ( mixed $fd , int $pri , callable $callback [, mixed $data ] )", "url": "https://secure.php.net/manual/en/function.eio-fstatvfs.php"}, {"name": "eio_fsync", "synopsis": "Synchronize a file's in-core state with storage device", "usage": "resource eio_fsync ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-fsync.php"}, {"name": "eio_ftruncate", "synopsis": "eio_ftruncate() causes a regular file referenced by fd file descriptor to be truncated to precisely length bytes.", "usage": "resource eio_ftruncate ( mixed $fd [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )", "url": "https://secure.php.net/manual/en/function.eio-ftruncate.php"}, {"name": "eio_futime", "synopsis": "eio_futime() changes file last access and modification times.", "usage": "resource eio_futime ( mixed $fd , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-futime.php"}, {"name": "eio_get_event_stream", "synopsis": "eio_get_event_stream() acquires stream representing a variable used in internal communications with libeio. Could be used to bind with some event loop provided by other PECL extension, for example libevent.", "usage": "mixed eio_get_event_stream ( void )", "url": "https://secure.php.net/manual/en/function.eio-get-event-stream.php"}, {"name": "eio_get_last_error", "synopsis": "eio_get_last_error() returns string describing the last error associated with req.", "usage": "string eio_get_last_error ( resource $req )", "url": "https://secure.php.net/manual/en/function.eio-get-last-error.php"}, {"name": "eio_grp_add", "synopsis": "eio_grp_add() adds a request to the request group.", "usage": "void eio_grp_add ( resource $grp , resource $req )", "url": "https://secure.php.net/manual/en/function.eio-grp-add.php"}, {"name": "eio_grp_cancel", "synopsis": "eio_grp_cancel() cancels a group request specified by grp request group resource.", "usage": "void eio_grp_cancel ( resource $grp )", "url": "https://secure.php.net/manual/en/function.eio-grp-cancel.php"}, {"name": "eio_grp_limit", "synopsis": "Limit number of requests in the request group.", "usage": "void eio_grp_limit ( resource $grp , int $limit )", "url": "https://secure.php.net/manual/en/function.eio-grp-limit.php"}, {"name": "eio_grp", "synopsis": "eio_grp() creates a request group.", "usage": "resource eio_grp ( callable $callback [, string $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-grp.php"}, {"name": "eio_init", "synopsis": "eio_init() (re-)initializes Eio. It allocates memory for internal structures of libeio and Eio itself. You may call eio_init() before using Eio functions. Otherwise it will be called internally first time you invoke an Eio function in a process.", "usage": "void eio_init ( void )", "url": "https://secure.php.net/manual/en/function.eio-init.php"}, {"name": "eio_link", "synopsis": "eio_link() creates a hardlink new_path for a file specified by path.", "usage": "resource eio_link ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-link.php"}, {"name": "eio_lstat", "synopsis": "eio_lstat() returns file status information in result argument of callback", "usage": "resource eio_lstat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-lstat.php"}, {"name": "eio_mkdir", "synopsis": "eio_mkdir() creates directory with specified access mode.", "usage": "resource eio_mkdir ( string $path , int $mode [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-mkdir.php"}, {"name": "eio_mknod", "synopsis": "eio_mknod() creates ordinary or special(often) file.", "usage": "resource eio_mknod ( string $path , int $mode , int $dev [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-mknod.php"}, {"name": "eio_nop", "synopsis": "eio_nop() does nothing, except go through the whole request cycle. Could be useful in debugging.", "usage": "resource eio_nop ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-nop.php"}, {"name": "eio_npending", "synopsis": "eio_npending() returns number of finished, but unhandled requests", "usage": "int eio_npending ( void )", "url": "https://secure.php.net/manual/en/function.eio-npending.php"}, {"name": "eio_nready", "synopsis": "", "usage": "int eio_nready ( void )", "url": "https://secure.php.net/manual/en/function.eio-nready.php"}, {"name": "eio_nreqs", "synopsis": "eio_nreqs() could be called in a custom loop calling eio_poll().", "usage": "int eio_nreqs ( void )", "url": "https://secure.php.net/manual/en/function.eio-nreqs.php"}, {"name": "eio_nthreads", "synopsis": "", "usage": "int eio_nthreads ( void )", "url": "https://secure.php.net/manual/en/function.eio-nthreads.php"}, {"name": "eio_open", "synopsis": "eio_open() opens file specified by path in access mode mode with", "usage": "resource eio_open ( string $path , int $flags , int $mode , int $pri , callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-open.php"}, {"name": "eio_poll", "synopsis": "eio_poll() can be used to implement special event loop. For this eio_nreqs() could be used to test if there are unprocessed requests.", "usage": "int eio_poll ( void )", "url": "https://secure.php.net/manual/en/function.eio-poll.php"}, {"name": "eio_read", "synopsis": "eio_read() reads up to length bytes from fd file descriptor at offset. The read bytes are stored in result argument of callback.", "usage": "resource eio_read ( mixed $fd , int $length , int $offset , int $pri , callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-read.php"}, {"name": "eio_readahead", "synopsis": "eio_readahead() populates the page cache with data from a file so that subsequent reads from that file will not block on disk I/O. See READAHEAD(2) man page for details.", "usage": "resource eio_readahead ( mixed $fd , int $offset , int $length [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-readahead.php"}, {"name": "eio_readdir", "synopsis": "Reads through a whole directory(via the opendir, readdir and closedir system calls) and returns either the names or an array in result argument of callback function, depending on the flags argument.", "usage": "resource eio_readdir ( string $path , int $flags , int $pri , callable $callback [, string $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-readdir.php"}, {"name": "eio_readlink", "synopsis": "", "usage": "resource eio_readlink ( string $path , int $pri , callable $callback [, string $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-readlink.php"}, {"name": "eio_realpath", "synopsis": "eio_realpath() returns the canonicalized absolute pathname in result argument of callback function.", "usage": "resource eio_realpath ( string $path , int $pri , callable $callback [, string $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-realpath.php"}, {"name": "eio_rename", "synopsis": "eio_rename() renames or moves a file to new location.", "usage": "resource eio_rename ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-rename.php"}, {"name": "eio_rmdir", "synopsis": "eio_rmdir() removes a directory.", "usage": "resource eio_rmdir ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-rmdir.php"}, {"name": "eio_seek", "synopsis": "eio_seek() repositions the offset of the open file associated with stream, Socket resource, or file descriptor specified by fd to the argument offset according to the directive whence as follows:", "usage": "resource eio_seek ( mixed $fd , int $offset , int $whence [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-seek.php"}, {"name": "eio_sendfile", "synopsis": "eio_sendfile() copies data between one file descriptor and another. See SENDFILE(2) man page for details.", "usage": "resource eio_sendfile ( mixed $out_fd , mixed $in_fd , int $offset , int $length [, int $pri [, callable $callback [, string $data ]]] )", "url": "https://secure.php.net/manual/en/function.eio-sendfile.php"}, {"name": "eio_set_max_idle", "synopsis": "", "usage": "void eio_set_max_idle ( int $nthreads )", "url": "https://secure.php.net/manual/en/function.eio-set-max-idle.php"}, {"name": "eio_set_max_parallel", "synopsis": "", "usage": "void eio_set_max_parallel ( int $nthreads )", "url": "https://secure.php.net/manual/en/function.eio-set-max-parallel.php"}, {"name": "eio_set_max_poll_reqs", "synopsis": "", "usage": "void eio_set_max_poll_reqs ( int $nreqs )", "url": "https://secure.php.net/manual/en/function.eio-set-max-poll-reqs.php"}, {"name": "eio_set_max_poll_time", "synopsis": "Polling stops, if poll took longer than nseconds seconds.", "usage": "void eio_set_max_poll_time ( float $nseconds )", "url": "https://secure.php.net/manual/en/function.eio-set-max-poll-time.php"}, {"name": "eio_set_min_parallel", "synopsis": "", "usage": "void eio_set_min_parallel ( string $nthreads )", "url": "https://secure.php.net/manual/en/function.eio-set-min-parallel.php"}, {"name": "eio_stat", "synopsis": "eio_stat() returns file status information in result argument of callback", "usage": "resource eio_stat ( string $path , int $pri , callable $callback [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/function.eio-stat.php"}, {"name": "eio_statvfs", "synopsis": "eio_statvfs() returns file system statistics information in result argument of callback", "usage": "resource eio_statvfs ( string $path , int $pri , callable $callback [, mixed $data ] )", "url": "https://secure.php.net/manual/en/function.eio-statvfs.php"}, {"name": "eio_symlink", "synopsis": "eio_symlink() creates a symbolic link new_path to path.", "usage": "resource eio_symlink ( string $path , string $new_path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-symlink.php"}, {"name": "eio_sync_file_range", "synopsis": "eio_sync_file_range() permits fine control when synchronizing the open file referred to by the file descriptor fd with disk.", "usage": "resource eio_sync_file_range ( mixed $fd , int $offset , int $nbytes , int $flags [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-sync-file-range.php"}, {"name": "eio_sync", "synopsis": "", "usage": "resource eio_sync ([ int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-sync.php"}, {"name": "eio_syncfs", "synopsis": "", "usage": "resource eio_syncfs ( mixed $fd [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-syncfs.php"}, {"name": "eio_truncate", "synopsis": "eio_truncate() causes the regular file named by path to be truncated to a size of precisely length bytes", "usage": "resource eio_truncate ( string $path [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]] )", "url": "https://secure.php.net/manual/en/function.eio-truncate.php"}, {"name": "eio_unlink", "synopsis": "eio_unlink() deletes a name from the file system.", "usage": "resource eio_unlink ( string $path [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-unlink.php"}, {"name": "eio_utime", "synopsis": "", "usage": "resource eio_utime ( string $path , float $atime , float $mtime [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.eio-utime.php"}, {"name": "eio_write", "synopsis": "eio_write() writes up to length bytes from str at offset offset from the beginning of the file.", "usage": "resource eio_write ( mixed $fd , string $str [, int $length = 0 [, int $offset = 0 [, int $pri = EIO_PRI_DEFAULT [, callable $callback = NULL [, mixed $data = NULL ]]]]] )", "url": "https://secure.php.net/manual/en/function.eio-write.php"}, {"name": "empty", "synopsis": "Determine whether a variable is considered to be empty. A variable is considered empty if it does not exist or if its value equals FALSE. empty() does not generate a warning if the variable does not exist.", "usage": "bool empty ( mixed $var )", "url": "https://secure.php.net/manual/en/function.empty.php"}, {"name": "enchant_broker_describe", "synopsis": "Enumerates the Enchant providers and tells you some rudimentary information about them. The same info is provided through phpinfo().", "usage": "array enchant_broker_describe ( resource $broker )", "url": "https://secure.php.net/manual/en/function.enchant-broker-describe.php"}, {"name": "enchant_broker_dict_exists", "synopsis": "Tells if a dictionary exists or not, using a non-empty tags", "usage": "bool enchant_broker_dict_exists ( resource $broker , string $tag )", "url": "https://secure.php.net/manual/en/function.enchant-broker-dict-exists.php"}, {"name": "enchant_broker_free_dict", "synopsis": "Free a dictionary resource.", "usage": "bool enchant_broker_free_dict ( resource $dict )", "url": "https://secure.php.net/manual/en/function.enchant-broker-free-dict.php"}, {"name": "enchant_broker_free", "synopsis": "Free a broker resource with all its dictionaries.", "usage": "bool enchant_broker_free ( resource $broker )", "url": "https://secure.php.net/manual/en/function.enchant-broker-free.php"}, {"name": "enchant_broker_get_dict_path", "synopsis": "Get the directory path for a given backend.", "usage": "bool enchant_broker_get_dict_path ( resource $broker , int $dict_type )", "url": "https://secure.php.net/manual/en/function.enchant-broker-get-dict-path.php"}, {"name": "enchant_broker_get_error", "synopsis": "Returns the last error which occurred in this broker.", "usage": "string enchant_broker_get_error ( resource $broker )", "url": "https://secure.php.net/manual/en/function.enchant-broker-get-error.php"}, {"name": "enchant_broker_init", "synopsis": null, "usage": "resource enchant_broker_init ( void )", "url": "https://secure.php.net/manual/en/function.enchant-broker-init.php"}, {"name": "enchant_broker_list_dicts", "synopsis": "Returns a list of available dictionaries with their details.", "usage": "mixed enchant_broker_list_dicts ( resource $broker )", "url": "https://secure.php.net/manual/en/function.enchant-broker-list-dicts.php"}, {"name": "enchant_broker_request_dict", "synopsis": "create a new dictionary using tag, the non-empty language tag you wish to request a dictionary for (\"en_US\", \"de_DE\", ...)", "usage": "resource enchant_broker_request_dict ( resource $broker , string $tag )", "url": "https://secure.php.net/manual/en/function.enchant-broker-request-dict.php"}, {"name": "enchant_broker_request_pwl_dict", "synopsis": "Creates a dictionary using a PWL file. A PWL file is personal word file one word per line.", "usage": "resource enchant_broker_request_pwl_dict ( resource $broker , string $filename )", "url": "https://secure.php.net/manual/en/function.enchant-broker-request-pwl-dict.php"}, {"name": "enchant_broker_set_dict_path", "synopsis": "Set the directory path for a given backend.", "usage": "bool enchant_broker_set_dict_path ( resource $broker , int $dict_type , string $value )", "url": "https://secure.php.net/manual/en/function.enchant-broker-set-dict-path.php"}, {"name": "enchant_broker_set_ordering", "synopsis": "Declares a preference of dictionaries to use for the language described/referred to by 'tag'. The ordering is a comma delimited list of provider names. As a special exception, the \"*\" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering.", "usage": "bool enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering )", "url": "https://secure.php.net/manual/en/function.enchant-broker-set-ordering.php"}, {"name": "enchant_dict_add_to_personal", "synopsis": "Add a word to personal word list of the given dictionary.", "usage": "void enchant_dict_add_to_personal ( resource $dict , string $word )", "url": "https://secure.php.net/manual/en/function.enchant-dict-add-to-personal.php"}, {"name": "enchant_dict_add_to_session", "synopsis": "Add a word to the given dictionary. It will be added only for the active spell-checking session.", "usage": "void enchant_dict_add_to_session ( resource $dict , string $word )", "url": "https://secure.php.net/manual/en/function.enchant-dict-add-to-session.php"}, {"name": "enchant_dict_check", "synopsis": "If the word is correctly spelled return TRUE, otherwise return FALSE", "usage": "bool enchant_dict_check ( resource $dict , string $word )", "url": "https://secure.php.net/manual/en/function.enchant-dict-check.php"}, {"name": "enchant_dict_describe", "synopsis": "Returns the details of the dictionary.", "usage": "mixed enchant_dict_describe ( resource $dict )", "url": "https://secure.php.net/manual/en/function.enchant-dict-describe.php"}, {"name": "enchant_dict_get_error", "synopsis": "Returns the last error of the current spelling-session", "usage": "string enchant_dict_get_error ( resource $dict )", "url": "https://secure.php.net/manual/en/function.enchant-dict-get-error.php"}, {"name": "enchant_dict_is_in_session", "synopsis": "Tells whether or not a word already exists in the current session.", "usage": "bool enchant_dict_is_in_session ( resource $dict , string $word )", "url": "https://secure.php.net/manual/en/function.enchant-dict-is-in-session.php"}, {"name": "enchant_dict_quick_check", "synopsis": "If the word is correctly spelled return TRUE, otherwise return FALSE, if suggestions variable is provided, fill it with spelling alternatives.", "usage": "bool enchant_dict_quick_check ( resource $dict , string $word [, array &$suggestions ] )", "url": "https://secure.php.net/manual/en/function.enchant-dict-quick-check.php"}, {"name": "enchant_dict_store_replacement", "synopsis": "Add a correction for 'mis' using 'cor'. Notes that you replaced @mis with @cor, so it's possibly more likely that future occurrences of @mis will be replaced with @cor. So it might bump @cor up in the suggestion list.", "usage": "void enchant_dict_store_replacement ( resource $dict , string $mis , string $cor )", "url": "https://secure.php.net/manual/en/function.enchant-dict-store-replacement.php"}, {"name": "enchant_dict_suggest", "synopsis": "", "usage": "array enchant_dict_suggest ( resource $dict , string $word )", "url": "https://secure.php.net/manual/en/function.enchant-dict-suggest.php"}, {"name": "end", "synopsis": "end() advances array's internal pointer to the last element, and returns its value.", "usage": "mixed end ( array &$array )", "url": "https://secure.php.net/manual/en/function.end.php"}, {"name": "ereg_replace", "synopsis": null, "usage": "string ereg_replace ( string $pattern , string $replacement , string $string )", "url": "https://secure.php.net/manual/en/function.ereg-replace.php"}, {"name": "ereg", "synopsis": null, "usage": "int ereg ( string $pattern , string $string [, array &$regs ] )", "url": "https://secure.php.net/manual/en/function.ereg.php"}, {"name": "eregi_replace", "synopsis": "This function is identical to ereg_replace() except that this ignores case distinction when matching alphabetic characters.", "usage": "string eregi_replace ( string $pattern , string $replacement , string $string )", "url": "https://secure.php.net/manual/en/function.eregi-replace.php"}, {"name": "eregi", "synopsis": "This function is identical to ereg() except that it ignores case distinction when matching alphabetic characters.", "usage": "int eregi ( string $pattern , string $string [, array &$regs ] )", "url": "https://secure.php.net/manual/en/function.eregi.php"}, {"name": "error_clear_last", "synopsis": "", "usage": "void error_clear_last ( void )", "url": "https://secure.php.net/manual/en/function.error-clear-last.php"}, {"name": "error_get_last", "synopsis": "Gets information about the last error that occurred.", "usage": "array error_get_last ( void )", "url": "https://secure.php.net/manual/en/function.error-get-last.php"}, {"name": "error_log", "synopsis": "Sends an error message to the web server's error log or to a file.", "usage": "bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] )", "url": "https://secure.php.net/manual/en/function.error-log.php"}, {"name": "error_reporting", "synopsis": "The error_reporting() function sets the error_reporting directive at runtime. PHP has many levels of errors, using this function sets that level for the duration (runtime) of your script. If the optional level is not set, error_reporting() will just return the current error reporting level.", "usage": "int error_reporting ([ int $level ] )", "url": "https://secure.php.net/manual/en/function.error-reporting.php"}, {"name": "escapeshellarg", "synopsis": "escapeshellarg() adds single quotes around a string and quotes/escapes any existing single quotes allowing you to pass a string directly to a shell function and having it be treated as a single safe argument. This function should be used to escape individual arguments to shell functions coming from user input. The shell functions include exec(), system() and the backtick operator.", "usage": "string escapeshellarg ( string $arg )", "url": "https://secure.php.net/manual/en/function.escapeshellarg.php"}, {"name": "escapeshellcmd", "synopsis": "escapeshellcmd() escapes any characters in a string that might be used to trick a shell command into executing arbitrary commands. This function should be used to make sure that any data coming from user input is escaped before this data is passed to the exec() or system() functions, or to the backtick operator.", "usage": "string escapeshellcmd ( string $command )", "url": "https://secure.php.net/manual/en/function.escapeshellcmd.php"}, {"name": "eval", "synopsis": "Evaluates the given code as PHP.", "usage": "mixed eval ( string $code )", "url": "https://secure.php.net/manual/en/function.eval.php"}, {"name": "event_add", "synopsis": "event_add() schedules the execution of the event when the event specified in event_set() occurs or in at least the time specified by the timeout argument. If timeout was not specified, not timeout is set. The event must be already initalized by event_set() and event_base_set() functions. If the event already has a timeout set, it is replaced by the new one.", "usage": "bool event_add ( resource $event [, int $timeout = -1 ] )", "url": "https://secure.php.net/manual/en/function.event-add.php"}, {"name": "event_base_free", "synopsis": "Destroys the specified event_base and frees all the resources associated. Note that it's not possible to destroy an event base with events attached to it.", "usage": "void event_base_free ( resource $event_base )", "url": "https://secure.php.net/manual/en/function.event-base-free.php"}, {"name": "event_base_loop", "synopsis": "Starts event loop for the specified event base.", "usage": "int event_base_loop ( resource $event_base [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.event-base-loop.php"}, {"name": "event_base_loopbreak", "synopsis": "Abort the active event loop immediately. The behaviour is similar to break statement.", "usage": "bool event_base_loopbreak ( resource $event_base )", "url": "https://secure.php.net/manual/en/function.event-base-loopbreak.php"}, {"name": "event_base_loopexit", "synopsis": "The next event loop iteration after the given timer expires will complete normally, then exit without blocking for events again.", "usage": "bool event_base_loopexit ( resource $event_base [, int $timeout = -1 ] )", "url": "https://secure.php.net/manual/en/function.event-base-loopexit.php"}, {"name": "event_base_new", "synopsis": "Returns new event base, which can be used later in event_base_set(), event_base_loop() and other functions.", "usage": "resource event_base_new ( void )", "url": "https://secure.php.net/manual/en/function.event-base-new.php"}, {"name": "event_base_priority_init", "synopsis": "Sets the number of different event priority levels.", "usage": "bool event_base_priority_init ( resource $event_base , int $npriorities )", "url": "https://secure.php.net/manual/en/function.event-base-priority-init.php"}, {"name": "event_base_reinit", "synopsis": "Some event mechanisms do not survive across fork. The event_base needs to be reinitialized with this function.", "usage": "bool event_base_reinit ( resource $event_base )", "url": "https://secure.php.net/manual/en/function.event-base-reinit.php"}, {"name": "event_base_set", "synopsis": "Associates the event_base with the event.", "usage": "bool event_base_set ( resource $event , resource $event_base )", "url": "https://secure.php.net/manual/en/function.event-base-set.php"}, {"name": "event_buffer_base_set", "synopsis": "Assign the specified bevent to the event_base.", "usage": "bool event_buffer_base_set ( resource $bevent , resource $event_base )", "url": "https://secure.php.net/manual/en/function.event-buffer-base-set.php"}, {"name": "event_buffer_disable", "synopsis": "Disables the specified buffered event.", "usage": "bool event_buffer_disable ( resource $bevent , int $events )", "url": "https://secure.php.net/manual/en/function.event-buffer-disable.php"}, {"name": "event_buffer_enable", "synopsis": "Enables the specified buffered event.", "usage": "bool event_buffer_enable ( resource $bevent , int $events )", "url": "https://secure.php.net/manual/en/function.event-buffer-enable.php"}, {"name": "event_buffer_fd_set", "synopsis": "Changes the file descriptor on which the buffered event operates.", "usage": "void event_buffer_fd_set ( resource $bevent , resource $fd )", "url": "https://secure.php.net/manual/en/function.event-buffer-fd-set.php"}, {"name": "event_buffer_free", "synopsis": "Destroys the specified buffered event and frees all the resources associated.", "usage": "void event_buffer_free ( resource $bevent )", "url": "https://secure.php.net/manual/en/function.event-buffer-free.php"}, {"name": "event_buffer_new", "synopsis": "Libevent provides an abstraction layer on top of the regular event API. Using buffered event you don't need to deal with the I/O manually, instead it provides input and output buffers that get filled and drained automatically.", "usage": "resource event_buffer_new ( resource $stream , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.event-buffer-new.php"}, {"name": "event_buffer_priority_set", "synopsis": "Assign a priority to the bevent.", "usage": "bool event_buffer_priority_set ( resource $bevent , int $priority )", "url": "https://secure.php.net/manual/en/function.event-buffer-priority-set.php"}, {"name": "event_buffer_read", "synopsis": "Reads data from the input buffer of the buffered event.", "usage": "string event_buffer_read ( resource $bevent , int $data_size )", "url": "https://secure.php.net/manual/en/function.event-buffer-read.php"}, {"name": "event_buffer_set_callback", "synopsis": "Sets or changes existing callbacks for the buffered event.", "usage": "bool event_buffer_set_callback ( resource $event , mixed $readcb , mixed $writecb , mixed $errorcb [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.event-buffer-set-callback.php"}, {"name": "event_buffer_timeout_set", "synopsis": "Sets the read and write timeouts for the specified buffered event.", "usage": "void event_buffer_timeout_set ( resource $bevent , int $read_timeout , int $write_timeout )", "url": "https://secure.php.net/manual/en/function.event-buffer-timeout-set.php"}, {"name": "event_buffer_watermark_set", "synopsis": "Sets the watermarks for read and write events. Libevent does not invoke read callback unless there is at least lowmark bytes in the input buffer; if the read buffer is beyond the highmark, reading is stopped. On output, the write callback is invoked whenever the buffered data falls below the lowmark.", "usage": "void event_buffer_watermark_set ( resource $bevent , int $events , int $lowmark , int $highmark )", "url": "https://secure.php.net/manual/en/function.event-buffer-watermark-set.php"}, {"name": "event_buffer_write", "synopsis": "Writes data to the specified buffered event. The data is appended to the output buffer and written to the descriptor when it becomes available for writing.", "usage": "bool event_buffer_write ( resource $bevent , string $data [, int $data_size = -1 ] )", "url": "https://secure.php.net/manual/en/function.event-buffer-write.php"}, {"name": "event_del", "synopsis": "Cancels the event.", "usage": "bool event_del ( resource $event )", "url": "https://secure.php.net/manual/en/function.event-del.php"}, {"name": "event_free", "synopsis": "Frees previously created event resource.", "usage": "void event_free ( resource $event )", "url": "https://secure.php.net/manual/en/function.event-free.php"}, {"name": "event_new", "synopsis": "Creates and returns a new event resource.", "usage": "resource event_new ( void )", "url": "https://secure.php.net/manual/en/function.event-new.php"}, {"name": "event_priority_set", "synopsis": "Assign a priority to the event.", "usage": "bool event_priority_set ( resource $event , int $priority )", "url": "https://secure.php.net/manual/en/function.event-priority-set.php"}, {"name": "event_set", "synopsis": "Prepares the event to be used in event_add(). The event is prepared to call the function specified by the callback on the events specified in parameter events, which is a set of the following flags: EV_TIMEOUT, EV_SIGNAL, EV_READ, EV_WRITE and EV_PERSIST.", "usage": "bool event_set ( resource $event , mixed $fd , int $events , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.event-set.php"}, {"name": "event_timer_set", "synopsis": "Prepares the timer event to be used in event_add(). The event is prepared to call the function specified by the callback when the event timeout elapses.", "usage": "bool event_timer_set ( resource $event , callable $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.event-timer-set.php"}, {"name": "exec", "synopsis": "exec() executes the given command.", "usage": "string exec ( string $command [, array &$output [, int &$return_var ]] )", "url": "https://secure.php.net/manual/en/function.exec.php"}, {"name": "exif_imagetype", "synopsis": "exif_imagetype() reads the first bytes of an image and checks its signature.", "usage": "int exif_imagetype ( string $filename )", "url": "https://secure.php.net/manual/en/function.exif-imagetype.php"}, {"name": "exif_read_data", "synopsis": "exif_read_data() reads the EXIF headers from an image file. This way you can read meta data generated by digital cameras.", "usage": "array exif_read_data ( mixed $stream [, string $sections = NULL [, bool $arrays = FALSE [, bool $thumbnail = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.exif-read-data.php"}, {"name": "exif_tagname", "synopsis": null, "usage": "string exif_tagname ( int $index )", "url": "https://secure.php.net/manual/en/function.exif-tagname.php"}, {"name": "exif_thumbnail", "synopsis": "exif_thumbnail() reads the embedded thumbnail of an image.", "usage": "string exif_thumbnail ( mixed $stream [, int &$width [, int &$height [, int &$imagetype ]]] )", "url": "https://secure.php.net/manual/en/function.exif-thumbnail.php"}, {"name": "exit", "synopsis": "Terminates execution of the script. Shutdown functions and object destructors will always be executed even if exit is called.", "usage": "void exit ([ string $status ] )", "url": "https://secure.php.net/manual/en/function.exit.php"}, {"name": "exp", "synopsis": "Returns e raised to the power of arg.", "usage": "float exp ( float $arg )", "url": "https://secure.php.net/manual/en/function.exp.php"}, {"name": "expect_expectl", "synopsis": "Waits until the output from a process matches one of the patterns, a specified time period has passed, or an EOF is seen.", "usage": "int expect_expectl ( resource $expect , array $cases [, array &$match ] )", "url": "https://secure.php.net/manual/en/function.expect-expectl.php"}, {"name": "expect_popen", "synopsis": "Execute command via Bourne shell, and open the PTY stream to the process.", "usage": "resource expect_popen ( string $command )", "url": "https://secure.php.net/manual/en/function.expect-popen.php"}, {"name": "explode", "synopsis": "Returns an array of strings, each of which is a substring of string formed by splitting it on boundaries formed by the string delimiter.", "usage": "array explode ( string $delimiter , string $string [, int $limit = PHP_INT_MAX ] )", "url": "https://secure.php.net/manual/en/function.explode.php"}, {"name": "expm1", "synopsis": "expm1() returns the equivalent to 'exp(arg) - 1' computed in a way that is accurate even if the value of arg is near zero, a case where 'exp (arg) - 1' would be inaccurate due to subtraction of two numbers that are nearly equal.", "usage": "float expm1 ( float $arg )", "url": "https://secure.php.net/manual/en/function.expm1.php"}, {"name": "extension_loaded", "synopsis": "Finds out whether the extension is loaded.", "usage": "bool extension_loaded ( string $name )", "url": "https://secure.php.net/manual/en/function.extension-loaded.php"}, {"name": "extract", "synopsis": "Import variables from an array into the current symbol table.", "usage": "int extract ( array &$array [, int $flags = EXTR_OVERWRITE [, string $prefix = NULL ]] )", "url": "https://secure.php.net/manual/en/function.extract.php"}, {"name": "ezmlm_hash", "synopsis": null, "usage": "int ezmlm_hash ( string $addr )", "url": "https://secure.php.net/manual/en/function.ezmlm-hash.php"}, {"name": "fam_cancel_monitor", "synopsis": "Terminates monitoring on a resource.", "usage": "bool fam_cancel_monitor ( resource $fam , resource $fam_monitor )", "url": "https://secure.php.net/manual/en/function.fam-cancel-monitor.php"}, {"name": "fam_close", "synopsis": "Closes a connection to the FAM service.", "usage": "void fam_close ( resource $fam )", "url": "https://secure.php.net/manual/en/function.fam-close.php"}, {"name": "fam_monitor_collection", "synopsis": "Requests monitoring for a collection of files within a directory.", "usage": "resource fam_monitor_collection ( resource $fam , string $dirname , int $depth , string $mask )", "url": "https://secure.php.net/manual/en/function.fam-monitor-collection.php"}, {"name": "fam_monitor_directory", "synopsis": "Requests monitoring for a directory and all contained files.", "usage": "resource fam_monitor_directory ( resource $fam , string $dirname )", "url": "https://secure.php.net/manual/en/function.fam-monitor-directory.php"}, {"name": "fam_monitor_file", "synopsis": "Requests monitoring for a single file. A FAM event will be generated whenever the file status changes (i.e. the result of function stat() on that file).", "usage": "resource fam_monitor_file ( resource $fam , string $filename )", "url": "https://secure.php.net/manual/en/function.fam-monitor-file.php"}, {"name": "fam_next_event", "synopsis": "Returns the next pending FAM event.", "usage": "array fam_next_event ( resource $fam )", "url": "https://secure.php.net/manual/en/function.fam-next-event.php"}, {"name": "fam_open", "synopsis": "Opens a connection to the FAM service daemon.", "usage": "resource fam_open ([ string $appname ] )", "url": "https://secure.php.net/manual/en/function.fam-open.php"}, {"name": "fam_pending", "synopsis": "Checks for pending FAM events.", "usage": "int fam_pending ( resource $fam )", "url": "https://secure.php.net/manual/en/function.fam-pending.php"}, {"name": "fam_resume_monitor", "synopsis": "Resumes monitoring of a resource previously suspended using fam_suspend_monitor().", "usage": "bool fam_resume_monitor ( resource $fam , resource $fam_monitor )", "url": "https://secure.php.net/manual/en/function.fam-resume-monitor.php"}, {"name": "fam_suspend_monitor", "synopsis": "fam_suspend_monitor() temporarily suspend monitoring of a resource.", "usage": "bool fam_suspend_monitor ( resource $fam , resource $fam_monitor )", "url": "https://secure.php.net/manual/en/function.fam-suspend-monitor.php"}, {"name": "fann_cascadetrain_on_data", "synopsis": "The cascade output change fraction is a number between 0 and 1 determining how large a fraction the fann_get_MSE() value should change within fann_get_cascade_output_stagnation_epochs() during training of the output connections, in order for the training not to stagnate. If the training stagnates, the training of the output connections will be ended and new candidates will be prepared.", "usage": "bool fann_cascadetrain_on_data ( resource $ann , resource $data , int $max_neurons , int $neurons_between_reports , float $desired_error )", "url": "https://secure.php.net/manual/en/function.fann-cascadetrain-on-data.php"}, {"name": "fann_cascadetrain_on_file", "synopsis": "Does the same as fann_cascadetrain_on_data(), but reads the training data directly from a file.", "usage": "bool fann_cascadetrain_on_file ( resource $ann , string $filename , int $max_neurons , int $neurons_between_reports , float $desired_error )", "url": "https://secure.php.net/manual/en/function.fann-cascadetrain-on-file.php"}, {"name": "fann_clear_scaling_params", "synopsis": "Clears scaling parameters.", "usage": "bool fann_clear_scaling_params ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-clear-scaling-params.php"}, {"name": "fann_copy", "synopsis": "Creates a copy of a fann structure.", "usage": "resource fann_copy ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-copy.php"}, {"name": "fann_create_from_file", "synopsis": "Constructs a backpropagation neural network from a configuration file, which have been saved by fann_save().", "usage": "resource fann_create_from_file ( string $configuration_file )", "url": "https://secure.php.net/manual/en/function.fann-create-from-file.php"}, {"name": "fann_create_shortcut_array", "synopsis": "Creates a standard backpropagation neural network which is not fully connectected and has shortcut connections using an array of layers sizes.", "usage": "resource fann_create_shortcut_array ( int $num_layers , array $layers )", "url": "https://secure.php.net/manual/en/function.fann-create-shortcut-array.php"}, {"name": "fann_create_shortcut", "synopsis": "Creates a standard backpropagation neural network, which is not fully connected and which also has shortcut connections.", "usage": "resource fann_create_shortcut ( int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] )", "url": "https://secure.php.net/manual/en/function.fann-create-shortcut.php"}, {"name": "fann_create_sparse_array", "synopsis": "Creates a standard backpropagation neural network, which is not fully connected using an array of layer sizes.", "usage": "resource fann_create_sparse_array ( float $connection_rate , int $num_layers , array $layers )", "url": "https://secure.php.net/manual/en/function.fann-create-sparse-array.php"}, {"name": "fann_create_sparse", "synopsis": "Creates a standard backpropagation neural network, which is not fully connected.", "usage": "resource fann_create_sparse ( float $connection_rate , int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] )", "url": "https://secure.php.net/manual/en/function.fann-create-sparse.php"}, {"name": "fann_create_standard_array", "synopsis": "Creates a standard fully connected backpropagation neural network.", "usage": "resource fann_create_standard_array ( int $num_layers , array $layers )", "url": "https://secure.php.net/manual/en/function.fann-create-standard-array.php"}, {"name": "fann_create_standard", "synopsis": "Creates a standard fully connected backpropagation neural network.", "usage": "resource fann_create_standard ( int $num_layers , int $num_neurons1 , int $num_neurons2 [, int $... ] )", "url": "https://secure.php.net/manual/en/function.fann-create-standard.php"}, {"name": "fann_create_train_from_callback", "synopsis": "Creates the training data struct from a user supplied function. As the training data are numerable (data 1, data 2...), the user must write a function that receives the number of the training data set (input, output) and returns the set.", "usage": "resource fann_create_train_from_callback ( int $num_data , int $num_input , int $num_output , callable $user_function )", "url": "https://secure.php.net/manual/en/function.fann-create-train-from-callback.php"}, {"name": "fann_create_train", "synopsis": "Creates an empty training data struct.", "usage": "resource fann_create_train ( int $num_data , int $num_input , int $num_output )", "url": "https://secure.php.net/manual/en/function.fann-create-train.php"}, {"name": "fann_descale_input", "synopsis": "Scale data in input vector after get it from ann based on previously calculated parameters.", "usage": "bool fann_descale_input ( resource $ann , array $input_vector )", "url": "https://secure.php.net/manual/en/function.fann-descale-input.php"}, {"name": "fann_descale_output", "synopsis": "Scale data in output vector after get it from ann based on previously calculated parameters.", "usage": "bool fann_descale_output ( resource $ann , array $output_vector )", "url": "https://secure.php.net/manual/en/function.fann-descale-output.php"}, {"name": "fann_descale_train", "synopsis": "Descale input and output data based on previously calculated parameters.", "usage": "bool fann_descale_train ( resource $ann , resource $train_data )", "url": "https://secure.php.net/manual/en/function.fann-descale-train.php"}, {"name": "fann_destroy_train", "synopsis": "Destructs the training data", "usage": "bool fann_destroy_train ( resource $train_data )", "url": "https://secure.php.net/manual/en/function.fann-destroy-train.php"}, {"name": "fann_destroy", "synopsis": "Destroys the entire network and properly freeing all the associated memory.", "usage": "bool fann_destroy ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-destroy.php"}, {"name": "fann_duplicate_train_data", "synopsis": "Returns an exact copy of a fann train data resource.", "usage": "resource fann_duplicate_train_data ( resource $data )", "url": "https://secure.php.net/manual/en/function.fann-duplicate-train-data.php"}, {"name": "fann_get_activation_function", "synopsis": "Get the activation function for neuron number neuron in layer number layer, counting the input layer as layer 0.", "usage": "int fann_get_activation_function ( resource $ann , int $layer , int $neuron )", "url": "https://secure.php.net/manual/en/function.fann-get-activation-function.php"}, {"name": "fann_get_activation_steepness", "synopsis": "Get the activation steepness for neuron number neuron in layer number layer, counting the input layer as layer 0.", "usage": "float fann_get_activation_steepness ( resource $ann , int $layer , int $neuron )", "url": "https://secure.php.net/manual/en/function.fann-get-activation-steepness.php"}, {"name": "fann_get_bias_array", "synopsis": "Get the number of bias in each layer in the network.", "usage": "array fann_get_bias_array ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-bias-array.php"}, {"name": "fann_get_bit_fail_limit", "synopsis": "Returns the bit fail limit used during training.", "usage": "float fann_get_bit_fail_limit ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-bit-fail-limit.php"}, {"name": "fann_get_bit_fail", "synopsis": "The number of fail bits; means the number of output neurons which differ more than the bit fail limit (see fann_get_bit_fail_limit(), fann_set_bit_fail_limit()). The bits are counted in all of the training data, so this number can be higher than the number of training data.", "usage": "int fann_get_bit_fail ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-bit-fail.php"}, {"name": "fann_get_cascade_activation_functions_count", "synopsis": "The number of activation functions in the fann_get_cascade_activation_functions() array.", "usage": "int fann_get_cascade_activation_functions_count ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-activation-functions-count.php"}, {"name": "fann_get_cascade_activation_functions", "synopsis": "The cascade activation functions array is an array of the different activation functions used by the candidates", "usage": "array fann_get_cascade_activation_functions ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-activation-functions.php"}, {"name": "fann_get_cascade_activation_steepnesses_count", "synopsis": "The number of activation steepnesses in the fann_get_cascade_activation_functions() array.", "usage": "int fann_get_cascade_activation_steepnesses_count ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-activation-steepnesses-count.php"}, {"name": "fann_get_cascade_activation_steepnesses", "synopsis": "The cascade activation steepnesses array is an array of the different activation functions used by the candidates.", "usage": "array fann_get_cascade_activation_steepnesses ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-activation-steepnesses.php"}, {"name": "fann_get_cascade_candidate_change_fraction", "synopsis": "The cascade candidate change fraction is a number between 0 and 1 determining how large a fraction the fann_get_MSE() value should change within fann_get_cascade_candidate_stagnation_epochs() during training of the candidate neurons, in order for the training not to stagnate. If the training stagnates, the training of the candidate neurons will be ended and the best candidate will be selected.", "usage": "float fann_get_cascade_candidate_change_fraction ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-candidate-change-fraction.php"}, {"name": "fann_get_cascade_candidate_limit", "synopsis": "The candidate limit is a limit for how much the candidate neuron may be trained. The limit is a limit on the proportion between the MSE and candidate score.", "usage": "float fann_get_cascade_candidate_limit ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-candidate-limit.php"}, {"name": "fann_get_cascade_candidate_stagnation_epochs", "synopsis": "The number of cascade candidate stagnation epochs determines the number of epochs training is allowed to continue without changing the MSE by a fraction of fann_get_cascade_candidate_change_fraction().", "usage": "int fann_get_cascade_candidate_stagnation_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-candidate-stagnation-epochs.php"}, {"name": "fann_get_cascade_max_cand_epochs", "synopsis": "The maximum candidate epochs determines the maximum number of epochs the input connections to the candidates may be trained before adding a new candidate neuron.", "usage": "int fann_get_cascade_max_cand_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-max-cand-epochs.php"}, {"name": "fann_get_cascade_max_out_epochs", "synopsis": "The maximum out epochs determines the maximum number of epochs the output connections may be trained after adding a new candidate neuron.", "usage": "int fann_get_cascade_max_out_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-max-out-epochs.php"}, {"name": "fann_get_cascade_min_cand_epochs", "synopsis": "The minimum candidate epochs determines the minimum number of epochs the input connections to the candidates may be trained before adding a new candidate neuron.", "usage": "int fann_get_cascade_min_cand_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-min-cand-epochs.php"}, {"name": "fann_get_cascade_min_out_epochs", "synopsis": "The minimum out epochs determines the minimum number of epochs the output connections must be trained after adding a new candidate neuron.", "usage": "int fann_get_cascade_min_out_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-min-out-epochs.php"}, {"name": "fann_get_cascade_num_candidate_groups", "synopsis": "The number of candidate groups is the number of groups of identical candidates which will be used during training.", "usage": "int fann_get_cascade_num_candidate_groups ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-num-candidate-groups.php"}, {"name": "fann_get_cascade_num_candidates", "synopsis": "The number of candidates used during training (calculated by multiplying fann_get_cascade_activation_functions_count(), fann_get_cascade_activation_steepnesses_count() and fann_get_cascade_num_candidate_groups()).", "usage": "int fann_get_cascade_num_candidates ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-num-candidates.php"}, {"name": "fann_get_cascade_output_change_fraction", "synopsis": "The cascade output change fraction is a number between 0 and 1 determining how large a fraction of the fann_get_MSE() value should change within fann_get_cascade_output_stagnation_epochs() during training of the output connections, in order for the training not to stagnate. If the training stagnates, the training of the output connections will be ended and new candidates will be prepared.", "usage": "float fann_get_cascade_output_change_fraction ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-output-change-fraction.php"}, {"name": "fann_get_cascade_output_stagnation_epochs", "synopsis": "The number of cascade output stagnation epochs determines the number of epochs training is allowed to continue without changing the MSE by a fraction of fann_get_cascade_output_change_fraction().", "usage": "int fann_get_cascade_output_stagnation_epochs ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-output-stagnation-epochs.php"}, {"name": "fann_get_cascade_weight_multiplier", "synopsis": "The weight multiplier is a parameter which is used to multiply the weights from the candidate neuron before adding the neuron to the neural network. This parameter is usually between 0 and 1, and is used to make the training a bit less aggressive.", "usage": "float fann_get_cascade_weight_multiplier ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-cascade-weight-multiplier.php"}, {"name": "fann_get_connection_array", "synopsis": "Get connections in the network.", "usage": "array fann_get_connection_array ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-connection-array.php"}, {"name": "fann_get_connection_rate", "synopsis": "Get the connection rate used when the network was created.", "usage": "float fann_get_connection_rate ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-connection-rate.php"}, {"name": "fann_get_errno", "synopsis": "Returns the last error number.", "usage": "int fann_get_errno ( resource $errdat )", "url": "https://secure.php.net/manual/en/function.fann-get-errno.php"}, {"name": "fann_get_errstr", "synopsis": "Returns the last errstr.", "usage": "string fann_get_errstr ( resource $errdat )", "url": "https://secure.php.net/manual/en/function.fann-get-errstr.php"}, {"name": "fann_get_layer_array", "synopsis": "Get the number of neurons in each layer in the neural network.", "usage": "array fann_get_layer_array ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-layer-array.php"}, {"name": "fann_get_learning_momentum", "synopsis": "The learning momentum can be used to speed up FANN_TRAIN_INCREMENTAL training. A too high momentum will however not benefit training. Setting momentum to 0 will be the same as not using the momentum parameter. The recommended value of this parameter is between 0.0 and 1.0.", "usage": "float fann_get_learning_momentum ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-learning-momentum.php"}, {"name": "fann_get_learning_rate", "synopsis": "The learning rate is used to determine how aggressive training should be for some of the training algorithms (FANN_TRAIN_INCREMENTAL, FANN_TRAIN_BATCH, FANN_TRAIN_QUICKPROP). Do however note that it is not used in FANN_TRAIN_RPROP.", "usage": "float fann_get_learning_rate ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-learning-rate.php"}, {"name": "fann_get_MSE", "synopsis": "Reads the mean square error from the network.", "usage": "float fann_get_MSE ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-mse.php"}, {"name": "fann_get_network_type", "synopsis": "Get the type of neural network it was created as.", "usage": "int fann_get_network_type ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-network-type.php"}, {"name": "fann_get_num_input", "synopsis": "Get the number of input neurons.", "usage": "int fann_get_num_input ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-num-input.php"}, {"name": "fann_get_num_layers", "synopsis": "Get the number of layers in the neural network.", "usage": "int fann_get_num_layers ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-num-layers.php"}, {"name": "fann_get_num_output", "synopsis": "Get the number of output neurons.", "usage": "int fann_get_num_output ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-num-output.php"}, {"name": "fann_get_quickprop_decay", "synopsis": "The decay is a small negative valued number which is a factor that the weights should decrease in each iteration during quickprop training. This is used to make sure that the weights do not become too high during training.", "usage": "float fann_get_quickprop_decay ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-quickprop-decay.php"}, {"name": "fann_get_quickprop_mu", "synopsis": "The mu factor is used to increase and decrease the step-size during quickprop training. The mu factor should always be above 1, since it would otherwise decrease the step-size when it was suppose to increase it.", "usage": "float fann_get_quickprop_mu ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-quickprop-mu.php"}, {"name": "fann_get_rprop_decrease_factor", "synopsis": "The decrease factor is a value smaller than 1, which is used to decrease the step-size during RPROP training.", "usage": "float fann_get_rprop_decrease_factor ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-rprop-decrease-factor.php"}, {"name": "fann_get_rprop_delta_max", "synopsis": "The maximum step-size is a positive number determining how large the maximum step-size may be.", "usage": "float fann_get_rprop_delta_max ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-rprop-delta-max.php"}, {"name": "fann_get_rprop_delta_min", "synopsis": "The minimum step-size is a small positive number determining how small the minimum step-size may be.", "usage": "float fann_get_rprop_delta_min ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-rprop-delta-min.php"}, {"name": "fann_get_rprop_delta_zero", "synopsis": "The initial step-size is a positive number determining the initial step size.", "usage": "int fann_get_rprop_delta_zero ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-rprop-delta-zero.php"}, {"name": "fann_get_rprop_increase_factor", "synopsis": "The increase factor is a value larger than 1, which is used to increase the step-size during RPROP training.", "usage": "float fann_get_rprop_increase_factor ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-rprop-increase-factor.php"}, {"name": "fann_get_sarprop_step_error_shift", "synopsis": "Returns the sarprop step error shift.", "usage": "float fann_get_sarprop_step_error_shift ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-sarprop-step-error-shift.php"}, {"name": "fann_get_sarprop_step_error_threshold_factor", "synopsis": "The sarprop step error threshold factor.", "usage": "float fann_get_sarprop_step_error_threshold_factor ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-sarprop-step-error-threshold-factor.php"}, {"name": "fann_get_sarprop_temperature", "synopsis": "Returns the sarprop temperature.", "usage": "float fann_get_sarprop_temperature ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-sarprop-temperature.php"}, {"name": "fann_get_sarprop_weight_decay_shift", "synopsis": "The sarprop weight decay shift.", "usage": "float fann_get_sarprop_weight_decay_shift ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-sarprop-weight-decay-shift.php"}, {"name": "fann_get_total_connections", "synopsis": "Get the total number of connections in the entire network.", "usage": "int fann_get_total_connections ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-total-connections.php"}, {"name": "fann_get_total_neurons", "synopsis": "Get the total number of neurons in the entire network. This number does also include the bias neurons, so a 2-4-2 network has 2+4+2 +2(bias) = 10 neurons.", "usage": "int fann_get_total_neurons ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-total-neurons.php"}, {"name": "fann_get_train_error_function", "synopsis": "Returns the error function used during training.", "usage": "int fann_get_train_error_function ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-train-error-function.php"}, {"name": "fann_get_train_stop_function", "synopsis": "Returns the stop function used during training.", "usage": "int fann_get_train_stop_function ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-train-stop-function.php"}, {"name": "fann_get_training_algorithm", "synopsis": "Returns the training algorithm. This training algorithm is used by fann_train_on_data() and associated functions.", "usage": "int fann_get_training_algorithm ( resource $ann )", "url": "https://secure.php.net/manual/en/function.fann-get-training-algorithm.php"}, {"name": "fann_init_weights", "synopsis": "Initialize the weights using Widrow + Nguyen\u2019s algorithm.", "usage": "bool fann_init_weights ( resource $ann , resource $train_data )", "url": "https://secure.php.net/manual/en/function.fann-init-weights.php"}, {"name": "fann_length_train_data", "synopsis": "Returns the number of training patterns in the train data resource.", "usage": "int fann_length_train_data ( resource $data )", "url": "https://secure.php.net/manual/en/function.fann-length-train-data.php"}, {"name": "fann_merge_train_data", "synopsis": "Merges the data from data1 and data2 into a new train data resource.", "usage": "resource fann_merge_train_data ( resource $data1 , resource $data2 )", "url": "https://secure.php.net/manual/en/function.fann-merge-train-data.php"}, {"name": "fann_num_input_train_data", "synopsis": "Returns the number of inputs in each of the training patterns in the train data resource.", "usage": "int fann_num_input_train_data ( resource $data )", "url": "https://secure.php.net/manual/en/function.fann-num-input-train-data.php"}, {"name": "fann_num_output_train_data", "synopsis": "Returns the number of outputs in each of the training patterns in the train data resource.", "usage": "int fann_num_output_train_data ( resource $data )", "url": "https://secure.php.net/manual/en/function.fann-num-output-train-data.php"}, {"name": "fann_print_error", "synopsis": "Prints the error string.", "usage": "void fann_print_error ( resource $errdat )", "url": "https://secure.php.net/manual/en/function.fann-print-error.php"}, {"name": "fann_randomize_weights", "synopsis": "Give each connection a random weight between min_weight and max_weight", "usage": "bool fann_randomize_weights ( resource $ann , float $min_weight , float $max_weight )", "url": "https://secure.php.net/manual/en/function.fann-randomize-weights.php"}, {"name": "fann_read_train_from_file", "synopsis": "Reads a file that stores training data.", "usage": "resource fann_read_train_from_file ( string $filename )", "url": "https://secure.php.net/manual/en/function.fann-read-train-from-file.php"}, {"name": "fann_reset_errno", "synopsis": "Resets the last error number.", "usage": "void fann_reset_errno ( resource $errdat )", "url": "https://secure.php.net/manual/en/function.fann-reset-errno.php"}, {"name": "fann_reset_errstr", "synopsis": "Resets the last error string.", "usage": "void fann_reset_errstr ( resource $errdat )", "url": "https://secure.php.net/manual/en/function.fann-reset-errstr.php"}, {"name": "fann_reset_MSE", "synopsis": "Resets the mean square error from the network.", "usage": "bool fann_reset_MSE ( string $ann )", "url": "https://secure.php.net/manual/en/function.fann-reset-mse.php"}, {"name": "fann_run", "synopsis": "Will run input through the neural network, returning an array of outputs, the number of which being equal to the number of neurons in the output layer.", "usage": "array fann_run ( resource $ann , array $input )", "url": "https://secure.php.net/manual/en/function.fann-run.php"}, {"name": "fann_save_train", "synopsis": "Save the training data to a file, with the format as specified in fann_read_train_from_file().", "usage": "bool fann_save_train ( resource $data , string $file_name )", "url": "https://secure.php.net/manual/en/function.fann-save-train.php"}, {"name": "fann_save", "synopsis": "Saves the entire network to a configuration file.", "usage": "bool fann_save ( resource $ann , string $configuration_file )", "url": "https://secure.php.net/manual/en/function.fann-save.php"}, {"name": "fann_scale_input_train_data", "synopsis": "Scales the inputs in the training data to the specified range.", "usage": "bool fann_scale_input_train_data ( resource $train_data , float $new_min , float $new_max )", "url": "https://secure.php.net/manual/en/function.fann-scale-input-train-data.php"}, {"name": "fann_scale_input", "synopsis": "Scale data in input vector before feed it to ann based on previously calculated parameters.", "usage": "bool fann_scale_input ( resource $ann , array $input_vector )", "url": "https://secure.php.net/manual/en/function.fann-scale-input.php"}, {"name": "fann_scale_output_train_data", "synopsis": "Scales the outputs in the training data to the specified range.", "usage": "bool fann_scale_output_train_data ( resource $train_data , float $new_min , float $new_max )", "url": "https://secure.php.net/manual/en/function.fann-scale-output-train-data.php"}, {"name": "fann_scale_output", "synopsis": "Scale data in output vector before feed it to ann based on previously calculated parameters.", "usage": "bool fann_scale_output ( resource $ann , array $output_vector )", "url": "https://secure.php.net/manual/en/function.fann-scale-output.php"}, {"name": "fann_scale_train_data", "synopsis": "Scales the inputs and outputs in the training data to the specified range.", "usage": "bool fann_scale_train_data ( resource $train_data , float $new_min , float $new_max )", "url": "https://secure.php.net/manual/en/function.fann-scale-train-data.php"}, {"name": "fann_scale_train", "synopsis": "Scale input and output data based on previously calculated parameters.", "usage": "bool fann_scale_train ( resource $ann , resource $train_data )", "url": "https://secure.php.net/manual/en/function.fann-scale-train.php"}, {"name": "fann_set_activation_function_hidden", "synopsis": "Sets the activation function for all of the hidden layers.", "usage": "bool fann_set_activation_function_hidden ( resource $ann , int $activation_function )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-function-hidden.php"}, {"name": "fann_set_activation_function_layer", "synopsis": "Set the activation function for all the neurons in the layer number layer, counting the input layer as layer 0.", "usage": "bool fann_set_activation_function_layer ( resource $ann , int $activation_function , int $layer )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-function-layer.php"}, {"name": "fann_set_activation_function_output", "synopsis": "Sets the activation function for the output layer.", "usage": "bool fann_set_activation_function_output ( resource $ann , int $activation_function )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-function-output.php"}, {"name": "fann_set_activation_function", "synopsis": "Set the activation function for neuron number neuron in layer number layer, counting the input layer as layer 0.", "usage": "bool fann_set_activation_function ( resource $ann , int $activation_function , int $layer , int $neuron )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-function.php"}, {"name": "fann_set_activation_steepness_hidden", "synopsis": "Sets the steepness of the activation steepness for all neurons in the all hidden layers.", "usage": "bool fann_set_activation_steepness_hidden ( resource $ann , float $activation_steepness )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-steepness-hidden.php"}, {"name": "fann_set_activation_steepness_layer", "synopsis": "Set the activation steepness for all of the neurons in layer number layer, counting the input layer as layer 0.", "usage": "bool fann_set_activation_steepness_layer ( resource $ann , float $activation_steepness , int $layer )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-steepness-layer.php"}, {"name": "fann_set_activation_steepness_output", "synopsis": "Sets the steepness of the activation steepness in the output layer.", "usage": "bool fann_set_activation_steepness_output ( resource $ann , float $activation_steepness )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-steepness-output.php"}, {"name": "fann_set_activation_steepness", "synopsis": "Set the activation steepness for neuron number neuron in layer number layer, counting the input layer as layer 0.", "usage": "bool fann_set_activation_steepness ( resource $ann , float $activation_steepness , int $layer , int $neuron )", "url": "https://secure.php.net/manual/en/function.fann-set-activation-steepness.php"}, {"name": "fann_set_bit_fail_limit", "synopsis": "Set the bit fail limit used during training.", "usage": "bool fann_set_bit_fail_limit ( resource $ann , float $bit_fail_limit )", "url": "https://secure.php.net/manual/en/function.fann-set-bit-fail-limit.php"}, {"name": "fann_set_callback", "synopsis": "Sets the callback function for use during training. It means that it is called from fann_train_on_data() or fann_train_on_file().", "usage": "bool fann_set_callback ( resource $ann , collable $callback )", "url": "https://secure.php.net/manual/en/function.fann-set-callback.php"}, {"name": "fann_set_cascade_activation_functions", "synopsis": "Sets the array of cascade candidate activation functions.", "usage": "bool fann_set_cascade_activation_functions ( resource $ann , array $cascade_activation_functions )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-activation-functions.php"}, {"name": "fann_set_cascade_activation_steepnesses", "synopsis": "Sets the array of cascade candidate activation steepnesses.", "usage": "bool fann_set_cascade_activation_steepnesses ( resource $ann , array $cascade_activation_steepnesses_count )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-activation-steepnesses.php"}, {"name": "fann_set_cascade_candidate_change_fraction", "synopsis": "Sets the cascade candidate change fraction.", "usage": "bool fann_set_cascade_candidate_change_fraction ( resource $ann , float $cascade_candidate_change_fraction )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-candidate-change-fraction.php"}, {"name": "fann_set_cascade_candidate_limit", "synopsis": "Sets the candidate limit.", "usage": "bool fann_set_cascade_candidate_limit ( resource $ann , float $cascade_candidate_limit )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-candidate-limit.php"}, {"name": "fann_set_cascade_candidate_stagnation_epochs", "synopsis": "Sets the number of cascade candidate stagnation epochs.", "usage": "bool fann_set_cascade_candidate_stagnation_epochs ( resource $ann , int $cascade_candidate_stagnation_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-candidate-stagnation-epochs.php"}, {"name": "fann_set_cascade_max_cand_epochs", "synopsis": "Sets the max candidate epochs.", "usage": "bool fann_set_cascade_max_cand_epochs ( resource $ann , int $cascade_max_cand_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-max-cand-epochs.php"}, {"name": "fann_set_cascade_max_out_epochs", "synopsis": "Sets the maximum out epochs.", "usage": "bool fann_set_cascade_max_out_epochs ( resource $ann , int $cascade_max_out_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-max-out-epochs.php"}, {"name": "fann_set_cascade_min_cand_epochs", "synopsis": "Sets the min candidate epochs.", "usage": "bool fann_set_cascade_min_cand_epochs ( resource $ann , int $cascade_min_cand_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-min-cand-epochs.php"}, {"name": "fann_set_cascade_min_out_epochs", "synopsis": "Sets the minimum out epochs.", "usage": "bool fann_set_cascade_min_out_epochs ( resource $ann , int $cascade_min_out_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-min-out-epochs.php"}, {"name": "fann_set_cascade_num_candidate_groups", "synopsis": "Sets the number of candidate groups.", "usage": "bool fann_set_cascade_num_candidate_groups ( resource $ann , int $cascade_num_candidate_groups )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-num-candidate-groups.php"}, {"name": "fann_set_cascade_output_change_fraction", "synopsis": "Sets the cascade output change fraction.", "usage": "bool fann_set_cascade_output_change_fraction ( resource $ann , float $cascade_output_change_fraction )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-output-change-fraction.php"}, {"name": "fann_set_cascade_output_stagnation_epochs", "synopsis": "Sets the number of cascade output stagnation epochs.", "usage": "bool fann_set_cascade_output_stagnation_epochs ( resource $ann , int $cascade_output_stagnation_epochs )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-output-stagnation-epochs.php"}, {"name": "fann_set_cascade_weight_multiplier", "synopsis": "Sets the weight multiplier.", "usage": "bool fann_set_cascade_weight_multiplier ( resource $ann , float $cascade_weight_multiplier )", "url": "https://secure.php.net/manual/en/function.fann-set-cascade-weight-multiplier.php"}, {"name": "fann_set_error_log", "synopsis": "Sets where the errors are logged to.", "usage": "void fann_set_error_log ( resource $errdat , string $log_file )", "url": "https://secure.php.net/manual/en/function.fann-set-error-log.php"}, {"name": "fann_set_input_scaling_params", "synopsis": "Calculate input scaling parameters for future use based on training data.", "usage": "bool fann_set_input_scaling_params ( resource $ann , resource $train_data , float $new_input_min , float $new_input_max )", "url": "https://secure.php.net/manual/en/function.fann-set-input-scaling-params.php"}, {"name": "fann_set_learning_momentum", "synopsis": "Sets the learning momentum.", "usage": "bool fann_set_learning_momentum ( resource $ann , float $learning_momentum )", "url": "https://secure.php.net/manual/en/function.fann-set-learning-momentum.php"}, {"name": "fann_set_learning_rate", "synopsis": "Sets the learning rate.", "usage": "bool fann_set_learning_rate ( resource $ann , float $learning_rate )", "url": "https://secure.php.net/manual/en/function.fann-set-learning-rate.php"}, {"name": "fann_set_output_scaling_params", "synopsis": "Calculate output scaling parameters for future use based on training data.", "usage": "bool fann_set_output_scaling_params ( resource $ann , resource $train_data , float $new_output_min , float $new_output_max )", "url": "https://secure.php.net/manual/en/function.fann-set-output-scaling-params.php"}, {"name": "fann_set_quickprop_decay", "synopsis": "Sets the quickprop decay factor.", "usage": "bool fann_set_quickprop_decay ( resource $ann , float $quickprop_decay )", "url": "https://secure.php.net/manual/en/function.fann-set-quickprop-decay.php"}, {"name": "fann_set_quickprop_mu", "synopsis": "Sets the quickprop mu factor.", "usage": "bool fann_set_quickprop_mu ( resource $ann , float $quickprop_mu )", "url": "https://secure.php.net/manual/en/function.fann-set-quickprop-mu.php"}, {"name": "fann_set_rprop_decrease_factor", "synopsis": "Sets the decrease factor used during RPROP training.", "usage": "bool fann_set_rprop_decrease_factor ( resource $ann , float $rprop_decrease_factor )", "url": "https://secure.php.net/manual/en/function.fann-set-rprop-decrease-factor.php"}, {"name": "fann_set_rprop_delta_max", "synopsis": "The maximum step-size is a positive number determining how large the maximum step-size may be.", "usage": "bool fann_set_rprop_delta_max ( resource $ann , float $rprop_delta_max )", "url": "https://secure.php.net/manual/en/function.fann-set-rprop-delta-max.php"}, {"name": "fann_set_rprop_delta_min", "synopsis": "The minimum step-size is a small positive number determining how small the minimum step-size may be.", "usage": "bool fann_set_rprop_delta_min ( resource $ann , float $rprop_delta_min )", "url": "https://secure.php.net/manual/en/function.fann-set-rprop-delta-min.php"}, {"name": "fann_set_rprop_delta_zero", "synopsis": "The initial step-size is a positive number determining the initial step size.", "usage": "bool fann_set_rprop_delta_zero ( resource $ann , float $rprop_delta_zero )", "url": "https://secure.php.net/manual/en/function.fann-set-rprop-delta-zero.php"}, {"name": "fann_set_rprop_increase_factor", "synopsis": "Sets the increase factor used during RPROP training.", "usage": "bool fann_set_rprop_increase_factor ( resource $ann , float $rprop_increase_factor )", "url": "https://secure.php.net/manual/en/function.fann-set-rprop-increase-factor.php"}, {"name": "fann_set_sarprop_step_error_shift", "synopsis": "Sets the sarprop step error shift.", "usage": "bool fann_set_sarprop_step_error_shift ( resource $ann , float $sarprop_step_error_shift )", "url": "https://secure.php.net/manual/en/function.fann-set-sarprop-step-error-shift.php"}, {"name": "fann_set_sarprop_step_error_threshold_factor", "synopsis": "Sets the sarprop step error threshold factor.", "usage": "bool fann_set_sarprop_step_error_threshold_factor ( resource $ann , float $sarprop_step_error_threshold_factor )", "url": "https://secure.php.net/manual/en/function.fann-set-sarprop-step-error-threshold-factor.php"}, {"name": "fann_set_sarprop_temperature", "synopsis": "Sets the sarprop temperature.", "usage": "bool fann_set_sarprop_temperature ( resource $ann , float $sarprop_temperature )", "url": "https://secure.php.net/manual/en/function.fann-set-sarprop-temperature.php"}, {"name": "fann_set_sarprop_weight_decay_shift", "synopsis": "Sets the sarprop weight decay shift.", "usage": "bool fann_set_sarprop_weight_decay_shift ( resource $ann , float $sarprop_weight_decay_shift )", "url": "https://secure.php.net/manual/en/function.fann-set-sarprop-weight-decay-shift.php"}, {"name": "fann_set_scaling_params", "synopsis": "Calculate input and output scaling parameters for future use based on training data.", "usage": "bool fann_set_scaling_params ( resource $ann , resource $train_data , float $new_input_min , float $new_input_max , float $new_output_min , float $new_output_max )", "url": "https://secure.php.net/manual/en/function.fann-set-scaling-params.php"}, {"name": "fann_set_train_error_function", "synopsis": "Sets the error function used during training.", "usage": "bool fann_set_train_error_function ( resource $ann , int $error_function )", "url": "https://secure.php.net/manual/en/function.fann-set-train-error-function.php"}, {"name": "fann_set_train_stop_function", "synopsis": "Sets the stop function used during training.", "usage": "bool fann_set_train_stop_function ( resource $ann , int $stop_function )", "url": "https://secure.php.net/manual/en/function.fann-set-train-stop-function.php"}, {"name": "fann_set_training_algorithm", "synopsis": "Sets the training algorithm.", "usage": "bool fann_set_training_algorithm ( resource $ann , int $training_algorithm )", "url": "https://secure.php.net/manual/en/function.fann-set-training-algorithm.php"}, {"name": "fann_set_weight_array", "synopsis": "Set connections in the network.", "usage": "bool fann_set_weight_array ( resource $ann , array $connections )", "url": "https://secure.php.net/manual/en/function.fann-set-weight-array.php"}, {"name": "fann_set_weight", "synopsis": "Set a connections in the network.", "usage": "bool fann_set_weight ( resource $ann , int $from_neuron , int $to_neuron , float $weight )", "url": "https://secure.php.net/manual/en/function.fann-set-weight.php"}, {"name": "fann_shuffle_train_data", "synopsis": "Shuffles training data, randomizing the order. This is recommended for incremental training, while it have no influence during batch training.", "usage": "bool fann_shuffle_train_data ( resource $train_data )", "url": "https://secure.php.net/manual/en/function.fann-shuffle-train-data.php"}, {"name": "fann_subset_train_data", "synopsis": "Returns an copy of a subset of the train data resource, starting at position pos and length elements forward.", "usage": "resource fann_subset_train_data ( resource $data , int $pos , int $length )", "url": "https://secure.php.net/manual/en/function.fann-subset-train-data.php"}, {"name": "fann_test_data", "synopsis": "Test a set of training data and calculates the MSE for the training data.", "usage": "float fann_test_data ( resource $ann , resource $data )", "url": "https://secure.php.net/manual/en/function.fann-test-data.php"}, {"name": "fann_test", "synopsis": "Test with a set of inputs, and a set of desired outputs. This operation updates the mean square error, but does not change the network in any way.", "usage": "array fann_test ( resource $ann , array $input , array $desired_output )", "url": "https://secure.php.net/manual/en/function.fann-test.php"}, {"name": "fann_train_epoch", "synopsis": "Train one epoch with the training data stored in data. One epoch is where all of the training data is considered exactly once.", "usage": "float fann_train_epoch ( resource $ann , resource $data )", "url": "https://secure.php.net/manual/en/function.fann-train-epoch.php"}, {"name": "fann_train_on_data", "synopsis": "Trains on an entire dataset for a period of time.", "usage": "bool fann_train_on_data ( resource $ann , resource $data , int $max_epochs , int $epochs_between_reports , float $desired_error )", "url": "https://secure.php.net/manual/en/function.fann-train-on-data.php"}, {"name": "fann_train_on_file", "synopsis": "Trains on an entire dataset, which is read from file, for a period of time.", "usage": "bool fann_train_on_file ( resource $ann , string $filename , int $max_epochs , int $epochs_between_reports , float $desired_error )", "url": "https://secure.php.net/manual/en/function.fann-train-on-file.php"}, {"name": "fann_train", "synopsis": "Train one iteration with a set of inputs, and a set of desired outputs. This training is always incremental training, since only one pattern is presented.", "usage": "bool fann_train ( resource $ann , array $input , array $desired_output )", "url": "https://secure.php.net/manual/en/function.fann-train.php"}, {"name": "fastcgi_finish_request", "synopsis": "This function flushes all response data to the client and finishes the request. This allows for time consuming tasks to be performed without leaving the connection to the client open.", "usage": "bool fastcgi_finish_request ( void )", "url": "https://secure.php.net/manual/en/function.fastcgi-finish-request.php"}, {"name": "fbsql_affected_rows", "synopsis": "fbsql_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query associated with link_identifier.", "usage": "int fbsql_affected_rows ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-affected-rows.php"}, {"name": "fbsql_autocommit", "synopsis": "Returns the current autocommit status.", "usage": "bool fbsql_autocommit ( resource $link_identifier [, bool $OnOff ] )", "url": "https://secure.php.net/manual/en/function.fbsql-autocommit.php"}, {"name": "fbsql_blob_size", "synopsis": "Returns the size of the given BLOB.", "usage": "int fbsql_blob_size ( string $blob_handle [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-blob-size.php"}, {"name": "fbsql_change_user", "synopsis": "fbsql_change_user() changes the logged in user of the specified connection. If the new user and password authorization fails, the current connected user stays active.", "usage": "bool fbsql_change_user ( string $user , string $password [, string $database [, resource $link_identifier ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-change-user.php"}, {"name": "fbsql_clob_size", "synopsis": "Returns the size of the given CLOB.", "usage": "int fbsql_clob_size ( string $clob_handle [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-clob-size.php"}, {"name": "fbsql_close", "synopsis": "Closes the connection to the FrontBase server that's associated with the specified link identifier.", "usage": "bool fbsql_close ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-close.php"}, {"name": "fbsql_commit", "synopsis": "Ends the current transaction by writing all inserts, updates and deletes to the disk and unlocking all row and table locks held by the transaction. This command is only needed if autocommit is set to false.", "usage": "bool fbsql_commit ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-commit.php"}, {"name": "fbsql_connect", "synopsis": "fbsql_connect() establishes a connection to a FrontBase server.", "usage": "resource fbsql_connect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )", "url": "https://secure.php.net/manual/en/function.fbsql-connect.php"}, {"name": "fbsql_create_blob", "synopsis": "Creates a BLOB from the given data.", "usage": "string fbsql_create_blob ( string $blob_data [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-create-blob.php"}, {"name": "fbsql_create_clob", "synopsis": "Creates a CLOB from the given data.", "usage": "string fbsql_create_clob ( string $clob_data [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-create-clob.php"}, {"name": "fbsql_create_db", "synopsis": "Attempts to create a new database on the specified server.", "usage": "bool fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-create-db.php"}, {"name": "fbsql_data_seek", "synopsis": "Moves the internal row pointer of the FrontBase result associated with the specified result identifier to point to the specified row number.", "usage": "bool fbsql_data_seek ( resource $result , int $row_number )", "url": "https://secure.php.net/manual/en/function.fbsql-data-seek.php"}, {"name": "fbsql_database_password", "synopsis": "Sets and retrieves the database password used by the connection. If a database is protected by a database password, the user must call this function before calling fbsql_select_db().", "usage": "string fbsql_database_password ( resource $link_identifier [, string $database_password ] )", "url": "https://secure.php.net/manual/en/function.fbsql-database-password.php"}, {"name": "fbsql_database", "synopsis": "Get or set the database name used with the connection.", "usage": "string fbsql_database ( resource $link_identifier [, string $database ] )", "url": "https://secure.php.net/manual/en/function.fbsql-database.php"}, {"name": "fbsql_db_query", "synopsis": "Selects a database and executes a query on it.", "usage": "resource fbsql_db_query ( string $database , string $query [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-db-query.php"}, {"name": "fbsql_db_status", "synopsis": "Gets the current status of the specified database.", "usage": "int fbsql_db_status ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-db-status.php"}, {"name": "fbsql_drop_db", "synopsis": "fbsql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier.", "usage": "bool fbsql_drop_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-drop-db.php"}, {"name": "fbsql_errno", "synopsis": "Returns the numerical value of the error message from previous FrontBase operation.", "usage": "int fbsql_errno ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-errno.php"}, {"name": "fbsql_error", "synopsis": "Returns the error message from previous FrontBase operation.", "usage": "string fbsql_error ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-error.php"}, {"name": "fbsql_fetch_array", "synopsis": "fbsql_fetch_array() is a combination of fbsql_fetch_row() and fbsql_fetch_assoc().", "usage": "array fbsql_fetch_array ( resource $result [, int $result_type ] )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-array.php"}, {"name": "fbsql_fetch_assoc", "synopsis": "Calling fbsql_fetch_assoc() is equivalent to calling fbsql_fetch_array() with FBSQL_ASSOC as second parameter. It only returns an associative array.", "usage": "array fbsql_fetch_assoc ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-assoc.php"}, {"name": "fbsql_fetch_field", "synopsis": "Used in order to obtain information about fields in a certain query result.", "usage": "object fbsql_fetch_field ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-field.php"}, {"name": "fbsql_fetch_lengths", "synopsis": "Stores the lengths of each result column in the last row returned by fbsql_fetch_row(), fbsql_fetch_array() and fbsql_fetch_object() in an array.", "usage": "array fbsql_fetch_lengths ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-lengths.php"}, {"name": "fbsql_fetch_object", "synopsis": "fbsql_fetch_object() is similar to fbsql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).", "usage": "object fbsql_fetch_object ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-object.php"}, {"name": "fbsql_fetch_row", "synopsis": "fbsql_fetch_row() fetches one row of data from the result associated with the specified result identifier.", "usage": "array fbsql_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-fetch-row.php"}, {"name": "fbsql_field_flags", "synopsis": "Gets the flags associated with the specified field in a result.", "usage": "string fbsql_field_flags ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-flags.php"}, {"name": "fbsql_field_len", "synopsis": "Returns the length of the specified field.", "usage": "int fbsql_field_len ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-len.php"}, {"name": "fbsql_field_name", "synopsis": "Returns the name of the specified field index.", "usage": "string fbsql_field_name ( resource $result [, int $field_index ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-name.php"}, {"name": "fbsql_field_seek", "synopsis": "Seeks to the specified field offset. If the next call to fbsql_fetch_field() doesn't include a field offset, the field offset specified in fbsql_field_seek() will be returned.", "usage": "bool fbsql_field_seek ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-seek.php"}, {"name": "fbsql_field_table", "synopsis": "Returns the name of the table that the specified field is in.", "usage": "string fbsql_field_table ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-table.php"}, {"name": "fbsql_field_type", "synopsis": "fbsql_field_type() is similar to the fbsql_field_name() function, but the field type is returned instead.", "usage": "string fbsql_field_type ( resource $result [, int $field_offset ] )", "url": "https://secure.php.net/manual/en/function.fbsql-field-type.php"}, {"name": "fbsql_free_result", "synopsis": "Frees all memory associated with the given result identifier.", "usage": "bool fbsql_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-free-result.php"}, {"name": "fbsql_get_autostart_info", "synopsis": null, "usage": "array fbsql_get_autostart_info ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-get-autostart-info.php"}, {"name": "fbsql_hostname", "synopsis": "Gets or sets the host name used with a connection.", "usage": "string fbsql_hostname ( resource $link_identifier [, string $host_name ] )", "url": "https://secure.php.net/manual/en/function.fbsql-hostname.php"}, {"name": "fbsql_insert_id", "synopsis": "Gets the id generated from the previous INSERT operation which created a DEFAULT UNIQUE value.", "usage": "int fbsql_insert_id ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-insert-id.php"}, {"name": "fbsql_list_dbs", "synopsis": "Return a result pointer containing the databases available from the current fbsql daemon. Use the fbsql_tablename() to traverse this result pointer.", "usage": "resource fbsql_list_dbs ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-list-dbs.php"}, {"name": "fbsql_list_fields", "synopsis": "Retrieves information about the given table.", "usage": "resource fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-list-fields.php"}, {"name": "fbsql_list_tables", "synopsis": "Returns a result pointer describing the database.", "usage": "resource fbsql_list_tables ( string $database [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-list-tables.php"}, {"name": "fbsql_next_result", "synopsis": "When sending more than one SQL statement to the server or executing a stored procedure with multiple results will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the words from the new result set.", "usage": "bool fbsql_next_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-next-result.php"}, {"name": "fbsql_num_fields", "synopsis": "Returns the number of fields in the given result set.", "usage": "int fbsql_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-num-fields.php"}, {"name": "fbsql_num_rows", "synopsis": "Gets the number of rows in the given result set.", "usage": "int fbsql_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-num-rows.php"}, {"name": "fbsql_password", "synopsis": "Get or set the user password used with a connection.", "usage": "string fbsql_password ( resource $link_identifier [, string $password ] )", "url": "https://secure.php.net/manual/en/function.fbsql-password.php"}, {"name": "fbsql_pconnect", "synopsis": "Establishes a persistent connection to a FrontBase server.", "usage": "resource fbsql_pconnect ([ string $hostname = ini_get(\"fbsql.default_host\") [, string $username = ini_get(\"fbsql.default_user\") [, string $password = ini_get(\"fbsql.default_password\") ]]] )", "url": "https://secure.php.net/manual/en/function.fbsql-pconnect.php"}, {"name": "fbsql_query", "synopsis": "Sends a query to the currently active database on the server.", "usage": "resource fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-query.php"}, {"name": "fbsql_read_blob", "synopsis": "Reads BLOB data from the database.", "usage": "string fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-read-blob.php"}, {"name": "fbsql_read_clob", "synopsis": "Reads CLOB data from the database.", "usage": "string fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-read-clob.php"}, {"name": "fbsql_result", "synopsis": "Returns the contents of one cell from a FrontBase result set.", "usage": "mixed fbsql_result ( resource $result [, int $row [, mixed $field ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-result.php"}, {"name": "fbsql_rollback", "synopsis": "Ends the current transaction by rolling back all statements issued since last commit.", "usage": "bool fbsql_rollback ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-rollback.php"}, {"name": "fbsql_rows_fetched", "synopsis": "Gets the number of rows affected by the last statement.", "usage": "int fbsql_rows_fetched ( resource $result )", "url": "https://secure.php.net/manual/en/function.fbsql-rows-fetched.php"}, {"name": "fbsql_select_db", "synopsis": "Sets the current active database on the given link identifier.", "usage": "bool fbsql_select_db ([ string $database_name [, resource $link_identifier ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-select-db.php"}, {"name": "fbsql_set_characterset", "synopsis": null, "usage": "void fbsql_set_characterset ( resource $link_identifier , int $characterset [, int $in_out_both ] )", "url": "https://secure.php.net/manual/en/function.fbsql-set-characterset.php"}, {"name": "fbsql_set_lob_mode", "synopsis": "Sets the mode for retrieving LOB data from the database.", "usage": "bool fbsql_set_lob_mode ( resource $result , int $lob_mode )", "url": "https://secure.php.net/manual/en/function.fbsql-set-lob-mode.php"}, {"name": "fbsql_set_password", "synopsis": "Changes the password for the given user.", "usage": "bool fbsql_set_password ( resource $link_identifier , string $user , string $password , string $old_password )", "url": "https://secure.php.net/manual/en/function.fbsql-set-password.php"}, {"name": "fbsql_set_transaction", "synopsis": "Sets the transaction locking and isolation.", "usage": "void fbsql_set_transaction ( resource $link_identifier , int $locking , int $isolation )", "url": "https://secure.php.net/manual/en/function.fbsql-set-transaction.php"}, {"name": "fbsql_start_db", "synopsis": "Start a database on local or remote server.", "usage": "bool fbsql_start_db ( string $database_name [, resource $link_identifier [, string $database_options ]] )", "url": "https://secure.php.net/manual/en/function.fbsql-start-db.php"}, {"name": "fbsql_stop_db", "synopsis": "Stops a database on local or remote server.", "usage": "bool fbsql_stop_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.fbsql-stop-db.php"}, {"name": "fbsql_table_name", "synopsis": "fbsql_table_name() gets the name of the current table in the given result set.", "usage": "string fbsql_table_name ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.fbsql-table-name.php"}, {"name": "fbsql_username", "synopsis": "Get or set the username used for the connection.", "usage": "string fbsql_username ( resource $link_identifier [, string $username ] )", "url": "https://secure.php.net/manual/en/function.fbsql-username.php"}, {"name": "fbsql_warnings", "synopsis": "Enables or disables FrontBase warnings.", "usage": "bool fbsql_warnings ([ bool $OnOff ] )", "url": "https://secure.php.net/manual/en/function.fbsql-warnings.php"}, {"name": "fclose", "synopsis": "The file pointed to by handle is closed.", "usage": "bool fclose ( resource $handle )", "url": "https://secure.php.net/manual/en/function.fclose.php"}, {"name": "fdf_add_doc_javascript", "synopsis": "Adds a script to the FDF, which Acrobat then adds to the doc-level scripts of a document, once the FDF is imported into it.", "usage": "bool fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code )", "url": "https://secure.php.net/manual/en/function.fdf-add-doc-javascript.php"}, {"name": "fdf_add_template", "synopsis": null, "usage": "bool fdf_add_template ( resource $fdf_document , int $newpage , string $filename , string $template , int $rename )", "url": "https://secure.php.net/manual/en/function.fdf-add-template.php"}, {"name": "fdf_close", "synopsis": "Closes the FDF document.", "usage": "void fdf_close ( resource $fdf_document )", "url": "https://secure.php.net/manual/en/function.fdf-close.php"}, {"name": "fdf_create", "synopsis": "Creates a new FDF document.", "usage": "resource fdf_create ( void )", "url": "https://secure.php.net/manual/en/function.fdf-create.php"}, {"name": "fdf_enum_values", "synopsis": null, "usage": "bool fdf_enum_values ( resource $fdf_document , callable $function [, mixed $userdata ] )", "url": "https://secure.php.net/manual/en/function.fdf-enum-values.php"}, {"name": "fdf_errno", "synopsis": "Gets the error code set by the last FDF function call.", "usage": "int fdf_errno ( void )", "url": "https://secure.php.net/manual/en/function.fdf-errno.php"}, {"name": "fdf_error", "synopsis": "Gets a textual description for the FDF error code given in error_code.", "usage": "string fdf_error ([ int $error_code = -1 ] )", "url": "https://secure.php.net/manual/en/function.fdf-error.php"}, {"name": "fdf_get_ap", "synopsis": "Gets the appearance of a field (i.e. the value of the /AP key) and stores it in a file.", "usage": "bool fdf_get_ap ( resource $fdf_document , string $field , int $face , string $filename )", "url": "https://secure.php.net/manual/en/function.fdf-get-ap.php"}, {"name": "fdf_get_attachment", "synopsis": "Extracts a file uploaded by means of the \"file selection\" field fieldname and stores it under savepath.", "usage": "array fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath )", "url": "https://secure.php.net/manual/en/function.fdf-get-attachment.php"}, {"name": "fdf_get_encoding", "synopsis": "Gets the value of the /Encoding key.", "usage": "string fdf_get_encoding ( resource $fdf_document )", "url": "https://secure.php.net/manual/en/function.fdf-get-encoding.php"}, {"name": "fdf_get_file", "synopsis": "Gets the value of the /F key.", "usage": "string fdf_get_file ( resource $fdf_document )", "url": "https://secure.php.net/manual/en/function.fdf-get-file.php"}, {"name": "fdf_get_flags", "synopsis": null, "usage": "int fdf_get_flags ( resource $fdf_document , string $fieldname , int $whichflags )", "url": "https://secure.php.net/manual/en/function.fdf-get-flags.php"}, {"name": "fdf_get_opt", "synopsis": null, "usage": "mixed fdf_get_opt ( resource $fdf_document , string $fieldname [, int $element = -1 ] )", "url": "https://secure.php.net/manual/en/function.fdf-get-opt.php"}, {"name": "fdf_get_status", "synopsis": "Gets the value of the /STATUS key.", "usage": "string fdf_get_status ( resource $fdf_document )", "url": "https://secure.php.net/manual/en/function.fdf-get-status.php"}, {"name": "fdf_get_value", "synopsis": "Gets the value for the requested field.", "usage": "mixed fdf_get_value ( resource $fdf_document , string $fieldname [, int $which = -1 ] )", "url": "https://secure.php.net/manual/en/function.fdf-get-value.php"}, {"name": "fdf_get_version", "synopsis": "Return the FDF version for the given document, or the toolkit API version number if no parameter is given.", "usage": "string fdf_get_version ([ resource $fdf_document ] )", "url": "https://secure.php.net/manual/en/function.fdf-get-version.php"}, {"name": "fdf_header", "synopsis": "This is a convenience function to set appropriate HTTP headers for FDF output. It sets the Content-type: to application/vnd.fdf.", "usage": "void fdf_header ( void )", "url": "https://secure.php.net/manual/en/function.fdf-header.php"}, {"name": "fdf_next_field_name", "synopsis": "Gets the name of the field after the given field. This name can be used with several functions.", "usage": "string fdf_next_field_name ( resource $fdf_document [, string $fieldname ] )", "url": "https://secure.php.net/manual/en/function.fdf-next-field-name.php"}, {"name": "fdf_open_string", "synopsis": "Reads form data from a string.", "usage": "resource fdf_open_string ( string $fdf_data )", "url": "https://secure.php.net/manual/en/function.fdf-open-string.php"}, {"name": "fdf_open", "synopsis": "Opens a file with form data.", "usage": "resource fdf_open ( string $filename )", "url": "https://secure.php.net/manual/en/function.fdf-open.php"}, {"name": "fdf_remove_item", "synopsis": null, "usage": "bool fdf_remove_item ( resource $fdf_document , string $fieldname , int $item )", "url": "https://secure.php.net/manual/en/function.fdf-remove-item.php"}, {"name": "fdf_save_string", "synopsis": "Returns the FDF document as a string.", "usage": "string fdf_save_string ( resource $fdf_document )", "url": "https://secure.php.net/manual/en/function.fdf-save-string.php"}, {"name": "fdf_save", "synopsis": "Saves a FDF document.", "usage": "bool fdf_save ( resource $fdf_document [, string $filename ] )", "url": "https://secure.php.net/manual/en/function.fdf-save.php"}, {"name": "fdf_set_ap", "synopsis": "Sets the appearance of a field (i.e. the value of the /AP key).", "usage": "bool fdf_set_ap ( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number )", "url": "https://secure.php.net/manual/en/function.fdf-set-ap.php"}, {"name": "fdf_set_encoding", "synopsis": "Sets the character encoding for the FDF document.", "usage": "bool fdf_set_encoding ( resource $fdf_document , string $encoding )", "url": "https://secure.php.net/manual/en/function.fdf-set-encoding.php"}, {"name": "fdf_set_file", "synopsis": "Selects a different PDF document to display the form results in then the form it originated from.", "usage": "bool fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] )", "url": "https://secure.php.net/manual/en/function.fdf-set-file.php"}, {"name": "fdf_set_flags", "synopsis": "Sets certain flags of the given field.", "usage": "bool fdf_set_flags ( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags )", "url": "https://secure.php.net/manual/en/function.fdf-set-flags.php"}, {"name": "fdf_set_javascript_action", "synopsis": "Sets a javascript action for the given field.", "usage": "bool fdf_set_javascript_action ( resource $fdf_document , string $fieldname , int $trigger , string $script )", "url": "https://secure.php.net/manual/en/function.fdf-set-javascript-action.php"}, {"name": "fdf_set_on_import_javascript", "synopsis": null, "usage": "bool fdf_set_on_import_javascript ( resource $fdf_document , string $script , bool $before_data_import )", "url": "https://secure.php.net/manual/en/function.fdf-set-on-import-javascript.php"}, {"name": "fdf_set_opt", "synopsis": "Sets options of the given field.", "usage": "bool fdf_set_opt ( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.fdf-set-opt.php"}, {"name": "fdf_set_status", "synopsis": "Sets the value of the /STATUS key. When a client receives a FDF with a status set it will present the value in an alert box.", "usage": "bool fdf_set_status ( resource $fdf_document , string $status )", "url": "https://secure.php.net/manual/en/function.fdf-set-status.php"}, {"name": "fdf_set_submit_form_action", "synopsis": "Sets a submit form action for the given field.", "usage": "bool fdf_set_submit_form_action ( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags )", "url": "https://secure.php.net/manual/en/function.fdf-set-submit-form-action.php"}, {"name": "fdf_set_target_frame", "synopsis": "Sets the target frame to display a result PDF defined with fdf_save_file() in.", "usage": "bool fdf_set_target_frame ( resource $fdf_document , string $frame_name )", "url": "https://secure.php.net/manual/en/function.fdf-set-target-frame.php"}, {"name": "fdf_set_value", "synopsis": "Sets the value for the given field.", "usage": "bool fdf_set_value ( resource $fdf_document , string $fieldname , mixed $value [, int $isName ] )", "url": "https://secure.php.net/manual/en/function.fdf-set-value.php"}, {"name": "fdf_set_version", "synopsis": "Sets the FDF version for the given document.", "usage": "bool fdf_set_version ( resource $fdf_document , string $version )", "url": "https://secure.php.net/manual/en/function.fdf-set-version.php"}, {"name": "feof", "synopsis": "Tests for end-of-file on a file pointer.", "usage": "bool feof ( resource $handle )", "url": "https://secure.php.net/manual/en/function.feof.php"}, {"name": "fflush", "synopsis": "This function forces a write of all buffered output to the resource pointed to by the file handle.", "usage": "bool fflush ( resource $handle )", "url": "https://secure.php.net/manual/en/function.fflush.php"}, {"name": "fgetc", "synopsis": "Gets a character from the given file pointer.", "usage": "string fgetc ( resource $handle )", "url": "https://secure.php.net/manual/en/function.fgetc.php"}, {"name": "fgetcsv", "synopsis": "Similar to fgets() except that fgetcsv() parses the line it reads for fields in CSV format and returns an array containing the fields read.", "usage": "array fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = \",\" [, string $enclosure = '\"' [, string $escape = \"\\\\\" ]]]] )", "url": "https://secure.php.net/manual/en/function.fgetcsv.php"}, {"name": "fgets", "synopsis": "Gets a line from file pointer.", "usage": "string fgets ( resource $handle [, int $length ] )", "url": "https://secure.php.net/manual/en/function.fgets.php"}, {"name": "fgetss", "synopsis": "Identical to fgets(), except that fgetss() attempts to strip any NUL bytes, HTML and PHP tags from the text it reads.", "usage": "string fgetss ( resource $handle [, int $length [, string $allowable_tags ]] )", "url": "https://secure.php.net/manual/en/function.fgetss.php"}, {"name": "file_exists", "synopsis": "Checks whether a file or directory exists.", "usage": "bool file_exists ( string $filename )", "url": "https://secure.php.net/manual/en/function.file-exists.php"}, {"name": "file_get_contents", "synopsis": "This function is similar to file(), except that file_get_contents() returns the file in a string, starting at the specified offset up to maxlen bytes. On failure, file_get_contents() will return FALSE.", "usage": "string file_get_contents ( string $filename [, bool $use_include_path = FALSE [, resource $context [, int $offset = 0 [, int $maxlen ]]]] )", "url": "https://secure.php.net/manual/en/function.file-get-contents.php"}, {"name": "file_put_contents", "synopsis": "This function is identical to calling fopen(), fwrite() and fclose() successively to write data to a file.", "usage": "int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.file-put-contents.php"}, {"name": "file", "synopsis": "Reads an entire file into an array.", "usage": "array file ( string $filename [, int $flags = 0 [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.file.php"}, {"name": "fileatime", "synopsis": null, "usage": "int fileatime ( string $filename )", "url": "https://secure.php.net/manual/en/function.fileatime.php"}, {"name": "filectime", "synopsis": "Gets the inode change time of a file.", "usage": "int filectime ( string $filename )", "url": "https://secure.php.net/manual/en/function.filectime.php"}, {"name": "filegroup", "synopsis": "Gets the file group. The group ID is returned in numerical format, use posix_getgrgid() to resolve it to a group name.", "usage": "int filegroup ( string $filename )", "url": "https://secure.php.net/manual/en/function.filegroup.php"}, {"name": "fileinode", "synopsis": "Gets the file inode.", "usage": "int fileinode ( string $filename )", "url": "https://secure.php.net/manual/en/function.fileinode.php"}, {"name": "filemtime", "synopsis": "This function returns the time when the data blocks of a file were being written to, that is, the time when the content of the file was changed.", "usage": "int filemtime ( string $filename )", "url": "https://secure.php.net/manual/en/function.filemtime.php"}, {"name": "fileowner", "synopsis": "Gets the file owner.", "usage": "int fileowner ( string $filename )", "url": "https://secure.php.net/manual/en/function.fileowner.php"}, {"name": "fileperms", "synopsis": "Gets permissions for the given file.", "usage": "int fileperms ( string $filename )", "url": "https://secure.php.net/manual/en/function.fileperms.php"}, {"name": "filepro_fieldcount", "synopsis": "Returns the number of fields (columns) in the opened filePro database.", "usage": "int filepro_fieldcount ( void )", "url": "https://secure.php.net/manual/en/function.filepro-fieldcount.php"}, {"name": "filepro_fieldname", "synopsis": "Returns the name of the field corresponding to field_number.", "usage": "string filepro_fieldname ( int $field_number )", "url": "https://secure.php.net/manual/en/function.filepro-fieldname.php"}, {"name": "filepro_fieldtype", "synopsis": "Returns the edit type of the field corresponding to field_number.", "usage": "string filepro_fieldtype ( int $field_number )", "url": "https://secure.php.net/manual/en/function.filepro-fieldtype.php"}, {"name": "filepro_fieldwidth", "synopsis": "Returns the width of the field corresponding to field_number.", "usage": "int filepro_fieldwidth ( int $field_number )", "url": "https://secure.php.net/manual/en/function.filepro-fieldwidth.php"}, {"name": "filepro_retrieve", "synopsis": "Returns the data from the specified location in the database.", "usage": "string filepro_retrieve ( int $row_number , int $field_number )", "url": "https://secure.php.net/manual/en/function.filepro-retrieve.php"}, {"name": "filepro_rowcount", "synopsis": "Returns the number of rows in the opened filePro database.", "usage": "int filepro_rowcount ( void )", "url": "https://secure.php.net/manual/en/function.filepro-rowcount.php"}, {"name": "filepro", "synopsis": "This reads and verifies the map file, storing the field count and info.", "usage": "bool filepro ( string $directory )", "url": "https://secure.php.net/manual/en/function.filepro.php"}, {"name": "filesize", "synopsis": "Gets the size for the given file.", "usage": "int filesize ( string $filename )", "url": "https://secure.php.net/manual/en/function.filesize.php"}, {"name": "filetype", "synopsis": "Returns the type of the given file.", "usage": "string filetype ( string $filename )", "url": "https://secure.php.net/manual/en/function.filetype.php"}, {"name": "filter_has_var", "synopsis": null, "usage": "bool filter_has_var ( int $type , string $variable_name )", "url": "https://secure.php.net/manual/en/function.filter-has-var.php"}, {"name": "filter_id", "synopsis": null, "usage": "int filter_id ( string $filtername )", "url": "https://secure.php.net/manual/en/function.filter-id.php"}, {"name": "filter_input_array", "synopsis": "This function is useful for retrieving many values without repetitively calling filter_input().", "usage": "mixed filter_input_array ( int $type [, mixed $definition [, bool $add_empty = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.filter-input-array.php"}, {"name": "filter_input", "synopsis": null, "usage": "mixed filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] )", "url": "https://secure.php.net/manual/en/function.filter-input.php"}, {"name": "filter_list", "synopsis": null, "usage": "array filter_list ( void )", "url": "https://secure.php.net/manual/en/function.filter-list.php"}, {"name": "filter_var_array", "synopsis": "This function is useful for retrieving many values without repetitively calling filter_var().", "usage": "mixed filter_var_array ( array $data [, mixed $definition [, bool $add_empty = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.filter-var-array.php"}, {"name": "filter_var", "synopsis": null, "usage": "mixed filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] )", "url": "https://secure.php.net/manual/en/function.filter-var.php"}, {"name": "finfo_buffer", "synopsis": "Object oriented style", "usage": "string finfo_buffer ( resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/function.finfo-buffer.php"}, {"name": "finfo_close", "synopsis": "This function closes the resource opened by finfo_open().", "usage": "bool finfo_close ( resource $finfo )", "url": "https://secure.php.net/manual/en/function.finfo-close.php"}, {"name": "finfo_file", "synopsis": "Object oriented style", "usage": "string finfo_file ( resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )", "url": "https://secure.php.net/manual/en/function.finfo-file.php"}, {"name": "finfo_open", "synopsis": "Object oriented style (constructor):", "usage": "resource finfo_open ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] )", "url": "https://secure.php.net/manual/en/function.finfo-open.php"}, {"name": "finfo_set_flags", "synopsis": "Object oriented style", "usage": "bool finfo_set_flags ( resource $finfo , int $options )", "url": "https://secure.php.net/manual/en/function.finfo-set-flags.php"}, {"name": "floatval", "synopsis": "Gets the float value of var.", "usage": "float floatval ( mixed $var )", "url": "https://secure.php.net/manual/en/function.floatval.php"}, {"name": "flock", "synopsis": "flock() allows you to perform a simple reader/writer model which can be used on virtually every platform (including most Unix derivatives and even Windows).", "usage": "bool flock ( resource $handle , int $operation [, int &$wouldblock ] )", "url": "https://secure.php.net/manual/en/function.flock.php"}, {"name": "floor", "synopsis": null, "usage": "float floor ( float $value )", "url": "https://secure.php.net/manual/en/function.floor.php"}, {"name": "flush", "synopsis": "Flushes the system write buffers of PHP and whatever backend PHP is using (CGI, a web server, etc). This attempts to push current output all the way to the browser with a few caveats.", "usage": "void flush ( void )", "url": "https://secure.php.net/manual/en/function.flush.php"}, {"name": "fmod", "synopsis": "Returns the floating point remainder of dividing the dividend (x) by the divisor (y). The remainder (r) is defined as: x = i * y + r, for some integer i. If y is non-zero, r has the same sign as x and a magnitude less than the magnitude of y.", "usage": "float fmod ( float $x , float $y )", "url": "https://secure.php.net/manual/en/function.fmod.php"}, {"name": "fnmatch", "synopsis": "fnmatch() checks if the passed string would match the given shell wildcard pattern.", "usage": "bool fnmatch ( string $pattern , string $string [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.fnmatch.php"}, {"name": "fopen", "synopsis": "fopen() binds a named resource, specified by filename, to a stream.", "usage": "resource fopen ( string $filename , string $mode [, bool $use_include_path = FALSE [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.fopen.php"}, {"name": "forward_static_call_array", "synopsis": "Calls a user defined function or method given by the function parameter. This function must be called within a method context, it can't be used outside a class. It uses the late static binding. All arguments of the forwarded method are passed as values, and as an array, similarly to call_user_func_array().", "usage": "mixed forward_static_call_array ( callable $function , array $parameters )", "url": "https://secure.php.net/manual/en/function.forward-static-call-array.php"}, {"name": "forward_static_call", "synopsis": "Calls a user defined function or method given by the function parameter, with the following arguments. This function must be called within a method context, it can't be used outside a class. It uses the late static binding.", "usage": "mixed forward_static_call ( callable $function [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.forward-static-call.php"}, {"name": "fpassthru", "synopsis": "Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.", "usage": "int fpassthru ( resource $handle )", "url": "https://secure.php.net/manual/en/function.fpassthru.php"}, {"name": "fprintf", "synopsis": "Write a string produced according to format to the stream resource specified by handle.", "usage": "int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.fprintf.php"}, {"name": "fputcsv", "synopsis": "fputcsv() formats a line (passed as a fields array) as CSV and write it (terminated by a newline) to the specified file handle.", "usage": "int fputcsv ( resource $handle , array $fields [, string $delimiter = \",\" [, string $enclosure = '\"' [, string $escape_char = \"\\\\\" ]]] )", "url": "https://secure.php.net/manual/en/function.fputcsv.php"}, {"name": "fread", "synopsis": "fread() reads up to length bytes from the file pointer referenced by handle. Reading stops as soon as one of the following conditions is met:", "usage": "string fread ( resource $handle , int $length )", "url": "https://secure.php.net/manual/en/function.fread.php"}, {"name": "frenchtojd", "synopsis": "Converts a date from the French Republican Calendar to a Julian Day Count.", "usage": "int frenchtojd ( int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.frenchtojd.php"}, {"name": "fribidi_log2vis", "synopsis": "Converts a logical string to a visual one.", "usage": "string fribidi_log2vis ( string $str , string $direction , int $charset )", "url": "https://secure.php.net/manual/en/function.fribidi-log2vis.php"}, {"name": "fscanf", "synopsis": "The function fscanf() is similar to sscanf(), but it takes its input from a file associated with handle and interprets the input according to the specified format, which is described in the documentation for sprintf().", "usage": "mixed fscanf ( resource $handle , string $format [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/function.fscanf.php"}, {"name": "fseek", "synopsis": "Sets the file position indicator for the file referenced by handle. The new position, measured in bytes from the beginning of the file, is obtained by adding offset to the position specified by whence.", "usage": "int fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] )", "url": "https://secure.php.net/manual/en/function.fseek.php"}, {"name": "fsockopen", "synopsis": "Initiates a socket connection to the resource specified by hostname.", "usage": "resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )", "url": "https://secure.php.net/manual/en/function.fsockopen.php"}, {"name": "fstat", "synopsis": "Gathers the statistics of the file opened by the file pointer handle. This function is similar to the stat() function except that it operates on an open file pointer instead of a filename.", "usage": "array fstat ( resource $handle )", "url": "https://secure.php.net/manual/en/function.fstat.php"}, {"name": "ftell", "synopsis": "Returns the position of the file pointer referenced by handle.", "usage": "int ftell ( resource $handle )", "url": "https://secure.php.net/manual/en/function.ftell.php"}, {"name": "ftok", "synopsis": "The function converts the pathname of an existing accessible file and a project identifier into an integer for use with for example shmop_open() and other System V IPC keys.", "usage": "int ftok ( string $pathname , string $proj )", "url": "https://secure.php.net/manual/en/function.ftok.php"}, {"name": "ftp_alloc", "synopsis": "Sends an ALLO command to the remote FTP server to allocate space for a file to be uploaded.", "usage": "bool ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] )", "url": "https://secure.php.net/manual/en/function.ftp-alloc.php"}, {"name": "ftp_append", "synopsis": "", "usage": "bool ftp_append ( resource $ftp , string $remote_file , string $local_file [, int $mode = FTP_IMAGE ] )", "url": "https://secure.php.net/manual/en/function.ftp-append.php"}, {"name": "ftp_cdup", "synopsis": "Changes to the parent directory.", "usage": "bool ftp_cdup ( resource $ftp_stream )", "url": "https://secure.php.net/manual/en/function.ftp-cdup.php"}, {"name": "ftp_chdir", "synopsis": "Changes the current directory to the specified one.", "usage": "bool ftp_chdir ( resource $ftp_stream , string $directory )", "url": "https://secure.php.net/manual/en/function.ftp-chdir.php"}, {"name": "ftp_chmod", "synopsis": "Sets the permissions on the specified remote file to mode.", "usage": "int ftp_chmod ( resource $ftp_stream , int $mode , string $filename )", "url": "https://secure.php.net/manual/en/function.ftp-chmod.php"}, {"name": "ftp_close", "synopsis": "ftp_close() closes the given link identifier and releases the resource.", "usage": "bool ftp_close ( resource $ftp_stream )", "url": "https://secure.php.net/manual/en/function.ftp-close.php"}, {"name": "ftp_connect", "synopsis": "ftp_connect() opens an FTP connection to the specified host.", "usage": "resource ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-connect.php"}, {"name": "ftp_delete", "synopsis": "ftp_delete() deletes the file specified by path from the FTP server.", "usage": "bool ftp_delete ( resource $ftp_stream , string $path )", "url": "https://secure.php.net/manual/en/function.ftp-delete.php"}, {"name": "ftp_exec", "synopsis": "Sends a SITE EXEC command request to the FTP server.", "usage": "bool ftp_exec ( resource $ftp_stream , string $command )", "url": "https://secure.php.net/manual/en/function.ftp-exec.php"}, {"name": "ftp_fget", "synopsis": "ftp_fget() retrieves remote_file from the FTP server, and writes it to the given file pointer.", "usage": "bool ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-fget.php"}, {"name": "ftp_fput", "synopsis": "ftp_fput() uploads the data from a file pointer to a remote file on the FTP server.", "usage": "bool ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-fput.php"}, {"name": "ftp_get_option", "synopsis": "This function returns the value for the requested option from the specified FTP connection.", "usage": "mixed ftp_get_option ( resource $ftp_stream , int $option )", "url": "https://secure.php.net/manual/en/function.ftp-get-option.php"}, {"name": "ftp_get", "synopsis": "ftp_get() retrieves a remote file from the FTP server, and saves it into a local file.", "usage": "bool ftp_get ( resource $ftp_stream , string $local_file , string $remote_file [, int $mode = FTP_BINARY [, int $resumepos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-get.php"}, {"name": "ftp_login", "synopsis": "Logs in to the given FTP stream.", "usage": "bool ftp_login ( resource $ftp_stream , string $username , string $password )", "url": "https://secure.php.net/manual/en/function.ftp-login.php"}, {"name": "ftp_mdtm", "synopsis": "ftp_mdtm() gets the last modified time for a remote file.", "usage": "int ftp_mdtm ( resource $ftp_stream , string $remote_file )", "url": "https://secure.php.net/manual/en/function.ftp-mdtm.php"}, {"name": "ftp_mkdir", "synopsis": "Creates the specified directory on the FTP server.", "usage": "string ftp_mkdir ( resource $ftp_stream , string $directory )", "url": "https://secure.php.net/manual/en/function.ftp-mkdir.php"}, {"name": "ftp_mlsd", "synopsis": null, "usage": "array ftp_mlsd ( resource $ftp_stream , string $directory )", "url": "https://secure.php.net/manual/en/function.ftp-mlsd.php"}, {"name": "ftp_nb_continue", "synopsis": "Continues retrieving/sending a file non-blocking.", "usage": "int ftp_nb_continue ( resource $ftp_stream )", "url": "https://secure.php.net/manual/en/function.ftp-nb-continue.php"}, {"name": "ftp_nb_fget", "synopsis": "ftp_nb_fget() retrieves a remote file from the FTP server.", "usage": "int ftp_nb_fget ( resource $ftp_stream , resource $handle , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-nb-fget.php"}, {"name": "ftp_nb_fput", "synopsis": "ftp_nb_fput() uploads the data from a file pointer to a remote file on the FTP server.", "usage": "int ftp_nb_fput ( resource $ftp_stream , string $remote_file , resource $handle [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-nb-fput.php"}, {"name": "ftp_nb_get", "synopsis": "ftp_nb_get() retrieves a remote file from the FTP server, and saves it into a local file.", "usage": "int ftp_nb_get ( resource $ftp_stream , string $local_file , string $remote_file [, int $mode = FTP_IMAGE [, int $resumepos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-nb-get.php"}, {"name": "ftp_nb_put", "synopsis": "ftp_nb_put() stores a local file on the FTP server.", "usage": "int ftp_nb_put ( resource $ftp_stream , string $remote_file , string $local_file [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-nb-put.php"}, {"name": "ftp_nlist", "synopsis": null, "usage": "array ftp_nlist ( resource $ftp_stream , string $directory )", "url": "https://secure.php.net/manual/en/function.ftp-nlist.php"}, {"name": "ftp_pasv", "synopsis": "ftp_pasv() turns on or off passive mode. In passive mode, data connections are initiated by the client, rather than by the server. It may be needed if the client is behind firewall.", "usage": "bool ftp_pasv ( resource $ftp_stream , bool $pasv )", "url": "https://secure.php.net/manual/en/function.ftp-pasv.php"}, {"name": "ftp_put", "synopsis": "ftp_put() stores a local file on the FTP server.", "usage": "bool ftp_put ( resource $ftp_stream , string $remote_file , string $local_file [, int $mode = FTP_IMAGE [, int $startpos = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-put.php"}, {"name": "ftp_pwd", "synopsis": "", "usage": "string ftp_pwd ( resource $ftp_stream )", "url": "https://secure.php.net/manual/en/function.ftp-pwd.php"}, {"name": "ftp_raw", "synopsis": "Sends an arbitrary command to the FTP server.", "usage": "array ftp_raw ( resource $ftp_stream , string $command )", "url": "https://secure.php.net/manual/en/function.ftp-raw.php"}, {"name": "ftp_rawlist", "synopsis": "ftp_rawlist() executes the FTP LIST command, and returns the result as an array.", "usage": "array ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = FALSE ] )", "url": "https://secure.php.net/manual/en/function.ftp-rawlist.php"}, {"name": "ftp_rename", "synopsis": "ftp_rename() renames a file or a directory on the FTP server.", "usage": "bool ftp_rename ( resource $ftp_stream , string $oldname , string $newname )", "url": "https://secure.php.net/manual/en/function.ftp-rename.php"}, {"name": "ftp_rmdir", "synopsis": "Removes the specified directory on the FTP server.", "usage": "bool ftp_rmdir ( resource $ftp_stream , string $directory )", "url": "https://secure.php.net/manual/en/function.ftp-rmdir.php"}, {"name": "ftp_set_option", "synopsis": "This function controls various runtime options for the specified FTP stream.", "usage": "bool ftp_set_option ( resource $ftp_stream , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.ftp-set-option.php"}, {"name": "ftp_site", "synopsis": "ftp_site() sends the given SITE command to the FTP server.", "usage": "bool ftp_site ( resource $ftp_stream , string $command )", "url": "https://secure.php.net/manual/en/function.ftp-site.php"}, {"name": "ftp_size", "synopsis": "ftp_size() returns the size of the given file in bytes.", "usage": "int ftp_size ( resource $ftp_stream , string $remote_file )", "url": "https://secure.php.net/manual/en/function.ftp-size.php"}, {"name": "ftp_ssl_connect", "synopsis": "ftp_ssl_connect() opens an explicit SSL-FTP connection to the specified host. That implies that ftp_ssl_connect() will succeed even if the server is not configured for SSL-FTP, or its certificate is invalid. Only when ftp_login() is called, the client will send the appropriate AUTH FTP command, so ftp_login() will fail in the mentioned cases.", "usage": "resource ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] )", "url": "https://secure.php.net/manual/en/function.ftp-ssl-connect.php"}, {"name": "ftp_systype", "synopsis": "Returns the system type identifier of the remote FTP server.", "usage": "string ftp_systype ( resource $ftp_stream )", "url": "https://secure.php.net/manual/en/function.ftp-systype.php"}, {"name": "ftruncate", "synopsis": "Takes the filepointer, handle, and truncates the file to length, size.", "usage": "bool ftruncate ( resource $handle , int $size )", "url": "https://secure.php.net/manual/en/function.ftruncate.php"}, {"name": "func_get_arg", "synopsis": "Gets the specified argument from a user-defined function's argument list.", "usage": "mixed func_get_arg ( int $arg_num )", "url": "https://secure.php.net/manual/en/function.func-get-arg.php"}, {"name": "func_get_args", "synopsis": "Gets an array of the function's argument list.", "usage": "array func_get_args ( void )", "url": "https://secure.php.net/manual/en/function.func-get-args.php"}, {"name": "func_num_args", "synopsis": "Gets the number of arguments passed to the function.", "usage": "int func_num_args ( void )", "url": "https://secure.php.net/manual/en/function.func-num-args.php"}, {"name": "function_exists", "synopsis": "Checks the list of defined functions, both built-in (internal) and user-defined, for function_name.", "usage": "bool function_exists ( string $function_name )", "url": "https://secure.php.net/manual/en/function.function-exists.php"}, {"name": "fwrite", "synopsis": null, "usage": "int fwrite ( resource $handle , string $string [, int $length ] )", "url": "https://secure.php.net/manual/en/function.fwrite.php"}, {"name": "gc_collect_cycles", "synopsis": "Forces collection of any existing garbage cycles.", "usage": "int gc_collect_cycles ( void )", "url": "https://secure.php.net/manual/en/function.gc-collect-cycles.php"}, {"name": "gc_disable", "synopsis": "Deactivates the circular reference collector, setting zend.enable_gc to 0.", "usage": "void gc_disable ( void )", "url": "https://secure.php.net/manual/en/function.gc-disable.php"}, {"name": "gc_enable", "synopsis": "Activates the circular reference collector, setting zend.enable_gc to 1.", "usage": "void gc_enable ( void )", "url": "https://secure.php.net/manual/en/function.gc-enable.php"}, {"name": "gc_enabled", "synopsis": "Returns status of the circular reference collector.", "usage": "bool gc_enabled ( void )", "url": "https://secure.php.net/manual/en/function.gc-enabled.php"}, {"name": "gc_mem_caches", "synopsis": "Reclaims memory used by the Zend Engine memory manager.", "usage": "int gc_mem_caches ( void )", "url": "https://secure.php.net/manual/en/function.gc-mem-caches.php"}, {"name": "gd_info", "synopsis": "Gets information about the version and capabilities of the installed GD library.", "usage": "array gd_info ( void )", "url": "https://secure.php.net/manual/en/function.gd-info.php"}, {"name": "geoip_asnum_by_name", "synopsis": "The geoip_asnum_by_name() function will return the Autonomous System Numbers (ASN) associated with an IP address.", "usage": "string geoip_asnum_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-asnum-by-name.php"}, {"name": "geoip_continent_code_by_name", "synopsis": "The geoip_continent_code_by_name() function will return the two letter continent code corresponding to a hostname or an IP address.", "usage": "string geoip_continent_code_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-continent-code-by-name.php"}, {"name": "geoip_country_code_by_name", "synopsis": "The geoip_country_code_by_name() function will return the two letter country code corresponding to a hostname or an IP address.", "usage": "string geoip_country_code_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-country-code-by-name.php"}, {"name": "geoip_country_code3_by_name", "synopsis": "The geoip_country_code3_by_name() function will return the three letter country code corresponding to a hostname or an IP address.", "usage": "string geoip_country_code3_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-country-code3-by-name.php"}, {"name": "geoip_country_name_by_name", "synopsis": "The geoip_country_name_by_name() function will return the full country name corresponding to a hostname or an IP address.", "usage": "string geoip_country_name_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-country-name-by-name.php"}, {"name": "geoip_database_info", "synopsis": "The geoip_database_info() function returns the corresponding GeoIP Database version as it is defined inside the binary file.", "usage": "string geoip_database_info ([ int $database = GEOIP_COUNTRY_EDITION ] )", "url": "https://secure.php.net/manual/en/function.geoip-database-info.php"}, {"name": "geoip_db_avail", "synopsis": "The geoip_db_avail() function returns if the corresponding GeoIP Database is available and can be opened on disk.", "usage": "bool geoip_db_avail ( int $database )", "url": "https://secure.php.net/manual/en/function.geoip-db-avail.php"}, {"name": "geoip_db_filename", "synopsis": "The geoip_db_filename() function returns the filename of the corresponding GeoIP Database.", "usage": "string geoip_db_filename ( int $database )", "url": "https://secure.php.net/manual/en/function.geoip-db-filename.php"}, {"name": "geoip_db_get_all_info", "synopsis": "The geoip_db_get_all_info() function will return detailed information as a multi-dimensional array about all the GeoIP database types.", "usage": "array geoip_db_get_all_info ( void )", "url": "https://secure.php.net/manual/en/function.geoip-db-get-all-info.php"}, {"name": "geoip_domain_by_name", "synopsis": "The geoip_domain_by_name() function will return the second level domain names associated with a hostname or an IP address.", "usage": "string geoip_domain_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-domain-by-name.php"}, {"name": "geoip_id_by_name", "synopsis": "The geoip_id_by_name() function will return the Internet connection type corresponding to a hostname or an IP address.", "usage": "int geoip_id_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-id-by-name.php"}, {"name": "geoip_isp_by_name", "synopsis": "The geoip_isp_by_name() function will return the name of the Internet Service Provider (ISP) that an IP is assigned to.", "usage": "string geoip_isp_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-isp-by-name.php"}, {"name": "geoip_netspeedcell_by_name", "synopsis": "The geoip_netspeedcell_by_name() function will return the Internet connection type and speed corresponding to a hostname or an IP address.", "usage": "string geoip_netspeedcell_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-netspeedcell-by-name.php"}, {"name": "geoip_org_by_name", "synopsis": "The geoip_org_by_name() function will return the name of the organization that an IP is assigned to.", "usage": "string geoip_org_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-org-by-name.php"}, {"name": "geoip_record_by_name", "synopsis": "The geoip_record_by_name() function will return the record information corresponding to a hostname or an IP address.", "usage": "array geoip_record_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-record-by-name.php"}, {"name": "geoip_region_by_name", "synopsis": "The geoip_region_by_name() function will return the country and region corresponding to a hostname or an IP address.", "usage": "array geoip_region_by_name ( string $hostname )", "url": "https://secure.php.net/manual/en/function.geoip-region-by-name.php"}, {"name": "geoip_region_name_by_code", "synopsis": "The geoip_region_name_by_code() function will return the region name corresponding to a country and region code combo.", "usage": "string geoip_region_name_by_code ( string $country_code , string $region_code )", "url": "https://secure.php.net/manual/en/function.geoip-region-name-by-code.php"}, {"name": "geoip_setup_custom_directory", "synopsis": "The geoip_setup_custom_directory() function will change the default directory of the GeoIP database. This is equivalent to changing geoip.custom_directory.", "usage": "void geoip_setup_custom_directory ( string $path )", "url": "https://secure.php.net/manual/en/function.geoip-setup-custom-directory.php"}, {"name": "geoip_time_zone_by_country_and_region", "synopsis": "The geoip_time_zone_by_country_and_region() function will return the time zone corresponding to a country and region code combo.", "usage": "string geoip_time_zone_by_country_and_region ( string $country_code [, string $region_code ] )", "url": "https://secure.php.net/manual/en/function.geoip-time-zone-by-country-and-region.php"}, {"name": "get_browser", "synopsis": "Attempts to determine the capabilities of the user's browser, by looking up the browser's information in the browscap.ini file.", "usage": "mixed get_browser ([ string $user_agent [, bool $return_array = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.get-browser.php"}, {"name": "get_called_class", "synopsis": "Gets the name of the class the static method is called in.", "usage": "string get_called_class ( void )", "url": "https://secure.php.net/manual/en/function.get-called-class.php"}, {"name": "get_cfg_var", "synopsis": "Gets the value of a PHP configuration option.", "usage": "mixed get_cfg_var ( string $option )", "url": "https://secure.php.net/manual/en/function.get-cfg-var.php"}, {"name": "get_class_methods", "synopsis": "Gets the class methods names.", "usage": "array get_class_methods ( mixed $class_name )", "url": "https://secure.php.net/manual/en/function.get-class-methods.php"}, {"name": "get_class_vars", "synopsis": "Get the default properties of the given class.", "usage": "array get_class_vars ( string $class_name )", "url": "https://secure.php.net/manual/en/function.get-class-vars.php"}, {"name": "get_class", "synopsis": "Gets the name of the class of the given object.", "usage": "string get_class ([ object $object ] )", "url": "https://secure.php.net/manual/en/function.get-class.php"}, {"name": "get_current_user", "synopsis": null, "usage": "string get_current_user ( void )", "url": "https://secure.php.net/manual/en/function.get-current-user.php"}, {"name": "get_declared_classes", "synopsis": "Gets the declared classes.", "usage": "array get_declared_classes ( void )", "url": "https://secure.php.net/manual/en/function.get-declared-classes.php"}, {"name": "get_declared_interfaces", "synopsis": "Gets the declared interfaces.", "usage": "array get_declared_interfaces ( void )", "url": "https://secure.php.net/manual/en/function.get-declared-interfaces.php"}, {"name": "get_declared_traits", "synopsis": "", "usage": "array get_declared_traits ( void )", "url": "https://secure.php.net/manual/en/function.get-declared-traits.php"}, {"name": "get_defined_constants", "synopsis": "Returns the names and values of all the constants currently defined. This includes those created by extensions as well as those created with the define() function.", "usage": "array get_defined_constants ([ bool $categorize = FALSE ] )", "url": "https://secure.php.net/manual/en/function.get-defined-constants.php"}, {"name": "get_defined_functions", "synopsis": "Gets an array of all defined functions.", "usage": "array get_defined_functions ([ bool $exclude_disabled = FALSE ] )", "url": "https://secure.php.net/manual/en/function.get-defined-functions.php"}, {"name": "get_defined_vars", "synopsis": "This function returns a multidimensional array containing a list of all defined variables, be them environment, server or user-defined variables, within the scope that get_defined_vars() is called.", "usage": "array get_defined_vars ( void )", "url": "https://secure.php.net/manual/en/function.get-defined-vars.php"}, {"name": "get_extension_funcs", "synopsis": "This function returns the names of all the functions defined in the module indicated by module_name.", "usage": "array get_extension_funcs ( string $module_name )", "url": "https://secure.php.net/manual/en/function.get-extension-funcs.php"}, {"name": "get_headers", "synopsis": "get_headers() returns an array with the headers sent by the server in response to a HTTP request.", "usage": "array get_headers ( string $url [, int $format = 0 [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.get-headers.php"}, {"name": "get_html_translation_table", "synopsis": "get_html_translation_table() will return the translation table that is used internally for htmlspecialchars() and htmlentities().", "usage": "array get_html_translation_table ([ int $table = HTML_SPECIALCHARS [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = \"UTF-8\" ]]] )", "url": "https://secure.php.net/manual/en/function.get-html-translation-table.php"}, {"name": "get_include_path", "synopsis": null, "usage": "string get_include_path ( void )", "url": "https://secure.php.net/manual/en/function.get-include-path.php"}, {"name": "get_included_files", "synopsis": "Gets the names of all files that have been included using include, include_once, require or require_once.", "usage": "array get_included_files ( void )", "url": "https://secure.php.net/manual/en/function.get-included-files.php"}, {"name": "get_loaded_extensions", "synopsis": "This function returns the names of all the modules compiled and loaded in the PHP interpreter.", "usage": "array get_loaded_extensions ([ bool $zend_extensions = FALSE ] )", "url": "https://secure.php.net/manual/en/function.get-loaded-extensions.php"}, {"name": "get_magic_quotes_gpc", "synopsis": "Returns the current configuration setting of magic_quotes_gpc", "usage": "bool get_magic_quotes_gpc ( void )", "url": "https://secure.php.net/manual/en/function.get-magic-quotes-gpc.php"}, {"name": "get_magic_quotes_runtime", "synopsis": null, "usage": "bool get_magic_quotes_runtime ( void )", "url": "https://secure.php.net/manual/en/function.get-magic-quotes-runtime.php"}, {"name": "get_meta_tags", "synopsis": "Opens filename and parses it line by line for <meta> tags in the file. The parsing stops at </head>.", "usage": "array get_meta_tags ( string $filename [, bool $use_include_path = FALSE ] )", "url": "https://secure.php.net/manual/en/function.get-meta-tags.php"}, {"name": "get_object_vars", "synopsis": "Gets the accessible non-static properties of the given object according to scope.", "usage": "array get_object_vars ( object $object )", "url": "https://secure.php.net/manual/en/function.get-object-vars.php"}, {"name": "get_parent_class", "synopsis": "Retrieves the parent class name for object or class.", "usage": "string get_parent_class ([ mixed $object ] )", "url": "https://secure.php.net/manual/en/function.get-parent-class.php"}, {"name": "get_resource_type", "synopsis": "This function gets the type of the given resource.", "usage": "string get_resource_type ( resource $handle )", "url": "https://secure.php.net/manual/en/function.get-resource-type.php"}, {"name": "get_resources", "synopsis": "Returns an array of all currently active resources, optionally filtered by resource type.", "usage": "array get_resources ([ string $type ] )", "url": "https://secure.php.net/manual/en/function.get-resources.php"}, {"name": "getallheaders", "synopsis": "Fetches all HTTP headers from the current request.", "usage": "array getallheaders ( void )", "url": "https://secure.php.net/manual/en/function.getallheaders.php"}, {"name": "getcwd", "synopsis": "Gets the current working directory.", "usage": "string getcwd ( void )", "url": "https://secure.php.net/manual/en/function.getcwd.php"}, {"name": "getdate", "synopsis": "Returns an associative array containing the date information of the timestamp, or the current local time if no timestamp is given.", "usage": "array getdate ([ int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.getdate.php"}, {"name": "getenv", "synopsis": "Gets the value of an environment variable.", "usage": "string getenv ( string $varname [, bool $local_only = FALSE ] )", "url": "https://secure.php.net/manual/en/function.getenv.php"}, {"name": "gethostbyaddr", "synopsis": "Returns the host name of the Internet host specified by ip_address.", "usage": "string gethostbyaddr ( string $ip_address )", "url": "https://secure.php.net/manual/en/function.gethostbyaddr.php"}, {"name": "gethostbyname", "synopsis": "Returns the IPv4 address of the Internet host specified by hostname.", "usage": "string gethostbyname ( string $hostname )", "url": "https://secure.php.net/manual/en/function.gethostbyname.php"}, {"name": "gethostbynamel", "synopsis": "Returns a list of IPv4 addresses to which the Internet host specified by hostname resolves.", "usage": "array gethostbynamel ( string $hostname )", "url": "https://secure.php.net/manual/en/function.gethostbynamel.php"}, {"name": "gethostname", "synopsis": "gethostname() gets the standard host name for the local machine.", "usage": "string gethostname ( void )", "url": "https://secure.php.net/manual/en/function.gethostname.php"}, {"name": "getimagesize", "synopsis": "The getimagesize() function will determine the size of any supported given image file and return the dimensions along with the file type and a height/width text string to be used inside a normal HTML IMG tag and the correspondent HTTP content type.", "usage": "array getimagesize ( string $filename [, array &$imageinfo ] )", "url": "https://secure.php.net/manual/en/function.getimagesize.php"}, {"name": "getimagesizefromstring", "synopsis": "Identical to getimagesize() except that getimagesizefromstring() accepts a string instead of a file name as the first parameter.", "usage": "array getimagesizefromstring ( string $imagedata [, array &$imageinfo ] )", "url": "https://secure.php.net/manual/en/function.getimagesizefromstring.php"}, {"name": "getlastmod", "synopsis": "Gets the time of the last modification of the main script of execution.", "usage": "int getlastmod ( void )", "url": "https://secure.php.net/manual/en/function.getlastmod.php"}, {"name": "getmxrr", "synopsis": "Searches DNS for MX records corresponding to hostname.", "usage": "bool getmxrr ( string $hostname , array &$mxhosts [, array &$weight ] )", "url": "https://secure.php.net/manual/en/function.getmxrr.php"}, {"name": "getmygid", "synopsis": null, "usage": "int getmygid ( void )", "url": "https://secure.php.net/manual/en/function.getmygid.php"}, {"name": "getmyinode", "synopsis": "Gets the inode of the current script.", "usage": "int getmyinode ( void )", "url": "https://secure.php.net/manual/en/function.getmyinode.php"}, {"name": "getmypid", "synopsis": "Gets the current PHP process ID.", "usage": "int getmypid ( void )", "url": "https://secure.php.net/manual/en/function.getmypid.php"}, {"name": "getmyuid", "synopsis": null, "usage": "int getmyuid ( void )", "url": "https://secure.php.net/manual/en/function.getmyuid.php"}, {"name": "getopt", "synopsis": "Parses options passed to the script.", "usage": "array getopt ( string $options [, array $longopts [, int &$optind ]] )", "url": "https://secure.php.net/manual/en/function.getopt.php"}, {"name": "getprotobyname", "synopsis": "getprotobyname() returns the protocol number associated with the protocol name as per /etc/protocols.", "usage": "int getprotobyname ( string $name )", "url": "https://secure.php.net/manual/en/function.getprotobyname.php"}, {"name": "getprotobynumber", "synopsis": "getprotobynumber() returns the protocol name associated with protocol number as per /etc/protocols.", "usage": "string getprotobynumber ( int $number )", "url": "https://secure.php.net/manual/en/function.getprotobynumber.php"}, {"name": "getrandmax", "synopsis": null, "usage": "int getrandmax ( void )", "url": "https://secure.php.net/manual/en/function.getrandmax.php"}, {"name": "getrusage", "synopsis": "This is an interface to getrusage(2). It gets data returned from the system call.", "usage": "array getrusage ([ int $who = 0 ] )", "url": "https://secure.php.net/manual/en/function.getrusage.php"}, {"name": "getservbyname", "synopsis": "getservbyname() returns the Internet port which corresponds to service for the specified protocol as per /etc/services.", "usage": "int getservbyname ( string $service , string $protocol )", "url": "https://secure.php.net/manual/en/function.getservbyname.php"}, {"name": "getservbyport", "synopsis": "getservbyport() returns the Internet service associated with port for the specified protocol as per /etc/services.", "usage": "string getservbyport ( int $port , string $protocol )", "url": "https://secure.php.net/manual/en/function.getservbyport.php"}, {"name": "gettext", "synopsis": "Looks up a message in the current domain.", "usage": "string gettext ( string $message )", "url": "https://secure.php.net/manual/en/function.gettext.php"}, {"name": "gettimeofday", "synopsis": "This is an interface to gettimeofday(2). It returns an associative array containing the data returned from the system call.", "usage": "mixed gettimeofday ([ bool $return_float = FALSE ] )", "url": "https://secure.php.net/manual/en/function.gettimeofday.php"}, {"name": "gettype", "synopsis": "Returns the type of the PHP variable var. For type checking, use is_* functions.", "usage": "string gettype ( mixed $var )", "url": "https://secure.php.net/manual/en/function.gettype.php"}, {"name": "glob", "synopsis": "The glob() function searches for all the pathnames matching pattern according to the rules used by the libc glob() function, which is similar to the rules used by common shells.", "usage": "array glob ( string $pattern [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.glob.php"}, {"name": "gmdate", "synopsis": "Identical to the date() function except that the time returned is Greenwich Mean Time (GMT).", "usage": "string gmdate ( string $format [, int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.gmdate.php"}, {"name": "gmmktime", "synopsis": "Identical to mktime() except the passed parameters represents a GMT date. gmmktime() internally uses mktime() so only times valid in derived local time can be used.", "usage": "int gmmktime ([ int $hour = gmdate(\"H\") [, int $minute = gmdate(\"i\") [, int $second = gmdate(\"s\") [, int $month = gmdate(\"n\") [, int $day = gmdate(\"j\") [, int $year = gmdate(\"Y\") [, int $is_dst = -1 ]]]]]]] )", "url": "https://secure.php.net/manual/en/function.gmmktime.php"}, {"name": "gmp_abs", "synopsis": "Get the absolute value of a number.", "usage": "GMP gmp_abs ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-abs.php"}, {"name": "gmp_add", "synopsis": "Add two numbers.", "usage": "GMP gmp_add ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-add.php"}, {"name": "gmp_and", "synopsis": "Calculates bitwise AND of two GMP numbers.", "usage": "GMP gmp_and ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-and.php"}, {"name": "gmp_clrbit", "synopsis": "Clears (sets to 0) bit index in a. The index starts at 0.", "usage": "void gmp_clrbit ( GMP $a , int $index )", "url": "https://secure.php.net/manual/en/function.gmp-clrbit.php"}, {"name": "gmp_cmp", "synopsis": "Compares two numbers.", "usage": "int gmp_cmp ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-cmp.php"}, {"name": "gmp_com", "synopsis": "Returns the one's complement of a.", "usage": "GMP gmp_com ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-com.php"}, {"name": "gmp_div_q", "synopsis": "Divides a by b and returns the integer result.", "usage": "GMP gmp_div_q ( GMP $a , GMP $b [, int $round = GMP_ROUND_ZERO ] )", "url": "https://secure.php.net/manual/en/function.gmp-div-q.php"}, {"name": "gmp_div_qr", "synopsis": "The function divides n by d.", "usage": "array gmp_div_qr ( GMP $n , GMP $d [, int $round = GMP_ROUND_ZERO ] )", "url": "https://secure.php.net/manual/en/function.gmp-div-qr.php"}, {"name": "gmp_div_r", "synopsis": "Calculates remainder of the integer division of n by d. The remainder has the sign of the n argument, if not zero.", "usage": "GMP gmp_div_r ( GMP $n , GMP $d [, int $round = GMP_ROUND_ZERO ] )", "url": "https://secure.php.net/manual/en/function.gmp-div-r.php"}, {"name": "gmp_divexact", "synopsis": "Divides n by d, using fast \"exact division\" algorithm. This function produces correct results only when it is known in advance that d divides n.", "usage": "GMP gmp_divexact ( GMP $n , GMP $d )", "url": "https://secure.php.net/manual/en/function.gmp-divexact.php"}, {"name": "gmp_export", "synopsis": "Export a GMP number to a binary string", "usage": "string gmp_export ( GMP $gmpnumber [, int $word_size = 1 [, int $options = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN ]] )", "url": "https://secure.php.net/manual/en/function.gmp-export.php"}, {"name": "gmp_fact", "synopsis": "Calculates factorial (a!) of a.", "usage": "GMP gmp_fact ( mixed $a )", "url": "https://secure.php.net/manual/en/function.gmp-fact.php"}, {"name": "gmp_gcd", "synopsis": "Calculate greatest common divisor of a and b. The result is always positive even if either of, or both, input operands are negative.", "usage": "GMP gmp_gcd ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-gcd.php"}, {"name": "gmp_gcdext", "synopsis": "Calculates g, s, and t, such that a*s + b*t = g = gcd(a,b), where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.", "usage": "array gmp_gcdext ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-gcdext.php"}, {"name": "gmp_hamdist", "synopsis": "Returns the hamming distance between a and b. Both operands should be non-negative.", "usage": "int gmp_hamdist ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-hamdist.php"}, {"name": "gmp_import", "synopsis": "Import a GMP number from a binary string", "usage": "GMP gmp_import ( string $data [, int $word_size = 1 [, int $options = GMP_MSW_FIRST | GMP_NATIVE_ENDIAN ]] )", "url": "https://secure.php.net/manual/en/function.gmp-import.php"}, {"name": "gmp_init", "synopsis": "Creates a GMP number from an integer or string.", "usage": "GMP gmp_init ( mixed $number [, int $base = 0 ] )", "url": "https://secure.php.net/manual/en/function.gmp-init.php"}, {"name": "gmp_intval", "synopsis": "This function converts GMP number into native PHP integers.", "usage": "int gmp_intval ( GMP $gmpnumber )", "url": "https://secure.php.net/manual/en/function.gmp-intval.php"}, {"name": "gmp_invert", "synopsis": "Computes the inverse of a modulo b.", "usage": "GMP gmp_invert ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-invert.php"}, {"name": "gmp_jacobi", "synopsis": "Computes \u00bb\u00a0Jacobi symbol of a and p. p should be odd and must be positive.", "usage": "int gmp_jacobi ( GMP $a , GMP $p )", "url": "https://secure.php.net/manual/en/function.gmp-jacobi.php"}, {"name": "gmp_legendre", "synopsis": "Compute the \u00bb\u00a0 Legendre symbol of a and p. p should be odd and must be positive.", "usage": "int gmp_legendre ( GMP $a , GMP $p )", "url": "https://secure.php.net/manual/en/function.gmp-legendre.php"}, {"name": "gmp_mod", "synopsis": "Calculates n modulo d. The result is always non-negative, the sign of d is ignored.", "usage": "GMP gmp_mod ( GMP $n , GMP $d )", "url": "https://secure.php.net/manual/en/function.gmp-mod.php"}, {"name": "gmp_mul", "synopsis": "Multiplies a by b and returns the result.", "usage": "GMP gmp_mul ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-mul.php"}, {"name": "gmp_neg", "synopsis": "Returns the negative value of a number.", "usage": "GMP gmp_neg ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-neg.php"}, {"name": "gmp_nextprime", "synopsis": "Find next prime number", "usage": "GMP gmp_nextprime ( int $a )", "url": "https://secure.php.net/manual/en/function.gmp-nextprime.php"}, {"name": "gmp_or", "synopsis": "Calculates bitwise inclusive OR of two GMP numbers.", "usage": "GMP gmp_or ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-or.php"}, {"name": "gmp_perfect_square", "synopsis": "Check if a number is a perfect square.", "usage": "bool gmp_perfect_square ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-perfect-square.php"}, {"name": "gmp_popcount", "synopsis": "Get the population count.", "usage": "int gmp_popcount ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-popcount.php"}, {"name": "gmp_pow", "synopsis": "Raise base into power exp.", "usage": "GMP gmp_pow ( GMP $base , int $exp )", "url": "https://secure.php.net/manual/en/function.gmp-pow.php"}, {"name": "gmp_powm", "synopsis": "Calculate (base raised into power exp) modulo mod. If exp is negative, result is undefined.", "usage": "GMP gmp_powm ( GMP $base , GMP $exp , GMP $mod )", "url": "https://secure.php.net/manual/en/function.gmp-powm.php"}, {"name": "gmp_prob_prime", "synopsis": "The function uses Miller-Rabin's probabilistic test to check if a number is a prime.", "usage": "int gmp_prob_prime ( GMP $a [, int $reps = 10 ] )", "url": "https://secure.php.net/manual/en/function.gmp-prob-prime.php"}, {"name": "gmp_random_bits", "synopsis": "Generate a random number. The number will be between 0 and (2 ** bits) - 1.", "usage": "GMP gmp_random_bits ( int $bits )", "url": "https://secure.php.net/manual/en/function.gmp-random-bits.php"}, {"name": "gmp_random_range", "synopsis": "Generate a random number. The number will be between min and max.", "usage": "GMP gmp_random_range ( GMP $min , GMP $max )", "url": "https://secure.php.net/manual/en/function.gmp-random-range.php"}, {"name": "gmp_random_seed", "synopsis": null, "usage": "void gmp_random_seed ( mixed $seed )", "url": "https://secure.php.net/manual/en/function.gmp-random-seed.php"}, {"name": "gmp_random", "synopsis": "Generate a random number. The number will be between zero and the number of bits per limb multiplied by limiter. If limiter is negative, negative numbers are generated.", "usage": "GMP gmp_random ([ int $limiter = 20 ] )", "url": "https://secure.php.net/manual/en/function.gmp-random.php"}, {"name": "gmp_root", "synopsis": "Takes the nth root of a and returns the integer component of the result.", "usage": "GMP gmp_root ( GMP $a , int $nth )", "url": "https://secure.php.net/manual/en/function.gmp-root.php"}, {"name": "gmp_rootrem", "synopsis": "Takes the nth root of a and returns the integer component and remainder of the result.", "usage": "array gmp_rootrem ( GMP $a , int $nth )", "url": "https://secure.php.net/manual/en/function.gmp-rootrem.php"}, {"name": "gmp_scan0", "synopsis": "Scans a, starting with bit start, towards more significant bits, until the first clear bit is found.", "usage": "int gmp_scan0 ( GMP $a , int $start )", "url": "https://secure.php.net/manual/en/function.gmp-scan0.php"}, {"name": "gmp_scan1", "synopsis": "Scans a, starting with bit start, towards more significant bits, until the first set bit is found.", "usage": "int gmp_scan1 ( GMP $a , int $start )", "url": "https://secure.php.net/manual/en/function.gmp-scan1.php"}, {"name": "gmp_setbit", "synopsis": "Sets bit index in a.", "usage": "void gmp_setbit ( GMP $a , int $index [, bool $bit_on = TRUE ] )", "url": "https://secure.php.net/manual/en/function.gmp-setbit.php"}, {"name": "gmp_sign", "synopsis": "Checks the sign of a number.", "usage": "int gmp_sign ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-sign.php"}, {"name": "gmp_sqrt", "synopsis": "Calculates square root of a.", "usage": "GMP gmp_sqrt ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-sqrt.php"}, {"name": "gmp_sqrtrem", "synopsis": "Calculate the square root of a number, with remainder.", "usage": "array gmp_sqrtrem ( GMP $a )", "url": "https://secure.php.net/manual/en/function.gmp-sqrtrem.php"}, {"name": "gmp_strval", "synopsis": "Convert GMP number to string representation in base base. The default base is 10.", "usage": "string gmp_strval ( GMP $gmpnumber [, int $base = 10 ] )", "url": "https://secure.php.net/manual/en/function.gmp-strval.php"}, {"name": "gmp_sub", "synopsis": "Subtracts b from a and returns the result.", "usage": "GMP gmp_sub ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-sub.php"}, {"name": "gmp_testbit", "synopsis": "Tests if the specified bit is set.", "usage": "bool gmp_testbit ( GMP $a , int $index )", "url": "https://secure.php.net/manual/en/function.gmp-testbit.php"}, {"name": "gmp_xor", "synopsis": "Calculates bitwise exclusive OR (XOR) of two GMP numbers.", "usage": "GMP gmp_xor ( GMP $a , GMP $b )", "url": "https://secure.php.net/manual/en/function.gmp-xor.php"}, {"name": "gmstrftime", "synopsis": "Behaves the same as strftime() except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints \"Dec 31 1998 20:00:00\", while the second prints \"Jan 01 1999 01:00:00\".", "usage": "string gmstrftime ( string $format [, int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.gmstrftime.php"}, {"name": "gnupg_adddecryptkey", "synopsis": null, "usage": "bool gnupg_adddecryptkey ( resource $identifier , string $fingerprint , string $passphrase )", "url": "https://secure.php.net/manual/en/function.gnupg-adddecryptkey.php"}, {"name": "gnupg_addencryptkey", "synopsis": null, "usage": "bool gnupg_addencryptkey ( resource $identifier , string $fingerprint )", "url": "https://secure.php.net/manual/en/function.gnupg-addencryptkey.php"}, {"name": "gnupg_addsignkey", "synopsis": null, "usage": "bool gnupg_addsignkey ( resource $identifier , string $fingerprint [, string $passphrase ] )", "url": "https://secure.php.net/manual/en/function.gnupg-addsignkey.php"}, {"name": "gnupg_cleardecryptkeys", "synopsis": null, "usage": "bool gnupg_cleardecryptkeys ( resource $identifier )", "url": "https://secure.php.net/manual/en/function.gnupg-cleardecryptkeys.php"}, {"name": "gnupg_clearencryptkeys", "synopsis": null, "usage": "bool gnupg_clearencryptkeys ( resource $identifier )", "url": "https://secure.php.net/manual/en/function.gnupg-clearencryptkeys.php"}, {"name": "gnupg_clearsignkeys", "synopsis": null, "usage": "bool gnupg_clearsignkeys ( resource $identifier )", "url": "https://secure.php.net/manual/en/function.gnupg-clearsignkeys.php"}, {"name": "gnupg_decrypt", "synopsis": "Decrypts the given text with the keys, which were set with gnupg_adddecryptkey before.", "usage": "string gnupg_decrypt ( resource $identifier , string $text )", "url": "https://secure.php.net/manual/en/function.gnupg-decrypt.php"}, {"name": "gnupg_decryptverify", "synopsis": "Decrypts and verifies a given text and returns information about the signature.", "usage": "array gnupg_decryptverify ( resource $identifier , string $text , string &$plaintext )", "url": "https://secure.php.net/manual/en/function.gnupg-decryptverify.php"}, {"name": "gnupg_encrypt", "synopsis": "Encrypts the given plaintext with the keys, which were set with gnupg_addencryptkey before and returns the encrypted text.", "usage": "string gnupg_encrypt ( resource $identifier , string $plaintext )", "url": "https://secure.php.net/manual/en/function.gnupg-encrypt.php"}, {"name": "gnupg_encryptsign", "synopsis": "Encrypts and signs the given plaintext with the keys, which were set with gnupg_addsignkey and gnupg_addencryptkey before and returns the encrypted and signed text.", "usage": "string gnupg_encryptsign ( resource $identifier , string $plaintext )", "url": "https://secure.php.net/manual/en/function.gnupg-encryptsign.php"}, {"name": "gnupg_export", "synopsis": "Exports the key fingerprint.", "usage": "string gnupg_export ( resource $identifier , string $fingerprint )", "url": "https://secure.php.net/manual/en/function.gnupg-export.php"}, {"name": "gnupg_geterror", "synopsis": null, "usage": "string gnupg_geterror ( resource $identifier )", "url": "https://secure.php.net/manual/en/function.gnupg-geterror.php"}, {"name": "gnupg_getprotocol", "synopsis": null, "usage": "int gnupg_getprotocol ( resource $identifier )", "url": "https://secure.php.net/manual/en/function.gnupg-getprotocol.php"}, {"name": "gnupg_import", "synopsis": "Imports the key keydata and returns an array with information about the importprocess.", "usage": "array gnupg_import ( resource $identifier , string $keydata )", "url": "https://secure.php.net/manual/en/function.gnupg-import.php"}, {"name": "gnupg_init", "synopsis": null, "usage": "resource gnupg_init ( void )", "url": "https://secure.php.net/manual/en/function.gnupg-init.php"}, {"name": "gnupg_keyinfo", "synopsis": null, "usage": "array gnupg_keyinfo ( resource $identifier , string $pattern )", "url": "https://secure.php.net/manual/en/function.gnupg-keyinfo.php"}, {"name": "gnupg_setarmor", "synopsis": "Toggle the armored output.", "usage": "bool gnupg_setarmor ( resource $identifier , int $armor )", "url": "https://secure.php.net/manual/en/function.gnupg-setarmor.php"}, {"name": "gnupg_seterrormode", "synopsis": "Sets the mode for error_reporting.", "usage": "void gnupg_seterrormode ( resource $identifier , int $errormode )", "url": "https://secure.php.net/manual/en/function.gnupg-seterrormode.php"}, {"name": "gnupg_setsignmode", "synopsis": "Sets the mode for signing.", "usage": "bool gnupg_setsignmode ( resource $identifier , int $signmode )", "url": "https://secure.php.net/manual/en/function.gnupg-setsignmode.php"}, {"name": "gnupg_sign", "synopsis": "Signs the given plaintext with the keys, which were set with gnupg_addsignkey before and returns the signed text or the signature, depending on what was set with gnupg_setsignmode.", "usage": "string gnupg_sign ( resource $identifier , string $plaintext )", "url": "https://secure.php.net/manual/en/function.gnupg-sign.php"}, {"name": "gnupg_verify", "synopsis": "Verifies the given signed_text and returns information about the signature.", "usage": "array gnupg_verify ( resource $identifier , string $signed_text , string $signature [, string &$plaintext ] )", "url": "https://secure.php.net/manual/en/function.gnupg-verify.php"}, {"name": "gopher_parsedir", "synopsis": "gopher_parsedir() parses a gopher formatted directory entry into an associative array.", "usage": "array gopher_parsedir ( string $dirent )", "url": "https://secure.php.net/manual/en/function.gopher-parsedir.php"}, {"name": "grapheme_extract", "synopsis": "Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.", "usage": "string grapheme_extract ( string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]] )", "url": "https://secure.php.net/manual/en/function.grapheme-extract.php"}, {"name": "grapheme_stripos", "synopsis": "Find position (in grapheme units) of first occurrence of a case-insensitive string", "usage": "int grapheme_stripos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.grapheme-stripos.php"}, {"name": "grapheme_stristr", "synopsis": "Returns part of haystack string starting from and including the first occurrence of case-insensitive needle to the end of haystack.", "usage": "string grapheme_stristr ( string $haystack , string $needle [, bool $before_needle = FALSE ] )", "url": "https://secure.php.net/manual/en/function.grapheme-stristr.php"}, {"name": "grapheme_strlen", "synopsis": "Get string length in grapheme units (not bytes or characters)", "usage": "int grapheme_strlen ( string $input )", "url": "https://secure.php.net/manual/en/function.grapheme-strlen.php"}, {"name": "grapheme_strpos", "synopsis": "Find position (in grapheme units) of first occurrence of a string", "usage": "int grapheme_strpos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.grapheme-strpos.php"}, {"name": "grapheme_strripos", "synopsis": "Find position (in grapheme units) of last occurrence of a case-insensitive string", "usage": "int grapheme_strripos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.grapheme-strripos.php"}, {"name": "grapheme_strrpos", "synopsis": "Find position (in grapheme units) of last occurrence of a string", "usage": "int grapheme_strrpos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.grapheme-strrpos.php"}, {"name": "grapheme_strstr", "synopsis": "Returns part of haystack string from the first occurrence of needle to the end of haystack (including the needle).", "usage": "string grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = FALSE ] )", "url": "https://secure.php.net/manual/en/function.grapheme-strstr.php"}, {"name": "grapheme_substr", "synopsis": "Return part of a string", "usage": "string grapheme_substr ( string $string , int $start [, int $length ] )", "url": "https://secure.php.net/manual/en/function.grapheme-substr.php"}, {"name": "gregoriantojd", "synopsis": "The valid range for the Gregorian calendar is from November 25, 4714 B.C. to at least December 31, 9999 A.D.", "usage": "int gregoriantojd ( int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.gregoriantojd.php"}, {"name": "gupnp_context_get_host_ip", "synopsis": "Get the IP address we advertise ourselves as using.", "usage": "string gupnp_context_get_host_ip ( resource $context )", "url": "https://secure.php.net/manual/en/function.gupnp-context-get-host-ip.php"}, {"name": "gupnp_context_get_port", "synopsis": "Get the port that the SOAP server is running on.", "usage": "int gupnp_context_get_port ( resource $context )", "url": "https://secure.php.net/manual/en/function.gupnp-context-get-port.php"}, {"name": "gupnp_context_get_subscription_timeout", "synopsis": "Get the event subscription timeout (in seconds), or 0 meaning there is no timeout.", "usage": "int gupnp_context_get_subscription_timeout ( resource $context )", "url": "https://secure.php.net/manual/en/function.gupnp-context-get-subscription-timeout.php"}, {"name": "gupnp_context_host_path", "synopsis": "Start hosting local_path at server_path. Files with the path local_path.LOCALE (if they exist) will be served up when LOCALE is specified in the request's Accept-Language header.", "usage": "bool gupnp_context_host_path ( resource $context , string $local_path , string $server_path )", "url": "https://secure.php.net/manual/en/function.gupnp-context-host-path.php"}, {"name": "gupnp_context_new", "synopsis": "Create a new context with the specified host_ip and port.", "usage": "resource gupnp_context_new ([ string $host_ip [, int $port = 0 ]] )", "url": "https://secure.php.net/manual/en/function.gupnp-context-new.php"}, {"name": "gupnp_context_set_subscription_timeout", "synopsis": "Sets the event subscription timeout (in seconds) to time out. Note that any client side subscriptions will automatically be renewed.", "usage": "void gupnp_context_set_subscription_timeout ( resource $context , int $timeout )", "url": "https://secure.php.net/manual/en/function.gupnp-context-set-subscription-timeout.php"}, {"name": "gupnp_context_timeout_add", "synopsis": "Sets a function to be called at regular intervals.", "usage": "bool gupnp_context_timeout_add ( resource $context , int $timeout , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.gupnp-context-timeout-add.php"}, {"name": "gupnp_context_unhost_path", "synopsis": "Stop hosting the file or folder at server_path.", "usage": "bool gupnp_context_unhost_path ( resource $context , string $server_path )", "url": "https://secure.php.net/manual/en/function.gupnp-context-unhost-path.php"}, {"name": "gupnp_control_point_browse_start", "synopsis": "Start the search and calls user-defined callback.", "usage": "bool gupnp_control_point_browse_start ( resource $cpoint )", "url": "https://secure.php.net/manual/en/function.gupnp-control-point-browse-start.php"}, {"name": "gupnp_control_point_browse_stop", "synopsis": "Stop the search and calls user-defined callback.", "usage": "bool gupnp_control_point_browse_stop ( resource $cpoint )", "url": "https://secure.php.net/manual/en/function.gupnp-control-point-browse-stop.php"}, {"name": "gupnp_control_point_callback_set", "synopsis": "Set control point callback function for signal.", "usage": "bool gupnp_control_point_callback_set ( resource $cpoint , int $signal , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.gupnp-control-point-callback-set.php"}, {"name": "gupnp_control_point_new", "synopsis": "Create a new control point with the specified target.", "usage": "resource gupnp_control_point_new ( resource $context , string $target )", "url": "https://secure.php.net/manual/en/function.gupnp-control-point-new.php"}, {"name": "gupnp_device_action_callback_set", "synopsis": "Set device callback function for signal and action.", "usage": "bool gupnp_device_action_callback_set ( resource $root_device , int $signal , string $action_name , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.gupnp-device-action-callback-set.php"}, {"name": "gupnp_device_info_get_service", "synopsis": "Get the service with type or false if no such device was found.", "usage": "resource gupnp_device_info_get_service ( resource $root_device , string $type )", "url": "https://secure.php.net/manual/en/function.gupnp-device-info-get-service.php"}, {"name": "gupnp_device_info_get", "synopsis": "Get info of root device.", "usage": "array gupnp_device_info_get ( resource $root_device )", "url": "https://secure.php.net/manual/en/function.gupnp-device-info-get.php"}, {"name": "gupnp_root_device_get_available", "synopsis": "Get whether or not root_device is available (announcing its presence).", "usage": "bool gupnp_root_device_get_available ( resource $root_device )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-get-available.php"}, {"name": "gupnp_root_device_get_relative_location", "synopsis": "Get the relative location of root device.", "usage": "string gupnp_root_device_get_relative_location ( resource $root_device )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-get-relative-location.php"}, {"name": "gupnp_root_device_new", "synopsis": "Create a new root device, automatically downloading and parsing location.", "usage": "resource gupnp_root_device_new ( resource $context , string $location , string $description_dir )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-new.php"}, {"name": "gupnp_root_device_set_available", "synopsis": "Controls whether or not root_device is available (announcing its presence).", "usage": "bool gupnp_root_device_set_available ( resource $root_device , bool $available )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-set-available.php"}, {"name": "gupnp_root_device_start", "synopsis": "Start root server's main loop.", "usage": "bool gupnp_root_device_start ( resource $root_device )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-start.php"}, {"name": "gupnp_root_device_stop", "synopsis": "Stop root server's main loop.", "usage": "bool gupnp_root_device_stop ( resource $root_device )", "url": "https://secure.php.net/manual/en/function.gupnp-root-device-stop.php"}, {"name": "gupnp_service_action_get", "synopsis": "Retrieves the specified action arguments.", "usage": "mixed gupnp_service_action_get ( resource $action , string $name , int $type )", "url": "https://secure.php.net/manual/en/function.gupnp-service-action-get.php"}, {"name": "gupnp_service_action_return_error", "synopsis": "Return error code.", "usage": "bool gupnp_service_action_return_error ( resource $action , int $error_code [, string $error_description ] )", "url": "https://secure.php.net/manual/en/function.gupnp-service-action-return-error.php"}, {"name": "gupnp_service_action_return", "synopsis": "Return successfully.", "usage": "bool gupnp_service_action_return ( resource $action )", "url": "https://secure.php.net/manual/en/function.gupnp-service-action-return.php"}, {"name": "gupnp_service_action_set", "synopsis": "Sets the specified action return values.", "usage": "bool gupnp_service_action_set ( resource $action , string $name , int $type , mixed $value )", "url": "https://secure.php.net/manual/en/function.gupnp-service-action-set.php"}, {"name": "gupnp_service_freeze_notify", "synopsis": "Causes new notifications to be queued up until gupnp_service_thaw_notify() is called.", "usage": "bool gupnp_service_freeze_notify ( resource $service )", "url": "https://secure.php.net/manual/en/function.gupnp-service-freeze-notify.php"}, {"name": "gupnp_service_info_get_introspection", "synopsis": "Get resource introspection of service or register callback if corresponding parameter was passed.", "usage": "mixed gupnp_service_info_get_introspection ( resource $proxy [, mixed $callback [, mixed $arg ]] )", "url": "https://secure.php.net/manual/en/function.gupnp-service-info-get-introspection.php"}, {"name": "gupnp_service_info_get", "synopsis": "Get full info of service.", "usage": "array gupnp_service_info_get ( resource $proxy )", "url": "https://secure.php.net/manual/en/function.gupnp-service-info-get.php"}, {"name": "gupnp_service_introspection_get_state_variable", "synopsis": "Returns the state variable data by the name variable_name in this service.", "usage": "array gupnp_service_introspection_get_state_variable ( resource $introspection , string $variable_name )", "url": "https://secure.php.net/manual/en/function.gupnp-service-introspection-get-state-variable.php"}, {"name": "gupnp_service_notify", "synopsis": "Notifies listening clients that the property have changed to the specified values.", "usage": "bool gupnp_service_notify ( resource $service , string $name , int $type , mixed $value )", "url": "https://secure.php.net/manual/en/function.gupnp-service-notify.php"}, {"name": "gupnp_service_proxy_action_get", "synopsis": "Send action with parameters to the service exposed by proxy synchronously and get value.", "usage": "mixed gupnp_service_proxy_action_get ( resource $proxy , string $action , string $name , int $type )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-action-get.php"}, {"name": "gupnp_service_proxy_action_set", "synopsis": "Send action with parameters to the service exposed by proxy synchronously and set value.", "usage": "bool gupnp_service_proxy_action_set ( resource $proxy , string $action , string $name , mixed $value , int $type )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-action-set.php"}, {"name": "gupnp_service_proxy_add_notify", "synopsis": "Sets up callback to be called whenever a change notification for variable is recieved.", "usage": "bool gupnp_service_proxy_add_notify ( resource $proxy , string $value , int $type , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-add-notify.php"}, {"name": "gupnp_service_proxy_callback_set", "synopsis": "Set service proxy callback for signal.", "usage": "bool gupnp_service_proxy_callback_set ( resource $proxy , int $signal , mixed $callback [, mixed $arg ] )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-callback-set.php"}, {"name": "gupnp_service_proxy_get_subscribed", "synopsis": "Check whether subscription is valid to the service.", "usage": "bool gupnp_service_proxy_get_subscribed ( resource $proxy )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-get-subscribed.php"}, {"name": "gupnp_service_proxy_remove_notify", "synopsis": "Cancels the variable change notification.", "usage": "bool gupnp_service_proxy_remove_notify ( resource $proxy , string $value )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-remove-notify.php"}, {"name": "gupnp_service_proxy_set_subscribed", "synopsis": "(Un)subscribes to the service.", "usage": "bool gupnp_service_proxy_set_subscribed ( resource $proxy , bool $subscribed )", "url": "https://secure.php.net/manual/en/function.gupnp-service-proxy-set-subscribed.php"}, {"name": "gupnp_service_thaw_notify", "synopsis": "Sends out any pending notifications and stops queuing of new ones.", "usage": "bool gupnp_service_thaw_notify ( resource $service )", "url": "https://secure.php.net/manual/en/function.gupnp-service-thaw-notify.php"}, {"name": "gzclose", "synopsis": "Closes the given gz-file pointer.", "usage": "bool gzclose ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gzclose.php"}, {"name": "gzcompress", "synopsis": "This function compresses the given string using the ZLIB data format.", "usage": "string gzcompress ( string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_DEFLATE ]] )", "url": "https://secure.php.net/manual/en/function.gzcompress.php"}, {"name": "gzdecode", "synopsis": "This function returns a decoded version of the input data.", "usage": "string gzdecode ( string $data [, int $length ] )", "url": "https://secure.php.net/manual/en/function.gzdecode.php"}, {"name": "gzdeflate", "synopsis": "This function compresses the given string using the DEFLATE data format.", "usage": "string gzdeflate ( string $data [, int $level = -1 [, int $encoding = ZLIB_ENCODING_RAW ]] )", "url": "https://secure.php.net/manual/en/function.gzdeflate.php"}, {"name": "gzencode", "synopsis": "This function returns a compressed version of the input data compatible with the output of the gzip program.", "usage": "string gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] )", "url": "https://secure.php.net/manual/en/function.gzencode.php"}, {"name": "gzeof", "synopsis": "Tests the given GZ file pointer for EOF.", "usage": "int gzeof ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gzeof.php"}, {"name": "gzfile", "synopsis": "This function is identical to readgzfile(), except that it returns the file in an array.", "usage": "array gzfile ( string $filename [, int $use_include_path = 0 ] )", "url": "https://secure.php.net/manual/en/function.gzfile.php"}, {"name": "gzgetc", "synopsis": "Returns a string containing a single (uncompressed) character read from the given gz-file pointer.", "usage": "string gzgetc ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gzgetc.php"}, {"name": "gzgets", "synopsis": "Gets a (uncompressed) string of up to length - 1 bytes read from the given file pointer. Reading ends when length - 1 bytes have been read, on a newline, or on EOF (whichever comes first).", "usage": "string gzgets ( resource $zp [, int $length ] )", "url": "https://secure.php.net/manual/en/function.gzgets.php"}, {"name": "gzgetss", "synopsis": "Identical to gzgets(), except that gzgetss() attempts to strip any HTML and PHP tags from the text it reads.", "usage": "string gzgetss ( resource $zp , int $length [, string $allowable_tags ] )", "url": "https://secure.php.net/manual/en/function.gzgetss.php"}, {"name": "gzinflate", "synopsis": "This function inflates a deflated string.", "usage": "string gzinflate ( string $data [, int $length = 0 ] )", "url": "https://secure.php.net/manual/en/function.gzinflate.php"}, {"name": "gzopen", "synopsis": "Opens a gzip (.gz) file for reading or writing.", "usage": "resource gzopen ( string $filename , string $mode [, int $use_include_path = 0 ] )", "url": "https://secure.php.net/manual/en/function.gzopen.php"}, {"name": "gzpassthru", "synopsis": "Reads to EOF on the given gz-file pointer from the current position and writes the (uncompressed) results to standard output.", "usage": "int gzpassthru ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gzpassthru.php"}, {"name": "gzread", "synopsis": "gzread() reads up to length bytes from the given gz-file pointer. Reading stops when length (uncompressed) bytes have been read or EOF is reached, whichever comes first.", "usage": "string gzread ( resource $zp , int $length )", "url": "https://secure.php.net/manual/en/function.gzread.php"}, {"name": "gzrewind", "synopsis": "Sets the file position indicator of the given gz-file pointer to the beginning of the file stream.", "usage": "bool gzrewind ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gzrewind.php"}, {"name": "gzseek", "synopsis": "Sets the file position indicator for the given file pointer to the given offset byte into the file stream. Equivalent to calling (in C) gzseek(zp, offset, SEEK_SET).", "usage": "int gzseek ( resource $zp , int $offset [, int $whence = SEEK_SET ] )", "url": "https://secure.php.net/manual/en/function.gzseek.php"}, {"name": "gztell", "synopsis": "Gets the position of the given file pointer; i.e., its offset into the uncompressed file stream.", "usage": "int gztell ( resource $zp )", "url": "https://secure.php.net/manual/en/function.gztell.php"}, {"name": "gzuncompress", "synopsis": "This function uncompress a compressed string.", "usage": "string gzuncompress ( string $data [, int $length = 0 ] )", "url": "https://secure.php.net/manual/en/function.gzuncompress.php"}, {"name": "gzwrite", "synopsis": "gzwrite() writes the contents of string to the given gz-file.", "usage": "int gzwrite ( resource $zp , string $string [, int $length ] )", "url": "https://secure.php.net/manual/en/function.gzwrite.php"}, {"name": "__halt_compiler", "synopsis": "Halts the execution of the compiler. This can be useful to embed data in PHP scripts, like the installation files.", "usage": "void __halt_compiler ( void )", "url": "https://secure.php.net/manual/en/function.halt-compiler.php"}, {"name": "hash_algos", "synopsis": null, "usage": "array hash_algos ( void )", "url": "https://secure.php.net/manual/en/function.hash-algos.php"}, {"name": "hash_copy", "synopsis": null, "usage": "HashContext hash_copy ( HashContext $context )", "url": "https://secure.php.net/manual/en/function.hash-copy.php"}, {"name": "hash_equals", "synopsis": "Compares two strings using the same time whether they're equal or not.", "usage": "bool hash_equals ( string $known_string , string $user_string )", "url": "https://secure.php.net/manual/en/function.hash-equals.php"}, {"name": "hash_file", "synopsis": null, "usage": "string hash_file ( string $algo , string $filename [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.hash-file.php"}, {"name": "hash_final", "synopsis": null, "usage": "string hash_final ( HashContext $context [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.hash-final.php"}, {"name": "hash_hkdf", "synopsis": null, "usage": "string hash_hkdf ( string $algo , string $ikm [, int $length = 0 [, string $info = '' [, string $salt = '' ]]] )", "url": "https://secure.php.net/manual/en/function.hash-hkdf.php"}, {"name": "hash_hmac_algos", "synopsis": null, "usage": "array hash_hmac_algos ( void )", "url": "https://secure.php.net/manual/en/function.hash-hmac-algos.php"}, {"name": "hash_hmac_file", "synopsis": null, "usage": "string hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.hash-hmac-file.php"}, {"name": "hash_hmac", "synopsis": null, "usage": "string hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.hash-hmac.php"}, {"name": "hash_init", "synopsis": null, "usage": "HashContext hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] )", "url": "https://secure.php.net/manual/en/function.hash-init.php"}, {"name": "hash_pbkdf2", "synopsis": null, "usage": "string hash_pbkdf2 ( string $algo , string $password , string $salt , int $iterations [, int $length = 0 [, bool $raw_output = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.hash-pbkdf2.php"}, {"name": "hash_update_file", "synopsis": null, "usage": "bool hash_update_file ( HashContext $hcontext , string $filename [, resource $scontext = NULL ] )", "url": "https://secure.php.net/manual/en/function.hash-update-file.php"}, {"name": "hash_update_stream", "synopsis": null, "usage": "int hash_update_stream ( HashContext $context , resource $handle [, int $length = -1 ] )", "url": "https://secure.php.net/manual/en/function.hash-update-stream.php"}, {"name": "hash_update", "synopsis": null, "usage": "bool hash_update ( HashContext $context , string $data )", "url": "https://secure.php.net/manual/en/function.hash-update.php"}, {"name": "hash", "synopsis": null, "usage": "string hash ( string $algo , string $data [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.hash.php"}, {"name": "header_register_callback", "synopsis": "Registers a function that will be called when PHP starts sending output.", "usage": "bool header_register_callback ( callable $callback )", "url": "https://secure.php.net/manual/en/function.header-register-callback.php"}, {"name": "header_remove", "synopsis": "Removes an HTTP header previously set using header().", "usage": "void header_remove ([ string $name ] )", "url": "https://secure.php.net/manual/en/function.header-remove.php"}, {"name": "header", "synopsis": "header() is used to send a raw HTTP header. See the \u00bb\u00a0HTTP/1.1 specification for more information on HTTP headers.", "usage": "void header ( string $header [, bool $replace = TRUE [, int $http_response_code ]] )", "url": "https://secure.php.net/manual/en/function.header.php"}, {"name": "headers_list", "synopsis": "headers_list() will return a list of headers to be sent to the browser / client. To determine whether or not these headers have been sent yet, use headers_sent().", "usage": "array headers_list ( void )", "url": "https://secure.php.net/manual/en/function.headers-list.php"}, {"name": "headers_sent", "synopsis": "Checks if or where headers have been sent.", "usage": "bool headers_sent ([ string &$file [, int &$line ]] )", "url": "https://secure.php.net/manual/en/function.headers-sent.php"}, {"name": "hebrev", "synopsis": "Converts logical Hebrew text to visual text.", "usage": "string hebrev ( string $hebrew_text [, int $max_chars_per_line = 0 ] )", "url": "https://secure.php.net/manual/en/function.hebrev.php"}, {"name": "hebrevc", "synopsis": "This function is similar to hebrev() with the difference that it converts newlines (\\n) to \"<br>\\n\".", "usage": "string hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] )", "url": "https://secure.php.net/manual/en/function.hebrevc.php"}, {"name": "hex2bin", "synopsis": "Decodes a hexadecimally encoded binary string.", "usage": "string hex2bin ( string $data )", "url": "https://secure.php.net/manual/en/function.hex2bin.php"}, {"name": "hexdec", "synopsis": "Returns the decimal equivalent of the hexadecimal number represented by the hex_string argument. hexdec() converts a hexadecimal string to a decimal number.", "usage": "number hexdec ( string $hex_string )", "url": "https://secure.php.net/manual/en/function.hexdec.php"}, {"name": "highlight_file", "synopsis": "Prints out or returns a syntax highlighted version of the code contained in filename using the colors defined in the built-in syntax highlighter for PHP.", "usage": "mixed highlight_file ( string $filename [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/function.highlight-file.php"}, {"name": "highlight_string", "synopsis": null, "usage": "mixed highlight_string ( string $str [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/function.highlight-string.php"}, {"name": "html_entity_decode", "synopsis": "html_entity_decode() is the opposite of htmlentities() in that it converts all HTML entities in the string to their applicable characters.", "usage": "string html_entity_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(\"default_charset\") ]] )", "url": "https://secure.php.net/manual/en/function.html-entity-decode.php"}, {"name": "htmlentities", "synopsis": "This function is identical to htmlspecialchars() in all ways, except with htmlentities(), all characters which have HTML character entity equivalents are translated into these entities.", "usage": "string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(\"default_charset\") [, bool $double_encode = TRUE ]]] )", "url": "https://secure.php.net/manual/en/function.htmlentities.php"}, {"name": "htmlspecialchars_decode", "synopsis": "This function is the opposite of htmlspecialchars(). It converts special HTML entities back to characters.", "usage": "string htmlspecialchars_decode ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 ] )", "url": "https://secure.php.net/manual/en/function.htmlspecialchars-decode.php"}, {"name": "htmlspecialchars", "synopsis": "Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings. This function returns a string with these conversions made. If you require all input substrings that have associated named entities to be translated, use htmlentities() instead.", "usage": "string htmlspecialchars ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $encoding = ini_get(\"default_charset\") [, bool $double_encode = TRUE ]]] )", "url": "https://secure.php.net/manual/en/function.htmlspecialchars.php"}, {"name": "http_build_query", "synopsis": "Generates a URL-encoded query string from the associative (or indexed) array provided.", "usage": "string http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] )", "url": "https://secure.php.net/manual/en/function.http-build-query.php"}, {"name": "http_response_code", "synopsis": "Gets or sets the HTTP response status code.", "usage": "mixed http_response_code ([ int $response_code ] )", "url": "https://secure.php.net/manual/en/function.http-response-code.php"}, {"name": "hwapi_attribute_new", "synopsis": "Creates a new instance of hw_api_attribute with the given name and value.", "usage": "HW_API_Attribute hwapi_attribute_new ([ string $name [, string $value ]] )", "url": "https://secure.php.net/manual/en/function.hwapi-attribute-new.php"}, {"name": "hwapi_content_new", "synopsis": "Creates a new content object from the string content.", "usage": "HW_API_Content hwapi_content_new ( string $content , string $mimetype )", "url": "https://secure.php.net/manual/en/function.hwapi-content-new.php"}, {"name": "hwapi_hgcsp", "synopsis": "Opens a connection to the Hyperwave server on host hostname. The protocol used is HGCSP.", "usage": "HW_API hwapi_hgcsp ( string $hostname [, int $port ] )", "url": "https://secure.php.net/manual/en/function.hwapi-hgcsp.php"}, {"name": "hwapi_object_new", "synopsis": "Creates a new instance of the class hw_api_object.", "usage": "hw_api_object hwapi_object_new ( array $parameter )", "url": "https://secure.php.net/manual/en/function.hwapi-object-new.php"}, {"name": "hypot", "synopsis": "hypot() returns the length of the hypotenuse of a right-angle triangle with sides of length x and y, or the distance of the point (x, y) from the origin. This is equivalent to sqrt(x*x + y*y).", "usage": "float hypot ( float $x , float $y )", "url": "https://secure.php.net/manual/en/function.hypot.php"}, {"name": "ibase_add_user", "synopsis": null, "usage": "bool ibase_add_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )", "url": "https://secure.php.net/manual/en/function.ibase-add-user.php"}, {"name": "ibase_affected_rows", "synopsis": "This function returns the number of rows that were affected by the previous query (INSERT, UPDATE or DELETE) that was executed from within the specified transaction context.", "usage": "int ibase_affected_rows ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.ibase-affected-rows.php"}, {"name": "ibase_backup", "synopsis": null, "usage": "mixed ibase_backup ( resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.ibase-backup.php"}, {"name": "ibase_blob_add", "synopsis": "ibase_blob_add() adds data into a blob created with ibase_blob_create().", "usage": "void ibase_blob_add ( resource $blob_handle , string $data )", "url": "https://secure.php.net/manual/en/function.ibase-blob-add.php"}, {"name": "ibase_blob_cancel", "synopsis": "This function will discard a BLOB if it has not yet been closed by ibase_blob_close().", "usage": "bool ibase_blob_cancel ( resource $blob_handle )", "url": "https://secure.php.net/manual/en/function.ibase-blob-cancel.php"}, {"name": "ibase_blob_close", "synopsis": "This function closes a BLOB that has either been opened for reading by ibase_blob_open() or has been opened for writing by ibase_blob_create().", "usage": "mixed ibase_blob_close ( resource $blob_handle )", "url": "https://secure.php.net/manual/en/function.ibase-blob-close.php"}, {"name": "ibase_blob_create", "synopsis": "ibase_blob_create() creates a new BLOB for filling with data.", "usage": "resource ibase_blob_create ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-blob-create.php"}, {"name": "ibase_blob_echo", "synopsis": "This function opens a BLOB for reading and sends its contents directly to standard output (the browser, in most cases).", "usage": "bool ibase_blob_echo ( string $blob_id )", "url": "https://secure.php.net/manual/en/function.ibase-blob-echo.php"}, {"name": "ibase_blob_get", "synopsis": "This function returns at most len bytes from a BLOB that has been opened for reading by ibase_blob_open().", "usage": "string ibase_blob_get ( resource $blob_handle , int $len )", "url": "https://secure.php.net/manual/en/function.ibase-blob-get.php"}, {"name": "ibase_blob_import", "synopsis": "This function creates a BLOB, reads an entire file into it, closes it and returns the assigned BLOB id.", "usage": "string ibase_blob_import ( resource $link_identifier , resource $file_handle )", "url": "https://secure.php.net/manual/en/function.ibase-blob-import.php"}, {"name": "ibase_blob_info", "synopsis": "Returns the BLOB length and other useful information.", "usage": "array ibase_blob_info ( resource $link_identifier , string $blob_id )", "url": "https://secure.php.net/manual/en/function.ibase-blob-info.php"}, {"name": "ibase_blob_open", "synopsis": "Opens an existing BLOB for reading.", "usage": "resource ibase_blob_open ( resource $link_identifier , string $blob_id )", "url": "https://secure.php.net/manual/en/function.ibase-blob-open.php"}, {"name": "ibase_close", "synopsis": "Closes the link to an InterBase database that's associated with a connection id returned from ibase_connect(). Default transaction on link is committed, other transactions are rolled back.", "usage": "bool ibase_close ([ resource $connection_id = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-close.php"}, {"name": "ibase_commit_ret", "synopsis": "Commits a transaction without closing it.", "usage": "bool ibase_commit_ret ([ resource $link_or_trans_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-commit-ret.php"}, {"name": "ibase_commit", "synopsis": "Commits a transaction.", "usage": "bool ibase_commit ([ resource $link_or_trans_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-commit.php"}, {"name": "ibase_connect", "synopsis": "Establishes a connection to an Firebird/InterBase server.", "usage": "resource ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )", "url": "https://secure.php.net/manual/en/function.ibase-connect.php"}, {"name": "ibase_db_info", "synopsis": null, "usage": "string ibase_db_info ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )", "url": "https://secure.php.net/manual/en/function.ibase-db-info.php"}, {"name": "ibase_delete_user", "synopsis": null, "usage": "bool ibase_delete_user ( resource $service_handle , string $user_name )", "url": "https://secure.php.net/manual/en/function.ibase-delete-user.php"}, {"name": "ibase_drop_db", "synopsis": "This functions drops a database that was opened by either ibase_connect() or ibase_pconnect(). The database is closed and deleted from the server.", "usage": "bool ibase_drop_db ([ resource $connection = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-drop-db.php"}, {"name": "ibase_errcode", "synopsis": "Returns the error code that resulted from the most recent InterBase function call.", "usage": "int ibase_errcode ( void )", "url": "https://secure.php.net/manual/en/function.ibase-errcode.php"}, {"name": "ibase_errmsg", "synopsis": null, "usage": "string ibase_errmsg ( void )", "url": "https://secure.php.net/manual/en/function.ibase-errmsg.php"}, {"name": "ibase_execute", "synopsis": "Execute a query prepared by ibase_prepare().", "usage": "resource ibase_execute ( resource $query [, mixed $bind_arg [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.ibase-execute.php"}, {"name": "ibase_fetch_assoc", "synopsis": "Fetch a result row from a query as an associative array.", "usage": "array ibase_fetch_assoc ( resource $result [, int $fetch_flag = 0 ] )", "url": "https://secure.php.net/manual/en/function.ibase-fetch-assoc.php"}, {"name": "ibase_fetch_object", "synopsis": "Fetches a row as a pseudo-object from a given result identifier.", "usage": "object ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] )", "url": "https://secure.php.net/manual/en/function.ibase-fetch-object.php"}, {"name": "ibase_fetch_row", "synopsis": "ibase_fetch_row() fetches one row of data from the given result set.", "usage": "array ibase_fetch_row ( resource $result_identifier [, int $fetch_flag = 0 ] )", "url": "https://secure.php.net/manual/en/function.ibase-fetch-row.php"}, {"name": "ibase_field_info", "synopsis": "Returns an array with information about a field after a select query has been run.", "usage": "array ibase_field_info ( resource $result , int $field_number )", "url": "https://secure.php.net/manual/en/function.ibase-field-info.php"}, {"name": "ibase_free_event_handler", "synopsis": "This function causes the registered event handler specified by event to be cancelled. The callback function will no longer be called for the events it was registered to handle.", "usage": "bool ibase_free_event_handler ( resource $event )", "url": "https://secure.php.net/manual/en/function.ibase-free-event-handler.php"}, {"name": "ibase_free_query", "synopsis": "Frees a prepared query.", "usage": "bool ibase_free_query ( resource $query )", "url": "https://secure.php.net/manual/en/function.ibase-free-query.php"}, {"name": "ibase_free_result", "synopsis": "Frees a result set.", "usage": "bool ibase_free_result ( resource $result_identifier )", "url": "https://secure.php.net/manual/en/function.ibase-free-result.php"}, {"name": "ibase_gen_id", "synopsis": null, "usage": "mixed ibase_gen_id ( string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]] )", "url": "https://secure.php.net/manual/en/function.ibase-gen-id.php"}, {"name": "ibase_maintain_db", "synopsis": null, "usage": "bool ibase_maintain_db ( resource $service_handle , string $db , int $action [, int $argument = 0 ] )", "url": "https://secure.php.net/manual/en/function.ibase-maintain-db.php"}, {"name": "ibase_modify_user", "synopsis": null, "usage": "bool ibase_modify_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] )", "url": "https://secure.php.net/manual/en/function.ibase-modify-user.php"}, {"name": "ibase_name_result", "synopsis": "This function assigns a name to a result set. This name can be used later in UPDATE|DELETE ... WHERE CURRENT OF name statements.", "usage": "bool ibase_name_result ( resource $result , string $name )", "url": "https://secure.php.net/manual/en/function.ibase-name-result.php"}, {"name": "ibase_num_fields", "synopsis": "Get the number of fields in a result set.", "usage": "int ibase_num_fields ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ibase-num-fields.php"}, {"name": "ibase_num_params", "synopsis": "This function returns the number of parameters in the prepared query specified by query. This is the number of binding arguments that must be present when calling ibase_execute().", "usage": "int ibase_num_params ( resource $query )", "url": "https://secure.php.net/manual/en/function.ibase-num-params.php"}, {"name": "ibase_param_info", "synopsis": "Returns an array with information about a parameter after a query has been prepared.", "usage": "array ibase_param_info ( resource $query , int $param_number )", "url": "https://secure.php.net/manual/en/function.ibase-param-info.php"}, {"name": "ibase_pconnect", "synopsis": "Opens a persistent connection to an InterBase database.", "usage": "resource ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] )", "url": "https://secure.php.net/manual/en/function.ibase-pconnect.php"}, {"name": "ibase_prepare", "synopsis": null, "usage": "resource ibase_prepare ( string $query )", "url": "https://secure.php.net/manual/en/function.ibase-prepare.php"}, {"name": "ibase_query", "synopsis": null, "usage": "resource ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] )", "url": "https://secure.php.net/manual/en/function.ibase-query.php"}, {"name": "ibase_restore", "synopsis": null, "usage": "mixed ibase_restore ( resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.ibase-restore.php"}, {"name": "ibase_rollback_ret", "synopsis": "Rolls back a transaction without closing it.", "usage": "bool ibase_rollback_ret ([ resource $link_or_trans_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-rollback-ret.php"}, {"name": "ibase_rollback", "synopsis": "Rolls back a transaction.", "usage": "bool ibase_rollback ([ resource $link_or_trans_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.ibase-rollback.php"}, {"name": "ibase_server_info", "synopsis": null, "usage": "string ibase_server_info ( resource $service_handle , int $action )", "url": "https://secure.php.net/manual/en/function.ibase-server-info.php"}, {"name": "ibase_service_attach", "synopsis": null, "usage": "resource ibase_service_attach ( string $host , string $dba_username , string $dba_password )", "url": "https://secure.php.net/manual/en/function.ibase-service-attach.php"}, {"name": "ibase_service_detach", "synopsis": null, "usage": "bool ibase_service_detach ( resource $service_handle )", "url": "https://secure.php.net/manual/en/function.ibase-service-detach.php"}, {"name": "ibase_set_event_handler", "synopsis": "This function registers a PHP user function as event handler for the specified events.", "usage": "resource ibase_set_event_handler ( callable $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] )", "url": "https://secure.php.net/manual/en/function.ibase-set-event-handler.php"}, {"name": "ibase_trans", "synopsis": "Begins a transaction.", "usage": "resource ibase_trans ([ int $trans_args [, resource $link_identifier ]] )", "url": "https://secure.php.net/manual/en/function.ibase-trans.php"}, {"name": "ibase_wait_event", "synopsis": "This function suspends execution of the script until one of the specified events is posted by the database. The name of the event that was posted is returned. This function accepts up to 15 event arguments.", "usage": "string ibase_wait_event ( string $event_name1 [, string $event_name2 [, string $... ]] )", "url": "https://secure.php.net/manual/en/function.ibase-wait-event.php"}, {"name": "iconv_get_encoding", "synopsis": "Retrieve internal configuration variables of iconv extension.", "usage": "mixed iconv_get_encoding ([ string $type = \"all\" ] )", "url": "https://secure.php.net/manual/en/function.iconv-get-encoding.php"}, {"name": "iconv_mime_decode_headers", "synopsis": "Decodes multiple MIME header fields at once.", "usage": "array iconv_mime_decode_headers ( string $encoded_headers [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )", "url": "https://secure.php.net/manual/en/function.iconv-mime-decode-headers.php"}, {"name": "iconv_mime_decode", "synopsis": "Decodes a MIME header field.", "usage": "string iconv_mime_decode ( string $encoded_header [, int $mode = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )", "url": "https://secure.php.net/manual/en/function.iconv-mime-decode.php"}, {"name": "iconv_mime_encode", "synopsis": "Composes and returns a string that represents a valid MIME header field, which looks like the following:", "usage": "string iconv_mime_encode ( string $field_name , string $field_value [, array $preferences = NULL ] )", "url": "https://secure.php.net/manual/en/function.iconv-mime-encode.php"}, {"name": "iconv_set_encoding", "synopsis": "Changes the value of the internal configuration variable specified by type to charset.", "usage": "bool iconv_set_encoding ( string $type , string $charset )", "url": "https://secure.php.net/manual/en/function.iconv-set-encoding.php"}, {"name": "iconv_strlen", "synopsis": "In contrast to strlen(), iconv_strlen() counts the occurrences of characters in the given byte sequence str on the basis of the specified character set, the result of which is not necessarily identical to the length of the string in byte.", "usage": "int iconv_strlen ( string $str [, string $charset = ini_get(\"iconv.internal_encoding\") ] )", "url": "https://secure.php.net/manual/en/function.iconv-strlen.php"}, {"name": "iconv_strpos", "synopsis": "Finds position of first occurrence of a needle within a haystack.", "usage": "int iconv_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )", "url": "https://secure.php.net/manual/en/function.iconv-strpos.php"}, {"name": "iconv_strrpos", "synopsis": "Finds the last occurrence of a needle within a haystack.", "usage": "int iconv_strrpos ( string $haystack , string $needle [, string $charset = ini_get(\"iconv.internal_encoding\") ] )", "url": "https://secure.php.net/manual/en/function.iconv-strrpos.php"}, {"name": "iconv_substr", "synopsis": "Cuts a portion of str specified by the offset and length parameters.", "usage": "string iconv_substr ( string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get(\"iconv.internal_encoding\") ]] )", "url": "https://secure.php.net/manual/en/function.iconv-substr.php"}, {"name": "iconv", "synopsis": "Performs a character set conversion on the string str from in_charset to out_charset.", "usage": "string iconv ( string $in_charset , string $out_charset , string $str )", "url": "https://secure.php.net/manual/en/function.iconv.php"}, {"name": "id3_get_frame_long_name", "synopsis": "id3_get_frame_long_name() returns the long name for an ID3v2 frame.", "usage": "string id3_get_frame_long_name ( string $frameId )", "url": "https://secure.php.net/manual/en/function.id3-get-frame-long-name.php"}, {"name": "id3_get_frame_short_name", "synopsis": "id3_get_frame_short_name() returns the short name for an ID3v2 frame.", "usage": "string id3_get_frame_short_name ( string $frameId )", "url": "https://secure.php.net/manual/en/function.id3-get-frame-short-name.php"}, {"name": "id3_get_genre_id", "synopsis": "id3_get_genre_id() returns the id for a genre.", "usage": "int id3_get_genre_id ( string $genre )", "url": "https://secure.php.net/manual/en/function.id3-get-genre-id.php"}, {"name": "id3_get_genre_list", "synopsis": "id3_get_genre_list() returns an array containing all possible genres that may be stored in an ID3 tag. This list has been created by Eric Kemp and later extended by WinAmp.", "usage": "array id3_get_genre_list ( void )", "url": "https://secure.php.net/manual/en/function.id3-get-genre-list.php"}, {"name": "id3_get_genre_name", "synopsis": "id3_get_genre_name() returns the name for a genre id.", "usage": "string id3_get_genre_name ( int $genre_id )", "url": "https://secure.php.net/manual/en/function.id3-get-genre-name.php"}, {"name": "id3_get_tag", "synopsis": "id3_get_tag() is used to get all information stored in the id3 tag of the specified file.", "usage": "array id3_get_tag ( string $filename [, int $version = ID3_BEST ] )", "url": "https://secure.php.net/manual/en/function.id3-get-tag.php"}, {"name": "id3_get_version", "synopsis": "id3_get_version() retrieves the version(s) of the ID3 tag(s) in the MP3 file.", "usage": "int id3_get_version ( string $filename )", "url": "https://secure.php.net/manual/en/function.id3-get-version.php"}, {"name": "id3_remove_tag", "synopsis": "id3_remove_tag() is used to remove the information stored of an ID3 tag.", "usage": "bool id3_remove_tag ( string $filename [, int $version = ID3_V1_0 ] )", "url": "https://secure.php.net/manual/en/function.id3-remove-tag.php"}, {"name": "id3_set_tag", "synopsis": "id3_set_tag() is used to change the information stored of an ID3 tag. If no tag has been present, it will be added to the file.", "usage": "bool id3_set_tag ( string $filename , array $tag [, int $version = ID3_V1_0 ] )", "url": "https://secure.php.net/manual/en/function.id3-set-tag.php"}, {"name": "idate", "synopsis": "Returns a number formatted according to the given format string using the given integer timestamp or the current local time if no timestamp is given. In other words, timestamp is optional and defaults to the value of time().", "usage": "int idate ( string $format [, int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.idate.php"}, {"name": "idn_to_ascii", "synopsis": "This function converts a Unicode domain name to an IDNA ASCII-compatible format.", "usage": "string idn_to_ascii ( string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )", "url": "https://secure.php.net/manual/en/function.idn-to-ascii.php"}, {"name": "idn_to_utf8", "synopsis": "This function converts a Unicode domain name from an IDNA ASCII-compatible format to plain Unicode, encoded in UTF-8.", "usage": "string idn_to_utf8 ( string $domain [, int $options = IDNA_DEFAULT [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] )", "url": "https://secure.php.net/manual/en/function.idn-to-utf8.php"}, {"name": "ifx_affected_rows", "synopsis": "Returns the number of rows affected by a query associated with result_id.", "usage": "int ifx_affected_rows ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-affected-rows.php"}, {"name": "ifx_blobinfile_mode", "synopsis": "Set the default blob mode for all select queries.", "usage": "bool ifx_blobinfile_mode ( int $mode )", "url": "https://secure.php.net/manual/en/function.ifx-blobinfile-mode.php"}, {"name": "ifx_byteasvarchar", "synopsis": "Sets the default byte mode for all select-queries.", "usage": "bool ifx_byteasvarchar ( int $mode )", "url": "https://secure.php.net/manual/en/function.ifx-byteasvarchar.php"}, {"name": "ifx_close", "synopsis": "ifx_close() closes the link to an Informix database that's associated with the specified link identifier.", "usage": "bool ifx_close ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.ifx-close.php"}, {"name": "ifx_connect", "synopsis": "ifx_connect() establishes a connection to an Informix server.", "usage": "resource ifx_connect ([ string $database [, string $userid [, string $password ]]] )", "url": "https://secure.php.net/manual/en/function.ifx-connect.php"}, {"name": "ifx_copy_blob", "synopsis": "Duplicates the given blob object.", "usage": "int ifx_copy_blob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifx-copy-blob.php"}, {"name": "ifx_create_blob", "synopsis": "Creates a blob object.", "usage": "int ifx_create_blob ( int $type , int $mode , string $param )", "url": "https://secure.php.net/manual/en/function.ifx-create-blob.php"}, {"name": "ifx_create_char", "synopsis": "Creates an char object.", "usage": "int ifx_create_char ( string $param )", "url": "https://secure.php.net/manual/en/function.ifx-create-char.php"}, {"name": "ifx_do", "synopsis": "Executes a previously prepared query or opens a cursor for it.", "usage": "bool ifx_do ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-do.php"}, {"name": "ifx_error", "synopsis": "Returns in a string one character describing the general results of a statement and both SQLSTATE and SQLCODE associated with the most recent SQL statement executed.", "usage": "string ifx_error ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.ifx-error.php"}, {"name": "ifx_errormsg", "synopsis": "Returns the Informix error message associated with the most recent Informix error.", "usage": "string ifx_errormsg ([ int $errorcode ] )", "url": "https://secure.php.net/manual/en/function.ifx-errormsg.php"}, {"name": "ifx_fetch_row", "synopsis": "Fetches one row of data from the result associated with the specified result identifier.", "usage": "array ifx_fetch_row ( resource $result_id [, mixed $position ] )", "url": "https://secure.php.net/manual/en/function.ifx-fetch-row.php"}, {"name": "ifx_fieldproperties", "synopsis": "Returns the Informix SQL fieldproperties of every field in the query as an associative array. Properties are encoded as: \"SQLTYPE;length;precision;scale;ISNULLABLE\" where SQLTYPE = the Informix type like \"SQLVCHAR\" etc. and ISNULLABLE = \"Y\" or \"N\".", "usage": "array ifx_fieldproperties ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-fieldproperties.php"}, {"name": "ifx_fieldtypes", "synopsis": "Returns an associative array with fieldnames as key and the SQL fieldtypes as data for the query associated with result_id.", "usage": "array ifx_fieldtypes ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-fieldtypes.php"}, {"name": "ifx_free_blob", "synopsis": "Deletes the blobobject for the given blob object-id.", "usage": "bool ifx_free_blob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifx-free-blob.php"}, {"name": "ifx_free_char", "synopsis": "Deletes the charobject for the given char object-id.", "usage": "bool ifx_free_char ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifx-free-char.php"}, {"name": "ifx_free_result", "synopsis": "Releases resources for the query associated with result_id.", "usage": "bool ifx_free_result ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-free-result.php"}, {"name": "ifx_get_blob", "synopsis": "Returns the content of the blob object.", "usage": "string ifx_get_blob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifx-get-blob.php"}, {"name": "ifx_get_char", "synopsis": "Returns the content of the char object.", "usage": "string ifx_get_char ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifx-get-char.php"}, {"name": "ifx_getsqlca", "synopsis": "Returns a pseudo-row with sqlca.sqlerrd[0] ... sqlca.sqlerrd[5] after the query associated with result_id.", "usage": "array ifx_getsqlca ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-getsqlca.php"}, {"name": "ifx_htmltbl_result", "synopsis": "Formats and prints all rows of the result_id query into a HTML table.", "usage": "int ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] )", "url": "https://secure.php.net/manual/en/function.ifx-htmltbl-result.php"}, {"name": "ifx_nullformat", "synopsis": "Sets the default return value of a NULL-value on a fetch row.", "usage": "bool ifx_nullformat ( int $mode )", "url": "https://secure.php.net/manual/en/function.ifx-nullformat.php"}, {"name": "ifx_num_fields", "synopsis": "After preparing or executing a query, this call gives you the number of columns in the query.", "usage": "int ifx_num_fields ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-num-fields.php"}, {"name": "ifx_num_rows", "synopsis": "Gives the number of rows fetched so far for a query with result_id after a ifx_query() or ifx_do() query.", "usage": "int ifx_num_rows ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.ifx-num-rows.php"}, {"name": "ifx_pconnect", "synopsis": "ifx_pconnect() acts very much like ifx_connect() with two major differences.", "usage": "resource ifx_pconnect ([ string $database [, string $userid [, string $password ]]] )", "url": "https://secure.php.net/manual/en/function.ifx-pconnect.php"}, {"name": "ifx_prepare", "synopsis": "Prepares a query for later use with ifx_do().", "usage": "resource ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray )", "url": "https://secure.php.net/manual/en/function.ifx-prepare.php"}, {"name": "ifx_query", "synopsis": "Sends a query to the currently active database on the server that's associated with the specified link identifier.", "usage": "resource ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] )", "url": "https://secure.php.net/manual/en/function.ifx-query.php"}, {"name": "ifx_textasvarchar", "synopsis": "Sets the default text mode for all select-queries.", "usage": "bool ifx_textasvarchar ( int $mode )", "url": "https://secure.php.net/manual/en/function.ifx-textasvarchar.php"}, {"name": "ifx_update_blob", "synopsis": "Updates the content of the blob object for the given blob object bid.", "usage": "bool ifx_update_blob ( int $bid , string $content )", "url": "https://secure.php.net/manual/en/function.ifx-update-blob.php"}, {"name": "ifx_update_char", "synopsis": "Updates the content of the char object for the given char object bid.", "usage": "bool ifx_update_char ( int $bid , string $content )", "url": "https://secure.php.net/manual/en/function.ifx-update-char.php"}, {"name": "ifxus_close_slob", "synopsis": "Deletes the slob object on the given slob object-id bid.", "usage": "bool ifxus_close_slob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifxus-close-slob.php"}, {"name": "ifxus_create_slob", "synopsis": "Creates an slob object and opens it.", "usage": "int ifxus_create_slob ( int $mode )", "url": "https://secure.php.net/manual/en/function.ifxus-create-slob.php"}, {"name": "ifxus_free_slob", "synopsis": "Deletes the slob object.", "usage": "bool ifxus_free_slob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifxus-free-slob.php"}, {"name": "ifxus_open_slob", "synopsis": "Opens an slob object. bid should be an existing slob id.", "usage": "int ifxus_open_slob ( int $bid , int $mode )", "url": "https://secure.php.net/manual/en/function.ifxus-open-slob.php"}, {"name": "ifxus_read_slob", "synopsis": "Reads nbytes of the slob object.", "usage": "string ifxus_read_slob ( int $bid , int $nbytes )", "url": "https://secure.php.net/manual/en/function.ifxus-read-slob.php"}, {"name": "ifxus_seek_slob", "synopsis": "Sets the current file or seek position of an open slob object.", "usage": "int ifxus_seek_slob ( int $bid , int $mode , int $offset )", "url": "https://secure.php.net/manual/en/function.ifxus-seek-slob.php"}, {"name": "ifxus_tell_slob", "synopsis": "Returns the current file or seek position of an open slob object", "usage": "int ifxus_tell_slob ( int $bid )", "url": "https://secure.php.net/manual/en/function.ifxus-tell-slob.php"}, {"name": "ifxus_write_slob", "synopsis": "Writes a string into the slob object.", "usage": "int ifxus_write_slob ( int $bid , string $content )", "url": "https://secure.php.net/manual/en/function.ifxus-write-slob.php"}, {"name": "ignore_user_abort", "synopsis": "Sets whether a client disconnect should cause a script to be aborted.", "usage": "int ignore_user_abort ([ bool $value ] )", "url": "https://secure.php.net/manual/en/function.ignore-user-abort.php"}, {"name": "iis_add_server", "synopsis": null, "usage": "int iis_add_server ( string $path , string $comment , string $server_ip , int $port , string $host_name , int $rights , int $start_server )", "url": "https://secure.php.net/manual/en/function.iis-add-server.php"}, {"name": "iis_get_dir_security", "synopsis": null, "usage": "int iis_get_dir_security ( int $server_instance , string $virtual_path )", "url": "https://secure.php.net/manual/en/function.iis-get-dir-security.php"}, {"name": "iis_get_script_map", "synopsis": null, "usage": "string iis_get_script_map ( int $server_instance , string $virtual_path , string $script_extension )", "url": "https://secure.php.net/manual/en/function.iis-get-script-map.php"}, {"name": "iis_get_server_by_comment", "synopsis": null, "usage": "int iis_get_server_by_comment ( string $comment )", "url": "https://secure.php.net/manual/en/function.iis-get-server-by-comment.php"}, {"name": "iis_get_server_by_path", "synopsis": "Each virtual server in IIS is associated with an instance number. iis_get_server_by_path() finds the instance number from the actual path to the root directory.", "usage": "int iis_get_server_by_path ( string $path )", "url": "https://secure.php.net/manual/en/function.iis-get-server-by-path.php"}, {"name": "iis_get_server_rights", "synopsis": null, "usage": "int iis_get_server_rights ( int $server_instance , string $virtual_path )", "url": "https://secure.php.net/manual/en/function.iis-get-server-rights.php"}, {"name": "iis_get_service_state", "synopsis": null, "usage": "int iis_get_service_state ( string $service_id )", "url": "https://secure.php.net/manual/en/function.iis-get-service-state.php"}, {"name": "iis_remove_server", "synopsis": null, "usage": "int iis_remove_server ( int $server_instance )", "url": "https://secure.php.net/manual/en/function.iis-remove-server.php"}, {"name": "iis_set_app_settings", "synopsis": null, "usage": "int iis_set_app_settings ( int $server_instance , string $virtual_path , string $application_scope )", "url": "https://secure.php.net/manual/en/function.iis-set-app-settings.php"}, {"name": "iis_set_dir_security", "synopsis": null, "usage": "int iis_set_dir_security ( int $server_instance , string $virtual_path , int $directory_flags )", "url": "https://secure.php.net/manual/en/function.iis-set-dir-security.php"}, {"name": "iis_set_script_map", "synopsis": null, "usage": "int iis_set_script_map ( int $server_instance , string $virtual_path , string $script_extension , string $engine_path , int $allow_scripting )", "url": "https://secure.php.net/manual/en/function.iis-set-script-map.php"}, {"name": "iis_set_server_rights", "synopsis": null, "usage": "int iis_set_server_rights ( int $server_instance , string $virtual_path , int $directory_flags )", "url": "https://secure.php.net/manual/en/function.iis-set-server-rights.php"}, {"name": "iis_start_server", "synopsis": null, "usage": "int iis_start_server ( int $server_instance )", "url": "https://secure.php.net/manual/en/function.iis-start-server.php"}, {"name": "iis_start_service", "synopsis": null, "usage": "int iis_start_service ( string $service_id )", "url": "https://secure.php.net/manual/en/function.iis-start-service.php"}, {"name": "iis_stop_server", "synopsis": null, "usage": "int iis_stop_server ( int $server_instance )", "url": "https://secure.php.net/manual/en/function.iis-stop-server.php"}, {"name": "iis_stop_service", "synopsis": null, "usage": "int iis_stop_service ( string $service_id )", "url": "https://secure.php.net/manual/en/function.iis-stop-service.php"}, {"name": "image_type_to_extension", "synopsis": "Returns the extension for the given IMAGETYPE_XXX constant.", "usage": "string image_type_to_extension ( int $imagetype [, bool $include_dot = TRUE ] )", "url": "https://secure.php.net/manual/en/function.image-type-to-extension.php"}, {"name": "image_type_to_mime_type", "synopsis": "The image_type_to_mime_type() function will determine the Mime-Type for an IMAGETYPE constant.", "usage": "string image_type_to_mime_type ( int $imagetype )", "url": "https://secure.php.net/manual/en/function.image-type-to-mime-type.php"}, {"name": "image2wbmp", "synopsis": "image2wbmp() outputs or save a WBMP version of the given image.", "usage": "bool image2wbmp ( resource $image [, string $filename [, int $threshold ]] )", "url": "https://secure.php.net/manual/en/function.image2wbmp.php"}, {"name": "imageaffine", "synopsis": "", "usage": "resource imageaffine ( resource $image , array $affine [, array $clip ] )", "url": "https://secure.php.net/manual/en/function.imageaffine.php"}, {"name": "imageaffinematrixconcat", "synopsis": "Returns the concatenation of two affine transformation matrices, what is useful if multiple transformations should be applied to the same image in one go.", "usage": "array imageaffinematrixconcat ( array $m1 , array $m2 )", "url": "https://secure.php.net/manual/en/function.imageaffinematrixconcat.php"}, {"name": "imageaffinematrixget", "synopsis": "Returns an affine transformation matrix.", "usage": "array imageaffinematrixget ( int $type [, mixed $options ] )", "url": "https://secure.php.net/manual/en/function.imageaffinematrixget.php"}, {"name": "imagealphablending", "synopsis": "imagealphablending() allows for two different modes of drawing on truecolor images. In blending mode, the alpha channel component of the color supplied to all drawing function, such as imagesetpixel() determines how much of the underlying color should be allowed to shine through. As a result, gd automatically blends the existing color at that point with the drawing color, and stores the result in the image. The resulting pixel is opaque. In non-blending mode, the drawing color is copied literally with its alpha channel information, replacing the destination pixel. Blending mode is not available when drawing on palette images.", "usage": "bool imagealphablending ( resource $image , bool $blendmode )", "url": "https://secure.php.net/manual/en/function.imagealphablending.php"}, {"name": "imageantialias", "synopsis": "Activate the fast drawing antialiased methods for lines and wired polygons. It does not support alpha components. It works using a direct blend operation. It works only with truecolor images.", "usage": "bool imageantialias ( resource $image , bool $enabled )", "url": "https://secure.php.net/manual/en/function.imageantialias.php"}, {"name": "imagearc", "synopsis": "imagearc() draws an arc of circle centered at the given coordinates.", "usage": "bool imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color )", "url": "https://secure.php.net/manual/en/function.imagearc.php"}, {"name": "imagebmp", "synopsis": "Outputs or saves a BMP version of the given image.", "usage": "bool imagebmp ( resource $image [, mixed $to = NULL [, bool $compressed = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.imagebmp.php"}, {"name": "imagechar", "synopsis": "imagechar() draws the first character of c in the image identified by image with its upper-left at x,y (top left is 0, 0) with the color color.", "usage": "bool imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color )", "url": "https://secure.php.net/manual/en/function.imagechar.php"}, {"name": "imagecharup", "synopsis": "Draws the character c vertically at the specified coordinate on the given image.", "usage": "bool imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color )", "url": "https://secure.php.net/manual/en/function.imagecharup.php"}, {"name": "imagecolorallocate", "synopsis": "Returns a color identifier representing the color composed of the given RGB components.", "usage": "int imagecolorallocate ( resource $image , int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/function.imagecolorallocate.php"}, {"name": "imagecolorallocatealpha", "synopsis": "imagecolorallocatealpha() behaves identically to imagecolorallocate() with the addition of the transparency parameter alpha.", "usage": "int imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha )", "url": "https://secure.php.net/manual/en/function.imagecolorallocatealpha.php"}, {"name": "imagecolorat", "synopsis": "Returns the index of the color of the pixel at the specified location in the image specified by image.", "usage": "int imagecolorat ( resource $image , int $x , int $y )", "url": "https://secure.php.net/manual/en/function.imagecolorat.php"}, {"name": "imagecolorclosest", "synopsis": "Returns the index of the color in the palette of the image which is \"closest\" to the specified RGB value.", "usage": "int imagecolorclosest ( resource $image , int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/function.imagecolorclosest.php"}, {"name": "imagecolorclosestalpha", "synopsis": "Returns the index of the color in the palette of the image which is \"closest\" to the specified RGB value and alpha level.", "usage": "int imagecolorclosestalpha ( resource $image , int $red , int $green , int $blue , int $alpha )", "url": "https://secure.php.net/manual/en/function.imagecolorclosestalpha.php"}, {"name": "imagecolorclosesthwb", "synopsis": "Get the index of the color which has the hue, white and blackness nearest the given color.", "usage": "int imagecolorclosesthwb ( resource $image , int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/function.imagecolorclosesthwb.php"}, {"name": "imagecolordeallocate", "synopsis": "De-allocates a color previously allocated with imagecolorallocate() or imagecolorallocatealpha().", "usage": "bool imagecolordeallocate ( resource $image , int $color )", "url": "https://secure.php.net/manual/en/function.imagecolordeallocate.php"}, {"name": "imagecolorexact", "synopsis": "Returns the index of the specified color in the palette of the image.", "usage": "int imagecolorexact ( resource $image , int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/function.imagecolorexact.php"}, {"name": "imagecolorexactalpha", "synopsis": "Returns the index of the specified color+alpha in the palette of the image.", "usage": "int imagecolorexactalpha ( resource $image , int $red , int $green , int $blue , int $alpha )", "url": "https://secure.php.net/manual/en/function.imagecolorexactalpha.php"}, {"name": "imagecolormatch", "synopsis": "Makes the colors of the palette version of an image more closely match the true color version.", "usage": "bool imagecolormatch ( resource $image1 , resource $image2 )", "url": "https://secure.php.net/manual/en/function.imagecolormatch.php"}, {"name": "imagecolorresolve", "synopsis": "This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative.", "usage": "int imagecolorresolve ( resource $image , int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/function.imagecolorresolve.php"}, {"name": "imagecolorresolvealpha", "synopsis": "This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative.", "usage": "int imagecolorresolvealpha ( resource $image , int $red , int $green , int $blue , int $alpha )", "url": "https://secure.php.net/manual/en/function.imagecolorresolvealpha.php"}, {"name": "imagecolorset", "synopsis": "This sets the specified index in the palette to the specified color. This is useful for creating flood-fill-like effects in palleted images without the overhead of performing the actual flood-fill.", "usage": "void imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] )", "url": "https://secure.php.net/manual/en/function.imagecolorset.php"}, {"name": "imagecolorsforindex", "synopsis": "Gets the color for a specified index.", "usage": "array imagecolorsforindex ( resource $image , int $index )", "url": "https://secure.php.net/manual/en/function.imagecolorsforindex.php"}, {"name": "imagecolorstotal", "synopsis": "Returns the number of colors in an image palette.", "usage": "int imagecolorstotal ( resource $image )", "url": "https://secure.php.net/manual/en/function.imagecolorstotal.php"}, {"name": "imagecolortransparent", "synopsis": "Sets the transparent color in the given image.", "usage": "int imagecolortransparent ( resource $image [, int $color ] )", "url": "https://secure.php.net/manual/en/function.imagecolortransparent.php"}, {"name": "imageconvolution", "synopsis": "Applies a convolution matrix on the image, using the given coefficient and offset.", "usage": "bool imageconvolution ( resource $image , array $matrix , float $div , float $offset )", "url": "https://secure.php.net/manual/en/function.imageconvolution.php"}, {"name": "imagecopy", "synopsis": "Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.", "usage": "bool imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h )", "url": "https://secure.php.net/manual/en/function.imagecopy.php"}, {"name": "imagecopymerge", "synopsis": "Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.", "usage": "bool imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )", "url": "https://secure.php.net/manual/en/function.imagecopymerge.php"}, {"name": "imagecopymergegray", "synopsis": "imagecopymergegray() copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y.", "usage": "bool imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct )", "url": "https://secure.php.net/manual/en/function.imagecopymergegray.php"}, {"name": "imagecopyresampled", "synopsis": "imagecopyresampled() copies a rectangular portion of one image to another image, smoothly interpolating pixel values so that, in particular, reducing the size of an image still retains a great deal of clarity.", "usage": "bool imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )", "url": "https://secure.php.net/manual/en/function.imagecopyresampled.php"}, {"name": "imagecopyresized", "synopsis": "imagecopyresized() copies a rectangular portion of one image to another image. dst_image is the destination image, src_image is the source image identifier.", "usage": "bool imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h )", "url": "https://secure.php.net/manual/en/function.imagecopyresized.php"}, {"name": "imagecreate", "synopsis": "imagecreate() returns an image identifier representing a blank image of specified size.", "usage": "resource imagecreate ( int $width , int $height )", "url": "https://secure.php.net/manual/en/function.imagecreate.php"}, {"name": "imagecreatefrombmp", "synopsis": "imagecreatefrombmp() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefrombmp ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefrombmp.php"}, {"name": "imagecreatefromgd", "synopsis": "Create a new image from GD file or URL.", "usage": "resource imagecreatefromgd ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromgd.php"}, {"name": "imagecreatefromgd2", "synopsis": "Create a new image from GD2 file or URL.", "usage": "resource imagecreatefromgd2 ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromgd2.php"}, {"name": "imagecreatefromgd2part", "synopsis": "Create a new image from a given part of GD2 file or URL.", "usage": "resource imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height )", "url": "https://secure.php.net/manual/en/function.imagecreatefromgd2part.php"}, {"name": "imagecreatefromgif", "synopsis": "imagecreatefromgif() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromgif ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromgif.php"}, {"name": "imagecreatefromjpeg", "synopsis": "imagecreatefromjpeg() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromjpeg ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromjpeg.php"}, {"name": "imagecreatefrompng", "synopsis": "imagecreatefrompng() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefrompng ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefrompng.php"}, {"name": "imagecreatefromstring", "synopsis": "imagecreatefromstring() returns an image identifier representing the image obtained from the given image. These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, BMP, WBMP, and GD2.", "usage": "resource imagecreatefromstring ( string $image )", "url": "https://secure.php.net/manual/en/function.imagecreatefromstring.php"}, {"name": "imagecreatefromwbmp", "synopsis": "imagecreatefromwbmp() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromwbmp ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromwbmp.php"}, {"name": "imagecreatefromwebp", "synopsis": "imagecreatefromwebp() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromwebp ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromwebp.php"}, {"name": "imagecreatefromxbm", "synopsis": "imagecreatefromxbm() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromxbm ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromxbm.php"}, {"name": "imagecreatefromxpm", "synopsis": "imagecreatefromxpm() returns an image identifier representing the image obtained from the given filename.", "usage": "resource imagecreatefromxpm ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagecreatefromxpm.php"}, {"name": "imagecreatetruecolor", "synopsis": "imagecreatetruecolor() returns an image identifier representing a black image of the specified size.", "usage": "resource imagecreatetruecolor ( int $width , int $height )", "url": "https://secure.php.net/manual/en/function.imagecreatetruecolor.php"}, {"name": "imagecrop", "synopsis": "Crops an image to the given rectangular area and returns the resulting image. The given image is not modified.", "usage": "resource imagecrop ( resource $image , array $rect )", "url": "https://secure.php.net/manual/en/function.imagecrop.php"}, {"name": "imagecropauto", "synopsis": "Automatically crops an image according to the given mode.", "usage": "resource imagecropauto ( resource $image [, int $mode = -1 [, float $threshold = .5 [, int $color = -1 ]]] )", "url": "https://secure.php.net/manual/en/function.imagecropauto.php"}, {"name": "imagedashedline", "synopsis": "This function is deprecated. Use combination of imagesetstyle() and imageline() instead.", "usage": "bool imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )", "url": "https://secure.php.net/manual/en/function.imagedashedline.php"}, {"name": "imagedestroy", "synopsis": "imagedestroy() frees any memory associated with image image.", "usage": "bool imagedestroy ( resource $image )", "url": "https://secure.php.net/manual/en/function.imagedestroy.php"}, {"name": "imageellipse", "synopsis": "Draws an ellipse centered at the specified coordinates.", "usage": "bool imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )", "url": "https://secure.php.net/manual/en/function.imageellipse.php"}, {"name": "imagefill", "synopsis": "Performs a flood fill starting at the given coordinate (top left is 0, 0) with the given color in the image.", "usage": "bool imagefill ( resource $image , int $x , int $y , int $color )", "url": "https://secure.php.net/manual/en/function.imagefill.php"}, {"name": "imagefilledarc", "synopsis": "Draws a partial arc centered at the specified coordinate in the given image.", "usage": "bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style )", "url": "https://secure.php.net/manual/en/function.imagefilledarc.php"}, {"name": "imagefilledellipse", "synopsis": "Draws an ellipse centered at the specified coordinate on the given image.", "usage": "bool imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color )", "url": "https://secure.php.net/manual/en/function.imagefilledellipse.php"}, {"name": "imagefilledpolygon", "synopsis": "imagefilledpolygon() creates a filled polygon in the given image.", "usage": "bool imagefilledpolygon ( resource $image , array $points , int $num_points , int $color )", "url": "https://secure.php.net/manual/en/function.imagefilledpolygon.php"}, {"name": "imagefilledrectangle", "synopsis": "Creates a rectangle filled with color in the given image starting at point 1 and ending at point 2. 0, 0 is the top left corner of the image.", "usage": "bool imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )", "url": "https://secure.php.net/manual/en/function.imagefilledrectangle.php"}, {"name": "imagefilltoborder", "synopsis": "imagefilltoborder() performs a flood fill whose border color is defined by border. The starting point for the fill is x, y (top left is 0, 0) and the region is filled with color color.", "usage": "bool imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color )", "url": "https://secure.php.net/manual/en/function.imagefilltoborder.php"}, {"name": "imagefilter", "synopsis": "imagefilter() applies the given filter filtertype on the image.", "usage": "bool imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] )", "url": "https://secure.php.net/manual/en/function.imagefilter.php"}, {"name": "imageflip", "synopsis": "Flips the image image using the given mode.", "usage": "bool imageflip ( resource $image , int $mode )", "url": "https://secure.php.net/manual/en/function.imageflip.php"}, {"name": "imagefontheight", "synopsis": "Returns the pixel height of a character in the specified font.", "usage": "int imagefontheight ( int $font )", "url": "https://secure.php.net/manual/en/function.imagefontheight.php"}, {"name": "imagefontwidth", "synopsis": "Returns the pixel width of a character in font.", "usage": "int imagefontwidth ( int $font )", "url": "https://secure.php.net/manual/en/function.imagefontwidth.php"}, {"name": "imageftbbox", "synopsis": "This function calculates and returns the bounding box in pixels for a FreeType text.", "usage": "array imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] )", "url": "https://secure.php.net/manual/en/function.imageftbbox.php"}, {"name": "imagefttext", "synopsis": null, "usage": "array imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] )", "url": "https://secure.php.net/manual/en/function.imagefttext.php"}, {"name": "imagegammacorrect", "synopsis": "Applies gamma correction to the given gd image given an input and an output gamma.", "usage": "bool imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma )", "url": "https://secure.php.net/manual/en/function.imagegammacorrect.php"}, {"name": "imagegd", "synopsis": "Outputs a GD image to the given to.", "usage": "bool imagegd ( resource $image [, mixed $to = NULL ] )", "url": "https://secure.php.net/manual/en/function.imagegd.php"}, {"name": "imagegd2", "synopsis": "Outputs a GD2 image to the given to.", "usage": "bool imagegd2 ( resource $image [, mixed $to = NULL [, int $chunk_size = 128 [, int $type = IMG_GD2_RAW ]]] )", "url": "https://secure.php.net/manual/en/function.imagegd2.php"}, {"name": "imagegetclip", "synopsis": "imagegetclip() retrieves the current clipping rectangle, i.e. the area beyond which no pixels will be drawn.", "usage": "array imagegetclip ( resource $im )", "url": "https://secure.php.net/manual/en/function.imagegetclip.php"}, {"name": "imagegif", "synopsis": "imagegif() creates the GIF file in to from the image image. The image argument is the return from the imagecreate() or imagecreatefrom* function.", "usage": "bool imagegif ( resource $image [, mixed $to ] )", "url": "https://secure.php.net/manual/en/function.imagegif.php"}, {"name": "imagegrabscreen", "synopsis": "Grabs a screenshot of the whole screen.", "usage": "resource imagegrabscreen ( void )", "url": "https://secure.php.net/manual/en/function.imagegrabscreen.php"}, {"name": "imagegrabwindow", "synopsis": "Grabs a window or its client area using a windows handle (HWND property in COM instance)", "usage": "resource imagegrabwindow ( int $window_handle [, int $client_area = 0 ] )", "url": "https://secure.php.net/manual/en/function.imagegrabwindow.php"}, {"name": "imageinterlace", "synopsis": "imageinterlace() turns the interlace bit on or off.", "usage": "int imageinterlace ( resource $image [, int $interlace = 0 ] )", "url": "https://secure.php.net/manual/en/function.imageinterlace.php"}, {"name": "imageistruecolor", "synopsis": "imageistruecolor() finds whether the image image is a truecolor image.", "usage": "bool imageistruecolor ( resource $image )", "url": "https://secure.php.net/manual/en/function.imageistruecolor.php"}, {"name": "imagejpeg", "synopsis": "imagejpeg() creates a JPEG file from the given image.", "usage": "bool imagejpeg ( resource $image [, mixed $to [, int $quality ]] )", "url": "https://secure.php.net/manual/en/function.imagejpeg.php"}, {"name": "imagelayereffect", "synopsis": "Set the alpha blending flag to use layering effects.", "usage": "bool imagelayereffect ( resource $image , int $effect )", "url": "https://secure.php.net/manual/en/function.imagelayereffect.php"}, {"name": "imageline", "synopsis": "Draws a line between the two given points.", "usage": "bool imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )", "url": "https://secure.php.net/manual/en/function.imageline.php"}, {"name": "imageloadfont", "synopsis": "imageloadfont() loads a user-defined bitmap and returns its identifier.", "usage": "int imageloadfont ( string $file )", "url": "https://secure.php.net/manual/en/function.imageloadfont.php"}, {"name": "imageopenpolygon", "synopsis": "imageopenpolygon() draws an open polygon on the given image. Contrary to imagepolygon(), no line is drawn between the last and the first point.", "usage": "bool imageopenpolygon ( resource $image , array $points , int $num_points , int $color )", "url": "https://secure.php.net/manual/en/function.imageopenpolygon.php"}, {"name": "imagepalettecopy", "synopsis": "imagepalettecopy() copies the palette from the source image to the destination image.", "usage": "void imagepalettecopy ( resource $destination , resource $source )", "url": "https://secure.php.net/manual/en/function.imagepalettecopy.php"}, {"name": "imagepalettetotruecolor", "synopsis": "Converts a palette based image, created by functions like imagecreate() to a true color image, like imagecreatetruecolor().", "usage": "bool imagepalettetotruecolor ( resource $src )", "url": "https://secure.php.net/manual/en/function.imagepalettetotruecolor.php"}, {"name": "imagepng", "synopsis": "Outputs or saves a PNG image from the given image.", "usage": "bool imagepng ( resource $image [, mixed $to [, int $quality [, int $filters ]]] )", "url": "https://secure.php.net/manual/en/function.imagepng.php"}, {"name": "imagepolygon", "synopsis": "imagepolygon() creates a polygon in the given image.", "usage": "bool imagepolygon ( resource $image , array $points , int $num_points , int $color )", "url": "https://secure.php.net/manual/en/function.imagepolygon.php"}, {"name": "imagepsbbox", "synopsis": "Gives the bounding box of a text rectangle using PostScript Type1 fonts.", "usage": "array imagepsbbox ( string $text , resource $font , int $size )", "url": "https://secure.php.net/manual/en/function.imagepsbbox.php"}, {"name": "imagepsencodefont", "synopsis": "Loads a character encoding vector from a file and changes the fonts encoding vector to it. As a PostScript fonts default vector lacks most of the character positions above 127, you'll definitely want to change this if you use a language other than English.", "usage": "bool imagepsencodefont ( resource $font_index , string $encodingfile )", "url": "https://secure.php.net/manual/en/function.imagepsencodefont.php"}, {"name": "imagepsextendfont", "synopsis": "Extend or condense a font (font_index), if the value of the extend parameter is less than one you will be condensing the font.", "usage": "bool imagepsextendfont ( resource $font_index , float $extend )", "url": "https://secure.php.net/manual/en/function.imagepsextendfont.php"}, {"name": "imagepsfreefont", "synopsis": "imagepsfreefont() frees memory used by a PostScript Type 1 font.", "usage": "bool imagepsfreefont ( resource $font_index )", "url": "https://secure.php.net/manual/en/function.imagepsfreefont.php"}, {"name": "imagepsloadfont", "synopsis": "Load a PostScript Type 1 font from the given filename.", "usage": "resource imagepsloadfont ( string $filename )", "url": "https://secure.php.net/manual/en/function.imagepsloadfont.php"}, {"name": "imagepsslantfont", "synopsis": "Slant a given font.", "usage": "bool imagepsslantfont ( resource $font_index , float $slant )", "url": "https://secure.php.net/manual/en/function.imagepsslantfont.php"}, {"name": "imagepstext", "synopsis": "Draws a text on an image using PostScript Type1 fonts.", "usage": "array imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] )", "url": "https://secure.php.net/manual/en/function.imagepstext.php"}, {"name": "imagerectangle", "synopsis": "imagerectangle() creates a rectangle starting at the specified coordinates.", "usage": "bool imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color )", "url": "https://secure.php.net/manual/en/function.imagerectangle.php"}, {"name": "imageresolution", "synopsis": "imageresolution() allows to set and get the resolution of an image in DPI (dots per inch). If none of the optional parameters is given, the current resolution is returned as indexed array. If only res_x is given, the horizontal and vertical resolution are set to this value. If both optional parameters are given, the horizontal and vertical resolution are set to these values, respectively.", "usage": "mixed imageresolution ( resource $image [, int $res_x [, int $res_y ]] )", "url": "https://secure.php.net/manual/en/function.imageresolution.php"}, {"name": "imagerotate", "synopsis": "Rotates the image image using the given angle in degrees.", "usage": "resource imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] )", "url": "https://secure.php.net/manual/en/function.imagerotate.php"}, {"name": "imagesavealpha", "synopsis": "imagesavealpha() sets the flag to attempt to save full alpha channel information (as opposed to single-color transparency) when saving PNG images.", "usage": "bool imagesavealpha ( resource $image , bool $saveflag )", "url": "https://secure.php.net/manual/en/function.imagesavealpha.php"}, {"name": "imagescale", "synopsis": "imagescale() scales an image using the given interpolation algorithm.", "usage": "resource imagescale ( resource $image , int $new_width [, int $new_height = -1 [, int $mode = IMG_BILINEAR_FIXED ]] )", "url": "https://secure.php.net/manual/en/function.imagescale.php"}, {"name": "imagesetbrush", "synopsis": "imagesetbrush() sets the brush image to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special colors IMG_COLOR_BRUSHED or IMG_COLOR_STYLEDBRUSHED.", "usage": "bool imagesetbrush ( resource $image , resource $brush )", "url": "https://secure.php.net/manual/en/function.imagesetbrush.php"}, {"name": "imagesetclip", "synopsis": "imagesetclip() sets the current clipping rectangle, i.e. the area beyond which no pixels will be drawn.", "usage": "bool imagesetclip ( resource $im , int $x1 , int $y1 , int $x2 , int $y2 )", "url": "https://secure.php.net/manual/en/function.imagesetclip.php"}, {"name": "imagesetinterpolation", "synopsis": "Sets the interpolation method, setting an interpolation method affects the rendering of various functions in GD, such as the imagerotate() function.", "usage": "bool imagesetinterpolation ( resource $image [, int $method = IMG_BILINEAR_FIXED ] )", "url": "https://secure.php.net/manual/en/function.imagesetinterpolation.php"}, {"name": "imagesetpixel", "synopsis": "imagesetpixel() draws a pixel at the specified coordinate.", "usage": "bool imagesetpixel ( resource $image , int $x , int $y , int $color )", "url": "https://secure.php.net/manual/en/function.imagesetpixel.php"}, {"name": "imagesetstyle", "synopsis": "imagesetstyle() sets the style to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special color IMG_COLOR_STYLED or lines of images with color IMG_COLOR_STYLEDBRUSHED.", "usage": "bool imagesetstyle ( resource $image , array $style )", "url": "https://secure.php.net/manual/en/function.imagesetstyle.php"}, {"name": "imagesetthickness", "synopsis": "imagesetthickness() sets the thickness of the lines drawn when drawing rectangles, polygons, arcs etc. to thickness pixels.", "usage": "bool imagesetthickness ( resource $image , int $thickness )", "url": "https://secure.php.net/manual/en/function.imagesetthickness.php"}, {"name": "imagesettile", "synopsis": "imagesettile() sets the tile image to be used by all region filling functions (such as imagefill() and imagefilledpolygon()) when filling with the special color IMG_COLOR_TILED.", "usage": "bool imagesettile ( resource $image , resource $tile )", "url": "https://secure.php.net/manual/en/function.imagesettile.php"}, {"name": "imagestring", "synopsis": "Draws a string at the given coordinates.", "usage": "bool imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color )", "url": "https://secure.php.net/manual/en/function.imagestring.php"}, {"name": "imagestringup", "synopsis": "Draws a string vertically at the given coordinates.", "usage": "bool imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color )", "url": "https://secure.php.net/manual/en/function.imagestringup.php"}, {"name": "imagesx", "synopsis": "Returns the width of the given image resource.", "usage": "int imagesx ( resource $image )", "url": "https://secure.php.net/manual/en/function.imagesx.php"}, {"name": "imagesy", "synopsis": "Returns the height of the given image resource.", "usage": "int imagesy ( resource $image )", "url": "https://secure.php.net/manual/en/function.imagesy.php"}, {"name": "imagetruecolortopalette", "synopsis": "imagetruecolortopalette() converts a truecolor image to a palette image. The code for this function was originally drawn from the Independent JPEG Group library code, which is excellent. The code has been modified to preserve as much alpha channel information as possible in the resulting palette, in addition to preserving colors as well as possible. This does not work as well as might be hoped. It is usually best to simply produce a truecolor output image instead, which guarantees the highest output quality.", "usage": "bool imagetruecolortopalette ( resource $image , bool $dither , int $ncolors )", "url": "https://secure.php.net/manual/en/function.imagetruecolortopalette.php"}, {"name": "imagettfbbox", "synopsis": "This function calculates and returns the bounding box in pixels for a TrueType text.", "usage": "array imagettfbbox ( float $size , float $angle , string $fontfile , string $text )", "url": "https://secure.php.net/manual/en/function.imagettfbbox.php"}, {"name": "imagettftext", "synopsis": "Writes the given text into the image using TrueType fonts.", "usage": "array imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text )", "url": "https://secure.php.net/manual/en/function.imagettftext.php"}, {"name": "imagetypes", "synopsis": "Returns the image types supported by the current PHP installation.", "usage": "int imagetypes ( void )", "url": "https://secure.php.net/manual/en/function.imagetypes.php"}, {"name": "imagewbmp", "synopsis": "imagewbmp() outputs or save a WBMP version of the given image.", "usage": "bool imagewbmp ( resource $image [, mixed $to [, int $foreground ]] )", "url": "https://secure.php.net/manual/en/function.imagewbmp.php"}, {"name": "imagewebp", "synopsis": "Outputs or saves a WebP version of the given image.", "usage": "bool imagewebp ( resource $image [, mixed $to = NULL [, int $quality = 80 ]] )", "url": "https://secure.php.net/manual/en/function.imagewebp.php"}, {"name": "imagexbm", "synopsis": "Outputs or save an XBM version of the given image.", "usage": "bool imagexbm ( resource $image , string $filename [, int $foreground ] )", "url": "https://secure.php.net/manual/en/function.imagexbm.php"}, {"name": "imap_8bit", "synopsis": "Convert an 8bit string to a quoted-printable string (according to \u00bb\u00a0RFC2045, section 6.7).", "usage": "string imap_8bit ( string $string )", "url": "https://secure.php.net/manual/en/function.imap-8bit.php"}, {"name": "imap_alerts", "synopsis": "Returns all of the IMAP alert messages generated since the last imap_alerts() call, or the beginning of the page.", "usage": "array imap_alerts ( void )", "url": "https://secure.php.net/manual/en/function.imap-alerts.php"}, {"name": "imap_append", "synopsis": "Appends a string message to the specified mailbox.", "usage": "bool imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] )", "url": "https://secure.php.net/manual/en/function.imap-append.php"}, {"name": "imap_base64", "synopsis": "Decodes the given BASE-64 encoded text.", "usage": "string imap_base64 ( string $text )", "url": "https://secure.php.net/manual/en/function.imap-base64.php"}, {"name": "imap_binary", "synopsis": "Convert an 8bit string to a base64 string according to \u00bb\u00a0RFC2045, Section 6.8.", "usage": "string imap_binary ( string $string )", "url": "https://secure.php.net/manual/en/function.imap-binary.php"}, {"name": "imap_body", "synopsis": "imap_body() returns the body of the message, numbered msg_number in the current mailbox.", "usage": "string imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-body.php"}, {"name": "imap_bodystruct", "synopsis": "Read the structure of a specified body section of a specific message.", "usage": "object imap_bodystruct ( resource $imap_stream , int $msg_number , string $section )", "url": "https://secure.php.net/manual/en/function.imap-bodystruct.php"}, {"name": "imap_check", "synopsis": "Checks information about the current mailbox.", "usage": "object imap_check ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-check.php"}, {"name": "imap_clearflag_full", "synopsis": "This function causes a store to delete the specified flag to the flags set for the messages in the specified sequence.", "usage": "bool imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-clearflag-full.php"}, {"name": "imap_close", "synopsis": "Closes the imap stream.", "usage": "bool imap_close ( resource $imap_stream [, int $flag = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-close.php"}, {"name": "imap_createmailbox", "synopsis": "Creates a new mailbox specified by mailbox.", "usage": "bool imap_createmailbox ( resource $imap_stream , string $mailbox )", "url": "https://secure.php.net/manual/en/function.imap-createmailbox.php"}, {"name": "imap_delete", "synopsis": "Marks messages listed in msg_number for deletion. Messages marked for deletion will stay in the mailbox until either imap_expunge() is called or imap_close() is called with the optional parameter CL_EXPUNGE.", "usage": "bool imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-delete.php"}, {"name": "imap_deletemailbox", "synopsis": "Deletes the specified mailbox.", "usage": "bool imap_deletemailbox ( resource $imap_stream , string $mailbox )", "url": "https://secure.php.net/manual/en/function.imap-deletemailbox.php"}, {"name": "imap_errors", "synopsis": "Gets all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset.", "usage": "array imap_errors ( void )", "url": "https://secure.php.net/manual/en/function.imap-errors.php"}, {"name": "imap_expunge", "synopsis": "Deletes all the messages marked for deletion by imap_delete(), imap_mail_move(), or imap_setflag_full().", "usage": "bool imap_expunge ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-expunge.php"}, {"name": "imap_fetch_overview", "synopsis": "This function fetches mail headers for the given sequence and returns an overview of their contents.", "usage": "array imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-fetch-overview.php"}, {"name": "imap_fetchbody", "synopsis": "Fetch of a particular section of the body of the specified messages. Body parts are not decoded by this function.", "usage": "string imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-fetchbody.php"}, {"name": "imap_fetchheader", "synopsis": "This function causes a fetch of the complete, unfiltered \u00bb\u00a0RFC2822 format header of the specified message.", "usage": "string imap_fetchheader ( resource $imap_stream , int $msg_number [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-fetchheader.php"}, {"name": "imap_fetchmime", "synopsis": "Fetch the MIME headers of a particular section of the body of the specified messages.", "usage": "string imap_fetchmime ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-fetchmime.php"}, {"name": "imap_fetchstructure", "synopsis": "Fetches all the structured information for a given message.", "usage": "object imap_fetchstructure ( resource $imap_stream , int $msg_number [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-fetchstructure.php"}, {"name": "imap_gc", "synopsis": "Purges the cache of entries of a specific type.", "usage": "bool imap_gc ( resource $imap_stream , int $caches )", "url": "https://secure.php.net/manual/en/function.imap-gc.php"}, {"name": "imap_get_quota", "synopsis": "Retrieve the quota level settings, and usage statics per mailbox.", "usage": "array imap_get_quota ( resource $imap_stream , string $quota_root )", "url": "https://secure.php.net/manual/en/function.imap-get-quota.php"}, {"name": "imap_get_quotaroot", "synopsis": "Retrieve the quota settings per user. The limit value represents the total amount of space allowed for this user's total mailbox usage. The usage value represents the user's current total mailbox capacity.", "usage": "array imap_get_quotaroot ( resource $imap_stream , string $quota_root )", "url": "https://secure.php.net/manual/en/function.imap-get-quotaroot.php"}, {"name": "imap_getacl", "synopsis": "Gets the ACL for a given mailbox.", "usage": "array imap_getacl ( resource $imap_stream , string $mailbox )", "url": "https://secure.php.net/manual/en/function.imap-getacl.php"}, {"name": "imap_getmailboxes", "synopsis": "Gets information on the mailboxes.", "usage": "array imap_getmailboxes ( resource $imap_stream , string $ref , string $pattern )", "url": "https://secure.php.net/manual/en/function.imap-getmailboxes.php"}, {"name": "imap_getsubscribed", "synopsis": "Gets information about the subscribed mailboxes.", "usage": "array imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern )", "url": "https://secure.php.net/manual/en/function.imap-getsubscribed.php"}, {"name": "imap_headerinfo", "synopsis": "Gets information about the given message number by reading its headers.", "usage": "object imap_headerinfo ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.imap-headerinfo.php"}, {"name": "imap_headers", "synopsis": "Returns headers for all messages in a mailbox.", "usage": "array imap_headers ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-headers.php"}, {"name": "imap_last_error", "synopsis": "Gets the full text of the last IMAP error message that occurred on the current page. The error stack is untouched; calling imap_last_error() subsequently, with no intervening errors, will return the same error.", "usage": "string imap_last_error ( void )", "url": "https://secure.php.net/manual/en/function.imap-last-error.php"}, {"name": "imap_list", "synopsis": "Read the list of mailboxes.", "usage": "array imap_list ( resource $imap_stream , string $ref , string $pattern )", "url": "https://secure.php.net/manual/en/function.imap-list.php"}, {"name": "imap_listscan", "synopsis": "Returns an array containing the names of the mailboxes that have content in the text of the mailbox.", "usage": "array imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content )", "url": "https://secure.php.net/manual/en/function.imap-listscan.php"}, {"name": "imap_lsub", "synopsis": "Gets an array of all the mailboxes that you have subscribed.", "usage": "array imap_lsub ( resource $imap_stream , string $ref , string $pattern )", "url": "https://secure.php.net/manual/en/function.imap-lsub.php"}, {"name": "imap_mail_compose", "synopsis": "Create a MIME message based on the given envelope and body sections.", "usage": "string imap_mail_compose ( array $envelope , array $body )", "url": "https://secure.php.net/manual/en/function.imap-mail-compose.php"}, {"name": "imap_mail_copy", "synopsis": "Copies mail messages specified by msglist to specified mailbox.", "usage": "bool imap_mail_copy ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-mail-copy.php"}, {"name": "imap_mail_move", "synopsis": "Moves mail messages specified by msglist to the specified mailbox.", "usage": "bool imap_mail_move ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-mail-move.php"}, {"name": "imap_mail", "synopsis": "This function allows sending of emails with correct handling of Cc and Bcc receivers.", "usage": "bool imap_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]] )", "url": "https://secure.php.net/manual/en/function.imap-mail.php"}, {"name": "imap_mailboxmsginfo", "synopsis": "Checks the current mailbox status on the server. It is similar to imap_status(), but will additionally sum up the size of all messages in the mailbox, which will take some additional time to execute.", "usage": "object imap_mailboxmsginfo ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-mailboxmsginfo.php"}, {"name": "imap_mime_header_decode", "synopsis": "Decodes MIME message header extensions that are non ASCII text (see \u00bb\u00a0RFC2047).", "usage": "array imap_mime_header_decode ( string $text )", "url": "https://secure.php.net/manual/en/function.imap-mime-header-decode.php"}, {"name": "imap_msgno", "synopsis": "Returns the message sequence number for the given uid.", "usage": "int imap_msgno ( resource $imap_stream , int $uid )", "url": "https://secure.php.net/manual/en/function.imap-msgno.php"}, {"name": "imap_mutf7_to_utf8", "synopsis": "Decode a modified UTF-7 (as specified in RFC 2060, section 5.1.3) string to UTF-8.", "usage": "string imap_mutf7_to_utf8 ( string $in )", "url": "https://secure.php.net/manual/en/function.imap-mutf7-to-utf8.php"}, {"name": "imap_num_msg", "synopsis": "Gets the number of messages in the current mailbox.", "usage": "int imap_num_msg ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-num-msg.php"}, {"name": "imap_num_recent", "synopsis": "Gets the number of recent messages in the current mailbox.", "usage": "int imap_num_recent ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-num-recent.php"}, {"name": "imap_open", "synopsis": "Opens an IMAP stream to a mailbox.", "usage": "resource imap_open ( string $mailbox , string $username , string $password [, int $options = 0 [, int $n_retries = 0 [, array $params = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.imap-open.php"}, {"name": "imap_ping", "synopsis": "imap_ping() pings the stream to see if it's still active. It may discover new mail; this is the preferred method for a periodic \"new mail check\" as well as a \"keep alive\" for servers which have inactivity timeout.", "usage": "bool imap_ping ( resource $imap_stream )", "url": "https://secure.php.net/manual/en/function.imap-ping.php"}, {"name": "imap_qprint", "synopsis": "Convert a quoted-printable string to an 8 bit string according to \u00bb\u00a0RFC2045, section 6.7.", "usage": "string imap_qprint ( string $string )", "url": "https://secure.php.net/manual/en/function.imap-qprint.php"}, {"name": "imap_renamemailbox", "synopsis": "This function renames on old mailbox to new mailbox (see imap_open() for the format of mbox names).", "usage": "bool imap_renamemailbox ( resource $imap_stream , string $old_mbox , string $new_mbox )", "url": "https://secure.php.net/manual/en/function.imap-renamemailbox.php"}, {"name": "imap_reopen", "synopsis": "Reopens the specified stream to a new mailbox on an IMAP or NNTP server.", "usage": "bool imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] )", "url": "https://secure.php.net/manual/en/function.imap-reopen.php"}, {"name": "imap_rfc822_parse_adrlist", "synopsis": "Parses the address string as defined in \u00bb\u00a0RFC2822 and for each address.", "usage": "array imap_rfc822_parse_adrlist ( string $address , string $default_host )", "url": "https://secure.php.net/manual/en/function.imap-rfc822-parse-adrlist.php"}, {"name": "imap_rfc822_parse_headers", "synopsis": "Gets an object of various header elements, similar to imap_header().", "usage": "object imap_rfc822_parse_headers ( string $headers [, string $defaulthost = \"UNKNOWN\" ] )", "url": "https://secure.php.net/manual/en/function.imap-rfc822-parse-headers.php"}, {"name": "imap_rfc822_write_address", "synopsis": "Returns a properly formatted email address as defined in \u00bb\u00a0RFC2822 given the needed information.", "usage": "string imap_rfc822_write_address ( string $mailbox , string $host , string $personal )", "url": "https://secure.php.net/manual/en/function.imap-rfc822-write-address.php"}, {"name": "imap_savebody", "synopsis": "Saves a part or the whole body of the specified message.", "usage": "bool imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = \"\" [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/function.imap-savebody.php"}, {"name": "imap_search", "synopsis": "This function performs a search on the mailbox currently opened in the given IMAP stream.", "usage": "array imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NULL ]] )", "url": "https://secure.php.net/manual/en/function.imap-search.php"}, {"name": "imap_set_quota", "synopsis": "Sets an upper limit quota on a per mailbox basis.", "usage": "bool imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit )", "url": "https://secure.php.net/manual/en/function.imap-set-quota.php"}, {"name": "imap_setacl", "synopsis": "Sets the ACL for a giving mailbox.", "usage": "bool imap_setacl ( resource $imap_stream , string $mailbox , string $id , string $rights )", "url": "https://secure.php.net/manual/en/function.imap-setacl.php"}, {"name": "imap_setflag_full", "synopsis": "Causes a store to add the specified flag to the flags set for the messages in the specified sequence.", "usage": "bool imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] )", "url": "https://secure.php.net/manual/en/function.imap-setflag-full.php"}, {"name": "imap_sort", "synopsis": "Gets and sorts message numbers by the given parameters.", "usage": "array imap_sort ( resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.imap-sort.php"}, {"name": "imap_status", "synopsis": "Gets status information about the given mailbox.", "usage": "object imap_status ( resource $imap_stream , string $mailbox , int $options )", "url": "https://secure.php.net/manual/en/function.imap-status.php"}, {"name": "imap_subscribe", "synopsis": "Subscribe to a new mailbox.", "usage": "bool imap_subscribe ( resource $imap_stream , string $mailbox )", "url": "https://secure.php.net/manual/en/function.imap-subscribe.php"}, {"name": "imap_thread", "synopsis": "Gets a tree of a threaded message.", "usage": "array imap_thread ( resource $imap_stream [, int $options = SE_FREE ] )", "url": "https://secure.php.net/manual/en/function.imap-thread.php"}, {"name": "imap_timeout", "synopsis": "Sets or fetches the imap timeout.", "usage": "mixed imap_timeout ( int $timeout_type [, int $timeout = -1 ] )", "url": "https://secure.php.net/manual/en/function.imap-timeout.php"}, {"name": "imap_uid", "synopsis": "This function returns the UID for the given message sequence number. An UID is a unique identifier that will not change over time while a message sequence number may change whenever the content of the mailbox changes.", "usage": "int imap_uid ( resource $imap_stream , int $msg_number )", "url": "https://secure.php.net/manual/en/function.imap-uid.php"}, {"name": "imap_undelete", "synopsis": "Removes the deletion flag for a specified message, which is set by imap_delete() or imap_mail_move().", "usage": "bool imap_undelete ( resource $imap_stream , int $msg_number [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.imap-undelete.php"}, {"name": "imap_unsubscribe", "synopsis": "Unsubscribe from the specified mailbox.", "usage": "bool imap_unsubscribe ( resource $imap_stream , string $mailbox )", "url": "https://secure.php.net/manual/en/function.imap-unsubscribe.php"}, {"name": "imap_utf7_decode", "synopsis": "Decodes modified UTF-7 text into ISO-8859-1 string.", "usage": "string imap_utf7_decode ( string $text )", "url": "https://secure.php.net/manual/en/function.imap-utf7-decode.php"}, {"name": "imap_utf7_encode", "synopsis": "Converts data to modified UTF-7 text.", "usage": "string imap_utf7_encode ( string $data )", "url": "https://secure.php.net/manual/en/function.imap-utf7-encode.php"}, {"name": "imap_utf8_to_mutf7", "synopsis": "Encode a UTF-8 string to modified UTF-7 (as specified in RFC 2060, section 5.1.3).", "usage": "string imap_utf8_to_mutf7 ( string $in )", "url": "https://secure.php.net/manual/en/function.imap-utf8-to-mutf7.php"}, {"name": "imap_utf8", "synopsis": "Converts the given mime_encoded_text to UTF-8.", "usage": "string imap_utf8 ( string $mime_encoded_text )", "url": "https://secure.php.net/manual/en/function.imap-utf8.php"}, {"name": "implode", "synopsis": "Join array elements with a glue string.", "usage": "string implode ( string $glue , array $pieces )", "url": "https://secure.php.net/manual/en/function.implode.php"}, {"name": "import_request_variables", "synopsis": "Imports GET/POST/Cookie variables into the global scope. It is useful if you disabled register_globals, but would like to see some variables in the global scope.", "usage": "bool import_request_variables ( string $types [, string $prefix ] )", "url": "https://secure.php.net/manual/en/function.import-request-variables.php"}, {"name": "in_array", "synopsis": "Searches haystack for needle using loose comparison unless strict is set.", "usage": "bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] )", "url": "https://secure.php.net/manual/en/function.in-array.php"}, {"name": "inclued_get_data", "synopsis": "Get the inclued data.", "usage": "array inclued_get_data ( void )", "url": "https://secure.php.net/manual/en/function.inclued-get-data.php"}, {"name": "inet_ntop", "synopsis": null, "usage": "string inet_ntop ( string $in_addr )", "url": "https://secure.php.net/manual/en/function.inet-ntop.php"}, {"name": "inet_pton", "synopsis": "This function converts a human readable IPv4 or IPv6 address (if PHP was built with IPv6 support enabled) into an address family appropriate 32bit or 128bit binary structure.", "usage": "string inet_pton ( string $address )", "url": "https://secure.php.net/manual/en/function.inet-pton.php"}, {"name": "inflate_add", "synopsis": "Incrementally inflates encoded data in the specified context.", "usage": "string inflate_add ( resource $context , string $encoded_data [, int $flush_mode = ZLIB_SYNC_FLUSH ] )", "url": "https://secure.php.net/manual/en/function.inflate-add.php"}, {"name": "inflate_get_read_len", "synopsis": "", "usage": "int inflate_get_read_len ( resource $resource )", "url": "https://secure.php.net/manual/en/function.inflate-get-read-len.php"}, {"name": "inflate_get_status", "synopsis": "Usually returns either ZLIB_OK or ZLIB_STREAM_END.", "usage": "int inflate_get_status ( resource $resource )", "url": "https://secure.php.net/manual/en/function.inflate-get-status.php"}, {"name": "inflate_init", "synopsis": "Initialize an incremental inflate context with the specified encoding.", "usage": "resource inflate_init ( int $encoding [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/function.inflate-init.php"}, {"name": "ingres_autocommit_state", "synopsis": "ingres_autocommit_state() is called to determine whether the current link has autocommit enabled or not.", "usage": "bool ingres_autocommit_state ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-autocommit-state.php"}, {"name": "ingres_autocommit", "synopsis": "ingres_autocommit() is called before opening a transaction (before the first call to ingres_query() or just after a call to ingres_rollback() or ingres_commit()) to switch the autocommit mode of the server on or off (when the script begins the autocommit mode is off).", "usage": "bool ingres_autocommit ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-autocommit.php"}, {"name": "ingres_charset", "synopsis": "ingres_charset() is called to determine the character set being used by the Ingres client, from II_CHARSETxx (where xx is the installation code).", "usage": "string ingres_charset ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-charset.php"}, {"name": "ingres_close", "synopsis": "ingres_close() closes the connection to the Ingres server that is associated with the specified link.", "usage": "bool ingres_close ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-close.php"}, {"name": "ingres_commit", "synopsis": "ingres_commit() commits the currently open transaction, making all changes made to the database permanent.", "usage": "bool ingres_commit ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-commit.php"}, {"name": "ingres_connect", "synopsis": "ingres_connect() opens a connection with the given Ingres database.", "usage": "resource ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] )", "url": "https://secure.php.net/manual/en/function.ingres-connect.php"}, {"name": "ingres_cursor", "synopsis": "Returns a string with the active cursor name. If no cursor is active then NULL is returned.", "usage": "string ingres_cursor ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-cursor.php"}, {"name": "ingres_errno", "synopsis": "Returns an integer containing the last error number. If no error was reported 0 is returned.", "usage": "int ingres_errno ([ resource $link ] )", "url": "https://secure.php.net/manual/en/function.ingres-errno.php"}, {"name": "ingres_error", "synopsis": "Returns a string containing the last error, or NULL if no error has occurred.", "usage": "string ingres_error ([ resource $link ] )", "url": "https://secure.php.net/manual/en/function.ingres-error.php"}, {"name": "ingres_errsqlstate", "synopsis": "Returns a string containing the last SQLSTATE, or NULL if no error has occurred.", "usage": "string ingres_errsqlstate ([ resource $link ] )", "url": "https://secure.php.net/manual/en/function.ingres-errsqlstate.php"}, {"name": "ingres_escape_string", "synopsis": "ingres_escape_string() is used to escape certain characters within a string before it is sent to the database server.", "usage": "string ingres_escape_string ( resource $link , string $source_string )", "url": "https://secure.php.net/manual/en/function.ingres-escape-string.php"}, {"name": "ingres_execute", "synopsis": "Execute a query prepared using ingres_prepare().", "usage": "bool ingres_execute ( resource $result [, array $params [, string $types ]] )", "url": "https://secure.php.net/manual/en/function.ingres-execute.php"}, {"name": "ingres_fetch_array", "synopsis": "This function is an extended version of ingres_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.", "usage": "array ingres_fetch_array ( resource $result [, int $result_type ] )", "url": "https://secure.php.net/manual/en/function.ingres-fetch-array.php"}, {"name": "ingres_fetch_assoc", "synopsis": "This function is stores the data fetched from a query executed using ingres_query() in an associative array, using the field names as keys.", "usage": "array ingres_fetch_assoc ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-fetch-assoc.php"}, {"name": "ingres_fetch_object", "synopsis": "This function is similar to ingres_fetch_array(), with one difference - an object is returned instead of an array. Indirectly, this means that you can access the data only by the field names and not by their offsets (numbers are illegal property names).", "usage": "object ingres_fetch_object ( resource $result [, int $result_type ] )", "url": "https://secure.php.net/manual/en/function.ingres-fetch-object.php"}, {"name": "ingres_fetch_proc_return", "synopsis": "This function is used to retrieve the return value following the execution of an Ingres database procedure (stored procedure).", "usage": "int ingres_fetch_proc_return ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-fetch-proc-return.php"}, {"name": "ingres_fetch_row", "synopsis": "ingres_fetch_row() returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 1.", "usage": "array ingres_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-fetch-row.php"}, {"name": "ingres_field_length", "synopsis": "ingres_field_length() returns the length of a field. This is the number of bytes the server uses to store the field. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.", "usage": "int ingres_field_length ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-length.php"}, {"name": "ingres_field_name", "synopsis": "ingres_field_name() returns the name of a field in a query result.", "usage": "string ingres_field_name ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-name.php"}, {"name": "ingres_field_nullable", "synopsis": "Test if a field is nullable.", "usage": "bool ingres_field_nullable ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-nullable.php"}, {"name": "ingres_field_precision", "synopsis": "ingres_field_precision() returns the precision of a field. This value is used only for decimal, float, and money SQL data types. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.", "usage": "int ingres_field_precision ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-precision.php"}, {"name": "ingres_field_scale", "synopsis": "ingres_field_scale() returns the scale of a field. This value is used only for the decimal SQL data type. For detailed information, see the Ingres OpenAPI User Guide, Appendix \"Data Types\" in the Ingres documentation.", "usage": "int ingres_field_scale ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-scale.php"}, {"name": "ingres_field_type", "synopsis": "Get the type of a field in a query result.", "usage": "string ingres_field_type ( resource $result , int $index )", "url": "https://secure.php.net/manual/en/function.ingres-field-type.php"}, {"name": "ingres_free_result", "synopsis": "", "usage": "bool ingres_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-free-result.php"}, {"name": "ingres_next_error", "synopsis": "Get the next Ingres error for the last executed query. Each call to ingres_next_error() can be followed by a call to ingres_errno(), ingres_error() or ingres_errsqlstate() to get the respective error number, error text, or SQL STATE. While ingres_next_error() returns TRUE, there are more errors to fetch.", "usage": "bool ingres_next_error ([ resource $link ] )", "url": "https://secure.php.net/manual/en/function.ingres-next-error.php"}, {"name": "ingres_num_fields", "synopsis": "ingres_num_fields() returns the number of fields in the results returned by the Ingres server after a call to ingres_query().", "usage": "int ingres_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-num-fields.php"}, {"name": "ingres_num_rows", "synopsis": "This function primarily is meant to get the number of rows modified in the database. However, it can be used to retrieve the number of rows to fetch for a SELECT statement.", "usage": "int ingres_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.ingres-num-rows.php"}, {"name": "ingres_pconnect", "synopsis": "Open a persistent connection to an Ingres database.", "usage": "resource ingres_pconnect ([ string $database [, string $username [, string $password [, array $options ]]]] )", "url": "https://secure.php.net/manual/en/function.ingres-pconnect.php"}, {"name": "ingres_prepare", "synopsis": "Prepares a query for execution by ingres_execute().", "usage": "mixed ingres_prepare ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.ingres-prepare.php"}, {"name": "ingres_query", "synopsis": "ingres_query() sends the given query to the Ingres server.", "usage": "mixed ingres_query ( resource $link , string $query [, array $params [, string $types ]] )", "url": "https://secure.php.net/manual/en/function.ingres-query.php"}, {"name": "ingres_result_seek", "synopsis": "This function is used to position the cursor associated with the result resource before issuing a fetch. If ingres.array_index_start is set to 0 then the first row is 0 else it is 1. ingres_result_seek() can be used only with queries that make use of scrollable cursors. It cannot be used with ingres_unbuffered_query().", "usage": "bool ingres_result_seek ( resource $result , int $position )", "url": "https://secure.php.net/manual/en/function.ingres-result-seek.php"}, {"name": "ingres_rollback", "synopsis": "ingres_rollback() rolls back the currently open transaction, actually cancelling all changes made to the database during the transaction.", "usage": "bool ingres_rollback ( resource $link )", "url": "https://secure.php.net/manual/en/function.ingres-rollback.php"}, {"name": "ingres_set_environment", "synopsis": "ingres_set_environment() is called to set environmental options that affect the output of certain values from Ingres, such as the timezone, date format, decimal character separator, and float precision.", "usage": "bool ingres_set_environment ( resource $link , array $options )", "url": "https://secure.php.net/manual/en/function.ingres-set-environment.php"}, {"name": "ingres_unbuffered_query", "synopsis": "ingres_unbuffered_query() sends the given query to the Ingres server.", "usage": "mixed ingres_unbuffered_query ( resource $link , string $query [, array $params [, string $types ]] )", "url": "https://secure.php.net/manual/en/function.ingres-unbuffered-query.php"}, {"name": "ini_get_all", "synopsis": "Returns all the registered configuration options.", "usage": "array ini_get_all ([ string $extension [, bool $details = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.ini-get-all.php"}, {"name": "ini_get", "synopsis": "Returns the value of the configuration option on success.", "usage": "string ini_get ( string $varname )", "url": "https://secure.php.net/manual/en/function.ini-get.php"}, {"name": "ini_restore", "synopsis": "Restores a given configuration option to its original value.", "usage": "void ini_restore ( string $varname )", "url": "https://secure.php.net/manual/en/function.ini-restore.php"}, {"name": "ini_set", "synopsis": "Sets the value of the given configuration option. The configuration option will keep this new value during the script's execution, and will be restored at the script's ending.", "usage": "string ini_set ( string $varname , string $newvalue )", "url": "https://secure.php.net/manual/en/function.ini-set.php"}, {"name": "inotify_add_watch", "synopsis": "inotify_add_watch() adds a new watch or modify an existing watch for the file or directory specified in pathname.", "usage": "int inotify_add_watch ( resource $inotify_instance , string $pathname , int $mask )", "url": "https://secure.php.net/manual/en/function.inotify-add-watch.php"}, {"name": "inotify_init", "synopsis": "Initialize an inotify instance for use with inotify_add_watch()", "usage": "resource inotify_init ( void )", "url": "https://secure.php.net/manual/en/function.inotify-init.php"}, {"name": "inotify_queue_len", "synopsis": "This function allows to know if inotify_read() will block or not. If a number upper than zero is returned, there are pending events and inotify_read() will not block.", "usage": "int inotify_queue_len ( resource $inotify_instance )", "url": "https://secure.php.net/manual/en/function.inotify-queue-len.php"}, {"name": "inotify_read", "synopsis": "Read inotify events from an inotify instance.", "usage": "array inotify_read ( resource $inotify_instance )", "url": "https://secure.php.net/manual/en/function.inotify-read.php"}, {"name": "inotify_rm_watch", "synopsis": "inotify_rm_watch() removes the watch watch_descriptor from the inotify instance inotify_instance.", "usage": "bool inotify_rm_watch ( resource $inotify_instance , int $watch_descriptor )", "url": "https://secure.php.net/manual/en/function.inotify-rm-watch.php"}, {"name": "intdiv", "synopsis": "Returns the integer quotient of the division of dividend by divisor.", "usage": "int intdiv ( int $dividend , int $divisor )", "url": "https://secure.php.net/manual/en/function.intdiv.php"}, {"name": "interface_exists", "synopsis": "Checks if the given interface has been defined.", "usage": "bool interface_exists ( string $interface_name [, bool $autoload = TRUE ] )", "url": "https://secure.php.net/manual/en/function.interface-exists.php"}, {"name": "intl_error_name", "synopsis": "Return ICU error code name.", "usage": "string intl_error_name ( int $error_code )", "url": "https://secure.php.net/manual/en/function.intl-error-name.php"}, {"name": "intl_get_error_code", "synopsis": "Useful to handle errors occurred in static methods when there's no object to get error code from.", "usage": "int intl_get_error_code ( void )", "url": "https://secure.php.net/manual/en/function.intl-get-error-code.php"}, {"name": "intl_get_error_message", "synopsis": "Get error message from last internationalization function called.", "usage": "string intl_get_error_message ( void )", "url": "https://secure.php.net/manual/en/function.intl-get-error-message.php"}, {"name": "intl_is_failure", "synopsis": "", "usage": "bool intl_is_failure ( int $error_code )", "url": "https://secure.php.net/manual/en/function.intl-is-failure.php"}, {"name": "intval", "synopsis": "Returns the integer value of var, using the specified base for the conversion (the default is base 10). intval() should not be used on objects, as doing so will emit an E_NOTICE level error and return 1.", "usage": "int intval ( mixed $var [, int $base = 10 ] )", "url": "https://secure.php.net/manual/en/function.intval.php"}, {"name": "ip2long", "synopsis": "The function ip2long() generates an long integer representation of IPv4 Internet network address from its Internet standard format (dotted string) representation.", "usage": "int ip2long ( string $ip_address )", "url": "https://secure.php.net/manual/en/function.ip2long.php"}, {"name": "iptcembed", "synopsis": "Embeds binary IPTC data into a JPEG image.", "usage": "mixed iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool = 0 ] )", "url": "https://secure.php.net/manual/en/function.iptcembed.php"}, {"name": "iptcparse", "synopsis": "Parses an \u00bb\u00a0IPTC block into its single tags.", "usage": "array iptcparse ( string $iptcblock )", "url": "https://secure.php.net/manual/en/function.iptcparse.php"}, {"name": "is_a", "synopsis": "Checks if the given object is of this class or has this class as one of its parents.", "usage": "bool is_a ( object $object , string $class_name [, bool $allow_string = FALSE ] )", "url": "https://secure.php.net/manual/en/function.is-a.php"}, {"name": "is_array", "synopsis": "Finds whether the given variable is an array.", "usage": "bool is_array ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-array.php"}, {"name": "is_bool", "synopsis": "Finds whether the given variable is a boolean.", "usage": "bool is_bool ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-bool.php"}, {"name": "is_callable", "synopsis": "Verify that the contents of a variable can be called as a function. This can check that a simple variable contains the name of a valid function, or that an array contains a properly encoded object and function name.", "usage": "bool is_callable ( mixed $var [, bool $syntax_only = FALSE [, string &$callable_name ]] )", "url": "https://secure.php.net/manual/en/function.is-callable.php"}, {"name": "is_countable", "synopsis": "Verify that the contents of a variable is an array or an object implementing Countable", "usage": "bool is_countable ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-countable.php"}, {"name": "is_dir", "synopsis": "Tells whether the given filename is a directory.", "usage": "bool is_dir ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-dir.php"}, {"name": "is_executable", "synopsis": "Tells whether the filename is executable.", "usage": "bool is_executable ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-executable.php"}, {"name": "is_file", "synopsis": "Tells whether the given file is a regular file.", "usage": "bool is_file ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-file.php"}, {"name": "is_finite", "synopsis": "Checks whether val is a legal finite on this platform.", "usage": "bool is_finite ( float $val )", "url": "https://secure.php.net/manual/en/function.is-finite.php"}, {"name": "is_float", "synopsis": "Finds whether the type of the given variable is float.", "usage": "bool is_float ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-float.php"}, {"name": "is_infinite", "synopsis": "Returns TRUE if val is infinite (positive or negative), like the result of log(0) or any value too big to fit into a float on this platform.", "usage": "bool is_infinite ( float $val )", "url": "https://secure.php.net/manual/en/function.is-infinite.php"}, {"name": "is_int", "synopsis": "Finds whether the type of the given variable is integer.", "usage": "bool is_int ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-int.php"}, {"name": "is_iterable", "synopsis": "Verify that the contents of a variable is accepted by the iterable pseudo-type, i.e. that it is an array or an object implementing Traversable", "usage": "bool is_iterable ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-iterable.php"}, {"name": "is_link", "synopsis": "Tells whether the given file is a symbolic link.", "usage": "bool is_link ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-link.php"}, {"name": "is_nan", "synopsis": "Checks whether val is 'not a number', like the result of acos(1.01).", "usage": "bool is_nan ( float $val )", "url": "https://secure.php.net/manual/en/function.is-nan.php"}, {"name": "is_null", "synopsis": "Finds whether the given variable is NULL.", "usage": "bool is_null ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-null.php"}, {"name": "is_numeric", "synopsis": "Finds whether the given variable is numeric. Numeric strings consist of optional sign, any number of digits, optional decimal part and optional exponential part. Thus +0123.45e6 is a valid numeric value. Hexadecimal (e.g. 0xf4c3b00c) and binary (e.g. 0b10100111001) notation is not allowed.", "usage": "bool is_numeric ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-numeric.php"}, {"name": "is_object", "synopsis": "Finds whether the given variable is an object.", "usage": "bool is_object ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-object.php"}, {"name": "is_readable", "synopsis": "Tells whether a file exists and is readable.", "usage": "bool is_readable ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-readable.php"}, {"name": "is_resource", "synopsis": "Finds whether the given variable is a resource.", "usage": "bool is_resource ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-resource.php"}, {"name": "is_scalar", "synopsis": "Finds whether the given variable is a scalar.", "usage": "bool is_scalar ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-scalar.php"}, {"name": "is_soap_fault", "synopsis": "This function is useful to check if the SOAP call failed, but without using exceptions. To use it, create a SoapClient object with the exceptions option set to zero or FALSE. In this case, the SOAP method will return a special SoapFault object which encapsulates the fault details (faultcode, faultstring, faultactor and faultdetails).", "usage": "bool is_soap_fault ( mixed $object )", "url": "https://secure.php.net/manual/en/function.is-soap-fault.php"}, {"name": "is_string", "synopsis": "Finds whether the type given variable is string.", "usage": "bool is_string ( mixed $var )", "url": "https://secure.php.net/manual/en/function.is-string.php"}, {"name": "is_subclass_of", "synopsis": "Checks if the given object has the class class_name as one of its parents or implements it.", "usage": "bool is_subclass_of ( mixed $object , string $class_name [, bool $allow_string = TRUE ] )", "url": "https://secure.php.net/manual/en/function.is-subclass-of.php"}, {"name": "is_tainted", "synopsis": "Checks whether a string is tainted", "usage": "bool is_tainted ( string $string )", "url": "https://secure.php.net/manual/en/function.is-tainted.php"}, {"name": "is_uploaded_file", "synopsis": "Returns TRUE if the file named by filename was uploaded via HTTP POST. This is useful to help ensure that a malicious user hasn't tried to trick the script into working on files upon which it should not be working--for instance, /etc/passwd.", "usage": "bool is_uploaded_file ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-uploaded-file.php"}, {"name": "is_writable", "synopsis": "Returns TRUE if the filename exists and is writable. The filename argument may be a directory name allowing you to check if a directory is writable.", "usage": "bool is_writable ( string $filename )", "url": "https://secure.php.net/manual/en/function.is-writable.php"}, {"name": "isset", "synopsis": "Determine if a variable is set and is not NULL.", "usage": "bool isset ( mixed $var [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.isset.php"}, {"name": "iterator_apply", "synopsis": "Calls a function for every element in an iterator.", "usage": "int iterator_apply ( Traversable $iterator , callable $function [, array $args = NULL ] )", "url": "https://secure.php.net/manual/en/function.iterator-apply.php"}, {"name": "iterator_count", "synopsis": "Count the elements in an iterator. iterator_count() is not guaranteed to retain the current position of the iterator.", "usage": "int iterator_count ( Traversable $iterator )", "url": "https://secure.php.net/manual/en/function.iterator-count.php"}, {"name": "iterator_to_array", "synopsis": "Copy the elements of an iterator into an array.", "usage": "array iterator_to_array ( Traversable $iterator [, bool $use_keys = TRUE ] )", "url": "https://secure.php.net/manual/en/function.iterator-to-array.php"}, {"name": "jddayofweek", "synopsis": "Returns the day of the week. Can return a string or an integer depending on the mode.", "usage": "mixed jddayofweek ( int $julianday [, int $mode = CAL_DOW_DAYNO ] )", "url": "https://secure.php.net/manual/en/function.jddayofweek.php"}, {"name": "jdmonthname", "synopsis": "Returns a string containing a month name. mode tells this function which calendar to convert the Julian Day Count to, and what type of month names are to be returned.", "usage": "string jdmonthname ( int $julianday , int $mode )", "url": "https://secure.php.net/manual/en/function.jdmonthname.php"}, {"name": "jdtofrench", "synopsis": "Converts a Julian Day Count to the French Republican Calendar.", "usage": "string jdtofrench ( int $juliandaycount )", "url": "https://secure.php.net/manual/en/function.jdtofrench.php"}, {"name": "jdtogregorian", "synopsis": "Converts Julian Day Count to a string containing the Gregorian date in the format of \"month/day/year\".", "usage": "string jdtogregorian ( int $julianday )", "url": "https://secure.php.net/manual/en/function.jdtogregorian.php"}, {"name": "jdtojewish", "synopsis": "Converts a Julian Day Count to the Jewish Calendar.", "usage": "string jdtojewish ( int $juliandaycount [, bool $hebrew = FALSE [, int $fl = 0 ]] )", "url": "https://secure.php.net/manual/en/function.jdtojewish.php"}, {"name": "jdtojulian", "synopsis": "Converts Julian Day Count to a string containing the Julian Calendar Date in the format of \"month/day/year\".", "usage": "string jdtojulian ( int $julianday )", "url": "https://secure.php.net/manual/en/function.jdtojulian.php"}, {"name": "jdtounix", "synopsis": "This function will return a Unix timestamp corresponding to the Julian Day given in jday or FALSE if jday is not inside the Unix epoch (Gregorian years between 1970 and 2037 or 2440588 <= jday <= 2465342 ). The time returned is UTC.", "usage": "int jdtounix ( int $jday )", "url": "https://secure.php.net/manual/en/function.jdtounix.php"}, {"name": "jewishtojd", "synopsis": "Although this function can handle dates all the way back to the year 1 (3761 B.C.), such use may not be meaningful. The Jewish calendar has been in use for several thousand years, but in the early days there was no formula to determine the start of a month. A new month was started when the new moon was first observed.", "usage": "int jewishtojd ( int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.jewishtojd.php"}, {"name": "jpeg2wbmp", "synopsis": "Converts a JPEG file into a WBMP file.", "usage": "bool jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )", "url": "https://secure.php.net/manual/en/function.jpeg2wbmp.php"}, {"name": "json_decode", "synopsis": "Takes a JSON encoded string and converts it into a PHP variable.", "usage": "mixed json_decode ( string $json [, bool $assoc = FALSE [, int $depth = 512 [, int $options = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.json-decode.php"}, {"name": "json_encode", "synopsis": "Returns a string containing the JSON representation of the supplied value.", "usage": "string json_encode ( mixed $value [, int $options = 0 [, int $depth = 512 ]] )", "url": "https://secure.php.net/manual/en/function.json-encode.php"}, {"name": "json_last_error_msg", "synopsis": "", "usage": "string json_last_error_msg ( void )", "url": "https://secure.php.net/manual/en/function.json-last-error-msg.php"}, {"name": "json_last_error", "synopsis": "Returns the last error (if any) occurred during the last JSON encoding/decoding.", "usage": "int json_last_error ( void )", "url": "https://secure.php.net/manual/en/function.json-last-error.php"}, {"name": "judy_type", "synopsis": "judy_type() return an integer corresponding to the Judy type of the specified Judy array.", "usage": "int judy_type ( Judy $array )", "url": "https://secure.php.net/manual/en/function.judy-type.php"}, {"name": "judy_version", "synopsis": "Return a string of the PHP Judy version. If the return value is not used, the string will be printed.", "usage": "string judy_version ( void )", "url": "https://secure.php.net/manual/en/function.judy-version.php"}, {"name": "juliantojd", "synopsis": "Valid Range for Julian Calendar 4713 B.C. to 9999 A.D.", "usage": "int juliantojd ( int $month , int $day , int $year )", "url": "https://secure.php.net/manual/en/function.juliantojd.php"}, {"name": "kadm5_chpass_principal", "synopsis": "kadm5_chpass_principal() sets the new password password for the principal.", "usage": "bool kadm5_chpass_principal ( resource $handle , string $principal , string $password )", "url": "https://secure.php.net/manual/en/function.kadm5-chpass-principal.php"}, {"name": "kadm5_create_principal", "synopsis": "Creates a principal with the given password.", "usage": "bool kadm5_create_principal ( resource $handle , string $principal [, string $password [, array $options ]] )", "url": "https://secure.php.net/manual/en/function.kadm5-create-principal.php"}, {"name": "kadm5_delete_principal", "synopsis": "Removes the principal from the Kerberos database.", "usage": "bool kadm5_delete_principal ( resource $handle , string $principal )", "url": "https://secure.php.net/manual/en/function.kadm5-delete-principal.php"}, {"name": "kadm5_destroy", "synopsis": "Closes the connection to the admin server and releases all related resources.", "usage": "bool kadm5_destroy ( resource $handle )", "url": "https://secure.php.net/manual/en/function.kadm5-destroy.php"}, {"name": "kadm5_flush", "synopsis": "Flush all changes to the Kerberos database, leaving the connection to the Kerberos admin server open.", "usage": "bool kadm5_flush ( resource $handle )", "url": "https://secure.php.net/manual/en/function.kadm5-flush.php"}, {"name": "kadm5_get_policies", "synopsis": "Gets an array containing the policies's names.", "usage": "array kadm5_get_policies ( resource $handle )", "url": "https://secure.php.net/manual/en/function.kadm5-get-policies.php"}, {"name": "kadm5_get_principal", "synopsis": "Gets the principal's entries from the Kerberos database.", "usage": "array kadm5_get_principal ( resource $handle , string $principal )", "url": "https://secure.php.net/manual/en/function.kadm5-get-principal.php"}, {"name": "kadm5_get_principals", "synopsis": "kadm5_get_principals() returns an array containing the principals's names.", "usage": "array kadm5_get_principals ( resource $handle )", "url": "https://secure.php.net/manual/en/function.kadm5-get-principals.php"}, {"name": "kadm5_init_with_password", "synopsis": "Opens a connection with the KADM5 library using the principal and the given password to obtain initial credentials from the admin_server.", "usage": "resource kadm5_init_with_password ( string $admin_server , string $realm , string $principal , string $password )", "url": "https://secure.php.net/manual/en/function.kadm5-init-with-password.php"}, {"name": "kadm5_modify_principal", "synopsis": "Modifies a principal according to the given options.", "usage": "bool kadm5_modify_principal ( resource $handle , string $principal , array $options )", "url": "https://secure.php.net/manual/en/function.kadm5-modify-principal.php"}, {"name": "key", "synopsis": "key() returns the index element of the current array position.", "usage": "mixed key ( array $array )", "url": "https://secure.php.net/manual/en/function.key.php"}, {"name": "krsort", "synopsis": "Sorts an array by key in reverse order, maintaining key to data correlations. This is useful mainly for associative arrays.", "usage": "bool krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.krsort.php"}, {"name": "ksort", "synopsis": "Sorts an array by key, maintaining key to data correlations. This is useful mainly for associative arrays.", "usage": "bool ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.ksort.php"}, {"name": "lcfirst", "synopsis": "Returns a string with the first character of str lowercased if that character is alphabetic.", "usage": "string lcfirst ( string $str )", "url": "https://secure.php.net/manual/en/function.lcfirst.php"}, {"name": "lcg_value", "synopsis": "lcg_value() returns a pseudo random number in the range of (0, 1). The function combines two CGs with periods of 2^31 - 85 and 2^31 - 249. The period of this function is equal to the product of both primes.", "usage": "float lcg_value ( void )", "url": "https://secure.php.net/manual/en/function.lcg-value.php"}, {"name": "lchgrp", "synopsis": "Attempts to change the group of the symlink filename to group.", "usage": "bool lchgrp ( string $filename , mixed $group )", "url": "https://secure.php.net/manual/en/function.lchgrp.php"}, {"name": "lchown", "synopsis": "Attempts to change the owner of the symlink filename to user user.", "usage": "bool lchown ( string $filename , mixed $user )", "url": "https://secure.php.net/manual/en/function.lchown.php"}, {"name": "ldap_8859_to_t61", "synopsis": "Translate ISO-8859 characters to t61 characters.", "usage": "string ldap_8859_to_t61 ( string $value )", "url": "https://secure.php.net/manual/en/function.ldap-8859-to-t61.php"}, {"name": "ldap_add", "synopsis": "Add entries in the LDAP directory.", "usage": "bool ldap_add ( resource $link_identifier , string $dn , array $entry [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-add.php"}, {"name": "ldap_bind", "synopsis": "Binds to the LDAP directory with specified RDN and password.", "usage": "bool ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] )", "url": "https://secure.php.net/manual/en/function.ldap-bind.php"}, {"name": "ldap_compare", "synopsis": "Compare value of attribute with value of same attribute in an LDAP directory entry.", "usage": "mixed ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-compare.php"}, {"name": "ldap_connect", "synopsis": "Creates an LDAP link identifier and checks whether the given host and port are plausible.", "usage": "resource ldap_connect ([ string $host = NULL [, int $port = 389 ]] )", "url": "https://secure.php.net/manual/en/function.ldap-connect.php"}, {"name": "ldap_control_paged_result_response", "synopsis": "Retrieve the pagination information send by the server.", "usage": "bool ldap_control_paged_result_response ( resource $link , resource $result [, string &$cookie [, int &$estimated ]] )", "url": "https://secure.php.net/manual/en/function.ldap-control-paged-result-response.php"}, {"name": "ldap_control_paged_result", "synopsis": "Enable LDAP pagination by sending the pagination control (page size, cookie...).", "usage": "bool ldap_control_paged_result ( resource $link , int $pagesize [, bool $iscritical = FALSE [, string $cookie = \"\" ]] )", "url": "https://secure.php.net/manual/en/function.ldap-control-paged-result.php"}, {"name": "ldap_count_entries", "synopsis": "Returns the number of entries stored in the result of previous search operations.", "usage": "int ldap_count_entries ( resource $link_identifier , resource $result_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-count-entries.php"}, {"name": "ldap_delete", "synopsis": "Deletes a particular entry in LDAP directory.", "usage": "bool ldap_delete ( resource $link_identifier , string $dn [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-delete.php"}, {"name": "ldap_dn2ufn", "synopsis": "Turns the specified dn, into a more user-friendly form, stripping off type names.", "usage": "string ldap_dn2ufn ( string $dn )", "url": "https://secure.php.net/manual/en/function.ldap-dn2ufn.php"}, {"name": "ldap_err2str", "synopsis": "Returns the string error message explaining the error number errno. While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages. Never check for a specific error message text, but always use an error number to check.", "usage": "string ldap_err2str ( int $errno )", "url": "https://secure.php.net/manual/en/function.ldap-err2str.php"}, {"name": "ldap_errno", "synopsis": "Returns the standardized error number returned by the last LDAP command. This number can be converted into a textual error message using ldap_err2str().", "usage": "int ldap_errno ( resource $link_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-errno.php"}, {"name": "ldap_error", "synopsis": "Returns the string error message explaining the error generated by the last LDAP command for the given link_identifier. While LDAP errno numbers are standardized, different libraries return different or even localized textual error messages. Never check for a specific error message text, but always use an error number to check.", "usage": "string ldap_error ( resource $link_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-error.php"}, {"name": "ldap_escape", "synopsis": "Escapes value for use in the context implied by flags.", "usage": "string ldap_escape ( string $value [, string $ignore [, int $flags ]] )", "url": "https://secure.php.net/manual/en/function.ldap-escape.php"}, {"name": "ldap_exop_passwd", "synopsis": "Performs a PASSWD extended operation.", "usage": "mixed ldap_exop_passwd ( resource $link [, string $user [, string $oldpw [, string $newpw [, array &$serverctrls ]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-exop-passwd.php"}, {"name": "ldap_exop_refresh", "synopsis": "Performs a Refresh extended operation and returns the data.", "usage": "int ldap_exop_refresh ( resource $link , string $dn , int $ttl )", "url": "https://secure.php.net/manual/en/function.ldap-exop-refresh.php"}, {"name": "ldap_exop_whoami", "synopsis": "Performs a WHOAMI extended operation and returns the data.", "usage": "string ldap_exop_whoami ( resource $link )", "url": "https://secure.php.net/manual/en/function.ldap-exop-whoami.php"}, {"name": "ldap_exop", "synopsis": "Performs an extended operation on the specified link with reqoid the OID of the operation and reqdata the data.", "usage": "mixed ldap_exop ( resource $link , string $reqoid [, string $reqdata [, array $servercontrols [, string &$retdata [, string &$retoid ]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-exop.php"}, {"name": "ldap_explode_dn", "synopsis": "Splits the DN returned by ldap_get_dn() and breaks it up into its component parts. Each part is known as Relative Distinguished Name, or RDN.", "usage": "array ldap_explode_dn ( string $dn , int $with_attrib )", "url": "https://secure.php.net/manual/en/function.ldap-explode-dn.php"}, {"name": "ldap_first_attribute", "synopsis": "Gets the first attribute in the given entry. Remaining attributes are retrieved by calling ldap_next_attribute() successively.", "usage": "string ldap_first_attribute ( resource $link_identifier , resource $result_entry_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-first-attribute.php"}, {"name": "ldap_first_entry", "synopsis": "Returns the entry identifier for first entry in the result. This entry identifier is then supplied to ldap_next_entry() routine to get successive entries from the result.", "usage": "resource ldap_first_entry ( resource $link_identifier , resource $result_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-first-entry.php"}, {"name": "ldap_first_reference", "synopsis": null, "usage": "resource ldap_first_reference ( resource $link , resource $result )", "url": "https://secure.php.net/manual/en/function.ldap-first-reference.php"}, {"name": "ldap_free_result", "synopsis": "Frees up the memory allocated internally to store the result. All result memory will be automatically freed when the script terminates.", "usage": "bool ldap_free_result ( resource $result_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-free-result.php"}, {"name": "ldap_get_attributes", "synopsis": "Reads attributes and values from an entry in the search result.", "usage": "array ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-get-attributes.php"}, {"name": "ldap_get_dn", "synopsis": "Finds out the DN of an entry in the result.", "usage": "string ldap_get_dn ( resource $link_identifier , resource $result_entry_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-get-dn.php"}, {"name": "ldap_get_entries", "synopsis": "Reads multiple entries from the given result, and then reading the attributes and multiple values.", "usage": "array ldap_get_entries ( resource $link_identifier , resource $result_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-get-entries.php"}, {"name": "ldap_get_option", "synopsis": "Sets retval to the value of the specified option.", "usage": "bool ldap_get_option ( resource $link_identifier , int $option , mixed &$retval )", "url": "https://secure.php.net/manual/en/function.ldap-get-option.php"}, {"name": "ldap_get_values_len", "synopsis": "Reads all the values of the attribute in the entry in the result.", "usage": "array ldap_get_values_len ( resource $link_identifier , resource $result_entry_identifier , string $attribute )", "url": "https://secure.php.net/manual/en/function.ldap-get-values-len.php"}, {"name": "ldap_get_values", "synopsis": "Reads all the values of the attribute in the entry in the result.", "usage": "array ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute )", "url": "https://secure.php.net/manual/en/function.ldap-get-values.php"}, {"name": "ldap_list", "synopsis": "Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_ONELEVEL.", "usage": "resource ldap_list ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref [, array $serverctrls ]]]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-list.php"}, {"name": "ldap_mod_add", "synopsis": "Adds one or more attribute values to the specified dn. To add a whole new object see ldap_add() function.", "usage": "bool ldap_mod_add ( resource $link_identifier , string $dn , array $entry [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-mod-add.php"}, {"name": "ldap_mod_del", "synopsis": "Removes one or more attribute values from the specified dn. Object deletions are done by the ldap_delete() function.", "usage": "bool ldap_mod_del ( resource $link_identifier , string $dn , array $entry [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-mod-del.php"}, {"name": "ldap_mod_replace", "synopsis": "Replaces one or more attributes from the specified dn. It may also add or remove attributes.", "usage": "bool ldap_mod_replace ( resource $link_identifier , string $dn , array $entry [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-mod-replace.php"}, {"name": "ldap_modify_batch", "synopsis": "Modifies an existing entry in the LDAP directory. Allows detailed specification of the modifications to perform.", "usage": "bool ldap_modify_batch ( resource $link_identifier , string $dn , array $entry [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-modify-batch.php"}, {"name": "ldap_next_attribute", "synopsis": "Retrieves the attributes in an entry. The first call to ldap_next_attribute() is made with the result_entry_identifier returned from ldap_first_attribute().", "usage": "string ldap_next_attribute ( resource $link_identifier , resource $result_entry_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-next-attribute.php"}, {"name": "ldap_next_entry", "synopsis": "Retrieve the entries stored in the result. Successive calls to the ldap_next_entry() return entries one by one till there are no more entries. The first call to ldap_next_entry() is made after the call to ldap_first_entry() with the result_entry_identifier as returned from the ldap_first_entry().", "usage": "resource ldap_next_entry ( resource $link_identifier , resource $result_entry_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-next-entry.php"}, {"name": "ldap_next_reference", "synopsis": null, "usage": "resource ldap_next_reference ( resource $link , resource $entry )", "url": "https://secure.php.net/manual/en/function.ldap-next-reference.php"}, {"name": "ldap_parse_exop", "synopsis": "Parse LDAP extended operation data from result object result", "usage": "bool ldap_parse_exop ( resource $link , resource $result [, string &$retdata [, string &$retoid ]] )", "url": "https://secure.php.net/manual/en/function.ldap-parse-exop.php"}, {"name": "ldap_parse_reference", "synopsis": null, "usage": "bool ldap_parse_reference ( resource $link , resource $entry , array &$referrals )", "url": "https://secure.php.net/manual/en/function.ldap-parse-reference.php"}, {"name": "ldap_parse_result", "synopsis": "Parses an LDAP search result.", "usage": "bool ldap_parse_result ( resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals [, array &$serverctrls ]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-parse-result.php"}, {"name": "ldap_read", "synopsis": "Performs the search for a specified filter on the directory with the scope LDAP_SCOPE_BASE. So it is equivalent to reading an entry from the directory.", "usage": "resource ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref [, array $serverctrls ]]]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-read.php"}, {"name": "ldap_rename", "synopsis": "The entry specified by dn is renamed/moved.", "usage": "bool ldap_rename ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn [, array $serverctrls ] )", "url": "https://secure.php.net/manual/en/function.ldap-rename.php"}, {"name": "ldap_sasl_bind", "synopsis": null, "usage": "bool ldap_sasl_bind ( resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-sasl-bind.php"}, {"name": "ldap_search", "synopsis": "Performs the search for a specified filter on the directory with the scope of LDAP_SCOPE_SUBTREE. This is equivalent to searching the entire directory.", "usage": "resource ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref [, array $serverctrls ]]]]]] )", "url": "https://secure.php.net/manual/en/function.ldap-search.php"}, {"name": "ldap_set_option", "synopsis": "Sets the value of the specified option to be newval.", "usage": "bool ldap_set_option ( resource $link_identifier , int $option , mixed $newval )", "url": "https://secure.php.net/manual/en/function.ldap-set-option.php"}, {"name": "ldap_set_rebind_proc", "synopsis": null, "usage": "bool ldap_set_rebind_proc ( resource $link , callable $callback )", "url": "https://secure.php.net/manual/en/function.ldap-set-rebind-proc.php"}, {"name": "ldap_sort", "synopsis": "Sort the result of a LDAP search, returned by ldap_search().", "usage": "bool ldap_sort ( resource $link , resource $result , string $sortfilter )", "url": "https://secure.php.net/manual/en/function.ldap-sort.php"}, {"name": "ldap_start_tls", "synopsis": null, "usage": "bool ldap_start_tls ( resource $link )", "url": "https://secure.php.net/manual/en/function.ldap-start-tls.php"}, {"name": "ldap_t61_to_8859", "synopsis": null, "usage": "string ldap_t61_to_8859 ( string $value )", "url": "https://secure.php.net/manual/en/function.ldap-t61-to-8859.php"}, {"name": "ldap_unbind", "synopsis": "Unbinds from the LDAP directory.", "usage": "bool ldap_unbind ( resource $link_identifier )", "url": "https://secure.php.net/manual/en/function.ldap-unbind.php"}, {"name": "levenshtein", "synopsis": "The Levenshtein distance is defined as the minimal number of characters you have to replace, insert or delete to transform str1 into str2. The complexity of the algorithm is O(m*n), where n and m are the length of str1 and str2 (rather good when compared to similar_text(), which is O(max(n,m)**3), but still expensive).", "usage": "int levenshtein ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.levenshtein.php"}, {"name": "libxml_clear_errors", "synopsis": "libxml_clear_errors() clears the libxml error buffer.", "usage": "void libxml_clear_errors ( void )", "url": "https://secure.php.net/manual/en/function.libxml-clear-errors.php"}, {"name": "libxml_disable_entity_loader", "synopsis": "Disable/enable the ability to load external entities.", "usage": "bool libxml_disable_entity_loader ([ bool $disable = TRUE ] )", "url": "https://secure.php.net/manual/en/function.libxml-disable-entity-loader.php"}, {"name": "libxml_get_errors", "synopsis": "Retrieve array of errors.", "usage": "array libxml_get_errors ( void )", "url": "https://secure.php.net/manual/en/function.libxml-get-errors.php"}, {"name": "libxml_get_last_error", "synopsis": "Retrieve last error from libxml.", "usage": "LibXMLError libxml_get_last_error ( void )", "url": "https://secure.php.net/manual/en/function.libxml-get-last-error.php"}, {"name": "libxml_set_external_entity_loader", "synopsis": "Changes the default external entity loader.", "usage": "bool libxml_set_external_entity_loader ( callable $resolver_function )", "url": "https://secure.php.net/manual/en/function.libxml-set-external-entity-loader.php"}, {"name": "libxml_set_streams_context", "synopsis": "Sets the streams context for the next libxml document load or write.", "usage": "void libxml_set_streams_context ( resource $streams_context )", "url": "https://secure.php.net/manual/en/function.libxml-set-streams-context.php"}, {"name": "libxml_use_internal_errors", "synopsis": "libxml_use_internal_errors() allows you to disable standard libxml errors and enable user error handling.", "usage": "bool libxml_use_internal_errors ([ bool $use_errors = FALSE ] )", "url": "https://secure.php.net/manual/en/function.libxml-use-internal-errors.php"}, {"name": "link", "synopsis": "link() creates a hard link.", "usage": "bool link ( string $target , string $link )", "url": "https://secure.php.net/manual/en/function.link.php"}, {"name": "linkinfo", "synopsis": "Gets information about a link.", "usage": "int linkinfo ( string $path )", "url": "https://secure.php.net/manual/en/function.linkinfo.php"}, {"name": "list", "synopsis": "Like array(), this is not really a function, but a language construct. list() is used to assign a list of variables in one operation.", "usage": "array list ( mixed $var1 [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.list.php"}, {"name": "localeconv", "synopsis": "Returns an associative array containing localized numeric and monetary formatting information.", "usage": "array localeconv ( void )", "url": "https://secure.php.net/manual/en/function.localeconv.php"}, {"name": "localtime", "synopsis": "The localtime() function returns an array identical to that of the structure returned by the C function call.", "usage": "array localtime ([ int $timestamp = time() [, bool $is_associative = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.localtime.php"}, {"name": "log_cmd_delete", "synopsis": "A callable function, used by the log_cmd_delete context option, when deleteing a document", "usage": "log_cmd_delete ( array $server , array $writeOptions , array $deleteOptions , array $protocolOptions )", "url": "https://secure.php.net/manual/en/function.log-cmd-delete.php"}, {"name": "log_cmd_insert", "synopsis": "A callable function, used by the log_cmd_insert context option, when inserting a document", "usage": "log_cmd_insert ( array $server , array $document , array $writeOptions , array $protocolOptions )", "url": "https://secure.php.net/manual/en/function.log-cmd-insert.php"}, {"name": "log_cmd_update", "synopsis": "A callable function, used by the log_cmd_update context option, when updateing a document", "usage": "log_cmd_update ( array $server , array $writeOptions , array $updateOptions , array $protocolOptions )", "url": "https://secure.php.net/manual/en/function.log-cmd-update.php"}, {"name": "log_getmore", "synopsis": "A callable function, used by the log_getmore context option, when executing a GET_MORE operation.", "usage": "log_getmore ( array $server , array $info )", "url": "https://secure.php.net/manual/en/function.log-getmore.php"}, {"name": "log_killcursor", "synopsis": "A callable function, used by the log_killcursor context option, when reading a killcursor from MongoDB.", "usage": "log_killcursor ( array $server , array $info )", "url": "https://secure.php.net/manual/en/function.log-killcursor.php"}, {"name": "log_reply", "synopsis": "A callable function, used by the log_reply context option, when reading a reply from MongoDB.", "usage": "log_reply ( array $server , array $messageHeaders , array $operationHeaders )", "url": "https://secure.php.net/manual/en/function.log-reply.php"}, {"name": "log_write_batch", "synopsis": "A callable function, used by the log_write_batch context option, when executing a batch operation.", "usage": "log_write_batch ( array $server , array $writeOptions , array $batch , array $protocolOptions )", "url": "https://secure.php.net/manual/en/function.log-write-batch.php"}, {"name": "log", "synopsis": "If the optional base parameter is specified, log() returns logbase arg, otherwise log() returns the natural logarithm of arg.", "usage": "float log ( float $arg [, float $base = M_E ] )", "url": "https://secure.php.net/manual/en/function.log.php"}, {"name": "log10", "synopsis": "Returns the base-10 logarithm of arg.", "usage": "float log10 ( float $arg )", "url": "https://secure.php.net/manual/en/function.log10.php"}, {"name": "log1p", "synopsis": "log1p() returns log(1 + number) computed in a way that is accurate even when the value of number is close to zero. log() might only return log(1) in this case due to lack of precision.", "usage": "float log1p ( float $number )", "url": "https://secure.php.net/manual/en/function.log1p.php"}, {"name": "long2ip", "synopsis": "The function long2ip() generates an Internet address in dotted format (i.e.: aaa.bbb.ccc.ddd) from the long integer representation.", "usage": "string long2ip ( int $proper_address )", "url": "https://secure.php.net/manual/en/function.long2ip.php"}, {"name": "lstat", "synopsis": "Gathers the statistics of the file or symbolic link named by filename.", "usage": "array lstat ( string $filename )", "url": "https://secure.php.net/manual/en/function.lstat.php"}, {"name": "ltrim", "synopsis": "Strip whitespace (or other characters) from the beginning of a string.", "usage": "string ltrim ( string $str [, string $character_mask ] )", "url": "https://secure.php.net/manual/en/function.ltrim.php"}, {"name": "lzf_compress", "synopsis": "lzf_compress() compresses the given data string using LZF encoding.", "usage": "string lzf_compress ( string $data )", "url": "https://secure.php.net/manual/en/function.lzf-compress.php"}, {"name": "lzf_decompress", "synopsis": "lzf_compress() decompresses the given data string containing lzf encoded data.", "usage": "string lzf_decompress ( string $data )", "url": "https://secure.php.net/manual/en/function.lzf-decompress.php"}, {"name": "lzf_optimized_for", "synopsis": "Determines what was LZF extension optimized for during compilation.", "usage": "int lzf_optimized_for ( void )", "url": "https://secure.php.net/manual/en/function.lzf-optimized-for.php"}, {"name": "m_checkstatus", "synopsis": null, "usage": "int m_checkstatus ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-checkstatus.php"}, {"name": "m_completeauthorizations", "synopsis": null, "usage": "int m_completeauthorizations ( resource $conn , int &$array )", "url": "https://secure.php.net/manual/en/function.m-completeauthorizations.php"}, {"name": "m_connect", "synopsis": null, "usage": "int m_connect ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-connect.php"}, {"name": "m_connectionerror", "synopsis": null, "usage": "string m_connectionerror ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-connectionerror.php"}, {"name": "m_deletetrans", "synopsis": null, "usage": "bool m_deletetrans ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-deletetrans.php"}, {"name": "m_destroyconn", "synopsis": null, "usage": "bool m_destroyconn ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-destroyconn.php"}, {"name": "m_destroyengine", "synopsis": null, "usage": "void m_destroyengine ( void )", "url": "https://secure.php.net/manual/en/function.m-destroyengine.php"}, {"name": "m_getcell", "synopsis": null, "usage": "string m_getcell ( resource $conn , int $identifier , string $column , int $row )", "url": "https://secure.php.net/manual/en/function.m-getcell.php"}, {"name": "m_getcellbynum", "synopsis": null, "usage": "string m_getcellbynum ( resource $conn , int $identifier , int $column , int $row )", "url": "https://secure.php.net/manual/en/function.m-getcellbynum.php"}, {"name": "m_getcommadelimited", "synopsis": null, "usage": "string m_getcommadelimited ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-getcommadelimited.php"}, {"name": "m_getheader", "synopsis": null, "usage": "string m_getheader ( resource $conn , int $identifier , int $column_num )", "url": "https://secure.php.net/manual/en/function.m-getheader.php"}, {"name": "m_initconn", "synopsis": null, "usage": "resource m_initconn ( void )", "url": "https://secure.php.net/manual/en/function.m-initconn.php"}, {"name": "m_initengine", "synopsis": null, "usage": "int m_initengine ( string $location )", "url": "https://secure.php.net/manual/en/function.m-initengine.php"}, {"name": "m_iscommadelimited", "synopsis": null, "usage": "int m_iscommadelimited ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-iscommadelimited.php"}, {"name": "m_maxconntimeout", "synopsis": null, "usage": "bool m_maxconntimeout ( resource $conn , int $secs )", "url": "https://secure.php.net/manual/en/function.m-maxconntimeout.php"}, {"name": "m_monitor", "synopsis": null, "usage": "int m_monitor ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-monitor.php"}, {"name": "m_numcolumns", "synopsis": null, "usage": "int m_numcolumns ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-numcolumns.php"}, {"name": "m_numrows", "synopsis": null, "usage": "int m_numrows ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-numrows.php"}, {"name": "m_parsecommadelimited", "synopsis": null, "usage": "int m_parsecommadelimited ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-parsecommadelimited.php"}, {"name": "m_responsekeys", "synopsis": null, "usage": "array m_responsekeys ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-responsekeys.php"}, {"name": "m_responseparam", "synopsis": null, "usage": "string m_responseparam ( resource $conn , int $identifier , string $key )", "url": "https://secure.php.net/manual/en/function.m-responseparam.php"}, {"name": "m_returnstatus", "synopsis": null, "usage": "int m_returnstatus ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-returnstatus.php"}, {"name": "m_setblocking", "synopsis": null, "usage": "int m_setblocking ( resource $conn , int $tf )", "url": "https://secure.php.net/manual/en/function.m-setblocking.php"}, {"name": "m_setdropfile", "synopsis": null, "usage": "int m_setdropfile ( resource $conn , string $directory )", "url": "https://secure.php.net/manual/en/function.m-setdropfile.php"}, {"name": "m_setip", "synopsis": null, "usage": "int m_setip ( resource $conn , string $host , int $port )", "url": "https://secure.php.net/manual/en/function.m-setip.php"}, {"name": "m_setssl_cafile", "synopsis": null, "usage": "int m_setssl_cafile ( resource $conn , string $cafile )", "url": "https://secure.php.net/manual/en/function.m-setssl-cafile.php"}, {"name": "m_setssl_files", "synopsis": null, "usage": "int m_setssl_files ( resource $conn , string $sslkeyfile , string $sslcertfile )", "url": "https://secure.php.net/manual/en/function.m-setssl-files.php"}, {"name": "m_setssl", "synopsis": null, "usage": "int m_setssl ( resource $conn , string $host , int $port )", "url": "https://secure.php.net/manual/en/function.m-setssl.php"}, {"name": "m_settimeout", "synopsis": null, "usage": "int m_settimeout ( resource $conn , int $seconds )", "url": "https://secure.php.net/manual/en/function.m-settimeout.php"}, {"name": "m_sslcert_gen_hash", "synopsis": null, "usage": "string m_sslcert_gen_hash ( string $filename )", "url": "https://secure.php.net/manual/en/function.m-sslcert-gen-hash.php"}, {"name": "m_transactionssent", "synopsis": null, "usage": "int m_transactionssent ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-transactionssent.php"}, {"name": "m_transinqueue", "synopsis": null, "usage": "int m_transinqueue ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-transinqueue.php"}, {"name": "m_transkeyval", "synopsis": null, "usage": "int m_transkeyval ( resource $conn , int $identifier , string $key , string $value )", "url": "https://secure.php.net/manual/en/function.m-transkeyval.php"}, {"name": "m_transnew", "synopsis": null, "usage": "int m_transnew ( resource $conn )", "url": "https://secure.php.net/manual/en/function.m-transnew.php"}, {"name": "m_transsend", "synopsis": null, "usage": "int m_transsend ( resource $conn , int $identifier )", "url": "https://secure.php.net/manual/en/function.m-transsend.php"}, {"name": "m_uwait", "synopsis": null, "usage": "int m_uwait ( int $microsecs )", "url": "https://secure.php.net/manual/en/function.m-uwait.php"}, {"name": "m_validateidentifier", "synopsis": null, "usage": "int m_validateidentifier ( resource $conn , int $tf )", "url": "https://secure.php.net/manual/en/function.m-validateidentifier.php"}, {"name": "m_verifyconnection", "synopsis": null, "usage": "bool m_verifyconnection ( resource $conn , int $tf )", "url": "https://secure.php.net/manual/en/function.m-verifyconnection.php"}, {"name": "m_verifysslcert", "synopsis": null, "usage": "bool m_verifysslcert ( resource $conn , int $tf )", "url": "https://secure.php.net/manual/en/function.m-verifysslcert.php"}, {"name": "mail", "synopsis": "Sends an email.", "usage": "bool mail ( string $to , string $subject , string $message [, mixed $additional_headers [, string $additional_parameters ]] )", "url": "https://secure.php.net/manual/en/function.mail.php"}, {"name": "mailparse_determine_best_xfer_encoding", "synopsis": "Figures out the best way of encoding the content read from the given file pointer.", "usage": "string mailparse_determine_best_xfer_encoding ( resource $fp )", "url": "https://secure.php.net/manual/en/function.mailparse-determine-best-xfer-encoding.php"}, {"name": "mailparse_msg_create", "synopsis": "Create a MIME mail resource.", "usage": "resource mailparse_msg_create ( void )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-create.php"}, {"name": "mailparse_msg_extract_part_file", "synopsis": "Extracts/decodes a message section from the supplied filename.", "usage": "string mailparse_msg_extract_part_file ( resource $mimemail , mixed $filename [, callable $callbackfunc ] )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-extract-part-file.php"}, {"name": "mailparse_msg_extract_part", "synopsis": null, "usage": "void mailparse_msg_extract_part ( resource $mimemail , string $msgbody [, callable $callbackfunc ] )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-extract-part.php"}, {"name": "mailparse_msg_extract_whole_part_file", "synopsis": null, "usage": "string mailparse_msg_extract_whole_part_file ( resource $mimemail , string $filename [, callable $callbackfunc ] )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-extract-whole-part-file.php"}, {"name": "mailparse_msg_free", "synopsis": "Frees a MIME resource.", "usage": "bool mailparse_msg_free ( resource $mimemail )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-free.php"}, {"name": "mailparse_msg_get_part_data", "synopsis": null, "usage": "array mailparse_msg_get_part_data ( resource $mimemail )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-get-part-data.php"}, {"name": "mailparse_msg_get_part", "synopsis": null, "usage": "resource mailparse_msg_get_part ( resource $mimemail , string $mimesection )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-get-part.php"}, {"name": "mailparse_msg_get_structure", "synopsis": null, "usage": "array mailparse_msg_get_structure ( resource $mimemail )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-get-structure.php"}, {"name": "mailparse_msg_parse_file", "synopsis": "Parses a file. This is the optimal way of parsing a mail file that you have on disk.", "usage": "resource mailparse_msg_parse_file ( string $filename )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-parse-file.php"}, {"name": "mailparse_msg_parse", "synopsis": "Incrementally parse data into the supplied mime mail resource.", "usage": "bool mailparse_msg_parse ( resource $mimemail , string $data )", "url": "https://secure.php.net/manual/en/function.mailparse-msg-parse.php"}, {"name": "mailparse_rfc822_parse_addresses", "synopsis": "Parses a \u00bb\u00a0RFC 822 compliant recipient list, such as that found in the To: header.", "usage": "array mailparse_rfc822_parse_addresses ( string $addresses )", "url": "https://secure.php.net/manual/en/function.mailparse-rfc822-parse-addresses.php"}, {"name": "mailparse_stream_encode", "synopsis": "Streams data from the source file pointer, apply encoding and write to the destination file pointer.", "usage": "bool mailparse_stream_encode ( resource $sourcefp , resource $destfp , string $encoding )", "url": "https://secure.php.net/manual/en/function.mailparse-stream-encode.php"}, {"name": "mailparse_uudecode_all", "synopsis": "Scans the data from the given file pointer and extract each embedded uuencoded file into a temporary file.", "usage": "array mailparse_uudecode_all ( resource $fp )", "url": "https://secure.php.net/manual/en/function.mailparse-uudecode-all.php"}, {"name": "max", "synopsis": "If the first and only parameter is an array, max() returns the highest value in that array. If at least two parameters are provided, max() returns the biggest of these values.", "usage": "mixed max ( array $values )", "url": "https://secure.php.net/manual/en/function.max.php"}, {"name": "maxdb_affected_rows", "synopsis": "Object oriented style", "usage": "int maxdb_affected_rows ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-affected-rows.php"}, {"name": "maxdb_autocommit", "synopsis": "Object oriented style", "usage": "bool maxdb_autocommit ( resource $link , bool $mode )", "url": "https://secure.php.net/manual/en/function.maxdb-autocommit.php"}, {"name": "maxdb_change_user", "synopsis": "Object oriented style", "usage": "bool maxdb_change_user ( resource $link , string $user , string $password , string $database )", "url": "https://secure.php.net/manual/en/function.maxdb-change-user.php"}, {"name": "maxdb_character_set_name", "synopsis": "Object oriented style", "usage": "string maxdb_character_set_name ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-character-set-name.php"}, {"name": "maxdb_close", "synopsis": "Object oriented style", "usage": "bool maxdb_close ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-close.php"}, {"name": "maxdb_commit", "synopsis": "Object oriented style", "usage": "bool maxdb_commit ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-commit.php"}, {"name": "maxdb_connect_errno", "synopsis": "The maxdb_connect_errno() function will return the last error code number for last call to maxdb_connect(). If no errors have occurred, this function will return zero.", "usage": "int maxdb_connect_errno ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-connect-errno.php"}, {"name": "maxdb_connect_error", "synopsis": "The maxdb_connect_error() function is identical to the corresponding maxdb_connect_errno() function in every way, except instead of returning an integer error code the maxdb_connect_error() function will return a string representation of the last error to occur for the last maxdb_connect() call. If no error has occurred, this function will return an empty string.", "usage": "string maxdb_connect_error ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-connect-error.php"}, {"name": "maxdb_connect", "synopsis": "Object oriented style", "usage": "resource maxdb_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )", "url": "https://secure.php.net/manual/en/function.maxdb-connect.php"}, {"name": "maxdb_data_seek", "synopsis": "Object oriented style", "usage": "bool maxdb_data_seek ( resource $result , int $offset )", "url": "https://secure.php.net/manual/en/function.maxdb-data-seek.php"}, {"name": "maxdb_debug", "synopsis": "The maxdb_debug() can be used to trace the SQLDBC communication. The following strings can be used as a parameter to maxdb_debug():", "usage": "void maxdb_debug ( string $debug )", "url": "https://secure.php.net/manual/en/function.maxdb-debug.php"}, {"name": "maxdb_disable_reads_from_master", "synopsis": "Object oriented style", "usage": "bool maxdb_disable_reads_from_master ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-disable-reads-from-master.php"}, {"name": "maxdb_disable_rpl_parse", "synopsis": null, "usage": "bool maxdb_disable_rpl_parse ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-disable-rpl-parse.php"}, {"name": "maxdb_dump_debug_info", "synopsis": null, "usage": "bool maxdb_dump_debug_info ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-dump-debug-info.php"}, {"name": "maxdb_embedded_connect", "synopsis": null, "usage": "resource maxdb_embedded_connect ([ string $dbname ] )", "url": "https://secure.php.net/manual/en/function.maxdb-embedded-connect.php"}, {"name": "maxdb_enable_reads_from_master", "synopsis": null, "usage": "bool maxdb_enable_reads_from_master ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-enable-reads-from-master.php"}, {"name": "maxdb_enable_rpl_parse", "synopsis": null, "usage": "bool maxdb_enable_rpl_parse ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-enable-rpl-parse.php"}, {"name": "maxdb_errno", "synopsis": "Object oriented style", "usage": "int maxdb_errno ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-errno.php"}, {"name": "maxdb_error", "synopsis": "Object oriented style", "usage": "string maxdb_error ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-error.php"}, {"name": "maxdb_fetch_array", "synopsis": "Object oriented style", "usage": "mixed maxdb_fetch_array ( resource $result [, int $resulttype ] )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-array.php"}, {"name": "maxdb_fetch_assoc", "synopsis": "Object oriented style", "usage": "array maxdb_fetch_assoc ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-assoc.php"}, {"name": "maxdb_fetch_field_direct", "synopsis": "Object oriented style", "usage": "mixed maxdb_fetch_field_direct ( resource $result , int $fieldnr )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-field-direct.php"}, {"name": "maxdb_fetch_field", "synopsis": "Object oriented style", "usage": "mixed maxdb_fetch_field ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-field.php"}, {"name": "maxdb_fetch_fields", "synopsis": "Object oriented style", "usage": "mixed maxdb_fetch_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-fields.php"}, {"name": "maxdb_fetch_lengths", "synopsis": "Object oriented style", "usage": "array maxdb_fetch_lengths ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-lengths.php"}, {"name": "maxdb_fetch_object", "synopsis": "Object oriented style", "usage": "object maxdb_fetch_object ( object $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-object.php"}, {"name": "maxdb_fetch_row", "synopsis": "Object oriented style", "usage": "mixed maxdb_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-fetch-row.php"}, {"name": "maxdb_field_count", "synopsis": "Object oriented style", "usage": "int maxdb_field_count ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-field-count.php"}, {"name": "maxdb_field_seek", "synopsis": "Object oriented style", "usage": "bool maxdb_field_seek ( resource $result , int $fieldnr )", "url": "https://secure.php.net/manual/en/function.maxdb-field-seek.php"}, {"name": "maxdb_field_tell", "synopsis": "Object oriented style", "usage": "int maxdb_field_tell ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-field-tell.php"}, {"name": "maxdb_free_result", "synopsis": "Object oriented style", "usage": "void maxdb_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-free-result.php"}, {"name": "maxdb_get_client_info", "synopsis": "The maxdb_get_client_info() function is used to return a string representing the client version being used in the MaxDB extension.", "usage": "string maxdb_get_client_info ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-get-client-info.php"}, {"name": "maxdb_get_client_version", "synopsis": "Returns client version number as an integer.", "usage": "int maxdb_get_client_version ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-get-client-version.php"}, {"name": "maxdb_get_host_info", "synopsis": "Object oriented style", "usage": "string maxdb_get_host_info ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-get-host-info.php"}, {"name": "maxdb_get_proto_info", "synopsis": "Object oriented style", "usage": "int maxdb_get_proto_info ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-get-proto-info.php"}, {"name": "maxdb_get_server_info", "synopsis": "Object oriented style", "usage": "string maxdb_get_server_info ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-get-server-info.php"}, {"name": "maxdb_get_server_version", "synopsis": "Object oriented style", "usage": "int maxdb_get_server_version ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-get-server-version.php"}, {"name": "maxdb_info", "synopsis": "Object oriented style", "usage": "string maxdb_info ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-info.php"}, {"name": "maxdb_init", "synopsis": "Allocates or initializes a MaxDB resource suitable for maxdb_options() and maxdb_real_connect().", "usage": "resource maxdb_init ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-init.php"}, {"name": "maxdb_insert_id", "synopsis": "Object oriented style", "usage": "mixed maxdb_insert_id ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-insert-id.php"}, {"name": "maxdb_kill", "synopsis": "Object oriented style", "usage": "bool maxdb_kill ( resource $link , int $processid )", "url": "https://secure.php.net/manual/en/function.maxdb-kill.php"}, {"name": "maxdb_master_query", "synopsis": null, "usage": "bool maxdb_master_query ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-master-query.php"}, {"name": "maxdb_more_results", "synopsis": "maxdb_more_results() indicates if one or more result sets are available from a previous call to maxdb_multi_query().", "usage": "bool maxdb_more_results ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-more-results.php"}, {"name": "maxdb_multi_query", "synopsis": "Object oriented style", "usage": "bool maxdb_multi_query ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-multi-query.php"}, {"name": "maxdb_next_result", "synopsis": "Since multiple queries are not yet supported, maxdb_next_result() returns always FALSE.", "usage": "bool maxdb_next_result ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-next-result.php"}, {"name": "maxdb_num_fields", "synopsis": "Object oriented style", "usage": "int maxdb_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-num-fields.php"}, {"name": "maxdb_num_rows", "synopsis": "Object oriented style", "usage": "int maxdb_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.maxdb-num-rows.php"}, {"name": "maxdb_options", "synopsis": "Object oriented style", "usage": "bool maxdb_options ( resource $link , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.maxdb-options.php"}, {"name": "maxdb_ping", "synopsis": "Object oriented style", "usage": "bool maxdb_ping ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-ping.php"}, {"name": "maxdb_prepare", "synopsis": "Object oriented style", "usage": "resource maxdb_prepare ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-prepare.php"}, {"name": "maxdb_query", "synopsis": "Object oriented style", "usage": "mixed maxdb_query ( resource $link , string $query [, int $resultmode ] )", "url": "https://secure.php.net/manual/en/function.maxdb-query.php"}, {"name": "maxdb_real_connect", "synopsis": "Object oriented style", "usage": "bool maxdb_real_connect ( resource $link [, string $hostname [, string $username [, string $passwd [, string $dbname [, int $port = 0 [, string $socket ]]]]]] )", "url": "https://secure.php.net/manual/en/function.maxdb-real-connect.php"}, {"name": "maxdb_real_escape_string", "synopsis": "Object oriented style", "usage": "string maxdb_real_escape_string ( resource $link , string $escapestr )", "url": "https://secure.php.net/manual/en/function.maxdb-real-escape-string.php"}, {"name": "maxdb_real_query", "synopsis": "Object oriented style", "usage": "bool maxdb_real_query ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-real-query.php"}, {"name": "maxdb_report", "synopsis": null, "usage": "bool maxdb_report ( int $flags )", "url": "https://secure.php.net/manual/en/function.maxdb-report.php"}, {"name": "maxdb_rollback", "synopsis": "Object oriented style", "usage": "bool maxdb_rollback ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-rollback.php"}, {"name": "maxdb_rpl_parse_enabled", "synopsis": null, "usage": "int maxdb_rpl_parse_enabled ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-rpl-parse-enabled.php"}, {"name": "maxdb_rpl_probe", "synopsis": null, "usage": "bool maxdb_rpl_probe ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-rpl-probe.php"}, {"name": "maxdb_rpl_query_type", "synopsis": "Object oriented style", "usage": "int maxdb_rpl_query_type ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-rpl-query-type.php"}, {"name": "maxdb_select_db", "synopsis": "The maxdb_select_db() function selects the default database (specified by the dbname parameter) to be used when performing queries against the database connection represented by the link parameter.", "usage": "bool maxdb_select_db ( resource $link , string $dbname )", "url": "https://secure.php.net/manual/en/function.maxdb-select-db.php"}, {"name": "maxdb_send_query", "synopsis": "Object oriented style", "usage": "bool maxdb_send_query ( resource $link , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-send-query.php"}, {"name": "maxdb_server_end", "synopsis": null, "usage": "void maxdb_server_end ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-server-end.php"}, {"name": "maxdb_server_init", "synopsis": null, "usage": "bool maxdb_server_init ([ array $server [, array $groups ]] )", "url": "https://secure.php.net/manual/en/function.maxdb-server-init.php"}, {"name": "maxdb_sqlstate", "synopsis": "Object oriented style", "usage": "string maxdb_sqlstate ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-sqlstate.php"}, {"name": "maxdb_ssl_set", "synopsis": "Object oriented style", "usage": "bool maxdb_ssl_set ( resource $link , string $key , string $cert , string $ca , string $capath , string $cipher )", "url": "https://secure.php.net/manual/en/function.maxdb-ssl-set.php"}, {"name": "maxdb_stat", "synopsis": "Object oriented style", "usage": "string maxdb_stat ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-stat.php"}, {"name": "maxdb_stmt_affected_rows", "synopsis": "Object oriented style", "usage": "int maxdb_stmt_affected_rows ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-affected-rows.php"}, {"name": "maxdb_stmt_bind_param", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_bind_param ( resource $stmt , string $types , mixed &$var1 [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-bind-param.php"}, {"name": "maxdb_stmt_bind_result", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_bind_result ( resource $stmt , mixed &$var1 [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-bind-result.php"}, {"name": "maxdb_stmt_close_long_data", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_close_long_data ( resource $stmt , int $param_nr )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-close-long-data.php"}, {"name": "maxdb_stmt_close", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_close ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-close.php"}, {"name": "maxdb_stmt_data_seek", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_data_seek ( resource $statement , int $offset )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-data-seek.php"}, {"name": "maxdb_stmt_errno", "synopsis": "Object oriented style", "usage": "int maxdb_stmt_errno ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-errno.php"}, {"name": "maxdb_stmt_error", "synopsis": "Object oriented style", "usage": "string maxdb_stmt_error ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-error.php"}, {"name": "maxdb_stmt_execute", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_execute ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-execute.php"}, {"name": "maxdb_stmt_fetch", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_fetch ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-fetch.php"}, {"name": "maxdb_stmt_free_result", "synopsis": "Object oriented style", "usage": "void maxdb_stmt_free_result ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-free-result.php"}, {"name": "maxdb_stmt_init", "synopsis": "Object oriented style", "usage": "resource maxdb_stmt_init ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-init.php"}, {"name": "maxdb_stmt_num_rows", "synopsis": "Object oriented style", "usage": "int maxdb_stmt_num_rows ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-num-rows.php"}, {"name": "maxdb_stmt_param_count", "synopsis": "Object oriented style", "usage": "int maxdb_stmt_param_count ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-param-count.php"}, {"name": "maxdb_stmt_prepare", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_prepare ( resource $stmt , string $query )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-prepare.php"}, {"name": "maxdb_stmt_reset", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_reset ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-reset.php"}, {"name": "maxdb_stmt_result_metadata", "synopsis": "Object oriented style", "usage": "resource maxdb_stmt_result_metadata ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-result-metadata.php"}, {"name": "maxdb_stmt_send_long_data", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_send_long_data ( resource $stmt , int $param_nr , string $data )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-send-long-data.php"}, {"name": "maxdb_stmt_sqlstate", "synopsis": "Returns a string containing the SQLSTATE error code for the most recently invoked prepared statement function that can succeed or fail. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC.", "usage": "string maxdb_stmt_sqlstate ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-sqlstate.php"}, {"name": "maxdb_stmt_store_result", "synopsis": "Object oriented style", "usage": "bool maxdb_stmt_store_result ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.maxdb-stmt-store-result.php"}, {"name": "maxdb_store_result", "synopsis": "Object oriented style", "usage": "resource maxdb_store_result ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-store-result.php"}, {"name": "maxdb_thread_id", "synopsis": "Object oriented style", "usage": "int maxdb_thread_id ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-thread-id.php"}, {"name": "maxdb_thread_safe", "synopsis": "maxdb_thread_safe() indicates whether the client library is compiled as thread-safe.", "usage": "bool maxdb_thread_safe ( void )", "url": "https://secure.php.net/manual/en/function.maxdb-thread-safe.php"}, {"name": "maxdb_use_result", "synopsis": "Object oriented style", "usage": "resource maxdb_use_result ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-use-result.php"}, {"name": "maxdb_warning_count", "synopsis": "Object oriented style", "usage": "int maxdb_warning_count ( resource $link )", "url": "https://secure.php.net/manual/en/function.maxdb-warning-count.php"}, {"name": "mb_check_encoding", "synopsis": "Checks if the specified byte stream is valid for the specified encoding. It is useful to prevent so-called \"Invalid Encoding Attack\".", "usage": "bool mb_check_encoding ([ string $var = NULL [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-check-encoding.php"}, {"name": "mb_chr", "synopsis": "", "usage": "string mb_chr ( int $cp [, string $encoding ] )", "url": "https://secure.php.net/manual/en/function.mb-chr.php"}, {"name": "mb_convert_case", "synopsis": "Performs case folding on a string, converted in the way specified by mode.", "usage": "string mb_convert_case ( string $str , int $mode [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-convert-case.php"}, {"name": "mb_convert_encoding", "synopsis": "Converts the character encoding of string str to to_encoding from optionally from_encoding.", "usage": "string mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-convert-encoding.php"}, {"name": "mb_convert_kana", "synopsis": "Performs a \"han-kaku\" - \"zen-kaku\" conversion for string str. This function is only useful for Japanese.", "usage": "string mb_convert_kana ( string $str [, string $option = \"KV\" [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-convert-kana.php"}, {"name": "mb_convert_variables", "synopsis": "Converts character encoding of variables vars in encoding from_encoding to encoding to_encoding.", "usage": "string mb_convert_variables ( string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/function.mb-convert-variables.php"}, {"name": "mb_decode_mimeheader", "synopsis": "Decodes encoded-word string str in MIME header.", "usage": "string mb_decode_mimeheader ( string $str )", "url": "https://secure.php.net/manual/en/function.mb-decode-mimeheader.php"}, {"name": "mb_decode_numericentity", "synopsis": "Convert numeric string reference of string str in a specified block to character.", "usage": "string mb_decode_numericentity ( string $str , array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.mb-decode-numericentity.php"}, {"name": "mb_detect_encoding", "synopsis": "Detects character encoding in string str.", "usage": "string mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.mb-detect-encoding.php"}, {"name": "mb_detect_order", "synopsis": "Sets the automatic character encoding detection order to encoding_list.", "usage": "mixed mb_detect_order ([ mixed $encoding_list = mb_detect_order() ] )", "url": "https://secure.php.net/manual/en/function.mb-detect-order.php"}, {"name": "mb_encode_mimeheader", "synopsis": "Encodes a given string str by the MIME header encoding scheme.", "usage": "string mb_encode_mimeheader ( string $str [, string $charset = determined by mb_language() [, string $transfer_encoding = \"B\" [, string $linefeed = \"\\r\\n\" [, int $indent = 0 ]]]] )", "url": "https://secure.php.net/manual/en/function.mb-encode-mimeheader.php"}, {"name": "mb_encode_numericentity", "synopsis": "Converts specified character codes in string str from character code to HTML numeric character reference.", "usage": "string mb_encode_numericentity ( string $str , array $convmap [, string $encoding = mb_internal_encoding() [, bool $is_hex = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.mb-encode-numericentity.php"}, {"name": "mb_encoding_aliases", "synopsis": "Returns an array of aliases for a known encoding type.", "usage": "array mb_encoding_aliases ( string $encoding )", "url": "https://secure.php.net/manual/en/function.mb-encoding-aliases.php"}, {"name": "mb_ereg_match", "synopsis": "A regular expression match for a multibyte string", "usage": "bool mb_ereg_match ( string $pattern , string $string [, string $option = \"msr\" ] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-match.php"}, {"name": "mb_ereg_replace_callback", "synopsis": "Scans string for matches to pattern, then replaces the matched text with the output of callback function.", "usage": "string mb_ereg_replace_callback ( string $pattern , callable $callback , string $string [, string $option = \"msr\" ] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-replace-callback.php"}, {"name": "mb_ereg_replace", "synopsis": null, "usage": "string mb_ereg_replace ( string $pattern , string $replacement , string $string [, string $option = \"msr\" ] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-replace.php"}, {"name": "mb_ereg_search_getpos", "synopsis": null, "usage": "int mb_ereg_search_getpos ( void )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-getpos.php"}, {"name": "mb_ereg_search_getregs", "synopsis": null, "usage": "array mb_ereg_search_getregs ( void )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-getregs.php"}, {"name": "mb_ereg_search_init", "synopsis": "mb_ereg_search_init() sets string and pattern for a multibyte regular expression. These values are used for mb_ereg_search(), mb_ereg_search_pos(), and mb_ereg_search_regs().", "usage": "bool mb_ereg_search_init ( string $string [, string $pattern [, string $option = \"msr\" ]] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-init.php"}, {"name": "mb_ereg_search_pos", "synopsis": "Returns position and length of a matched part of the multibyte regular expression for a predefined multibyte string", "usage": "array mb_ereg_search_pos ([ string $pattern [, string $option = \"ms\" ]] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-pos.php"}, {"name": "mb_ereg_search_regs", "synopsis": "Returns the matched part of a multibyte regular expression.", "usage": "array mb_ereg_search_regs ([ string $pattern [, string $option = \"ms\" ]] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-regs.php"}, {"name": "mb_ereg_search_setpos", "synopsis": null, "usage": "bool mb_ereg_search_setpos ( int $position )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search-setpos.php"}, {"name": "mb_ereg_search", "synopsis": "Performs a multibyte regular expression match for a predefined multibyte string.", "usage": "bool mb_ereg_search ([ string $pattern [, string $option = \"ms\" ]] )", "url": "https://secure.php.net/manual/en/function.mb-ereg-search.php"}, {"name": "mb_ereg", "synopsis": null, "usage": "int mb_ereg ( string $pattern , string $string [, array &$regs ] )", "url": "https://secure.php.net/manual/en/function.mb-ereg.php"}, {"name": "mb_eregi_replace", "synopsis": null, "usage": "string mb_eregi_replace ( string $pattern , string $replace , string $string [, string $option = \"msri\" ] )", "url": "https://secure.php.net/manual/en/function.mb-eregi-replace.php"}, {"name": "mb_eregi", "synopsis": null, "usage": "int mb_eregi ( string $pattern , string $string [, array &$regs ] )", "url": "https://secure.php.net/manual/en/function.mb-eregi.php"}, {"name": "mb_get_info", "synopsis": null, "usage": "mixed mb_get_info ([ string $type = \"all\" ] )", "url": "https://secure.php.net/manual/en/function.mb-get-info.php"}, {"name": "mb_http_input", "synopsis": null, "usage": "mixed mb_http_input ([ string $type = \"\" ] )", "url": "https://secure.php.net/manual/en/function.mb-http-input.php"}, {"name": "mb_http_output", "synopsis": "Set/Get the HTTP output character encoding. Output after this function is called will be converted from the set internal encoding to encoding.", "usage": "mixed mb_http_output ([ string $encoding = mb_http_output() ] )", "url": "https://secure.php.net/manual/en/function.mb-http-output.php"}, {"name": "mb_internal_encoding", "synopsis": "Set/Get the internal character encoding", "usage": "mixed mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-internal-encoding.php"}, {"name": "mb_language", "synopsis": "Set/Get the current language.", "usage": "mixed mb_language ([ string $language = mb_language() ] )", "url": "https://secure.php.net/manual/en/function.mb-language.php"}, {"name": "mb_list_encodings", "synopsis": "Returns an array containing all supported encodings.", "usage": "array mb_list_encodings ( void )", "url": "https://secure.php.net/manual/en/function.mb-list-encodings.php"}, {"name": "mb_ord", "synopsis": "", "usage": "int mb_ord ( string $str [, string $encoding ] )", "url": "https://secure.php.net/manual/en/function.mb-ord.php"}, {"name": "mb_output_handler", "synopsis": "mb_output_handler() is ob_start() callback function. mb_output_handler() converts characters in the output buffer from internal character encoding to HTTP output character encoding.", "usage": "string mb_output_handler ( string $contents , int $status )", "url": "https://secure.php.net/manual/en/function.mb-output-handler.php"}, {"name": "mb_parse_str", "synopsis": "Parses GET/POST/COOKIE data and sets global variables. Since PHP does not provide raw POST/COOKIE data, it can only be used for GET data for now. It parses URL encoded data, detects encoding, converts coding to internal encoding and set values to the result array or global variables.", "usage": "bool mb_parse_str ( string $encoded_string [, array &$result ] )", "url": "https://secure.php.net/manual/en/function.mb-parse-str.php"}, {"name": "mb_preferred_mime_name", "synopsis": "Get a MIME charset string for a specific encoding.", "usage": "string mb_preferred_mime_name ( string $encoding )", "url": "https://secure.php.net/manual/en/function.mb-preferred-mime-name.php"}, {"name": "mb_regex_encoding", "synopsis": "Set/Get character encoding for a multibyte regex.", "usage": "mixed mb_regex_encoding ([ string $encoding = mb_regex_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-regex-encoding.php"}, {"name": "mb_regex_set_options", "synopsis": null, "usage": "string mb_regex_set_options ([ string $options = mb_regex_set_options() ] )", "url": "https://secure.php.net/manual/en/function.mb-regex-set-options.php"}, {"name": "mb_scrub", "synopsis": "", "usage": "string mb_scrub ( string $str [, string $encoding ] )", "url": "https://secure.php.net/manual/en/function.mb-scrub.php"}, {"name": "mb_send_mail", "synopsis": "Sends email. Headers and messages are converted and encoded according to the mb_language() setting. It's a wrapper function for mail(), so see also mail() for details.", "usage": "bool mb_send_mail ( string $to , string $subject , string $message [, mixed $additional_headers = NULL [, string $additional_parameter = NULL ]] )", "url": "https://secure.php.net/manual/en/function.mb-send-mail.php"}, {"name": "mb_split", "synopsis": null, "usage": "array mb_split ( string $pattern , string $string [, int $limit = -1 ] )", "url": "https://secure.php.net/manual/en/function.mb-split.php"}, {"name": "mb_strcut", "synopsis": "mb_strcut() extracts a substring from a string similarly to mb_substr(), but operates on bytes instead of characters. If the cut position happens to be between two bytes of a multi-byte character, the cut is performed starting from the first byte of that character. This is also the difference to the substr() function, which would simply cut the string between the bytes and thus result in a malformed byte sequence.", "usage": "string mb_strcut ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strcut.php"}, {"name": "mb_strimwidth", "synopsis": "Truncates string str to specified width.", "usage": "string mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker = \"\" [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strimwidth.php"}, {"name": "mb_stripos", "synopsis": "mb_stripos() returns the numeric position of the first occurrence of needle in the haystack string. Unlike mb_strpos(), mb_stripos() is case-insensitive. If needle is not found, it returns FALSE.", "usage": "int mb_stripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-stripos.php"}, {"name": "mb_stristr", "synopsis": "mb_stristr() finds the first occurrence of needle in haystack and returns the portion of haystack. Unlike mb_strstr(), mb_stristr() is case-insensitive. If needle is not found, it returns FALSE.", "usage": "string mb_stristr ( string $haystack , string $needle [, bool $before_needle = FALSE [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-stristr.php"}, {"name": "mb_strlen", "synopsis": "Gets the length of a string.", "usage": "int mb_strlen ( string $str [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-strlen.php"}, {"name": "mb_strpos", "synopsis": "Finds position of the first occurrence of a string in a string.", "usage": "int mb_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strpos.php"}, {"name": "mb_strrchr", "synopsis": "mb_strrchr() finds the last occurrence of needle in haystack and returns the portion of haystack. If needle is not found, it returns FALSE.", "usage": "string mb_strrchr ( string $haystack , string $needle [, bool $part = FALSE [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strrchr.php"}, {"name": "mb_strrichr", "synopsis": "mb_strrichr() finds the last occurrence of needle in haystack and returns the portion of haystack. Unlike mb_strrchr(), mb_strrichr() is case-insensitive. If needle is not found, it returns FALSE.", "usage": "string mb_strrichr ( string $haystack , string $needle [, bool $part = FALSE [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strrichr.php"}, {"name": "mb_strripos", "synopsis": "mb_strripos() performs multi-byte safe strripos() operation based on number of characters. needle position is counted from the beginning of haystack. First character's position is 0. Second character position is 1. Unlike mb_strrpos(), mb_strripos() is case-insensitive.", "usage": "int mb_strripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strripos.php"}, {"name": "mb_strrpos", "synopsis": "Performs a multibyte safe strrpos() operation based on the number of characters. needle position is counted from the beginning of haystack. First character's position is 0. Second character position is 1.", "usage": "int mb_strrpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strrpos.php"}, {"name": "mb_strstr", "synopsis": "mb_strstr() finds the first occurrence of needle in haystack and returns the portion of haystack. If needle is not found, it returns FALSE.", "usage": "string mb_strstr ( string $haystack , string $needle [, bool $before_needle = FALSE [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-strstr.php"}, {"name": "mb_strtolower", "synopsis": "Returns str with all alphabetic characters converted to lowercase.", "usage": "string mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-strtolower.php"}, {"name": "mb_strtoupper", "synopsis": "Returns str with all alphabetic characters converted to uppercase.", "usage": "string mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-strtoupper.php"}, {"name": "mb_strwidth", "synopsis": "Returns the width of string str, where halfwidth characters count as 1, and fullwidth characters count as 2.", "usage": "int mb_strwidth ( string $str [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-strwidth.php"}, {"name": "mb_substitute_character", "synopsis": "Specifies a substitution character when input character encoding is invalid or character code does not exist in output character encoding. Invalid characters may be substituted NULL (no output), string or integer value (Unicode character code value).", "usage": "mixed mb_substitute_character ([ mixed $substchar = mb_substitute_character() ] )", "url": "https://secure.php.net/manual/en/function.mb-substitute-character.php"}, {"name": "mb_substr_count", "synopsis": "Counts the number of times the needle substring occurs in the haystack string.", "usage": "int mb_substr_count ( string $haystack , string $needle [, string $encoding = mb_internal_encoding() ] )", "url": "https://secure.php.net/manual/en/function.mb-substr-count.php"}, {"name": "mb_substr", "synopsis": "Performs a multi-byte safe substr() operation based on number of characters. Position is counted from the beginning of str. First character's position is 0. Second character position is 1, and so on.", "usage": "string mb_substr ( string $str , int $start [, int $length = NULL [, string $encoding = mb_internal_encoding() ]] )", "url": "https://secure.php.net/manual/en/function.mb-substr.php"}, {"name": "mcrypt_cbc", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT.", "usage": "string mcrypt_cbc ( int $cipher , string $key , string $data , int $mode [, string $iv ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-cbc.php"}, {"name": "mcrypt_cfb", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT.", "usage": "string mcrypt_cfb ( int $cipher , string $key , string $data , int $mode , string $iv )", "url": "https://secure.php.net/manual/en/function.mcrypt-cfb.php"}, {"name": "mcrypt_create_iv", "synopsis": "Creates an initialization vector (IV) from a random source.", "usage": "string mcrypt_create_iv ( int $size [, int $source = MCRYPT_DEV_URANDOM ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-create-iv.php"}, {"name": "mcrypt_decrypt", "synopsis": "Decrypts the data and returns the unencrypted data.", "usage": "string mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-decrypt.php"}, {"name": "mcrypt_ecb", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT.", "usage": "string mcrypt_ecb ( int $cipher , string $key , string $data , int $mode )", "url": "https://secure.php.net/manual/en/function.mcrypt-ecb.php"}, {"name": "mcrypt_enc_get_algorithms_name", "synopsis": "This function returns the name of the algorithm.", "usage": "string mcrypt_enc_get_algorithms_name ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-algorithms-name.php"}, {"name": "mcrypt_enc_get_block_size", "synopsis": "Gets the blocksize of the opened algorithm.", "usage": "int mcrypt_enc_get_block_size ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-block-size.php"}, {"name": "mcrypt_enc_get_iv_size", "synopsis": "This function returns the size of the IV of the algorithm specified by the encryption descriptor in bytes. An IV is used in cbc, cfb and ofb modes, and in some algorithms in stream mode.", "usage": "int mcrypt_enc_get_iv_size ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-iv-size.php"}, {"name": "mcrypt_enc_get_key_size", "synopsis": "Gets the maximum supported key size of the algorithm in bytes.", "usage": "int mcrypt_enc_get_key_size ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-key-size.php"}, {"name": "mcrypt_enc_get_modes_name", "synopsis": "This function returns the name of the mode.", "usage": "string mcrypt_enc_get_modes_name ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-modes-name.php"}, {"name": "mcrypt_enc_get_supported_key_sizes", "synopsis": "Gets the supported key sizes of the opened algorithm.", "usage": "array mcrypt_enc_get_supported_key_sizes ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-get-supported-key-sizes.php"}, {"name": "mcrypt_enc_is_block_algorithm_mode", "synopsis": "Tells whether the algorithm of the opened mode works on blocks (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb)..", "usage": "bool mcrypt_enc_is_block_algorithm_mode ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-is-block-algorithm-mode.php"}, {"name": "mcrypt_enc_is_block_algorithm", "synopsis": "Tells whether the algorithm of the opened mode is a block algorithm.", "usage": "bool mcrypt_enc_is_block_algorithm ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-is-block-algorithm.php"}, {"name": "mcrypt_enc_is_block_mode", "synopsis": "Tells whether the opened mode outputs blocks (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).", "usage": "bool mcrypt_enc_is_block_mode ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-is-block-mode.php"}, {"name": "mcrypt_enc_self_test", "synopsis": "This function runs the self test on the algorithm specified by the descriptor td.", "usage": "int mcrypt_enc_self_test ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-enc-self-test.php"}, {"name": "mcrypt_encrypt", "synopsis": "Encrypts the data and returns it.", "usage": "string mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-encrypt.php"}, {"name": "mcrypt_generic_deinit", "synopsis": "This function terminates encryption specified by the encryption descriptor (td). It clears all buffers, but does not close the module. You need to call mcrypt_module_close() yourself. (But PHP does this for you at the end of the script.)", "usage": "bool mcrypt_generic_deinit ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-generic-deinit.php"}, {"name": "mcrypt_generic_end", "synopsis": "", "usage": "bool mcrypt_generic_end ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-generic-end.php"}, {"name": "mcrypt_generic_init", "synopsis": "You need to call this function before every call to mcrypt_generic() or mdecrypt_generic().", "usage": "int mcrypt_generic_init ( resource $td , string $key , string $iv )", "url": "https://secure.php.net/manual/en/function.mcrypt-generic-init.php"}, {"name": "mcrypt_generic", "synopsis": "This function encrypts data. The data is padded with \"\\0\" to make sure the length of the data is n * blocksize. This function returns the encrypted data. Note that the length of the returned string can in fact be longer than the input, due to the padding of the data.", "usage": "string mcrypt_generic ( resource $td , string $data )", "url": "https://secure.php.net/manual/en/function.mcrypt-generic.php"}, {"name": "mcrypt_get_block_size", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or 2.5.x.", "usage": "int mcrypt_get_block_size ( int $cipher )", "url": "https://secure.php.net/manual/en/function.mcrypt-get-block-size.php"}, {"name": "mcrypt_get_cipher_name", "synopsis": "mcrypt_get_cipher_name() is used to get the name of the specified cipher.", "usage": "string mcrypt_get_cipher_name ( int $cipher )", "url": "https://secure.php.net/manual/en/function.mcrypt-get-cipher-name.php"}, {"name": "mcrypt_get_iv_size", "synopsis": "Gets the size of the IV belonging to a specific cipher/mode combination.", "usage": "int mcrypt_get_iv_size ( string $cipher , string $mode )", "url": "https://secure.php.net/manual/en/function.mcrypt-get-iv-size.php"}, {"name": "mcrypt_get_key_size", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or 2.5.x.", "usage": "int mcrypt_get_key_size ( int $cipher )", "url": "https://secure.php.net/manual/en/function.mcrypt-get-key-size.php"}, {"name": "mcrypt_list_algorithms", "synopsis": "Gets the list of all supported algorithms in the lib_dir parameter.", "usage": "array mcrypt_list_algorithms ([ string $lib_dir = ini_get(\"mcrypt.algorithms_dir\") ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-list-algorithms.php"}, {"name": "mcrypt_list_modes", "synopsis": "Gets the list of all supported modes in the lib_dir parameter.", "usage": "array mcrypt_list_modes ([ string $lib_dir = ini_get(\"mcrypt.modes_dir\") ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-list-modes.php"}, {"name": "mcrypt_module_close", "synopsis": "Closes the specified encryption handle.", "usage": "bool mcrypt_module_close ( resource $td )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-close.php"}, {"name": "mcrypt_module_get_algo_block_size", "synopsis": "Gets the blocksize of the specified algorithm.", "usage": "int mcrypt_module_get_algo_block_size ( string $algorithm [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-get-algo-block-size.php"}, {"name": "mcrypt_module_get_algo_key_size", "synopsis": "Gets the maximum supported keysize of the opened mode.", "usage": "int mcrypt_module_get_algo_key_size ( string $algorithm [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-get-algo-key-size.php"}, {"name": "mcrypt_module_get_supported_key_sizes", "synopsis": "Returns an array with the key sizes supported by the specified algorithm. If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm.", "usage": "array mcrypt_module_get_supported_key_sizes ( string $algorithm [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-get-supported-key-sizes.php"}, {"name": "mcrypt_module_is_block_algorithm_mode", "synopsis": "This function returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb).", "usage": "bool mcrypt_module_is_block_algorithm_mode ( string $mode [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-is-block-algorithm-mode.php"}, {"name": "mcrypt_module_is_block_algorithm", "synopsis": "This function returns TRUE if the specified algorithm is a block algorithm, or FALSE if it is a stream one.", "usage": "bool mcrypt_module_is_block_algorithm ( string $algorithm [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-is-block-algorithm.php"}, {"name": "mcrypt_module_is_block_mode", "synopsis": "This function returns TRUE if the mode outputs blocks of bytes or FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream).", "usage": "bool mcrypt_module_is_block_mode ( string $mode [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-is-block-mode.php"}, {"name": "mcrypt_module_open", "synopsis": "This function opens the module of the algorithm and the mode to be used. The name of the algorithm is specified in algorithm, e.g. \"twofish\" or is one of the MCRYPT_ciphername constants. The module is closed by calling mcrypt_module_close().", "usage": "resource mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-open.php"}, {"name": "mcrypt_module_self_test", "synopsis": "This function runs the self test on the algorithm specified.", "usage": "bool mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] )", "url": "https://secure.php.net/manual/en/function.mcrypt-module-self-test.php"}, {"name": "mcrypt_ofb", "synopsis": "The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The mode should be either MCRYPT_ENCRYPT or MCRYPT_DECRYPT.", "usage": "string mcrypt_ofb ( int $cipher , string $key , string $data , int $mode , string $iv )", "url": "https://secure.php.net/manual/en/function.mcrypt-ofb.php"}, {"name": "md5_file", "synopsis": "Calculates the MD5 hash of the file specified by the filename parameter using the \u00bb\u00a0RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash. The hash is a 32-character hexadecimal number.", "usage": "string md5_file ( string $filename [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.md5-file.php"}, {"name": "md5", "synopsis": "Calculates the MD5 hash of str using the \u00bb\u00a0RSA Data Security, Inc. MD5 Message-Digest Algorithm, and returns that hash.", "usage": "string md5 ( string $str [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.md5.php"}, {"name": "mdecrypt_generic", "synopsis": "This function decrypts data. Note that the length of the returned string can in fact be longer than the unencrypted string, due to the padding of the data.", "usage": "string mdecrypt_generic ( resource $td , string $data )", "url": "https://secure.php.net/manual/en/function.mdecrypt-generic.php"}, {"name": "memcache_debug", "synopsis": "memcache_debug() turns on debug output if parameter on_off is equal to TRUE and turns off if it's FALSE.", "usage": "bool memcache_debug ( bool $on_off )", "url": "https://secure.php.net/manual/en/function.memcache-debug.php"}, {"name": "memory_get_peak_usage", "synopsis": "Returns the peak of memory, in bytes, that's been allocated to your PHP script.", "usage": "int memory_get_peak_usage ([ bool $real_usage = FALSE ] )", "url": "https://secure.php.net/manual/en/function.memory-get-peak-usage.php"}, {"name": "memory_get_usage", "synopsis": "Returns the amount of memory, in bytes, that's currently being allocated to your PHP script.", "usage": "int memory_get_usage ([ bool $real_usage = FALSE ] )", "url": "https://secure.php.net/manual/en/function.memory-get-usage.php"}, {"name": "metaphone", "synopsis": "Calculates the metaphone key of str.", "usage": "string metaphone ( string $str [, int $phonemes = 0 ] )", "url": "https://secure.php.net/manual/en/function.metaphone.php"}, {"name": "method_exists", "synopsis": "Checks if the class method exists in the given object.", "usage": "bool method_exists ( mixed $object , string $method_name )", "url": "https://secure.php.net/manual/en/function.method-exists.php"}, {"name": "mhash_count", "synopsis": "Gets the highest available hash ID.", "usage": "int mhash_count ( void )", "url": "https://secure.php.net/manual/en/function.mhash-count.php"}, {"name": "mhash_get_block_size", "synopsis": "Gets the size of a block of the specified hash.", "usage": "int mhash_get_block_size ( int $hash )", "url": "https://secure.php.net/manual/en/function.mhash-get-block-size.php"}, {"name": "mhash_get_hash_name", "synopsis": "Gets the name of the specified hash.", "usage": "string mhash_get_hash_name ( int $hash )", "url": "https://secure.php.net/manual/en/function.mhash-get-hash-name.php"}, {"name": "mhash_keygen_s2k", "synopsis": "Generates a key according to the given hash, using an user provided password.", "usage": "string mhash_keygen_s2k ( int $hash , string $password , string $salt , int $bytes )", "url": "https://secure.php.net/manual/en/function.mhash-keygen-s2k.php"}, {"name": "mhash", "synopsis": "mhash() applies a hash function specified by hash to the data.", "usage": "string mhash ( int $hash , string $data [, string $key ] )", "url": "https://secure.php.net/manual/en/function.mhash.php"}, {"name": "microtime", "synopsis": "microtime() returns the current Unix timestamp with microseconds. This function is only available on operating systems that support the gettimeofday() system call.", "usage": "mixed microtime ([ bool $get_as_float = FALSE ] )", "url": "https://secure.php.net/manual/en/function.microtime.php"}, {"name": "mime_content_type", "synopsis": "Returns the MIME content type for a file as determined by using information from the magic.mime file.", "usage": "string mime_content_type ( string $filename )", "url": "https://secure.php.net/manual/en/function.mime-content-type.php"}, {"name": "min", "synopsis": "If the first and only parameter is an array, min() returns the lowest value in that array. If at least two parameters are provided, min() returns the smallest of these values.", "usage": "mixed min ( array $values )", "url": "https://secure.php.net/manual/en/function.min.php"}, {"name": "ming_keypress", "synopsis": null, "usage": "int ming_keypress ( string $char )", "url": "https://secure.php.net/manual/en/function.ming-keypress.php"}, {"name": "ming_setcubicthreshold", "synopsis": "Sets the threshold error for drawing cubic beziers.", "usage": "void ming_setcubicthreshold ( int $threshold )", "url": "https://secure.php.net/manual/en/function.ming-setcubicthreshold.php"}, {"name": "ming_setscale", "synopsis": "Sets the scale of the output SWF. Inside the SWF file, coordinates are measured in TWIPS, rather than PIXELS. There are 20 TWIPS in 1 pixel.", "usage": "void ming_setscale ( float $scale )", "url": "https://secure.php.net/manual/en/function.ming-setscale.php"}, {"name": "ming_setswfcompression", "synopsis": "Sets the SWF output compression level.", "usage": "void ming_setswfcompression ( int $level )", "url": "https://secure.php.net/manual/en/function.ming-setswfcompression.php"}, {"name": "ming_useconstants", "synopsis": null, "usage": "void ming_useconstants ( int $use )", "url": "https://secure.php.net/manual/en/function.ming-useconstants.php"}, {"name": "ming_useswfversion", "synopsis": "Sets the SWF version to be used in the movie. This affect the bahaviour of Action Script.", "usage": "void ming_useswfversion ( int $version )", "url": "https://secure.php.net/manual/en/function.ming-useswfversion.php"}, {"name": "mkdir", "synopsis": "Attempts to create the directory specified by pathname.", "usage": "bool mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = FALSE [, resource $context ]]] )", "url": "https://secure.php.net/manual/en/function.mkdir.php"}, {"name": "mktime", "synopsis": "Returns the Unix timestamp corresponding to the arguments given. This timestamp is a long integer containing the number of seconds between the Unix Epoch (January 1 1970 00:00:00 GMT) and the time specified.", "usage": "int mktime ([ int $hour = date(\"H\") [, int $minute = date(\"i\") [, int $second = date(\"s\") [, int $month = date(\"n\") [, int $day = date(\"j\") [, int $year = date(\"Y\") [, int $is_dst = -1 ]]]]]]] )", "url": "https://secure.php.net/manual/en/function.mktime.php"}, {"name": "money_format", "synopsis": "money_format() returns a formatted version of number. This function wraps the C library function strfmon(), with the difference that this implementation converts only one number at a time.", "usage": "string money_format ( string $format , float $number )", "url": "https://secure.php.net/manual/en/function.money-format.php"}, {"name": "MongoDB\\BSON\\fromJSON", "synopsis": "Converts an \u00bb\u00a0extended JSON string to its BSON representation.", "usage": "string MongoDB\\BSON\\fromJSON ( string $json )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-fromjson.php"}, {"name": "MongoDB\\BSON\\fromPHP", "synopsis": "Serializes a PHP array or object (e.g. document) to its \u00bb\u00a0BSON representation. The returned binary string will describe a BSON document.", "usage": "string MongoDB\\BSON\\fromPHP ( array|object $value )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-fromphp.php"}, {"name": "MongoDB\\BSON\\toCanonicalExtendedJSON", "synopsis": "Converts a BSON string to its \u00bb\u00a0Canonical Extended JSON representation. The canonical format prefers type fidelity at the expense of concise output and is most suited for producing output that can be converted back to BSON without any loss of type information (e.g. numeric types will remain differentiated).", "usage": "string MongoDB\\BSON\\toCanonicalExtendedJSON ( string $bson )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-tocanonicalextendedjson.php"}, {"name": "MongoDB\\BSON\\toJSON", "synopsis": "Converts a BSON string to its \u00bb\u00a0Legacy Extended JSON representation.", "usage": "string MongoDB\\BSON\\toJSON ( string $bson )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-tojson.php"}, {"name": "MongoDB\\BSON\\toPHP", "synopsis": "Unserializes a BSON document (i.e. binary string) to its PHP representation. The typeMap paramater may be used to control the PHP types used for converting BSON arrays and documents (both root and embedded).", "usage": "array|object MongoDB\\BSON\\toPHP ( string $bson [, array $typeMap = array() ] )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-tophp.php"}, {"name": "MongoDB\\BSON\\toRelaxedExtendedJSON", "synopsis": "Converts a BSON string to its \u00bb\u00a0Relaxed Extended JSON representation. The relaxed format prefers use of JSON type primitives at the expense of type fidelity and is most suited for producing output that can be easily consumed by web APIs and humans.", "usage": "string MongoDB\\BSON\\toRelaxedExtendedJSON ( string $bson )", "url": "https://secure.php.net/manual/en/function.mongodb.bson-torelaxedextendedjson.php"}, {"name": "MongoDB\\Driver\\Monitoring\\addSubscriber", "synopsis": "Registers a new monitoring event subscriber with the driver. Registered subscribers will be notified of monitoring events through specific methods.", "usage": "void MongoDB\\Driver\\Monitoring\\addSubscriber ( MongoDB\\Driver\\Monitoring\\Subscriber $subscriber )", "url": "https://secure.php.net/manual/en/function.mongodb.driver.monitoring.addsubscriber.php"}, {"name": "MongoDB\\Driver\\Monitoring\\addSubscriber", "synopsis": "Unregisters an existing monitoring event subscriber from the driver. Unregistered subscribers will no longer be notified of monitoring events.", "usage": "void MongoDB\\Driver\\Monitoring\\addSubscriber ( MongoDB\\Driver\\Monitoring\\Subscriber $subscriber )", "url": "https://secure.php.net/manual/en/function.mongodb.driver.monitoring.removesubscriber.php"}, {"name": "move_uploaded_file", "synopsis": "This function checks to ensure that the file designated by filename is a valid upload file (meaning that it was uploaded via PHP's HTTP POST upload mechanism). If the file is valid, it will be moved to the filename given by destination.", "usage": "bool move_uploaded_file ( string $filename , string $destination )", "url": "https://secure.php.net/manual/en/function.move-uploaded-file.php"}, {"name": "mqseries_back", "synopsis": "The mqseries_back() (MQBACK) call indicates to the queue manager that all the message gets and puts that have occurred since the last syncpoint are to be backed out. Messages put as part of a unit of work are deleted; messages retrieved as part of a unit of work are reinstated on the queue.", "usage": "void mqseries_back ( resource $hconn , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-back.php"}, {"name": "mqseries_begin", "synopsis": "The mqseries_begin() (MQBEGIN) call begins a unit of work that is coordinated by the queue manager, and that may involve external resource managers.", "usage": "void mqseries_begin ( resource $hconn , array $beginOptions , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-begin.php"}, {"name": "mqseries_close", "synopsis": "The mqseries_close() (MQCLOSE) call relinquishes access to an object, and is the inverse of the mqseries_open() (MQOPEN) call.", "usage": "void mqseries_close ( resource $hconn , resource $hobj , int $options , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-close.php"}, {"name": "mqseries_cmit", "synopsis": "The mqseries_cmit() (MQCMIT) call indicates to the queue manager that the application has reached a syncpoint, and that all of the message gets and puts that have occurred since the last syncpoint are to be made permanent. Messages put as part of a unit of work are made available to other applications; messages retrieved as part of a unit of work are deleted.", "usage": "void mqseries_cmit ( resource $hconn , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-cmit.php"}, {"name": "mqseries_conn", "synopsis": "The mqseries_conn() (MQCONN) call connects an application program to a queue manager. It provides a queue manager connection handle, which is used by the application on subsequent message queuing calls.", "usage": "void mqseries_conn ( string $qManagerName , resource &$hconn , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-conn.php"}, {"name": "mqseries_connx", "synopsis": "The mqseries_connx() (MQCONNX) call connects an application program to a queue manager. It provides a queue manager connection handle, which is used by the application on subsequent MQ calls.", "usage": "void mqseries_connx ( string $qManagerName , array &$connOptions , resource &$hconn , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-connx.php"}, {"name": "mqseries_disc", "synopsis": "The mqseries_disc() (MQDISC) call breaks the connection between the queue manager and the application program, and is the inverse of the mqseries_conn() (MQCONN) or mqseries_connx() (MQCONNX) call.", "usage": "void mqseries_disc ( resource $hconn , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-disc.php"}, {"name": "mqseries_get", "synopsis": "The mqseries_get() (MQGET) call retrieves a message from a local queue that has been opened using the mqseries_open() (MQOPEN) call", "usage": "void mqseries_get ( resource $hConn , resource $hObj , array &$md , array &$gmo , int &$bufferLength , string &$msg , int &$data_length , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-get.php"}, {"name": "mqseries_inq", "synopsis": "The mqseries_inq() (MQINQ) call returns an array of integers and a set of character strings containing the attributes of an object.", "usage": "void mqseries_inq ( resource $hconn , resource $hobj , int $selectorCount , array $selectors , int $intAttrCount , resource &$intAttr , int $charAttrLength , resource &$charAttr , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-inq.php"}, {"name": "mqseries_open", "synopsis": "The mqseries_open() (MQOPEN) call establishes access to an object.", "usage": "void mqseries_open ( resource $hconn , array &$objDesc , int $option , resource &$hobj , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-open.php"}, {"name": "mqseries_put", "synopsis": "The mqseries_put() (MQPUT) call puts a message on a queue or distribution list. The queue or distribution list must already be open.", "usage": "void mqseries_put ( resource $hConn , resource $hObj , array &$md , array &$pmo , string $message , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-put.php"}, {"name": "mqseries_put1", "synopsis": "The mqseries_put1() (MQPUT1) call puts one message on a queue. The queue need not be open.", "usage": "void mqseries_put1 ( resource $hconn , resource &$objDesc , resource &$msgDesc , resource &$pmo , string $buffer , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-put1.php"}, {"name": "mqseries_set", "synopsis": "The mqseries_set() (MQSET) call is used to change the attributes of an object represented by a handle. The object must be a queue.", "usage": "void mqseries_set ( resource $hConn , resource $hObj , int $selectorCount , array $selectors , int $intAttrCount , array $intAttrs , int $charAttrLength , array $charAttrs , resource &$compCode , resource &$reason )", "url": "https://secure.php.net/manual/en/function.mqseries-set.php"}, {"name": "mqseries_strerror", "synopsis": "mqseries_strerror() returns the message that correspond to the reason result code.", "usage": "string mqseries_strerror ( int $reason )", "url": "https://secure.php.net/manual/en/function.mqseries-strerror.php"}, {"name": "msession_connect", "synopsis": null, "usage": "bool msession_connect ( string $host , string $port )", "url": "https://secure.php.net/manual/en/function.msession-connect.php"}, {"name": "msession_count", "synopsis": null, "usage": "int msession_count ( void )", "url": "https://secure.php.net/manual/en/function.msession-count.php"}, {"name": "msession_create", "synopsis": null, "usage": "bool msession_create ( string $session [, string $classname [, string $data ]] )", "url": "https://secure.php.net/manual/en/function.msession-create.php"}, {"name": "msession_destroy", "synopsis": null, "usage": "bool msession_destroy ( string $name )", "url": "https://secure.php.net/manual/en/function.msession-destroy.php"}, {"name": "msession_disconnect", "synopsis": null, "usage": "void msession_disconnect ( void )", "url": "https://secure.php.net/manual/en/function.msession-disconnect.php"}, {"name": "msession_find", "synopsis": null, "usage": "array msession_find ( string $name , string $value )", "url": "https://secure.php.net/manual/en/function.msession-find.php"}, {"name": "msession_get_array", "synopsis": null, "usage": "array msession_get_array ( string $session )", "url": "https://secure.php.net/manual/en/function.msession-get-array.php"}, {"name": "msession_get_data", "synopsis": null, "usage": "string msession_get_data ( string $session )", "url": "https://secure.php.net/manual/en/function.msession-get-data.php"}, {"name": "msession_get", "synopsis": null, "usage": "string msession_get ( string $session , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.msession-get.php"}, {"name": "msession_inc", "synopsis": null, "usage": "string msession_inc ( string $session , string $name )", "url": "https://secure.php.net/manual/en/function.msession-inc.php"}, {"name": "msession_list", "synopsis": null, "usage": "array msession_list ( void )", "url": "https://secure.php.net/manual/en/function.msession-list.php"}, {"name": "msession_listvar", "synopsis": "Used for searching sessions with common attributes.", "usage": "array msession_listvar ( string $name )", "url": "https://secure.php.net/manual/en/function.msession-listvar.php"}, {"name": "msession_lock", "synopsis": null, "usage": "int msession_lock ( string $name )", "url": "https://secure.php.net/manual/en/function.msession-lock.php"}, {"name": "msession_plugin", "synopsis": null, "usage": "string msession_plugin ( string $session , string $val [, string $param ] )", "url": "https://secure.php.net/manual/en/function.msession-plugin.php"}, {"name": "msession_randstr", "synopsis": null, "usage": "string msession_randstr ( int $param )", "url": "https://secure.php.net/manual/en/function.msession-randstr.php"}, {"name": "msession_set_array", "synopsis": null, "usage": "void msession_set_array ( string $session , array $tuples )", "url": "https://secure.php.net/manual/en/function.msession-set-array.php"}, {"name": "msession_set_data", "synopsis": null, "usage": "bool msession_set_data ( string $session , string $value )", "url": "https://secure.php.net/manual/en/function.msession-set-data.php"}, {"name": "msession_set", "synopsis": null, "usage": "bool msession_set ( string $session , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.msession-set.php"}, {"name": "msession_timeout", "synopsis": null, "usage": "int msession_timeout ( string $session [, int $param ] )", "url": "https://secure.php.net/manual/en/function.msession-timeout.php"}, {"name": "msession_uniq", "synopsis": null, "usage": "string msession_uniq ( int $param [, string $classname [, string $data ]] )", "url": "https://secure.php.net/manual/en/function.msession-uniq.php"}, {"name": "msession_unlock", "synopsis": null, "usage": "int msession_unlock ( string $session , int $key )", "url": "https://secure.php.net/manual/en/function.msession-unlock.php"}, {"name": "msg_get_queue", "synopsis": "msg_get_queue() returns an id that can be used to access the System V message queue with the given key. The first call creates the message queue with the optional perms. A second call to msg_get_queue() for the same key will return a different message queue identifier, but both identifiers access the same underlying message queue.", "usage": "resource msg_get_queue ( int $key [, int $perms = 0666 ] )", "url": "https://secure.php.net/manual/en/function.msg-get-queue.php"}, {"name": "msg_queue_exists", "synopsis": "Checks whether the message queue key exists.", "usage": "bool msg_queue_exists ( int $key )", "url": "https://secure.php.net/manual/en/function.msg-queue-exists.php"}, {"name": "msg_receive", "synopsis": "msg_receive() will receive the first message from the specified queue of the type specified by desiredmsgtype.", "usage": "bool msg_receive ( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = TRUE [, int $flags = 0 [, int &$errorcode ]]] )", "url": "https://secure.php.net/manual/en/function.msg-receive.php"}, {"name": "msg_remove_queue", "synopsis": "msg_remove_queue() destroys the message queue specified by the queue. Only use this function when all processes have finished working with the message queue and you need to release the system resources held by it.", "usage": "bool msg_remove_queue ( resource $queue )", "url": "https://secure.php.net/manual/en/function.msg-remove-queue.php"}, {"name": "msg_send", "synopsis": "msg_send() sends a message of type msgtype (which MUST be greater than 0) to the message queue specified by queue.", "usage": "bool msg_send ( resource $queue , int $msgtype , mixed $message [, bool $serialize = TRUE [, bool $blocking = TRUE [, int &$errorcode ]]] )", "url": "https://secure.php.net/manual/en/function.msg-send.php"}, {"name": "msg_set_queue", "synopsis": "msg_set_queue() allows you to change the values of the msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the underlying message queue data structure.", "usage": "bool msg_set_queue ( resource $queue , array $data )", "url": "https://secure.php.net/manual/en/function.msg-set-queue.php"}, {"name": "msg_stat_queue", "synopsis": "msg_stat_queue() returns the message queue meta data for the message queue specified by the queue. This is useful, for example, to determine which process sent the message that was just received.", "usage": "array msg_stat_queue ( resource $queue )", "url": "https://secure.php.net/manual/en/function.msg-stat-queue.php"}, {"name": "msql_affected_rows", "synopsis": "Returns number of affected rows by the last SELECT, UPDATE or DELETE query associated with result.", "usage": "int msql_affected_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.msql-affected-rows.php"}, {"name": "msql_close", "synopsis": "msql_close() closes the non-persistent connection to the mSQL server that's associated with the specified link identifier.", "usage": "bool msql_close ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-close.php"}, {"name": "msql_connect", "synopsis": "msql_connect() establishes a connection to a mSQL server.", "usage": "resource msql_connect ([ string $hostname ] )", "url": "https://secure.php.net/manual/en/function.msql-connect.php"}, {"name": "msql_create_db", "synopsis": "msql_create_db() attempts to create a new database on the mSQL server.", "usage": "bool msql_create_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-create-db.php"}, {"name": "msql_data_seek", "synopsis": "msql_data_seek() moves the internal row pointer of the mSQL result associated with the specified query identifier to point to the specified row number. The next call to msql_fetch_row() would return that row.", "usage": "bool msql_data_seek ( resource $result , int $row_number )", "url": "https://secure.php.net/manual/en/function.msql-data-seek.php"}, {"name": "msql_db_query", "synopsis": "msql_db_query() selects a database and executes a query on it.", "usage": "resource msql_db_query ( string $database , string $query [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-db-query.php"}, {"name": "msql_drop_db", "synopsis": "msql_drop_db() attempts to drop (remove) a database from the mSQL server.", "usage": "bool msql_drop_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-drop-db.php"}, {"name": "msql_error", "synopsis": "msql_error() returns the last issued error by the mSQL server. Note that only the last error message is accessible with msql_error().", "usage": "string msql_error ( void )", "url": "https://secure.php.net/manual/en/function.msql-error.php"}, {"name": "msql_fetch_array", "synopsis": "msql_fetch_array() is an extended version of msql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.", "usage": "array msql_fetch_array ( resource $result [, int $result_type ] )", "url": "https://secure.php.net/manual/en/function.msql-fetch-array.php"}, {"name": "msql_fetch_field", "synopsis": "msql_fetch_field() can be used in order to obtain information about fields in a certain query result.", "usage": "object msql_fetch_field ( resource $result [, int $field_offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.msql-fetch-field.php"}, {"name": "msql_fetch_object", "synopsis": "msql_fetch_object() is similar to msql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).", "usage": "object msql_fetch_object ( resource $result )", "url": "https://secure.php.net/manual/en/function.msql-fetch-object.php"}, {"name": "msql_fetch_row", "synopsis": "msql_fetch_row() fetches one row of data from the result associated with the specified query identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0.", "usage": "array msql_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.msql-fetch-row.php"}, {"name": "msql_field_flags", "synopsis": "msql_field_flags() returns the field flags of the specified field.", "usage": "string msql_field_flags ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-flags.php"}, {"name": "msql_field_len", "synopsis": "msql_field_len() returns the length of the specified field.", "usage": "int msql_field_len ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-len.php"}, {"name": "msql_field_name", "synopsis": "msql_field_name() gets the name of the specified field index.", "usage": "string msql_field_name ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-name.php"}, {"name": "msql_field_seek", "synopsis": "Seeks to the specified field offset. If the next call to msql_fetch_field() won't include a field offset, this field would be returned.", "usage": "bool msql_field_seek ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-seek.php"}, {"name": "msql_field_table", "synopsis": "Returns the name of the table that the specified field is in.", "usage": "int msql_field_table ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-table.php"}, {"name": "msql_field_type", "synopsis": "msql_field_type() gets the type of the specified field index.", "usage": "string msql_field_type ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.msql-field-type.php"}, {"name": "msql_free_result", "synopsis": "msql_free_result() frees the memory associated with query_identifier. When PHP completes a request, this memory is freed automatically, so you only need to call this function when you want to make sure you don't use too much memory while the script is running.", "usage": "bool msql_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.msql-free-result.php"}, {"name": "msql_list_dbs", "synopsis": "msql_list_tables() lists the databases available on the specified link_identifier.", "usage": "resource msql_list_dbs ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-list-dbs.php"}, {"name": "msql_list_fields", "synopsis": "msql_list_fields() returns information about the given table.", "usage": "resource msql_list_fields ( string $database , string $tablename [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-list-fields.php"}, {"name": "msql_list_tables", "synopsis": "msql_list_tables() lists the tables on the specified database.", "usage": "resource msql_list_tables ( string $database [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-list-tables.php"}, {"name": "msql_num_fields", "synopsis": "msql_num_fields() returns the number of fields in a result set.", "usage": "int msql_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.msql-num-fields.php"}, {"name": "msql_num_rows", "synopsis": "msql_num_rows() returns the number of rows in a result set.", "usage": "int msql_num_rows ( resource $query_identifier )", "url": "https://secure.php.net/manual/en/function.msql-num-rows.php"}, {"name": "msql_pconnect", "synopsis": "msql_pconnect() acts very much like msql_connect() with two major differences.", "usage": "resource msql_pconnect ([ string $hostname ] )", "url": "https://secure.php.net/manual/en/function.msql-pconnect.php"}, {"name": "msql_query", "synopsis": "msql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.", "usage": "resource msql_query ( string $query [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-query.php"}, {"name": "msql_result", "synopsis": "msql_result() returns the contents of one cell from a mSQL result set.", "usage": "string msql_result ( resource $result , int $row [, mixed $field ] )", "url": "https://secure.php.net/manual/en/function.msql-result.php"}, {"name": "msql_select_db", "synopsis": "msql_select_db() sets the current active database on the server that's associated with the specified link_identifier.", "usage": "bool msql_select_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.msql-select-db.php"}, {"name": "mssql_bind", "synopsis": "Binds a parameter to a stored procedure or a remote stored procedure.", "usage": "bool mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = FALSE [, bool $is_null = FALSE [, int $maxlen = -1 ]]] )", "url": "https://secure.php.net/manual/en/function.mssql-bind.php"}, {"name": "mssql_close", "synopsis": "Closes the link to a MS SQL Server database that's associated with the specified link identifier. If the link identifier isn't specified, the last opened link is assumed.", "usage": "bool mssql_close ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.mssql-close.php"}, {"name": "mssql_connect", "synopsis": "mssql_connect() establishes a connection to a MS SQL server.", "usage": "resource mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.mssql-connect.php"}, {"name": "mssql_data_seek", "synopsis": "mssql_data_seek() moves the internal row pointer of the MS SQL result associated with the specified result identifier to point to the specified row number, first row being number 0. The next call to mssql_fetch_row() would return that row.", "usage": "bool mssql_data_seek ( resource $result_identifier , int $row_number )", "url": "https://secure.php.net/manual/en/function.mssql-data-seek.php"}, {"name": "mssql_execute", "synopsis": "Executes a stored procedure on a MS SQL server database", "usage": "mixed mssql_execute ( resource $stmt [, bool $skip_results = FALSE ] )", "url": "https://secure.php.net/manual/en/function.mssql-execute.php"}, {"name": "mssql_fetch_array", "synopsis": "mssql_fetch_array() is an extended version of mssql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.", "usage": "array mssql_fetch_array ( resource $result [, int $result_type = MSSQL_BOTH ] )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-array.php"}, {"name": "mssql_fetch_assoc", "synopsis": "Returns an associative array that corresponds to the fetched row and moves the internal data pointer ahead. mssql_fetch_assoc() is equivalent to calling mssql_fetch_array() with MSSQL_ASSOC for the optional second parameter.", "usage": "array mssql_fetch_assoc ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-assoc.php"}, {"name": "mssql_fetch_batch", "synopsis": "Returns the next batch of records.", "usage": "int mssql_fetch_batch ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-batch.php"}, {"name": "mssql_fetch_field", "synopsis": "mssql_fetch_field() can be used in order to obtain information about fields in a certain query result.", "usage": "object mssql_fetch_field ( resource $result [, int $field_offset = -1 ] )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-field.php"}, {"name": "mssql_fetch_object", "synopsis": "mssql_fetch_object() is similar to mssql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names).", "usage": "object mssql_fetch_object ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-object.php"}, {"name": "mssql_fetch_row", "synopsis": "mssql_fetch_row() fetches one row of data from the result associated with the specified result identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0.", "usage": "array mssql_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-fetch-row.php"}, {"name": "mssql_field_length", "synopsis": "Returns the length of field no. offset in result.", "usage": "int mssql_field_length ( resource $result [, int $offset = -1 ] )", "url": "https://secure.php.net/manual/en/function.mssql-field-length.php"}, {"name": "mssql_field_name", "synopsis": "Returns the name of field no. offset in result.", "usage": "string mssql_field_name ( resource $result [, int $offset = -1 ] )", "url": "https://secure.php.net/manual/en/function.mssql-field-name.php"}, {"name": "mssql_field_seek", "synopsis": "Seeks to the specified field offset. If the next call to mssql_fetch_field() won't include a field offset, this field would be returned.", "usage": "bool mssql_field_seek ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mssql-field-seek.php"}, {"name": "mssql_field_type", "synopsis": "Returns the type of field no. offset in result.", "usage": "string mssql_field_type ( resource $result [, int $offset = -1 ] )", "url": "https://secure.php.net/manual/en/function.mssql-field-type.php"}, {"name": "mssql_free_result", "synopsis": "mssql_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call mssql_free_result() with the result identifier as an argument and the associated result memory will be freed.", "usage": "bool mssql_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-free-result.php"}, {"name": "mssql_free_statement", "synopsis": "mssql_free_statement() only needs to be called if you are worried about using too much memory while your script is running. All statement memory will automatically be freed when the script ends. You may call mssql_free_statement() with the statement identifier as an argument and the associated statement memory will be freed.", "usage": "bool mssql_free_statement ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.mssql-free-statement.php"}, {"name": "mssql_get_last_message", "synopsis": "Gets the last message from the MS-SQL server", "usage": "string mssql_get_last_message ( void )", "url": "https://secure.php.net/manual/en/function.mssql-get-last-message.php"}, {"name": "mssql_guid_string", "synopsis": "Converts a 16 byte binary GUID to a string.", "usage": "string mssql_guid_string ( string $binary [, bool $short_format = FALSE ] )", "url": "https://secure.php.net/manual/en/function.mssql-guid-string.php"}, {"name": "mssql_init", "synopsis": "Initializes a stored procedure or a remote stored procedure.", "usage": "resource mssql_init ( string $sp_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.mssql-init.php"}, {"name": "mssql_min_error_severity", "synopsis": "Sets the minimum error severity.", "usage": "void mssql_min_error_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.mssql-min-error-severity.php"}, {"name": "mssql_min_message_severity", "synopsis": "Sets the minimum message severity.", "usage": "void mssql_min_message_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.mssql-min-message-severity.php"}, {"name": "mssql_next_result", "synopsis": "When sending more than one SQL statement to the server or executing a stored procedure with multiple results, it will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the rows from the new result set.", "usage": "bool mssql_next_result ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.mssql-next-result.php"}, {"name": "mssql_num_fields", "synopsis": "mssql_num_fields() returns the number of fields in a result set.", "usage": "int mssql_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-num-fields.php"}, {"name": "mssql_num_rows", "synopsis": "mssql_num_rows() returns the number of rows in a result set.", "usage": "int mssql_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.mssql-num-rows.php"}, {"name": "mssql_pconnect", "synopsis": "mssql_pconnect() acts very much like mssql_connect() with two major differences.", "usage": "resource mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.mssql-pconnect.php"}, {"name": "mssql_query", "synopsis": "mssql_query() sends a query to the currently active database on the server that's associated with the specified link identifier.", "usage": "mixed mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] )", "url": "https://secure.php.net/manual/en/function.mssql-query.php"}, {"name": "mssql_result", "synopsis": "mssql_result() returns the contents of one cell from a MS SQL result set.", "usage": "string mssql_result ( resource $result , int $row , mixed $field )", "url": "https://secure.php.net/manual/en/function.mssql-result.php"}, {"name": "mssql_rows_affected", "synopsis": "Returns the number of records affected by the last write query.", "usage": "int mssql_rows_affected ( resource $link_identifier )", "url": "https://secure.php.net/manual/en/function.mssql-rows-affected.php"}, {"name": "mssql_select_db", "synopsis": "mssql_select_db() sets the current active database on the server that's associated with the specified link identifier.", "usage": "bool mssql_select_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.mssql-select-db.php"}, {"name": "mt_getrandmax", "synopsis": null, "usage": "int mt_getrandmax ( void )", "url": "https://secure.php.net/manual/en/function.mt-getrandmax.php"}, {"name": "mt_rand", "synopsis": null, "usage": "int mt_rand ( void )", "url": "https://secure.php.net/manual/en/function.mt-rand.php"}, {"name": "mt_srand", "synopsis": "Seeds the random number generator with seed or with a random value if no seed is given.", "usage": "void mt_srand ([ int $seed [, int $mode = MT_RAND_MT19937 ]] )", "url": "https://secure.php.net/manual/en/function.mt-srand.php"}, {"name": "PDOStatement::rowCount()", "synopsis": "Get the number of affected rows by the last INSERT, UPDATE, REPLACE or DELETE query associated with link_identifier.", "usage": "int mysql_affected_rows ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-affected-rows.php"}, {"name": "mysql_client_encoding", "synopsis": "Retrieves the character_set variable from MySQL.", "usage": "string mysql_client_encoding ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-client-encoding.php"}, {"name": "mysql_close", "synopsis": "mysql_close() closes the non-persistent connection to the MySQL server that's associated with the specified link identifier. If link_identifier isn't specified, the last opened link is used.", "usage": "bool mysql_close ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-close.php"}, {"name": "PDO::__construct()", "synopsis": "Opens or reuses a connection to a MySQL server.", "usage": "resource mysql_connect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, bool $new_link = FALSE [, int $client_flags = 0 ]]]]] )", "url": "https://secure.php.net/manual/en/function.mysql-connect.php"}, {"name": "PDO::query()", "synopsis": "mysql_create_db() attempts to create a new database on the server associated with the specified link identifier.", "usage": "bool mysql_create_db ( string $database_name [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-create-db.php"}, {"name": "mysql_data_seek", "synopsis": "mysql_data_seek() moves the internal row pointer of the MySQL result associated with the specified result identifier to point to the specified row number. The next call to a MySQL fetch function, such as mysql_fetch_assoc(), would return that row.", "usage": "bool mysql_data_seek ( resource $result , int $row_number )", "url": "https://secure.php.net/manual/en/function.mysql-data-seek.php"}, {"name": "mysql_db_name", "synopsis": "Retrieve the database name from a call to mysql_list_dbs().", "usage": "string mysql_db_name ( resource $result , int $row [, mixed $field = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-db-name.php"}, {"name": "PDO::__construct()", "synopsis": "mysql_db_query() selects a database, and executes a query on it.", "usage": "resource mysql_db_query ( string $database , string $query [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-db-query.php"}, {"name": "mysql_drop_db", "synopsis": "mysql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier. This function is deprecated, it is preferable to use mysql_query() to issue an sql DROP DATABASE statement instead.", "usage": "bool mysql_drop_db ( string $database_name [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-drop-db.php"}, {"name": "PDO::errorCode()", "synopsis": "Returns the error number from the last MySQL function.", "usage": "int mysql_errno ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-errno.php"}, {"name": "PDO::errorInfo()", "synopsis": "Returns the error text from the last MySQL function. Errors coming back from the MySQL database backend no longer issue warnings. Instead, use mysql_error() to retrieve the error text. Note that this function only returns the error text from the most recently executed MySQL function (not including mysql_error() and mysql_errno()), so if you want to use it, make sure you check the value before calling another MySQL function.", "usage": "string mysql_error ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-error.php"}, {"name": "PDO::quote()", "synopsis": "This function will escape the unescaped_string, so that it is safe to place it in a mysql_query(). This function is deprecated.", "usage": "string mysql_escape_string ( string $unescaped_string )", "url": "https://secure.php.net/manual/en/function.mysql-escape-string.php"}, {"name": "PDOStatement::fetch()", "synopsis": "Returns an array that corresponds to the fetched row and moves the internal data pointer ahead.", "usage": "array mysql_fetch_array ( resource $result [, int $result_type = MYSQL_BOTH ] )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-array.php"}, {"name": "PDOStatement::fetch(PDO::FETCH_ASSOC)", "synopsis": "Returns an associative array that corresponds to the fetched row and moves the internal data pointer ahead. mysql_fetch_assoc() is equivalent to calling mysql_fetch_array() with MYSQL_ASSOC for the optional second parameter. It only returns an associative array.", "usage": "array mysql_fetch_assoc ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-assoc.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "Returns an object containing field information. This function can be used to obtain information about fields in the provided query result.", "usage": "object mysql_fetch_field ( resource $result [, int $field_offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-field.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "Returns an array that corresponds to the lengths of each field in the last row fetched by MySQL.", "usage": "array mysql_fetch_lengths ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-lengths.php"}, {"name": "PDOStatement::fetch(PDO::FETCH_OBJ)", "synopsis": "Returns an object with properties that correspond to the fetched row and moves the internal data pointer ahead.", "usage": "object mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-object.php"}, {"name": "PDOStatement::fetch(PDO::FETCH_NUM)", "synopsis": "Returns a numerical array that corresponds to the fetched row and moves the internal data pointer ahead.", "usage": "array mysql_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-fetch-row.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "mysql_field_flags() returns the field flags of the specified field. The flags are reported as a single word per flag separated by a single space, so that you can split the returned value using explode().", "usage": "string mysql_field_flags ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-flags.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "mysql_field_len() returns the length of the specified field.", "usage": "int mysql_field_len ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-len.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "mysql_field_name() returns the name of the specified field index.", "usage": "string mysql_field_name ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-name.php"}, {"name": "PDOStatement::fetch()", "synopsis": "Seeks to the specified field offset. If the next call to mysql_fetch_field() doesn't include a field offset, the field offset specified in mysql_field_seek() will be returned.", "usage": "bool mysql_field_seek ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-seek.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "Returns the name of the table that the specified field is in.", "usage": "string mysql_field_table ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-table.php"}, {"name": "PDOStatement::getColumnMeta()", "synopsis": "mysql_field_type() is similar to the mysql_field_name() function. The arguments are identical, but the field type is returned instead.", "usage": "string mysql_field_type ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.mysql-field-type.php"}, {"name": "PDOStatement::closeCursor()", "synopsis": "mysql_free_result() will free all memory associated with the result identifier result.", "usage": "bool mysql_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-free-result.php"}, {"name": "PDO::getAttribute(PDO::ATTR_CLIENT_VERSION)", "synopsis": "mysql_get_client_info() returns a string that represents the client library version.", "usage": "string mysql_get_client_info ( void )", "url": "https://secure.php.net/manual/en/function.mysql-get-client-info.php"}, {"name": "PDO::getAttribute(PDO::ATTR_CONNECTION_STATUS)", "synopsis": "Describes the type of connection in use for the connection, including the server host name.", "usage": "string mysql_get_host_info ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-get-host-info.php"}, {"name": "mysql_get_proto_info", "synopsis": "Retrieves the MySQL protocol.", "usage": "int mysql_get_proto_info ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-get-proto-info.php"}, {"name": "PDO::getAttribute(PDO::ATTR_SERVER_VERSION)", "synopsis": "Retrieves the MySQL server version.", "usage": "string mysql_get_server_info ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-get-server-info.php"}, {"name": "mysql_info", "synopsis": "Returns detailed information about the last query.", "usage": "string mysql_info ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-info.php"}, {"name": "PDO::lastInsertId()", "synopsis": "Retrieves the ID generated for an AUTO_INCREMENT column by the previous query (usually INSERT).", "usage": "int mysql_insert_id ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-insert-id.php"}, {"name": "mysql_list_dbs", "synopsis": "Returns a result pointer containing the databases available from the current mysql daemon.", "usage": "resource mysql_list_dbs ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-list-dbs.php"}, {"name": "mysql_list_fields", "synopsis": "Retrieves information about the given table name.", "usage": "resource mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-list-fields.php"}, {"name": "mysql_list_processes", "synopsis": "Retrieves the current MySQL server threads.", "usage": "resource mysql_list_processes ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-list-processes.php"}, {"name": "mysql_list_tables", "synopsis": "Retrieves a list of table names from a MySQL database.", "usage": "resource mysql_list_tables ( string $database [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-list-tables.php"}, {"name": "PDOStatement::columnCount()", "synopsis": "Retrieves the number of fields from a query.", "usage": "int mysql_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-num-fields.php"}, {"name": "PDOStatement::rowCount()", "synopsis": "Retrieves the number of rows from a result set. This command is only valid for statements like SELECT or SHOW that return an actual result set. To retrieve the number of rows affected by a INSERT, UPDATE, REPLACE or DELETE query, use mysql_affected_rows().", "usage": "int mysql_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.mysql-num-rows.php"}, {"name": "PDO::__construct()", "synopsis": "Establishes a persistent connection to a MySQL server.", "usage": "resource mysql_pconnect ([ string $server = ini_get(\"mysql.default_host\") [, string $username = ini_get(\"mysql.default_user\") [, string $password = ini_get(\"mysql.default_password\") [, int $client_flags = 0 ]]]] )", "url": "https://secure.php.net/manual/en/function.mysql-pconnect.php"}, {"name": "mysql_ping", "synopsis": "Checks whether or not the connection to the server is working. If it has gone down, an automatic reconnection is attempted. This function can be used by scripts that remain idle for a long while, to check whether or not the server has closed the connection and reconnect if necessary.", "usage": "bool mysql_ping ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-ping.php"}, {"name": "PDO::query()", "synopsis": "mysql_query() sends a unique query (multiple queries are not supported) to the currently active database on the server that's associated with the specified link_identifier.", "usage": "mixed mysql_query ( string $query [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-query.php"}, {"name": "PDO::quote()", "synopsis": "Escapes special characters in the unescaped_string, taking into account the current character set of the connection so that it is safe to place it in a mysql_query(). If binary data is to be inserted, this function must be used.", "usage": "string mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-real-escape-string.php"}, {"name": "PDOStatement::fetchColumn()", "synopsis": "Retrieves the contents of one cell from a MySQL result set.", "usage": "string mysql_result ( resource $result , int $row [, mixed $field = 0 ] )", "url": "https://secure.php.net/manual/en/function.mysql-result.php"}, {"name": "PDO::__construct()", "synopsis": "Sets the current active database on the server that's associated with the specified link identifier. Every subsequent call to mysql_query() will be made on the active database.", "usage": "bool mysql_select_db ( string $database_name [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-select-db.php"}, {"name": "mysql_set_charset", "synopsis": "Sets the default character set for the current connection.", "usage": "bool mysql_set_charset ( string $charset [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-set-charset.php"}, {"name": "PDO::getAttribute(PDO::ATTR_SERVER_INFO)", "synopsis": "mysql_stat() returns the current server status.", "usage": "string mysql_stat ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-stat.php"}, {"name": "mysql_tablename", "synopsis": "Retrieves the table name from a result.", "usage": "string mysql_tablename ( resource $result , int $i )", "url": "https://secure.php.net/manual/en/function.mysql-tablename.php"}, {"name": "mysql_thread_id", "synopsis": "Retrieves the current thread ID. If the connection is lost, and a reconnect with mysql_ping() is executed, the thread ID will change. This means only retrieve the thread ID when needed.", "usage": "int mysql_thread_id ([ resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-thread-id.php"}, {"name": "mysql_unbuffered_query", "synopsis": "mysql_unbuffered_query() sends the SQL query query to MySQL without automatically fetching and buffering the result rows as mysql_query() does. This saves a considerable amount of memory with SQL queries that produce large result sets, and you can start working on the result set immediately after the first row has been retrieved as you don't have to wait until the complete SQL query has been performed. To use mysql_unbuffered_query() while multiple database connections are open, you must specify the optional parameter link_identifier to identify which connection you want to use.", "usage": "resource mysql_unbuffered_query ( string $query [, resource $link_identifier = NULL ] )", "url": "https://secure.php.net/manual/en/function.mysql-unbuffered-query.php"}, {"name": "mysql_xdevapi\\expression", "synopsis": "", "usage": "ReturnType mysql_xdevapi\\expression ( string $expression )", "url": "https://secure.php.net/manual/en/function.mysql-xdevapi-expression.php"}, {"name": "mysql_xdevapi\\getSession", "synopsis": "Connects to the MySQL server.", "usage": "mysql_xdevapi\\Session mysql_xdevapi\\getSession ( string $uri )", "url": "https://secure.php.net/manual/en/function.mysql-xdevapi-getsession.php"}, {"name": "mysqli::disable_reads_from_master", "synopsis": "Procedural style", "usage": "void mysqli::disable_reads_from_master ( void )", "url": "https://secure.php.net/manual/en/function.mysqli-disable-reads-from-master.php"}, {"name": "mysqli_disable_rpl_parse", "synopsis": null, "usage": "bool mysqli_disable_rpl_parse ( mysqli $link )", "url": "https://secure.php.net/manual/en/function.mysqli-disable-rpl-parse.php"}, {"name": "mysqli_enable_reads_from_master", "synopsis": null, "usage": "bool mysqli_enable_reads_from_master ( mysqli $link )", "url": "https://secure.php.net/manual/en/function.mysqli-enable-reads-from-master.php"}, {"name": "mysqli_enable_rpl_parse", "synopsis": null, "usage": "bool mysqli_enable_rpl_parse ( mysqli $link )", "url": "https://secure.php.net/manual/en/function.mysqli-enable-rpl-parse.php"}, {"name": "mysqli_get_cache_stats", "synopsis": "Returns an empty array. Available only with mysqlnd.", "usage": "array mysqli_get_cache_stats ( void )", "url": "https://secure.php.net/manual/en/function.mysqli-get-cache-stats.php"}, {"name": "mysqli_get_client_stats", "synopsis": "Returns client per-process statistics. Available only with mysqlnd.", "usage": "array mysqli_get_client_stats ( void )", "url": "https://secure.php.net/manual/en/function.mysqli-get-client-stats.php"}, {"name": "mysqli_get_links_stats", "synopsis": "mysqli_get_links_stats() returns information about open and cached MySQL links.", "usage": "array mysqli_get_links_stats ( void )", "url": "https://secure.php.net/manual/en/function.mysqli-get-links-stats.php"}, {"name": "mysqli_master_query", "synopsis": null, "usage": "bool mysqli_master_query ( mysqli $link , string $query )", "url": "https://secure.php.net/manual/en/function.mysqli-master-query.php"}, {"name": "mysqli_rpl_parse_enabled", "synopsis": null, "usage": "int mysqli_rpl_parse_enabled ( mysqli $link )", "url": "https://secure.php.net/manual/en/function.mysqli-rpl-parse-enabled.php"}, {"name": "mysqli_rpl_probe", "synopsis": null, "usage": "bool mysqli_rpl_probe ( mysqli $link )", "url": "https://secure.php.net/manual/en/function.mysqli-rpl-probe.php"}, {"name": "mysqli_slave_query", "synopsis": null, "usage": "bool mysqli_slave_query ( mysqli $link , string $query )", "url": "https://secure.php.net/manual/en/function.mysqli-slave-query.php"}, {"name": "mysqlnd_memcache_get_config", "synopsis": "This function returns an array of all mysqlnd_memcache related configuration information that is attached to the MySQL connection. This includes MySQL, the Memcache object provided via mysqlnd_memcache_set(), and the table mapping configuration that was automatically collected from the MySQL Server.", "usage": "array mysqlnd_memcache_get_config ( mixed $connection )", "url": "https://secure.php.net/manual/en/function.mysqlnd-memcache-get-config.php"}, {"name": "mysqlnd_memcache_set", "synopsis": "Associate mysql_connection with memcache_connection using pattern as a PCRE regular expression, and callback as a notification callback or to unset the association of mysql_connection.", "usage": "bool mysqlnd_memcache_set ( mixed $mysql_connection [, Memcached $memcache_connection [, string $pattern [, callback $callback ]]] )", "url": "https://secure.php.net/manual/en/function.mysqlnd-memcache-set.php"}, {"name": "mysqlnd_ms_dump_servers", "synopsis": "Returns a list of currently configured servers.", "usage": "array mysqlnd_ms_dump_servers ( mixed $connection )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-dump-servers.php"}, {"name": "mysqlnd_ms_fabric_select_global", "synopsis": null, "usage": "array mysqlnd_ms_fabric_select_global ( mixed $connection , mixed $table_name )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-fabric-select-global.php"}, {"name": "mysqlnd_ms_fabric_select_shard", "synopsis": null, "usage": "array mysqlnd_ms_fabric_select_shard ( mixed $connection , mixed $table_name , mixed $shard_key )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-fabric-select-shard.php"}, {"name": "mysqlnd_ms_get_last_gtid", "synopsis": "Returns a global transaction identifier which belongs to a write operation no older than the last write performed by the client. It is not guaranteed that the global transaction identifier is identical to that one created for the last write transaction performed by the client.", "usage": "string mysqlnd_ms_get_last_gtid ( mixed $connection )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-get-last-gtid.php"}, {"name": "mysqlnd_ms_get_last_used_connection", "synopsis": "Returns an array which describes the last used connection from the plugins connection pool currently pointed to by the user connection handle. If using the plugin, a user connection handle represents a pool of database connections. It is not possible to tell from the user connection handles properties to which database server from the pool the user connection handle points.", "usage": "array mysqlnd_ms_get_last_used_connection ( mixed $connection )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-get-last-used-connection.php"}, {"name": "mysqlnd_ms_get_stats", "synopsis": "Returns an array of statistics collected by the replication and load balancing plugin.", "usage": "array mysqlnd_ms_get_stats ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-get-stats.php"}, {"name": "mysqlnd_ms_match_wild", "synopsis": "Finds whether a table name matches a wildcard pattern or not.", "usage": "bool mysqlnd_ms_match_wild ( string $table_name , string $wildcard )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-match-wild.php"}, {"name": "mysqlnd_ms_query_is_select", "synopsis": "Finds whether to send the query to the master, the slave or the last used MySQL server.", "usage": "int mysqlnd_ms_query_is_select ( string $query )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-query-is-select.php"}, {"name": "mysqlnd_ms_set_qos", "synopsis": "Sets the quality of service needed from the cluster. A database cluster delivers a certain quality of service to the user depending on its architecture. A major aspect of the quality of service is the consistency level the cluster can offer. An asynchronous MySQL replication cluster defaults to eventual consistency for slave reads: a slave may serve stale data, current data, or it may have not the requested data at all, because it is not synchronous to the master. In a MySQL replication cluster, only master accesses can give strong consistency, which promises that all clients see each others changes.", "usage": "bool mysqlnd_ms_set_qos ( mixed $connection , int $service_level [, int $service_level_option [, mixed $option_value ]] )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-set-qos.php"}, {"name": "mysqlnd_ms_set_user_pick_server", "synopsis": "Sets a callback for user-defined read/write splitting. The plugin will call the callback only if pick[]=user is the default rule for server picking in the relevant section of the plugins configuration file.", "usage": "bool mysqlnd_ms_set_user_pick_server ( string $function )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-set-user-pick-server.php"}, {"name": "mysqlnd_ms_xa_begin", "synopsis": "Starts a XA transaction among MySQL servers. PECL/mysqlnd_ms acts as a transaction coordinator the distributed transaction.", "usage": "int mysqlnd_ms_xa_begin ( mixed $connection , string $gtrid [, int $timeout ] )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-xa-begin.php"}, {"name": "mysqlnd_ms_xa_commit", "synopsis": "Commits a global transaction among MySQL servers started by mysqlnd_ms_xa_begin().", "usage": "int mysqlnd_ms_xa_commit ( mixed $connection , string $gtrid )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-xa-commit.php"}, {"name": "mysqlnd_ms_xa_gc", "synopsis": "Garbage collects unfinished XA transactions.", "usage": "int mysqlnd_ms_xa_gc ( mixed $connection [, string $gtrid [, bool $ignore_max_retries ]] )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-xa-gc.php"}, {"name": "mysqlnd_ms_xa_rollback", "synopsis": "Rolls back a global transaction among MySQL servers started by mysqlnd_ms_xa_begin().", "usage": "int mysqlnd_ms_xa_rollback ( mixed $connection , string $gtrid )", "url": "https://secure.php.net/manual/en/function.mysqlnd-ms-xa-rollback.php"}, {"name": "mysqlnd_qc_clear_cache", "synopsis": "Flush all cache contents.", "usage": "bool mysqlnd_qc_clear_cache ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-clear-cache.php"}, {"name": "mysqlnd_qc_get_available_handlers", "synopsis": "Which storage are available depends on the compile time configuration of the query cache plugin. The default storage handler is always available. All other storage handler must be enabled explicitly when building the extension.", "usage": "array mysqlnd_qc_get_available_handlers ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-get-available-handlers.php"}, {"name": "mysqlnd_qc_get_cache_info", "synopsis": "", "usage": "array mysqlnd_qc_get_cache_info ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-get-cache-info.php"}, {"name": "mysqlnd_qc_get_core_stats", "synopsis": "Returns an array of statistics collected by the core of the cache plugin. The same data fields will be reported for any storage handler because the data is collected by the core.", "usage": "array mysqlnd_qc_get_core_stats ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-get-core-stats.php"}, {"name": "mysqlnd_qc_get_normalized_query_trace_log", "synopsis": "Returns a normalized query trace log for each query inspected by the query cache. The collection of the trace log is disabled by default. To collect the trace log you have to set the PHP configuration directive mysqlnd_qc.collect_normalized_query_trace to 1", "usage": "array mysqlnd_qc_get_normalized_query_trace_log ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-get-normalized-query-trace-log.php"}, {"name": "mysqlnd_qc_get_query_trace_log", "synopsis": "Returns a backtrace for each query inspected by the query cache. The collection of the backtrace is disabled by default. To collect the backtrace you have to set the PHP configuration directive mysqlnd_qc.collect_query_trace to 1", "usage": "array mysqlnd_qc_get_query_trace_log ( void )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-get-query-trace-log.php"}, {"name": "mysqlnd_qc_set_cache_condition", "synopsis": "Sets a condition for automatic caching of statements which do not contain the necessary SQL hints to enable caching of them.", "usage": "bool mysqlnd_qc_set_cache_condition ( int $condition_type , mixed $condition , mixed $condition_option )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-set-cache-condition.php"}, {"name": "mysqlnd_qc_set_is_select", "synopsis": "Installs a callback which decides whether a statement is cached.", "usage": "mixed mysqlnd_qc_set_is_select ( string $callback )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-set-is-select.php"}, {"name": "mysqlnd_qc_set_storage_handler", "synopsis": "Sets the storage handler used by the query cache. A list of available storage handler can be obtained from mysqlnd_qc_get_available_handlers(). Which storage are available depends on the compile time configuration of the query cache plugin. The default storage handler is always available. All other storage handler must be enabled explicitly when building the extension.", "usage": "bool mysqlnd_qc_set_storage_handler ( string $handler )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-set-storage-handler.php"}, {"name": "mysqlnd_qc_set_user_handlers", "synopsis": "Sets the callback functions for a user-defined procedural storage handler.", "usage": "bool mysqlnd_qc_set_user_handlers ( string $get_hash , string $find_query_in_cache , string $return_to_cache , string $add_query_to_cache_if_not_exists , string $query_is_select , string $update_query_run_time_stats , string $get_stats , string $clear_cache )", "url": "https://secure.php.net/manual/en/function.mysqlnd-qc-set-user-handlers.php"}, {"name": "mysqlnd_uh_convert_to_mysqlnd", "synopsis": "Converts a MySQL connection handle into a mysqlnd connection handle. After conversion you can execute mysqlnd library calls on the connection handle. This can be used to access mysqlnd functionality not made available through user space API calls.", "usage": "resource mysqlnd_uh_convert_to_mysqlnd ( mysqli &$mysql_connection )", "url": "https://secure.php.net/manual/en/function.mysqlnd-uh-convert-to-mysqlnd.php"}, {"name": "mysqlnd_uh_set_connection_proxy", "synopsis": "Installs a proxy object to hook mysqlnd's connection objects methods. Once installed, the proxy will be used for all MySQL connections opened with mysqli, mysql or PDO_MYSQL, assuming that the listed extensions are compiled to use the mysqlnd library.", "usage": "bool mysqlnd_uh_set_connection_proxy ( MysqlndUhConnection &$connection_proxy [, mysqli &$mysqli_connection ] )", "url": "https://secure.php.net/manual/en/function.mysqlnd-uh-set-connection-proxy.php"}, {"name": "mysqlnd_uh_set_statement_proxy", "synopsis": "Installs a proxy for mysqlnd statements. The proxy object will be used for all mysqlnd prepared statement objects, regardless which PHP MySQL extension (mysqli, mysql, PDO_MYSQL) has created them as long as the extension is compiled to use the mysqlnd library.", "usage": "bool mysqlnd_uh_set_statement_proxy ( MysqlndUhStatement &$statement_proxy )", "url": "https://secure.php.net/manual/en/function.mysqlnd-uh-set-statement-proxy.php"}, {"name": "natcasesort", "synopsis": "natcasesort() is a case insensitive version of natsort().", "usage": "bool natcasesort ( array &$array )", "url": "https://secure.php.net/manual/en/function.natcasesort.php"}, {"name": "natsort", "synopsis": "This function implements a sort algorithm that orders alphanumeric strings in the way a human being would while maintaining key/value associations. This is described as a \"natural ordering\". An example of the difference between this algorithm and the regular computer string sorting algorithms (used in sort()) can be seen in the example below.", "usage": "bool natsort ( array &$array )", "url": "https://secure.php.net/manual/en/function.natsort.php"}, {"name": "ncurses_addch", "synopsis": null, "usage": "int ncurses_addch ( int $ch )", "url": "https://secure.php.net/manual/en/function.ncurses-addch.php"}, {"name": "ncurses_addchnstr", "synopsis": null, "usage": "int ncurses_addchnstr ( string $s , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-addchnstr.php"}, {"name": "ncurses_addchstr", "synopsis": null, "usage": "int ncurses_addchstr ( string $s )", "url": "https://secure.php.net/manual/en/function.ncurses-addchstr.php"}, {"name": "ncurses_addnstr", "synopsis": null, "usage": "int ncurses_addnstr ( string $s , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-addnstr.php"}, {"name": "ncurses_addstr", "synopsis": null, "usage": "int ncurses_addstr ( string $text )", "url": "https://secure.php.net/manual/en/function.ncurses-addstr.php"}, {"name": "ncurses_assume_default_colors", "synopsis": null, "usage": "int ncurses_assume_default_colors ( int $fg , int $bg )", "url": "https://secure.php.net/manual/en/function.ncurses-assume-default-colors.php"}, {"name": "ncurses_attroff", "synopsis": null, "usage": "int ncurses_attroff ( int $attributes )", "url": "https://secure.php.net/manual/en/function.ncurses-attroff.php"}, {"name": "ncurses_attron", "synopsis": null, "usage": "int ncurses_attron ( int $attributes )", "url": "https://secure.php.net/manual/en/function.ncurses-attron.php"}, {"name": "ncurses_attrset", "synopsis": null, "usage": "int ncurses_attrset ( int $attributes )", "url": "https://secure.php.net/manual/en/function.ncurses-attrset.php"}, {"name": "ncurses_baudrate", "synopsis": null, "usage": "int ncurses_baudrate ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-baudrate.php"}, {"name": "ncurses_beep", "synopsis": null, "usage": "int ncurses_beep ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-beep.php"}, {"name": "ncurses_bkgd", "synopsis": null, "usage": "int ncurses_bkgd ( int $attrchar )", "url": "https://secure.php.net/manual/en/function.ncurses-bkgd.php"}, {"name": "ncurses_bkgdset", "synopsis": null, "usage": "void ncurses_bkgdset ( int $attrchar )", "url": "https://secure.php.net/manual/en/function.ncurses-bkgdset.php"}, {"name": "ncurses_border", "synopsis": null, "usage": "int ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )", "url": "https://secure.php.net/manual/en/function.ncurses-border.php"}, {"name": "ncurses_bottom_panel", "synopsis": null, "usage": "int ncurses_bottom_panel ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-bottom-panel.php"}, {"name": "ncurses_can_change_color", "synopsis": "Checks whether the terminal has color capabilities and whether the programmer can change color definitions using ncurses_init_color(). ncurses must be initialized using ncurses_init() before calling this function.", "usage": "bool ncurses_can_change_color ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-can-change-color.php"}, {"name": "ncurses_cbreak", "synopsis": null, "usage": "bool ncurses_cbreak ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-cbreak.php"}, {"name": "ncurses_clear", "synopsis": null, "usage": "bool ncurses_clear ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-clear.php"}, {"name": "ncurses_clrtobot", "synopsis": null, "usage": "bool ncurses_clrtobot ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-clrtobot.php"}, {"name": "ncurses_clrtoeol", "synopsis": null, "usage": "bool ncurses_clrtoeol ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-clrtoeol.php"}, {"name": "ncurses_color_content", "synopsis": "Retrieves the red, green, and blue components for the given color definition. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function.", "usage": "int ncurses_color_content ( int $color , int &$r , int &$g , int &$b )", "url": "https://secure.php.net/manual/en/function.ncurses-color-content.php"}, {"name": "ncurses_color_set", "synopsis": "Sets the active foreground and background colors. Any characters written after this function is invoked will have these colors. This function requires terminal colors to be supported and initialized using ncurses_start_color() beforehand.", "usage": "int ncurses_color_set ( int $pair )", "url": "https://secure.php.net/manual/en/function.ncurses-color-set.php"}, {"name": "ncurses_curs_set", "synopsis": null, "usage": "int ncurses_curs_set ( int $visibility )", "url": "https://secure.php.net/manual/en/function.ncurses-curs-set.php"}, {"name": "ncurses_def_prog_mode", "synopsis": null, "usage": "bool ncurses_def_prog_mode ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-def-prog-mode.php"}, {"name": "ncurses_def_shell_mode", "synopsis": null, "usage": "bool ncurses_def_shell_mode ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-def-shell-mode.php"}, {"name": "ncurses_define_key", "synopsis": null, "usage": "int ncurses_define_key ( string $definition , int $keycode )", "url": "https://secure.php.net/manual/en/function.ncurses-define-key.php"}, {"name": "ncurses_del_panel", "synopsis": null, "usage": "bool ncurses_del_panel ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-del-panel.php"}, {"name": "ncurses_delay_output", "synopsis": null, "usage": "int ncurses_delay_output ( int $milliseconds )", "url": "https://secure.php.net/manual/en/function.ncurses-delay-output.php"}, {"name": "ncurses_delch", "synopsis": null, "usage": "bool ncurses_delch ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-delch.php"}, {"name": "ncurses_deleteln", "synopsis": null, "usage": "bool ncurses_deleteln ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-deleteln.php"}, {"name": "ncurses_delwin", "synopsis": null, "usage": "bool ncurses_delwin ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-delwin.php"}, {"name": "ncurses_doupdate", "synopsis": null, "usage": "bool ncurses_doupdate ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-doupdate.php"}, {"name": "ncurses_echo", "synopsis": null, "usage": "bool ncurses_echo ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-echo.php"}, {"name": "ncurses_echochar", "synopsis": null, "usage": "int ncurses_echochar ( int $character )", "url": "https://secure.php.net/manual/en/function.ncurses-echochar.php"}, {"name": "ncurses_end", "synopsis": null, "usage": "int ncurses_end ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-end.php"}, {"name": "ncurses_erase", "synopsis": null, "usage": "bool ncurses_erase ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-erase.php"}, {"name": "ncurses_erasechar", "synopsis": null, "usage": "string ncurses_erasechar ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-erasechar.php"}, {"name": "ncurses_filter", "synopsis": null, "usage": "void ncurses_filter ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-filter.php"}, {"name": "ncurses_flash", "synopsis": null, "usage": "bool ncurses_flash ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-flash.php"}, {"name": "ncurses_flushinp", "synopsis": null, "usage": "bool ncurses_flushinp ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-flushinp.php"}, {"name": "ncurses_getch", "synopsis": null, "usage": "int ncurses_getch ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-getch.php"}, {"name": "ncurses_getmaxyx", "synopsis": null, "usage": "void ncurses_getmaxyx ( resource $window , int &$y , int &$x )", "url": "https://secure.php.net/manual/en/function.ncurses-getmaxyx.php"}, {"name": "ncurses_getmouse", "synopsis": null, "usage": "bool ncurses_getmouse ( array &$mevent )", "url": "https://secure.php.net/manual/en/function.ncurses-getmouse.php"}, {"name": "ncurses_getyx", "synopsis": null, "usage": "void ncurses_getyx ( resource $window , int &$y , int &$x )", "url": "https://secure.php.net/manual/en/function.ncurses-getyx.php"}, {"name": "ncurses_halfdelay", "synopsis": null, "usage": "int ncurses_halfdelay ( int $tenth )", "url": "https://secure.php.net/manual/en/function.ncurses-halfdelay.php"}, {"name": "ncurses_has_colors", "synopsis": "Checks whether the terminal has color capabilities. This function can be used to write terminal-independent programs. ncurses must be initialized using ncurses_init() before calling this function.", "usage": "bool ncurses_has_colors ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-has-colors.php"}, {"name": "ncurses_has_ic", "synopsis": null, "usage": "bool ncurses_has_ic ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-has-ic.php"}, {"name": "ncurses_has_il", "synopsis": null, "usage": "bool ncurses_has_il ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-has-il.php"}, {"name": "ncurses_has_key", "synopsis": null, "usage": "int ncurses_has_key ( int $keycode )", "url": "https://secure.php.net/manual/en/function.ncurses-has-key.php"}, {"name": "ncurses_hide_panel", "synopsis": null, "usage": "int ncurses_hide_panel ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-hide-panel.php"}, {"name": "ncurses_hline", "synopsis": null, "usage": "int ncurses_hline ( int $charattr , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-hline.php"}, {"name": "ncurses_inch", "synopsis": null, "usage": "string ncurses_inch ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-inch.php"}, {"name": "ncurses_init_color", "synopsis": "Defines or redefines the given color. When this function is called, all occurrences of the given color on the screen, if any, immediately change to the new definition.", "usage": "int ncurses_init_color ( int $color , int $r , int $g , int $b )", "url": "https://secure.php.net/manual/en/function.ncurses-init-color.php"}, {"name": "ncurses_init_pair", "synopsis": "Defines or redefines the given color pair to have the given foreground and background colors. If the color pair was previously initialized, the screen is refreshed and all occurrences of it are changed to reflect the new definition.", "usage": "int ncurses_init_pair ( int $pair , int $fg , int $bg )", "url": "https://secure.php.net/manual/en/function.ncurses-init-pair.php"}, {"name": "ncurses_init", "synopsis": "Initializes the ncurses interface. This function must be used before any other ncurses function call.", "usage": "void ncurses_init ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-init.php"}, {"name": "ncurses_insch", "synopsis": null, "usage": "int ncurses_insch ( int $character )", "url": "https://secure.php.net/manual/en/function.ncurses-insch.php"}, {"name": "ncurses_insdelln", "synopsis": null, "usage": "int ncurses_insdelln ( int $count )", "url": "https://secure.php.net/manual/en/function.ncurses-insdelln.php"}, {"name": "ncurses_insertln", "synopsis": null, "usage": "int ncurses_insertln ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-insertln.php"}, {"name": "ncurses_insstr", "synopsis": null, "usage": "int ncurses_insstr ( string $text )", "url": "https://secure.php.net/manual/en/function.ncurses-insstr.php"}, {"name": "ncurses_instr", "synopsis": null, "usage": "int ncurses_instr ( string &$buffer )", "url": "https://secure.php.net/manual/en/function.ncurses-instr.php"}, {"name": "ncurses_isendwin", "synopsis": null, "usage": "bool ncurses_isendwin ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-isendwin.php"}, {"name": "ncurses_keyok", "synopsis": null, "usage": "int ncurses_keyok ( int $keycode , bool $enable )", "url": "https://secure.php.net/manual/en/function.ncurses-keyok.php"}, {"name": "ncurses_keypad", "synopsis": null, "usage": "int ncurses_keypad ( resource $window , bool $bf )", "url": "https://secure.php.net/manual/en/function.ncurses-keypad.php"}, {"name": "ncurses_killchar", "synopsis": null, "usage": "string ncurses_killchar ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-killchar.php"}, {"name": "ncurses_longname", "synopsis": null, "usage": "string ncurses_longname ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-longname.php"}, {"name": "ncurses_meta", "synopsis": null, "usage": "int ncurses_meta ( resource $window , bool $8bit )", "url": "https://secure.php.net/manual/en/function.ncurses-meta.php"}, {"name": "ncurses_mouse_trafo", "synopsis": null, "usage": "bool ncurses_mouse_trafo ( int &$y , int &$x , bool $toscreen )", "url": "https://secure.php.net/manual/en/function.ncurses-mouse-trafo.php"}, {"name": "ncurses_mouseinterval", "synopsis": null, "usage": "int ncurses_mouseinterval ( int $milliseconds )", "url": "https://secure.php.net/manual/en/function.ncurses-mouseinterval.php"}, {"name": "ncurses_mousemask", "synopsis": null, "usage": "int ncurses_mousemask ( int $newmask , int &$oldmask )", "url": "https://secure.php.net/manual/en/function.ncurses-mousemask.php"}, {"name": "ncurses_move_panel", "synopsis": null, "usage": "int ncurses_move_panel ( resource $panel , int $startx , int $starty )", "url": "https://secure.php.net/manual/en/function.ncurses-move-panel.php"}, {"name": "ncurses_move", "synopsis": null, "usage": "int ncurses_move ( int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-move.php"}, {"name": "ncurses_mvaddch", "synopsis": null, "usage": "int ncurses_mvaddch ( int $y , int $x , int $c )", "url": "https://secure.php.net/manual/en/function.ncurses-mvaddch.php"}, {"name": "ncurses_mvaddchnstr", "synopsis": null, "usage": "int ncurses_mvaddchnstr ( int $y , int $x , string $s , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-mvaddchnstr.php"}, {"name": "ncurses_mvaddchstr", "synopsis": null, "usage": "int ncurses_mvaddchstr ( int $y , int $x , string $s )", "url": "https://secure.php.net/manual/en/function.ncurses-mvaddchstr.php"}, {"name": "ncurses_mvaddnstr", "synopsis": null, "usage": "int ncurses_mvaddnstr ( int $y , int $x , string $s , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-mvaddnstr.php"}, {"name": "ncurses_mvaddstr", "synopsis": null, "usage": "int ncurses_mvaddstr ( int $y , int $x , string $s )", "url": "https://secure.php.net/manual/en/function.ncurses-mvaddstr.php"}, {"name": "ncurses_mvcur", "synopsis": null, "usage": "int ncurses_mvcur ( int $old_y , int $old_x , int $new_y , int $new_x )", "url": "https://secure.php.net/manual/en/function.ncurses-mvcur.php"}, {"name": "ncurses_mvdelch", "synopsis": null, "usage": "int ncurses_mvdelch ( int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-mvdelch.php"}, {"name": "ncurses_mvgetch", "synopsis": null, "usage": "int ncurses_mvgetch ( int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-mvgetch.php"}, {"name": "ncurses_mvhline", "synopsis": null, "usage": "int ncurses_mvhline ( int $y , int $x , int $attrchar , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-mvhline.php"}, {"name": "ncurses_mvinch", "synopsis": null, "usage": "int ncurses_mvinch ( int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-mvinch.php"}, {"name": "ncurses_mvvline", "synopsis": null, "usage": "int ncurses_mvvline ( int $y , int $x , int $attrchar , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-mvvline.php"}, {"name": "ncurses_mvwaddstr", "synopsis": null, "usage": "int ncurses_mvwaddstr ( resource $window , int $y , int $x , string $text )", "url": "https://secure.php.net/manual/en/function.ncurses-mvwaddstr.php"}, {"name": "ncurses_napms", "synopsis": null, "usage": "int ncurses_napms ( int $milliseconds )", "url": "https://secure.php.net/manual/en/function.ncurses-napms.php"}, {"name": "ncurses_new_panel", "synopsis": null, "usage": "resource ncurses_new_panel ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-new-panel.php"}, {"name": "ncurses_newpad", "synopsis": null, "usage": "resource ncurses_newpad ( int $rows , int $cols )", "url": "https://secure.php.net/manual/en/function.ncurses-newpad.php"}, {"name": "ncurses_newwin", "synopsis": null, "usage": "resource ncurses_newwin ( int $rows , int $cols , int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-newwin.php"}, {"name": "ncurses_nl", "synopsis": null, "usage": "bool ncurses_nl ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-nl.php"}, {"name": "ncurses_nocbreak", "synopsis": null, "usage": "bool ncurses_nocbreak ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-nocbreak.php"}, {"name": "ncurses_noecho", "synopsis": null, "usage": "bool ncurses_noecho ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-noecho.php"}, {"name": "ncurses_nonl", "synopsis": null, "usage": "bool ncurses_nonl ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-nonl.php"}, {"name": "ncurses_noqiflush", "synopsis": null, "usage": "void ncurses_noqiflush ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-noqiflush.php"}, {"name": "ncurses_noraw", "synopsis": null, "usage": "bool ncurses_noraw ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-noraw.php"}, {"name": "ncurses_pair_content", "synopsis": "Retrieves the foreground and background colors that constitute the given color pair. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function.", "usage": "int ncurses_pair_content ( int $pair , int &$f , int &$b )", "url": "https://secure.php.net/manual/en/function.ncurses-pair-content.php"}, {"name": "ncurses_panel_above", "synopsis": null, "usage": "resource ncurses_panel_above ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-panel-above.php"}, {"name": "ncurses_panel_below", "synopsis": null, "usage": "resource ncurses_panel_below ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-panel-below.php"}, {"name": "ncurses_panel_window", "synopsis": null, "usage": "resource ncurses_panel_window ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-panel-window.php"}, {"name": "ncurses_pnoutrefresh", "synopsis": null, "usage": "int ncurses_pnoutrefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )", "url": "https://secure.php.net/manual/en/function.ncurses-pnoutrefresh.php"}, {"name": "ncurses_prefresh", "synopsis": null, "usage": "int ncurses_prefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol )", "url": "https://secure.php.net/manual/en/function.ncurses-prefresh.php"}, {"name": "ncurses_putp", "synopsis": null, "usage": "int ncurses_putp ( string $text )", "url": "https://secure.php.net/manual/en/function.ncurses-putp.php"}, {"name": "ncurses_qiflush", "synopsis": null, "usage": "void ncurses_qiflush ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-qiflush.php"}, {"name": "ncurses_raw", "synopsis": null, "usage": "bool ncurses_raw ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-raw.php"}, {"name": "ncurses_refresh", "synopsis": null, "usage": "int ncurses_refresh ( int $ch )", "url": "https://secure.php.net/manual/en/function.ncurses-refresh.php"}, {"name": "ncurses_replace_panel", "synopsis": null, "usage": "int ncurses_replace_panel ( resource $panel , resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-replace-panel.php"}, {"name": "ncurses_reset_prog_mode", "synopsis": null, "usage": "int ncurses_reset_prog_mode ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-reset-prog-mode.php"}, {"name": "ncurses_reset_shell_mode", "synopsis": null, "usage": "int ncurses_reset_shell_mode ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-reset-shell-mode.php"}, {"name": "ncurses_resetty", "synopsis": null, "usage": "bool ncurses_resetty ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-resetty.php"}, {"name": "ncurses_savetty", "synopsis": null, "usage": "bool ncurses_savetty ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-savetty.php"}, {"name": "ncurses_scr_dump", "synopsis": null, "usage": "int ncurses_scr_dump ( string $filename )", "url": "https://secure.php.net/manual/en/function.ncurses-scr-dump.php"}, {"name": "ncurses_scr_init", "synopsis": null, "usage": "int ncurses_scr_init ( string $filename )", "url": "https://secure.php.net/manual/en/function.ncurses-scr-init.php"}, {"name": "ncurses_scr_restore", "synopsis": null, "usage": "int ncurses_scr_restore ( string $filename )", "url": "https://secure.php.net/manual/en/function.ncurses-scr-restore.php"}, {"name": "ncurses_scr_set", "synopsis": null, "usage": "int ncurses_scr_set ( string $filename )", "url": "https://secure.php.net/manual/en/function.ncurses-scr-set.php"}, {"name": "ncurses_scrl", "synopsis": null, "usage": "int ncurses_scrl ( int $count )", "url": "https://secure.php.net/manual/en/function.ncurses-scrl.php"}, {"name": "ncurses_show_panel", "synopsis": null, "usage": "int ncurses_show_panel ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-show-panel.php"}, {"name": "ncurses_slk_attr", "synopsis": null, "usage": "int ncurses_slk_attr ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-attr.php"}, {"name": "ncurses_slk_attroff", "synopsis": null, "usage": "int ncurses_slk_attroff ( int $intarg )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-attroff.php"}, {"name": "ncurses_slk_attron", "synopsis": null, "usage": "int ncurses_slk_attron ( int $intarg )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-attron.php"}, {"name": "ncurses_slk_attrset", "synopsis": null, "usage": "int ncurses_slk_attrset ( int $intarg )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-attrset.php"}, {"name": "ncurses_slk_clear", "synopsis": null, "usage": "bool ncurses_slk_clear ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-clear.php"}, {"name": "ncurses_slk_color", "synopsis": null, "usage": "int ncurses_slk_color ( int $intarg )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-color.php"}, {"name": "ncurses_slk_init", "synopsis": null, "usage": "bool ncurses_slk_init ( int $format )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-init.php"}, {"name": "ncurses_slk_noutrefresh", "synopsis": null, "usage": "bool ncurses_slk_noutrefresh ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-noutrefresh.php"}, {"name": "ncurses_slk_refresh", "synopsis": null, "usage": "int ncurses_slk_refresh ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-refresh.php"}, {"name": "ncurses_slk_restore", "synopsis": null, "usage": "int ncurses_slk_restore ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-restore.php"}, {"name": "ncurses_slk_set", "synopsis": null, "usage": "bool ncurses_slk_set ( int $labelnr , string $label , int $format )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-set.php"}, {"name": "ncurses_slk_touch", "synopsis": null, "usage": "int ncurses_slk_touch ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-slk-touch.php"}, {"name": "ncurses_standend", "synopsis": null, "usage": "int ncurses_standend ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-standend.php"}, {"name": "ncurses_standout", "synopsis": null, "usage": "int ncurses_standout ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-standout.php"}, {"name": "ncurses_start_color", "synopsis": "Initializes color functionality in ncurses. This function must be called before any color manipulation functions are called and after ncurses_init() is called. It is good practice to call this function right after ncurses_init().", "usage": "int ncurses_start_color ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-start-color.php"}, {"name": "ncurses_termattrs", "synopsis": null, "usage": "bool ncurses_termattrs ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-termattrs.php"}, {"name": "ncurses_termname", "synopsis": null, "usage": "string ncurses_termname ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-termname.php"}, {"name": "ncurses_timeout", "synopsis": null, "usage": "void ncurses_timeout ( int $millisec )", "url": "https://secure.php.net/manual/en/function.ncurses-timeout.php"}, {"name": "ncurses_top_panel", "synopsis": null, "usage": "int ncurses_top_panel ( resource $panel )", "url": "https://secure.php.net/manual/en/function.ncurses-top-panel.php"}, {"name": "ncurses_typeahead", "synopsis": null, "usage": "int ncurses_typeahead ( int $fd )", "url": "https://secure.php.net/manual/en/function.ncurses-typeahead.php"}, {"name": "ncurses_ungetch", "synopsis": null, "usage": "int ncurses_ungetch ( int $keycode )", "url": "https://secure.php.net/manual/en/function.ncurses-ungetch.php"}, {"name": "ncurses_ungetmouse", "synopsis": null, "usage": "bool ncurses_ungetmouse ( array $mevent )", "url": "https://secure.php.net/manual/en/function.ncurses-ungetmouse.php"}, {"name": "ncurses_update_panels", "synopsis": null, "usage": "void ncurses_update_panels ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-update-panels.php"}, {"name": "ncurses_use_default_colors", "synopsis": null, "usage": "bool ncurses_use_default_colors ( void )", "url": "https://secure.php.net/manual/en/function.ncurses-use-default-colors.php"}, {"name": "ncurses_use_env", "synopsis": null, "usage": "void ncurses_use_env ( bool $flag )", "url": "https://secure.php.net/manual/en/function.ncurses-use-env.php"}, {"name": "ncurses_use_extended_names", "synopsis": null, "usage": "int ncurses_use_extended_names ( bool $flag )", "url": "https://secure.php.net/manual/en/function.ncurses-use-extended-names.php"}, {"name": "ncurses_vidattr", "synopsis": null, "usage": "int ncurses_vidattr ( int $intarg )", "url": "https://secure.php.net/manual/en/function.ncurses-vidattr.php"}, {"name": "ncurses_vline", "synopsis": null, "usage": "int ncurses_vline ( int $charattr , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-vline.php"}, {"name": "ncurses_waddch", "synopsis": null, "usage": "int ncurses_waddch ( resource $window , int $ch )", "url": "https://secure.php.net/manual/en/function.ncurses-waddch.php"}, {"name": "ncurses_waddstr", "synopsis": null, "usage": "int ncurses_waddstr ( resource $window , string $str [, int $n ] )", "url": "https://secure.php.net/manual/en/function.ncurses-waddstr.php"}, {"name": "ncurses_wattroff", "synopsis": null, "usage": "int ncurses_wattroff ( resource $window , int $attrs )", "url": "https://secure.php.net/manual/en/function.ncurses-wattroff.php"}, {"name": "ncurses_wattron", "synopsis": null, "usage": "int ncurses_wattron ( resource $window , int $attrs )", "url": "https://secure.php.net/manual/en/function.ncurses-wattron.php"}, {"name": "ncurses_wattrset", "synopsis": null, "usage": "int ncurses_wattrset ( resource $window , int $attrs )", "url": "https://secure.php.net/manual/en/function.ncurses-wattrset.php"}, {"name": "ncurses_wborder", "synopsis": null, "usage": "int ncurses_wborder ( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner )", "url": "https://secure.php.net/manual/en/function.ncurses-wborder.php"}, {"name": "ncurses_wclear", "synopsis": null, "usage": "int ncurses_wclear ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wclear.php"}, {"name": "ncurses_wcolor_set", "synopsis": null, "usage": "int ncurses_wcolor_set ( resource $window , int $color_pair )", "url": "https://secure.php.net/manual/en/function.ncurses-wcolor-set.php"}, {"name": "ncurses_werase", "synopsis": null, "usage": "int ncurses_werase ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-werase.php"}, {"name": "ncurses_wgetch", "synopsis": null, "usage": "int ncurses_wgetch ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wgetch.php"}, {"name": "ncurses_whline", "synopsis": null, "usage": "int ncurses_whline ( resource $window , int $charattr , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-whline.php"}, {"name": "ncurses_wmouse_trafo", "synopsis": null, "usage": "bool ncurses_wmouse_trafo ( resource $window , int &$y , int &$x , bool $toscreen )", "url": "https://secure.php.net/manual/en/function.ncurses-wmouse-trafo.php"}, {"name": "ncurses_wmove", "synopsis": null, "usage": "int ncurses_wmove ( resource $window , int $y , int $x )", "url": "https://secure.php.net/manual/en/function.ncurses-wmove.php"}, {"name": "ncurses_wnoutrefresh", "synopsis": null, "usage": "int ncurses_wnoutrefresh ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wnoutrefresh.php"}, {"name": "ncurses_wrefresh", "synopsis": null, "usage": "int ncurses_wrefresh ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wrefresh.php"}, {"name": "ncurses_wstandend", "synopsis": null, "usage": "int ncurses_wstandend ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wstandend.php"}, {"name": "ncurses_wstandout", "synopsis": null, "usage": "int ncurses_wstandout ( resource $window )", "url": "https://secure.php.net/manual/en/function.ncurses-wstandout.php"}, {"name": "ncurses_wvline", "synopsis": null, "usage": "int ncurses_wvline ( resource $window , int $charattr , int $n )", "url": "https://secure.php.net/manual/en/function.ncurses-wvline.php"}, {"name": "newt_bell", "synopsis": "This function sends a beep to the terminal.", "usage": "void newt_bell ( void )", "url": "https://secure.php.net/manual/en/function.newt-bell.php"}, {"name": "newt_button_bar", "synopsis": "This function returns a grid containing the buttons created.", "usage": "resource newt_button_bar ( array &$buttons )", "url": "https://secure.php.net/manual/en/function.newt-button-bar.php"}, {"name": "newt_button", "synopsis": "Creates a new button.", "usage": "resource newt_button ( int $left , int $top , string $text )", "url": "https://secure.php.net/manual/en/function.newt-button.php"}, {"name": "newt_centered_window", "synopsis": "Open a centered window of the specified size.", "usage": "int newt_centered_window ( int $width , int $height [, string $title ] )", "url": "https://secure.php.net/manual/en/function.newt-centered-window.php"}, {"name": "newt_checkbox_get_value", "synopsis": "This function returns the character in the sequence which indicates the current value of the checkbox.", "usage": "string newt_checkbox_get_value ( resource $checkbox )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-get-value.php"}, {"name": "newt_checkbox_set_flags", "synopsis": "This function allows to set various flags on checkbox resource.", "usage": "void newt_checkbox_set_flags ( resource $checkbox , int $flags , int $sense )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-set-flags.php"}, {"name": "newt_checkbox_set_value", "synopsis": "This function allows to set the current value of the checkbox resource.", "usage": "void newt_checkbox_set_value ( resource $checkbox , string $value )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-set-value.php"}, {"name": "newt_checkbox_tree_add_item", "synopsis": "This function allows to add new item to the checkbox tree.", "usage": "void newt_checkbox_tree_add_item ( resource $checkboxtree , string $text , mixed $data , int $flags , int $index [, int $... ] )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-add-item.php"}, {"name": "newt_checkbox_tree_find_item", "synopsis": "Finds an item in the checkbox tree by item's data.", "usage": "array newt_checkbox_tree_find_item ( resource $checkboxtree , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-find-item.php"}, {"name": "newt_checkbox_tree_get_current", "synopsis": "This method returns checkbox tree selected tem.", "usage": "mixed newt_checkbox_tree_get_current ( resource $checkboxtree )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-get-current.php"}, {"name": "newt_checkbox_tree_get_entry_value", "synopsis": null, "usage": "string newt_checkbox_tree_get_entry_value ( resource $checkboxtree , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-get-entry-value.php"}, {"name": "newt_checkbox_tree_get_multi_selection", "synopsis": null, "usage": "array newt_checkbox_tree_get_multi_selection ( resource $checkboxtree , string $seqnum )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-get-multi-selection.php"}, {"name": "newt_checkbox_tree_get_selection", "synopsis": null, "usage": "array newt_checkbox_tree_get_selection ( resource $checkboxtree )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-get-selection.php"}, {"name": "newt_checkbox_tree_multi", "synopsis": null, "usage": "resource newt_checkbox_tree_multi ( int $left , int $top , int $height , string $seq [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-multi.php"}, {"name": "newt_checkbox_tree_set_current", "synopsis": null, "usage": "void newt_checkbox_tree_set_current ( resource $checkboxtree , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-set-current.php"}, {"name": "newt_checkbox_tree_set_entry_value", "synopsis": null, "usage": "void newt_checkbox_tree_set_entry_value ( resource $checkboxtree , mixed $data , string $value )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-set-entry-value.php"}, {"name": "newt_checkbox_tree_set_entry", "synopsis": null, "usage": "void newt_checkbox_tree_set_entry ( resource $checkboxtree , mixed $data , string $text )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-set-entry.php"}, {"name": "newt_checkbox_tree_set_width", "synopsis": null, "usage": "void newt_checkbox_tree_set_width ( resource $checkbox_tree , int $width )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree-set-width.php"}, {"name": "newt_checkbox_tree", "synopsis": null, "usage": "resource newt_checkbox_tree ( int $left , int $top , int $height [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-checkbox-tree.php"}, {"name": "newt_checkbox", "synopsis": null, "usage": "resource newt_checkbox ( int $left , int $top , string $text , string $def_value [, string $seq ] )", "url": "https://secure.php.net/manual/en/function.newt-checkbox.php"}, {"name": "newt_clear_key_buffer", "synopsis": "Discards the contents of the terminal's input buffer without waiting for additional input.", "usage": "void newt_clear_key_buffer ( void )", "url": "https://secure.php.net/manual/en/function.newt-clear-key-buffer.php"}, {"name": "newt_cls", "synopsis": null, "usage": "void newt_cls ( void )", "url": "https://secure.php.net/manual/en/function.newt-cls.php"}, {"name": "newt_compact_button", "synopsis": null, "usage": "resource newt_compact_button ( int $left , int $top , string $text )", "url": "https://secure.php.net/manual/en/function.newt-compact-button.php"}, {"name": "newt_component_add_callback", "synopsis": null, "usage": "void newt_component_add_callback ( resource $component , mixed $func_name , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-component-add-callback.php"}, {"name": "newt_component_takes_focus", "synopsis": null, "usage": "void newt_component_takes_focus ( resource $component , bool $takes_focus )", "url": "https://secure.php.net/manual/en/function.newt-component-takes-focus.php"}, {"name": "newt_create_grid", "synopsis": null, "usage": "resource newt_create_grid ( int $cols , int $rows )", "url": "https://secure.php.net/manual/en/function.newt-create-grid.php"}, {"name": "newt_cursor_off", "synopsis": null, "usage": "void newt_cursor_off ( void )", "url": "https://secure.php.net/manual/en/function.newt-cursor-off.php"}, {"name": "newt_cursor_on", "synopsis": null, "usage": "void newt_cursor_on ( void )", "url": "https://secure.php.net/manual/en/function.newt-cursor-on.php"}, {"name": "newt_delay", "synopsis": null, "usage": "void newt_delay ( int $microseconds )", "url": "https://secure.php.net/manual/en/function.newt-delay.php"}, {"name": "newt_draw_form", "synopsis": null, "usage": "void newt_draw_form ( resource $form )", "url": "https://secure.php.net/manual/en/function.newt-draw-form.php"}, {"name": "newt_draw_root_text", "synopsis": "Displays the string text at the position indicated.", "usage": "void newt_draw_root_text ( int $left , int $top , string $text )", "url": "https://secure.php.net/manual/en/function.newt-draw-root-text.php"}, {"name": "newt_entry_get_value", "synopsis": null, "usage": "string newt_entry_get_value ( resource $entry )", "url": "https://secure.php.net/manual/en/function.newt-entry-get-value.php"}, {"name": "newt_entry_set_filter", "synopsis": null, "usage": "void newt_entry_set_filter ( resource $entry , callable $filter , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-entry-set-filter.php"}, {"name": "newt_entry_set_flags", "synopsis": null, "usage": "void newt_entry_set_flags ( resource $entry , int $flags , int $sense )", "url": "https://secure.php.net/manual/en/function.newt-entry-set-flags.php"}, {"name": "newt_entry_set", "synopsis": null, "usage": "void newt_entry_set ( resource $entry , string $value [, bool $cursor_at_end ] )", "url": "https://secure.php.net/manual/en/function.newt-entry-set.php"}, {"name": "newt_entry", "synopsis": null, "usage": "resource newt_entry ( int $left , int $top , int $width [, string $init_value [, int $flags ]] )", "url": "https://secure.php.net/manual/en/function.newt-entry.php"}, {"name": "newt_finished", "synopsis": "Uninitializes newt interface. This function be called, when program is ready to exit.", "usage": "int newt_finished ( void )", "url": "https://secure.php.net/manual/en/function.newt-finished.php"}, {"name": "newt_form_add_component", "synopsis": "Adds a single component to the form.", "usage": "void newt_form_add_component ( resource $form , resource $component )", "url": "https://secure.php.net/manual/en/function.newt-form-add-component.php"}, {"name": "newt_form_add_components", "synopsis": "Adds several components to the form.", "usage": "void newt_form_add_components ( resource $form , array $components )", "url": "https://secure.php.net/manual/en/function.newt-form-add-components.php"}, {"name": "newt_form_add_hot_key", "synopsis": null, "usage": "void newt_form_add_hot_key ( resource $form , int $key )", "url": "https://secure.php.net/manual/en/function.newt-form-add-hot-key.php"}, {"name": "newt_form_destroy", "synopsis": "This function frees the memory resources used by the form and all of the components which have been added to the form (including those components which are on subforms). Once a form has been destroyed, none of the form's components can be used.", "usage": "void newt_form_destroy ( resource $form )", "url": "https://secure.php.net/manual/en/function.newt-form-destroy.php"}, {"name": "newt_form_get_current", "synopsis": null, "usage": "resource newt_form_get_current ( resource $form )", "url": "https://secure.php.net/manual/en/function.newt-form-get-current.php"}, {"name": "newt_form_run", "synopsis": "This function runs the form passed to it.", "usage": "void newt_form_run ( resource $form , array &$exit_struct )", "url": "https://secure.php.net/manual/en/function.newt-form-run.php"}, {"name": "newt_form_set_background", "synopsis": null, "usage": "void newt_form_set_background ( resource $from , int $background )", "url": "https://secure.php.net/manual/en/function.newt-form-set-background.php"}, {"name": "newt_form_set_height", "synopsis": null, "usage": "void newt_form_set_height ( resource $form , int $height )", "url": "https://secure.php.net/manual/en/function.newt-form-set-height.php"}, {"name": "newt_form_set_size", "synopsis": null, "usage": "void newt_form_set_size ( resource $form )", "url": "https://secure.php.net/manual/en/function.newt-form-set-size.php"}, {"name": "newt_form_set_timer", "synopsis": null, "usage": "void newt_form_set_timer ( resource $form , int $milliseconds )", "url": "https://secure.php.net/manual/en/function.newt-form-set-timer.php"}, {"name": "newt_form_set_width", "synopsis": null, "usage": "void newt_form_set_width ( resource $form , int $width )", "url": "https://secure.php.net/manual/en/function.newt-form-set-width.php"}, {"name": "newt_form_watch_fd", "synopsis": null, "usage": "void newt_form_watch_fd ( resource $form , resource $stream [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-form-watch-fd.php"}, {"name": "newt_form", "synopsis": "Create a new form.", "usage": "resource newt_form ([ resource $vert_bar [, string $help [, int $flags ]]] )", "url": "https://secure.php.net/manual/en/function.newt-form.php"}, {"name": "newt_get_screen_size", "synopsis": "Fills in the passed references with the current size of the terminal.", "usage": "void newt_get_screen_size ( int &$cols , int &$rows )", "url": "https://secure.php.net/manual/en/function.newt-get-screen-size.php"}, {"name": "newt_grid_add_components_to_form", "synopsis": null, "usage": "void newt_grid_add_components_to_form ( resource $grid , resource $form , bool $recurse )", "url": "https://secure.php.net/manual/en/function.newt-grid-add-components-to-form.php"}, {"name": "newt_grid_basic_window", "synopsis": null, "usage": "resource newt_grid_basic_window ( resource $text , resource $middle , resource $buttons )", "url": "https://secure.php.net/manual/en/function.newt-grid-basic-window.php"}, {"name": "newt_grid_free", "synopsis": null, "usage": "void newt_grid_free ( resource $grid , bool $recurse )", "url": "https://secure.php.net/manual/en/function.newt-grid-free.php"}, {"name": "newt_grid_get_size", "synopsis": null, "usage": "void newt_grid_get_size ( resouce $grid , int &$width , int &$height )", "url": "https://secure.php.net/manual/en/function.newt-grid-get-size.php"}, {"name": "newt_grid_h_close_stacked", "synopsis": null, "usage": "resource newt_grid_h_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-grid-h-close-stacked.php"}, {"name": "newt_grid_h_stacked", "synopsis": null, "usage": "resource newt_grid_h_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-grid-h-stacked.php"}, {"name": "newt_grid_place", "synopsis": null, "usage": "void newt_grid_place ( resource $grid , int $left , int $top )", "url": "https://secure.php.net/manual/en/function.newt-grid-place.php"}, {"name": "newt_grid_set_field", "synopsis": null, "usage": "void newt_grid_set_field ( resource $grid , int $col , int $row , int $type , resource $val , int $pad_left , int $pad_top , int $pad_right , int $pad_bottom , int $anchor [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-grid-set-field.php"}, {"name": "newt_grid_simple_window", "synopsis": null, "usage": "resource newt_grid_simple_window ( resource $text , resource $middle , resource $buttons )", "url": "https://secure.php.net/manual/en/function.newt-grid-simple-window.php"}, {"name": "newt_grid_v_close_stacked", "synopsis": null, "usage": "resource newt_grid_v_close_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-grid-v-close-stacked.php"}, {"name": "newt_grid_v_stacked", "synopsis": null, "usage": "resource newt_grid_v_stacked ( int $element1_type , resource $element1 [, int $... [, resource $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-grid-v-stacked.php"}, {"name": "newt_grid_wrapped_window_at", "synopsis": null, "usage": "void newt_grid_wrapped_window_at ( resource $grid , string $title , int $left , int $top )", "url": "https://secure.php.net/manual/en/function.newt-grid-wrapped-window-at.php"}, {"name": "newt_grid_wrapped_window", "synopsis": null, "usage": "void newt_grid_wrapped_window ( resource $grid , string $title )", "url": "https://secure.php.net/manual/en/function.newt-grid-wrapped-window.php"}, {"name": "newt_init", "synopsis": "Initializes the newt interface. This function must be called before any other newt function.", "usage": "int newt_init ( void )", "url": "https://secure.php.net/manual/en/function.newt-init.php"}, {"name": "newt_label_set_text", "synopsis": null, "usage": "void newt_label_set_text ( resource $label , string $text )", "url": "https://secure.php.net/manual/en/function.newt-label-set-text.php"}, {"name": "newt_label", "synopsis": null, "usage": "resource newt_label ( int $left , int $top , string $text )", "url": "https://secure.php.net/manual/en/function.newt-label.php"}, {"name": "newt_listbox_append_entry", "synopsis": null, "usage": "void newt_listbox_append_entry ( resource $listbox , string $text , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-listbox-append-entry.php"}, {"name": "newt_listbox_clear_selection", "synopsis": null, "usage": "void newt_listbox_clear_selection ( resource $listbox )", "url": "https://secure.php.net/manual/en/function.newt-listbox-clear-selection.php"}, {"name": "newt_listbox_clear", "synopsis": null, "usage": "void newt_listbox_clear ( resource $listobx )", "url": "https://secure.php.net/manual/en/function.newt-listbox-clear.php"}, {"name": "newt_listbox_delete_entry", "synopsis": null, "usage": "void newt_listbox_delete_entry ( resource $listbox , mixed $key )", "url": "https://secure.php.net/manual/en/function.newt-listbox-delete-entry.php"}, {"name": "newt_listbox_get_current", "synopsis": null, "usage": "string newt_listbox_get_current ( resource $listbox )", "url": "https://secure.php.net/manual/en/function.newt-listbox-get-current.php"}, {"name": "newt_listbox_get_selection", "synopsis": null, "usage": "array newt_listbox_get_selection ( resource $listbox )", "url": "https://secure.php.net/manual/en/function.newt-listbox-get-selection.php"}, {"name": "newt_listbox_insert_entry", "synopsis": null, "usage": "void newt_listbox_insert_entry ( resource $listbox , string $text , mixed $data , mixed $key )", "url": "https://secure.php.net/manual/en/function.newt-listbox-insert-entry.php"}, {"name": "newt_listbox_item_count", "synopsis": null, "usage": "int newt_listbox_item_count ( resource $listbox )", "url": "https://secure.php.net/manual/en/function.newt-listbox-item-count.php"}, {"name": "newt_listbox_select_item", "synopsis": null, "usage": "void newt_listbox_select_item ( resource $listbox , mixed $key , int $sense )", "url": "https://secure.php.net/manual/en/function.newt-listbox-select-item.php"}, {"name": "newt_listbox_set_current_by_key", "synopsis": null, "usage": "void newt_listbox_set_current_by_key ( resource $listbox , mixed $key )", "url": "https://secure.php.net/manual/en/function.newt-listbox-set-current-by-key.php"}, {"name": "newt_listbox_set_current", "synopsis": null, "usage": "void newt_listbox_set_current ( resource $listbox , int $num )", "url": "https://secure.php.net/manual/en/function.newt-listbox-set-current.php"}, {"name": "newt_listbox_set_data", "synopsis": null, "usage": "void newt_listbox_set_data ( resource $listbox , int $num , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-listbox-set-data.php"}, {"name": "newt_listbox_set_entry", "synopsis": null, "usage": "void newt_listbox_set_entry ( resource $listbox , int $num , string $text )", "url": "https://secure.php.net/manual/en/function.newt-listbox-set-entry.php"}, {"name": "newt_listbox_set_width", "synopsis": null, "usage": "void newt_listbox_set_width ( resource $listbox , int $width )", "url": "https://secure.php.net/manual/en/function.newt-listbox-set-width.php"}, {"name": "newt_listbox", "synopsis": null, "usage": "resource newt_listbox ( int $left , int $top , int $height [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-listbox.php"}, {"name": "newt_listitem_get_data", "synopsis": null, "usage": "mixed newt_listitem_get_data ( resource $item )", "url": "https://secure.php.net/manual/en/function.newt-listitem-get-data.php"}, {"name": "newt_listitem_set", "synopsis": null, "usage": "void newt_listitem_set ( resource $item , string $text )", "url": "https://secure.php.net/manual/en/function.newt-listitem-set.php"}, {"name": "newt_listitem", "synopsis": null, "usage": "resource newt_listitem ( int $left , int $top , string $text , bool $is_default , resouce $prev_item , mixed $data [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-listitem.php"}, {"name": "newt_open_window", "synopsis": "Open a window of the specified size and position.", "usage": "int newt_open_window ( int $left , int $top , int $width , int $height [, string $title ] )", "url": "https://secure.php.net/manual/en/function.newt-open-window.php"}, {"name": "newt_pop_help_line", "synopsis": "Replaces the current help line with the one from the stack.", "usage": "void newt_pop_help_line ( void )", "url": "https://secure.php.net/manual/en/function.newt-pop-help-line.php"}, {"name": "newt_pop_window", "synopsis": "Removes the top window from the display, and redraws the display areas which the window overwrote.", "usage": "void newt_pop_window ( void )", "url": "https://secure.php.net/manual/en/function.newt-pop-window.php"}, {"name": "newt_push_help_line", "synopsis": "Saves the current help line on a stack, and displays the new line.", "usage": "void newt_push_help_line ([ string $text ] )", "url": "https://secure.php.net/manual/en/function.newt-push-help-line.php"}, {"name": "newt_radio_get_current", "synopsis": null, "usage": "resource newt_radio_get_current ( resource $set_member )", "url": "https://secure.php.net/manual/en/function.newt-radio-get-current.php"}, {"name": "newt_radiobutton", "synopsis": null, "usage": "resource newt_radiobutton ( int $left , int $top , string $text , bool $is_default [, resource $prev_button ] )", "url": "https://secure.php.net/manual/en/function.newt-radiobutton.php"}, {"name": "newt_redraw_help_line", "synopsis": null, "usage": "void newt_redraw_help_line ( void )", "url": "https://secure.php.net/manual/en/function.newt-redraw-help-line.php"}, {"name": "newt_reflow_text", "synopsis": null, "usage": "string newt_reflow_text ( string $text , int $width , int $flex_down , int $flex_up , int &$actual_width , int &$actual_height )", "url": "https://secure.php.net/manual/en/function.newt-reflow-text.php"}, {"name": "newt_refresh", "synopsis": "To increase performance, newt only updates the display when it needs to, not when the program tells it to write to the terminal. Applications can force newt to immediately update modified portions of the screen by calling this function.", "usage": "void newt_refresh ( void )", "url": "https://secure.php.net/manual/en/function.newt-refresh.php"}, {"name": "newt_resize_screen", "synopsis": null, "usage": "void newt_resize_screen ([ bool $redraw ] )", "url": "https://secure.php.net/manual/en/function.newt-resize-screen.php"}, {"name": "newt_resume", "synopsis": "Resume using the newt interface after calling newt_suspend().", "usage": "void newt_resume ( void )", "url": "https://secure.php.net/manual/en/function.newt-resume.php"}, {"name": "newt_run_form", "synopsis": "This function runs the form passed to it.", "usage": "resource newt_run_form ( resource $form )", "url": "https://secure.php.net/manual/en/function.newt-run-form.php"}, {"name": "newt_scale_set", "synopsis": null, "usage": "void newt_scale_set ( resource $scale , int $amount )", "url": "https://secure.php.net/manual/en/function.newt-scale-set.php"}, {"name": "newt_scale", "synopsis": null, "usage": "resource newt_scale ( int $left , int $top , int $width , int $full_value )", "url": "https://secure.php.net/manual/en/function.newt-scale.php"}, {"name": "newt_scrollbar_set", "synopsis": null, "usage": "void newt_scrollbar_set ( resource $scrollbar , int $where , int $total )", "url": "https://secure.php.net/manual/en/function.newt-scrollbar-set.php"}, {"name": "newt_set_help_callback", "synopsis": null, "usage": "void newt_set_help_callback ( mixed $function )", "url": "https://secure.php.net/manual/en/function.newt-set-help-callback.php"}, {"name": "newt_set_suspend_callback", "synopsis": "Set a callback function which gets invoked when user presses the suspend key (normally ^Z). If no suspend callback is registered, the suspend keystroke is ignored.", "usage": "void newt_set_suspend_callback ( callable $function , mixed $data )", "url": "https://secure.php.net/manual/en/function.newt-set-suspend-callback.php"}, {"name": "newt_suspend", "synopsis": "Tells newt to return the terminal to its initial state. Once this is done, the application can suspend itself (by sending itself a SIGTSTP, fork a child program, or do whatever else it likes).", "usage": "void newt_suspend ( void )", "url": "https://secure.php.net/manual/en/function.newt-suspend.php"}, {"name": "newt_textbox_get_num_lines", "synopsis": null, "usage": "int newt_textbox_get_num_lines ( resource $textbox )", "url": "https://secure.php.net/manual/en/function.newt-textbox-get-num-lines.php"}, {"name": "newt_textbox_reflowed", "synopsis": null, "usage": "resource newt_textbox_reflowed ( int $left , int $top , char $*text , int $width , int $flex_down , int $flex_up [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-textbox-reflowed.php"}, {"name": "newt_textbox_set_height", "synopsis": null, "usage": "void newt_textbox_set_height ( resource $textbox , int $height )", "url": "https://secure.php.net/manual/en/function.newt-textbox-set-height.php"}, {"name": "newt_textbox_set_text", "synopsis": null, "usage": "void newt_textbox_set_text ( resource $textbox , string $text )", "url": "https://secure.php.net/manual/en/function.newt-textbox-set-text.php"}, {"name": "newt_textbox", "synopsis": null, "usage": "resource newt_textbox ( int $left , int $top , int $width , int $height [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.newt-textbox.php"}, {"name": "newt_vertical_scrollbar", "synopsis": null, "usage": "resource newt_vertical_scrollbar ( int $left , int $top , int $height [, int $normal_colorset [, int $thumb_colorset ]] )", "url": "https://secure.php.net/manual/en/function.newt-vertical-scrollbar.php"}, {"name": "newt_wait_for_key", "synopsis": "This function doesn't return until a key has been pressed. The keystroke is then ignored. If a key is already in the terminal's buffer, this function discards a keystroke and returns immediately.", "usage": "void newt_wait_for_key ( void )", "url": "https://secure.php.net/manual/en/function.newt-wait-for-key.php"}, {"name": "newt_win_choice", "synopsis": null, "usage": "int newt_win_choice ( string $title , string $button1_text , string $button2_text , string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-win-choice.php"}, {"name": "newt_win_entries", "synopsis": null, "usage": "int newt_win_entries ( string $title , string $text , int $suggested_width , int $flex_down , int $flex_up , int $data_width , array &$items , string $button1 [, string $... ] )", "url": "https://secure.php.net/manual/en/function.newt-win-entries.php"}, {"name": "newt_win_menu", "synopsis": null, "usage": "int newt_win_menu ( string $title , string $text , int $suggestedWidth , int $flexDown , int $flexUp , int $maxListHeight , array $items , int &$listItem [, string $button1 [, string $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-win-menu.php"}, {"name": "newt_win_message", "synopsis": null, "usage": "void newt_win_message ( string $title , string $button_text , string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-win-message.php"}, {"name": "newt_win_messagev", "synopsis": null, "usage": "void newt_win_messagev ( string $title , string $button_text , string $format , array $args )", "url": "https://secure.php.net/manual/en/function.newt-win-messagev.php"}, {"name": "newt_win_ternary", "synopsis": null, "usage": "int newt_win_ternary ( string $title , string $button1_text , string $button2_text , string $button3_text , string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.newt-win-ternary.php"}, {"name": "next", "synopsis": "next() behaves like current(), with one difference. It advances the internal array pointer one place forward before returning the element value. That means it returns the next array value and advances the internal array pointer by one.", "usage": "mixed next ( array &$array )", "url": "https://secure.php.net/manual/en/function.next.php"}, {"name": "ngettext", "synopsis": "The plural version of gettext(). Some languages have more than one form for plural messages dependent on the count.", "usage": "string ngettext ( string $msgid1 , string $msgid2 , int $n )", "url": "https://secure.php.net/manual/en/function.ngettext.php"}, {"name": "nl_langinfo", "synopsis": "nl_langinfo() is used to access individual elements of the locale categories. Unlike localeconv(), which returns all of the elements, nl_langinfo() allows you to select any specific element.", "usage": "string nl_langinfo ( int $item )", "url": "https://secure.php.net/manual/en/function.nl-langinfo.php"}, {"name": "nl2br", "synopsis": "Returns string with <br /> or <br> inserted before all newlines (\\r\\n, \\n\\r, \\n and \\r).", "usage": "string nl2br ( string $string [, bool $is_xhtml = TRUE ] )", "url": "https://secure.php.net/manual/en/function.nl2br.php"}, {"name": "nsapi_request_headers", "synopsis": "nsapi_request_headers() gets all the HTTP headers in the current request. This is only supported when PHP runs as a NSAPI module.", "usage": "array nsapi_request_headers ( void )", "url": "https://secure.php.net/manual/en/function.nsapi-request-headers.php"}, {"name": "nsapi_response_headers", "synopsis": "Gets all the NSAPI response headers.", "usage": "array nsapi_response_headers ( void )", "url": "https://secure.php.net/manual/en/function.nsapi-response-headers.php"}, {"name": "nsapi_virtual", "synopsis": "nsapi_virtual() is an NSAPI-specific function which is equivalent to <!--#include virtual...--> in SSI (.shtml files). It does an NSAPI sub-request. It is useful for including CGI scripts or .shtml files, or anything else that you'd parse through webserver.", "usage": "bool nsapi_virtual ( string $uri )", "url": "https://secure.php.net/manual/en/function.nsapi-virtual.php"}, {"name": "number_format", "synopsis": "This function accepts either one, two, or four parameters (not three):", "usage": "string number_format ( float $number [, int $decimals = 0 ] )", "url": "https://secure.php.net/manual/en/function.number-format.php"}, {"name": "oauth_get_sbs", "synopsis": "Generates a Signature Base String according to pecl/oauth.", "usage": "string oauth_get_sbs ( string $http_method , string $uri [, array $request_parameters ] )", "url": "https://secure.php.net/manual/en/function.oauth-get-sbs.php"}, {"name": "oauth_urlencode", "synopsis": "Encodes a URI to \u00bb\u00a0RFC 3986.", "usage": "string oauth_urlencode ( string $uri )", "url": "https://secure.php.net/manual/en/function.oauth-urlencode.php"}, {"name": "ob_clean", "synopsis": "This function discards the contents of the output buffer.", "usage": "void ob_clean ( void )", "url": "https://secure.php.net/manual/en/function.ob-clean.php"}, {"name": "ob_end_clean", "synopsis": "This function discards the contents of the topmost output buffer and turns off this output buffering. If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_clean() as the buffer contents are discarded when ob_end_clean() is called.", "usage": "bool ob_end_clean ( void )", "url": "https://secure.php.net/manual/en/function.ob-end-clean.php"}, {"name": "ob_end_flush", "synopsis": "This function will send the contents of the topmost output buffer (if any) and turn this output buffer off. If you want to further process the buffer's contents you have to call ob_get_contents() before ob_end_flush() as the buffer contents are discarded after ob_end_flush() is called.", "usage": "bool ob_end_flush ( void )", "url": "https://secure.php.net/manual/en/function.ob-end-flush.php"}, {"name": "ob_flush", "synopsis": "This function will send the contents of the output buffer (if any). If you want to further process the buffer's contents you have to call ob_get_contents() before ob_flush() as the buffer contents are discarded after ob_flush() is called.", "usage": "void ob_flush ( void )", "url": "https://secure.php.net/manual/en/function.ob-flush.php"}, {"name": "ob_get_clean", "synopsis": "Gets the current buffer contents and delete current output buffer.", "usage": "string ob_get_clean ( void )", "url": "https://secure.php.net/manual/en/function.ob-get-clean.php"}, {"name": "ob_get_contents", "synopsis": "Gets the contents of the output buffer without clearing it.", "usage": "string ob_get_contents ( void )", "url": "https://secure.php.net/manual/en/function.ob-get-contents.php"}, {"name": "ob_get_flush", "synopsis": "ob_get_flush() flushes the output buffer, return it as a string and turns off output buffering.", "usage": "string ob_get_flush ( void )", "url": "https://secure.php.net/manual/en/function.ob-get-flush.php"}, {"name": "ob_get_length", "synopsis": "This will return the length of the contents in the output buffer, in bytes.", "usage": "int ob_get_length ( void )", "url": "https://secure.php.net/manual/en/function.ob-get-length.php"}, {"name": "ob_get_level", "synopsis": "Returns the nesting level of the output buffering mechanism.", "usage": "int ob_get_level ( void )", "url": "https://secure.php.net/manual/en/function.ob-get-level.php"}, {"name": "ob_get_status", "synopsis": "ob_get_status() returns status information on either the top level output buffer or all active output buffer levels if full_status is set to TRUE.", "usage": "array ob_get_status ([ bool $full_status = FALSE ] )", "url": "https://secure.php.net/manual/en/function.ob-get-status.php"}, {"name": "ob_gzhandler", "synopsis": "ob_gzhandler() is intended to be used as a callback function for ob_start() to help facilitate sending gz-encoded data to web browsers that support compressed web pages. Before ob_gzhandler() actually sends compressed data, it determines what type of content encoding the browser will accept (\"gzip\", \"deflate\" or none at all) and will return its output accordingly. All browsers are supported since it's up to the browser to send the correct header saying that it accepts compressed web pages. If a browser doesn't support compressed pages this function returns FALSE.", "usage": "string ob_gzhandler ( string $buffer , int $mode )", "url": "https://secure.php.net/manual/en/function.ob-gzhandler.php"}, {"name": "ob_iconv_handler", "synopsis": "Converts the string encoded in internal_encoding to output_encoding.", "usage": "string ob_iconv_handler ( string $contents , int $status )", "url": "https://secure.php.net/manual/en/function.ob-iconv-handler.php"}, {"name": "ob_implicit_flush", "synopsis": "ob_implicit_flush() will turn implicit flushing on or off. Implicit flushing will result in a flush operation after every output call, so that explicit calls to flush() will no longer be needed.", "usage": "void ob_implicit_flush ([ int $flag = 1 ] )", "url": "https://secure.php.net/manual/en/function.ob-implicit-flush.php"}, {"name": "ob_list_handlers", "synopsis": "Lists all output handlers in use.", "usage": "array ob_list_handlers ( void )", "url": "https://secure.php.net/manual/en/function.ob-list-handlers.php"}, {"name": "ob_start", "synopsis": "This function will turn output buffering on. While output buffering is active no output is sent from the script (other than headers), instead the output is stored in an internal buffer.", "usage": "bool ob_start ([ callable $output_callback = NULL [, int $chunk_size = 0 [, int $flags = PHP_OUTPUT_HANDLER_STDFLAGS ]]] )", "url": "https://secure.php.net/manual/en/function.ob-start.php"}, {"name": "ob_tidyhandler", "synopsis": "Callback function for ob_start() to repair the buffer.", "usage": "string ob_tidyhandler ( string $input [, int $mode ] )", "url": "https://secure.php.net/manual/en/function.ob-tidyhandler.php"}, {"name": "oci_bind_array_by_name", "synopsis": "Binds the PHP array var_array to the Oracle placeholder name, which points to an Oracle PL/SQL array. Whether it will be used for input or output will be determined at run-time.", "usage": "bool oci_bind_array_by_name ( resource $statement , string $name , array &$var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]] )", "url": "https://secure.php.net/manual/en/function.oci-bind-array-by-name.php"}, {"name": "oci_bind_by_name", "synopsis": "Binds a PHP variable variable to the Oracle bind variable placeholder bv_name. Binding is important for Oracle database performance and also as a way to avoid SQL Injection security issues.", "usage": "bool oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] )", "url": "https://secure.php.net/manual/en/function.oci-bind-by-name.php"}, {"name": "oci_cancel", "synopsis": "Invalidates a cursor, freeing all associated resources and cancels the ability to read from it.", "usage": "bool oci_cancel ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-cancel.php"}, {"name": "oci_client_version", "synopsis": "Returns a string containing the version number of the Oracle C client library that PHP is linked with.", "usage": "string oci_client_version ( void )", "url": "https://secure.php.net/manual/en/function.oci-client-version.php"}, {"name": "oci_close", "synopsis": "Unsets connection. The underlying database connection is closed if no other resources are using it and if it was created with oci_connect() or oci_new_connect().", "usage": "bool oci_close ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-close.php"}, {"name": "oci_commit", "synopsis": "Commits the outstanding transaction for the Oracle connection. A commit ends the current transaction and makes permanent all changes. It releases all locks held.", "usage": "bool oci_commit ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-commit.php"}, {"name": "oci_connect", "synopsis": "Returns a connection identifier needed for most other OCI8 operations.", "usage": "resource oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )", "url": "https://secure.php.net/manual/en/function.oci-connect.php"}, {"name": "oci_define_by_name", "synopsis": "Associates a PHP variable with a column for query fetches using oci_fetch().", "usage": "bool oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] )", "url": "https://secure.php.net/manual/en/function.oci-define-by-name.php"}, {"name": "oci_error", "synopsis": "Returns the last error found.", "usage": "array oci_error ([ resource $resource ] )", "url": "https://secure.php.net/manual/en/function.oci-error.php"}, {"name": "oci_execute", "synopsis": "Executes a statement previously returned from oci_parse().", "usage": "bool oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] )", "url": "https://secure.php.net/manual/en/function.oci-execute.php"}, {"name": "oci_fetch_all", "synopsis": "Fetches multiple rows from a query into a two-dimensional array. By default, all rows are returned.", "usage": "int oci_fetch_all ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] )", "url": "https://secure.php.net/manual/en/function.oci-fetch-all.php"}, {"name": "oci_fetch_array", "synopsis": "Returns an array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist.", "usage": "array oci_fetch_array ( resource $statement [, int $mode ] )", "url": "https://secure.php.net/manual/en/function.oci-fetch-array.php"}, {"name": "oci_fetch_assoc", "synopsis": "Returns an associative array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist.", "usage": "array oci_fetch_assoc ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-fetch-assoc.php"}, {"name": "oci_fetch_object", "synopsis": "Returns an object containing the next result-set row of a query. Each attribute of the object corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist.", "usage": "object oci_fetch_object ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-fetch-object.php"}, {"name": "oci_fetch_row", "synopsis": "Returns a numerically indexed array containing the next result-set row of a query. Each array entry corresponds to a column of the row. This function is typically called in a loop until it returns FALSE, indicating no more rows exist.", "usage": "array oci_fetch_row ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-fetch-row.php"}, {"name": "oci_fetch", "synopsis": "Fetches the next row from a query into internal buffers accessible either with oci_result(), or by using variables previously defined with oci_define_by_name().", "usage": "bool oci_fetch ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-fetch.php"}, {"name": "oci_field_is_null", "synopsis": "Checks if the given field from the current row of statement is NULL.", "usage": "bool oci_field_is_null ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-is-null.php"}, {"name": "oci_field_name", "synopsis": "Returns the name of the field.", "usage": "string oci_field_name ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-name.php"}, {"name": "oci_field_precision", "synopsis": "Returns precision of the field.", "usage": "int oci_field_precision ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-precision.php"}, {"name": "oci_field_scale", "synopsis": "Returns the scale of the column with field index.", "usage": "int oci_field_scale ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-scale.php"}, {"name": "oci_field_size", "synopsis": "Returns the size of a field.", "usage": "int oci_field_size ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-size.php"}, {"name": "oci_field_type_raw", "synopsis": "Returns Oracle's raw \"SQLT\" data type of the field.", "usage": "int oci_field_type_raw ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-type-raw.php"}, {"name": "oci_field_type", "synopsis": "Returns a field's data type name.", "usage": "mixed oci_field_type ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-field-type.php"}, {"name": "oci_free_descriptor", "synopsis": "Frees a descriptor allocated by oci_new_descriptor().", "usage": "bool oci_free_descriptor ( resource $descriptor )", "url": "https://secure.php.net/manual/en/function.oci-free-descriptor.php"}, {"name": "oci_free_statement", "synopsis": "Frees resources associated with Oracle's cursor or statement, which was received from as a result of oci_parse() or obtained from Oracle.", "usage": "bool oci_free_statement ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-free-statement.php"}, {"name": "oci_get_implicit_resultset", "synopsis": "Used to fetch consectutive sets of query results after the execution of a stored or anonymous Oracle PL/SQL block where that block returns query results with Oracle's DBMS_SQL.RETURN_RESULT PL/SQL function. This allows PL/SQL blocks to easily return query results.", "usage": "resource oci_get_implicit_resultset ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-get-implicit-resultset.php"}, {"name": "oci_internal_debug", "synopsis": "Enables or disables internal debug output.", "usage": "void oci_internal_debug ( bool $onoff )", "url": "https://secure.php.net/manual/en/function.oci-internal-debug.php"}, {"name": "oci_lob_copy", "synopsis": "Copies a large object or a part of a large object to another large object. Old LOB-recipient data will be overwritten.", "usage": "bool oci_lob_copy ( OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ] )", "url": "https://secure.php.net/manual/en/function.oci-lob-copy.php"}, {"name": "oci_lob_is_equal", "synopsis": "Compares two LOB/FILE locators.", "usage": "bool oci_lob_is_equal ( OCI-Lob $lob1 , OCI-Lob $lob2 )", "url": "https://secure.php.net/manual/en/function.oci-lob-is-equal.php"}, {"name": "oci_new_collection", "synopsis": "Allocates a new collection object.", "usage": "OCI-Collection oci_new_collection ( resource $connection , string $tdo [, string $schema = NULL ] )", "url": "https://secure.php.net/manual/en/function.oci-new-collection.php"}, {"name": "oci_new_connect", "synopsis": "Establishes a new connection to an Oracle server and logs on.", "usage": "resource oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )", "url": "https://secure.php.net/manual/en/function.oci-new-connect.php"}, {"name": "oci_new_cursor", "synopsis": "Allocates a new statement handle on the specified connection.", "usage": "resource oci_new_cursor ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-new-cursor.php"}, {"name": "oci_new_descriptor", "synopsis": "Allocates resources to hold descriptor or LOB locator.", "usage": "OCI-Lob oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] )", "url": "https://secure.php.net/manual/en/function.oci-new-descriptor.php"}, {"name": "oci_num_fields", "synopsis": "Gets the number of columns in the given statement.", "usage": "int oci_num_fields ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-num-fields.php"}, {"name": "oci_num_rows", "synopsis": "Gets the number of rows affected during statement execution.", "usage": "int oci_num_rows ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-num-rows.php"}, {"name": "oci_parse", "synopsis": "Prepares sql_text using connection and returns the statement identifier, which can be used with oci_bind_by_name(), oci_execute() and other functions.", "usage": "resource oci_parse ( resource $connection , string $sql_text )", "url": "https://secure.php.net/manual/en/function.oci-parse.php"}, {"name": "oci_password_change", "synopsis": "Changes password for user with username.", "usage": "bool oci_password_change ( resource $connection , string $username , string $old_password , string $new_password )", "url": "https://secure.php.net/manual/en/function.oci-password-change.php"}, {"name": "oci_pconnect", "synopsis": "Creates a persistent connection to an Oracle server and logs on.", "usage": "resource oci_pconnect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] )", "url": "https://secure.php.net/manual/en/function.oci-pconnect.php"}, {"name": "oci_register_taf_callback", "synopsis": "Registers a user-defined callback function to connection. If connection fails due to instance or network failure, the registered callback function will be invoked for several times during failover. See OCI8 Transparent Application Failover (TAF) Support for information.", "usage": "bool oci_register_taf_callback ( resource $connection [, mixed $callbackFn ] )", "url": "https://secure.php.net/manual/en/function.oci-register-taf-callback.php"}, {"name": "oci_result", "synopsis": "Returns the data from field in the current row, fetched by oci_fetch().", "usage": "mixed oci_result ( resource $statement , mixed $field )", "url": "https://secure.php.net/manual/en/function.oci-result.php"}, {"name": "oci_rollback", "synopsis": "Reverts all uncommitted changes for the Oracle connection and ends the transaction. It releases all locks held. All Oracle SAVEPOINTS are erased.", "usage": "bool oci_rollback ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-rollback.php"}, {"name": "oci_server_version", "synopsis": "Returns a string with the Oracle Database version and available options", "usage": "string oci_server_version ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-server-version.php"}, {"name": "oci_set_action", "synopsis": "Sets the action name for Oracle tracing.", "usage": "bool oci_set_action ( resource $connection , string $action_name )", "url": "https://secure.php.net/manual/en/function.oci-set-action.php"}, {"name": "oci_set_client_identifier", "synopsis": "Sets the client identifier used by various database components to identify lightweight application users who authenticate as the same database user.", "usage": "bool oci_set_client_identifier ( resource $connection , string $client_identifier )", "url": "https://secure.php.net/manual/en/function.oci-set-client-identifier.php"}, {"name": "oci_set_client_info", "synopsis": "Sets the client information for Oracle tracing.", "usage": "bool oci_set_client_info ( resource $connection , string $client_info )", "url": "https://secure.php.net/manual/en/function.oci-set-client-info.php"}, {"name": "oci_set_edition", "synopsis": "Sets the database \"edition\" of objects to be used by a subsequent connections.", "usage": "bool oci_set_edition ( string $edition )", "url": "https://secure.php.net/manual/en/function.oci-set-edition.php"}, {"name": "oci_set_module_name", "synopsis": "Sets the module name for Oracle tracing.", "usage": "bool oci_set_module_name ( resource $connection , string $module_name )", "url": "https://secure.php.net/manual/en/function.oci-set-module-name.php"}, {"name": "oci_set_prefetch", "synopsis": "Sets the number of rows to be buffered by the Oracle Client libraries after a successful query call to oci_execute() and for each subsequent internal fetch request to the database. For queries returning a large number of rows, performance can be significantly improved by increasing the prefetch count above the default oci8.default_prefetch value.", "usage": "bool oci_set_prefetch ( resource $statement , int $rows )", "url": "https://secure.php.net/manual/en/function.oci-set-prefetch.php"}, {"name": "oci_statement_type", "synopsis": "Returns a keyword identifying the type of the OCI8 statement.", "usage": "string oci_statement_type ( resource $statement )", "url": "https://secure.php.net/manual/en/function.oci-statement-type.php"}, {"name": "oci_unregister_taf_callback", "synopsis": "Unregister the user-defined callback function registered to connection by oci_register_taf_callback(). See OCI8 Transparent Application Failover (TAF) Support for information.", "usage": "bool oci_unregister_taf_callback ( resource $connection )", "url": "https://secure.php.net/manual/en/function.oci-unregister-taf-callback.php"}, {"name": "octdec", "synopsis": "Returns the decimal equivalent of the octal number represented by the octal_string argument.", "usage": "number octdec ( string $octal_string )", "url": "https://secure.php.net/manual/en/function.octdec.php"}, {"name": "odbc_autocommit", "synopsis": "Toggles autocommit behaviour.", "usage": "mixed odbc_autocommit ( resource $connection_id [, bool $OnOff = FALSE ] )", "url": "https://secure.php.net/manual/en/function.odbc-autocommit.php"}, {"name": "odbc_binmode", "synopsis": "Enables handling of binary column data. ODBC SQL types affected are BINARY, VARBINARY, and LONGVARBINARY.", "usage": "bool odbc_binmode ( resource $result_id , int $mode )", "url": "https://secure.php.net/manual/en/function.odbc-binmode.php"}, {"name": "odbc_close_all", "synopsis": "odbc_close_all() will close down all connections to database server(s).", "usage": "void odbc_close_all ( void )", "url": "https://secure.php.net/manual/en/function.odbc-close-all.php"}, {"name": "odbc_close", "synopsis": "Closes down the connection to the database server.", "usage": "void odbc_close ( resource $connection_id )", "url": "https://secure.php.net/manual/en/function.odbc-close.php"}, {"name": "odbc_columnprivileges", "synopsis": "Lists columns and associated privileges for the given table.", "usage": "resource odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name )", "url": "https://secure.php.net/manual/en/function.odbc-columnprivileges.php"}, {"name": "odbc_columns", "synopsis": "Lists all columns in the requested range.", "usage": "resource odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] )", "url": "https://secure.php.net/manual/en/function.odbc-columns.php"}, {"name": "odbc_commit", "synopsis": "Commits all pending transactions on the connection.", "usage": "bool odbc_commit ( resource $connection_id )", "url": "https://secure.php.net/manual/en/function.odbc-commit.php"}, {"name": "odbc_connect", "synopsis": null, "usage": "resource odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] )", "url": "https://secure.php.net/manual/en/function.odbc-connect.php"}, {"name": "odbc_cursor", "synopsis": "Gets the cursorname for the given result_id.", "usage": "string odbc_cursor ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.odbc-cursor.php"}, {"name": "odbc_data_source", "synopsis": "This function will return the list of available DSN (after calling it several times).", "usage": "array odbc_data_source ( resource $connection_id , int $fetch_type )", "url": "https://secure.php.net/manual/en/function.odbc-data-source.php"}, {"name": "odbc_error", "synopsis": null, "usage": "string odbc_error ([ resource $connection_id ] )", "url": "https://secure.php.net/manual/en/function.odbc-error.php"}, {"name": "odbc_errormsg", "synopsis": null, "usage": "string odbc_errormsg ([ resource $connection_id ] )", "url": "https://secure.php.net/manual/en/function.odbc-errormsg.php"}, {"name": "odbc_exec", "synopsis": "Sends an SQL statement to the database server.", "usage": "resource odbc_exec ( resource $connection_id , string $query_string [, int $flags ] )", "url": "https://secure.php.net/manual/en/function.odbc-exec.php"}, {"name": "odbc_execute", "synopsis": "Executes a statement prepared with odbc_prepare().", "usage": "bool odbc_execute ( resource $result_id [, array $parameters_array ] )", "url": "https://secure.php.net/manual/en/function.odbc-execute.php"}, {"name": "odbc_fetch_array", "synopsis": "Fetch an associative array from an ODBC query.", "usage": "array odbc_fetch_array ( resource $result [, int $rownumber ] )", "url": "https://secure.php.net/manual/en/function.odbc-fetch-array.php"}, {"name": "odbc_fetch_into", "synopsis": "Fetch one result row into array.", "usage": "int odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] )", "url": "https://secure.php.net/manual/en/function.odbc-fetch-into.php"}, {"name": "odbc_fetch_object", "synopsis": "Fetch an object from an ODBC query.", "usage": "object odbc_fetch_object ( resource $result [, int $rownumber ] )", "url": "https://secure.php.net/manual/en/function.odbc-fetch-object.php"}, {"name": "odbc_fetch_row", "synopsis": "Fetches a row of the data that was returned by odbc_do() or odbc_exec(). After odbc_fetch_row() is called, the fields of that row can be accessed with odbc_result().", "usage": "bool odbc_fetch_row ( resource $result_id [, int $row_number = 1 ] )", "url": "https://secure.php.net/manual/en/function.odbc-fetch-row.php"}, {"name": "odbc_field_len", "synopsis": "Gets the length of the field referenced by number in the given result identifier.", "usage": "int odbc_field_len ( resource $result_id , int $field_number )", "url": "https://secure.php.net/manual/en/function.odbc-field-len.php"}, {"name": "odbc_field_name", "synopsis": "Gets the name of the field occupying the given column number in the given result identifier.", "usage": "string odbc_field_name ( resource $result_id , int $field_number )", "url": "https://secure.php.net/manual/en/function.odbc-field-name.php"}, {"name": "odbc_field_num", "synopsis": "Gets the number of the column slot that corresponds to the named field in the given result identifier.", "usage": "int odbc_field_num ( resource $result_id , string $field_name )", "url": "https://secure.php.net/manual/en/function.odbc-field-num.php"}, {"name": "odbc_field_scale", "synopsis": "Gets the scale of the field referenced by number in the given result identifier.", "usage": "int odbc_field_scale ( resource $result_id , int $field_number )", "url": "https://secure.php.net/manual/en/function.odbc-field-scale.php"}, {"name": "odbc_field_type", "synopsis": "Gets the SQL type of the field referenced by number in the given result identifier.", "usage": "string odbc_field_type ( resource $result_id , int $field_number )", "url": "https://secure.php.net/manual/en/function.odbc-field-type.php"}, {"name": "odbc_foreignkeys", "synopsis": "Retrieves a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table", "usage": "resource odbc_foreignkeys ( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table )", "url": "https://secure.php.net/manual/en/function.odbc-foreignkeys.php"}, {"name": "odbc_free_result", "synopsis": "Free resources associated with a result.", "usage": "bool odbc_free_result ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.odbc-free-result.php"}, {"name": "odbc_gettypeinfo", "synopsis": "Retrieves information about data types supported by the data source.", "usage": "resource odbc_gettypeinfo ( resource $connection_id [, int $data_type ] )", "url": "https://secure.php.net/manual/en/function.odbc-gettypeinfo.php"}, {"name": "odbc_longreadlen", "synopsis": "Enables handling of LONG and LONGVARBINARY columns.", "usage": "bool odbc_longreadlen ( resource $result_id , int $length )", "url": "https://secure.php.net/manual/en/function.odbc-longreadlen.php"}, {"name": "odbc_next_result", "synopsis": "Checks if there are more result sets available as well as allowing access to the next result set via odbc_fetch_array(), odbc_fetch_row(), odbc_result(), etc.", "usage": "bool odbc_next_result ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.odbc-next-result.php"}, {"name": "odbc_num_fields", "synopsis": "Gets the number of fields (columns) in an ODBC result.", "usage": "int odbc_num_fields ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.odbc-num-fields.php"}, {"name": "odbc_num_rows", "synopsis": "Gets the number of rows in a result. For INSERT, UPDATE and DELETE statements odbc_num_rows() returns the number of rows affected. For a SELECT clause this can be the number of rows available.", "usage": "int odbc_num_rows ( resource $result_id )", "url": "https://secure.php.net/manual/en/function.odbc-num-rows.php"}, {"name": "odbc_pconnect", "synopsis": "Opens a persistent database connection.", "usage": "resource odbc_pconnect ( string $dsn , string $user , string $password [, int $cursor_type ] )", "url": "https://secure.php.net/manual/en/function.odbc-pconnect.php"}, {"name": "odbc_prepare", "synopsis": "Prepares a statement for execution. The result identifier can be used later to execute the statement with odbc_execute().", "usage": "resource odbc_prepare ( resource $connection_id , string $query_string )", "url": "https://secure.php.net/manual/en/function.odbc-prepare.php"}, {"name": "odbc_primarykeys", "synopsis": "Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table.", "usage": "resource odbc_primarykeys ( resource $connection_id , string $qualifier , string $owner , string $table )", "url": "https://secure.php.net/manual/en/function.odbc-primarykeys.php"}, {"name": "odbc_procedurecolumns", "synopsis": "Retrieve information about parameters to procedures.", "usage": "resource odbc_procedurecolumns ( resource $connection_id )", "url": "https://secure.php.net/manual/en/function.odbc-procedurecolumns.php"}, {"name": "odbc_procedures", "synopsis": "Lists all procedures in the requested range.", "usage": "resource odbc_procedures ( resource $connection_id )", "url": "https://secure.php.net/manual/en/function.odbc-procedures.php"}, {"name": "odbc_result_all", "synopsis": "Prints all rows from a result identifier produced by odbc_exec(). The result is printed in HTML table format.", "usage": "int odbc_result_all ( resource $result_id [, string $format ] )", "url": "https://secure.php.net/manual/en/function.odbc-result-all.php"}, {"name": "odbc_result", "synopsis": "Get result data", "usage": "mixed odbc_result ( resource $result_id , mixed $field )", "url": "https://secure.php.net/manual/en/function.odbc-result.php"}, {"name": "odbc_rollback", "synopsis": "Rolls back all pending statements on the connection.", "usage": "bool odbc_rollback ( resource $connection_id )", "url": "https://secure.php.net/manual/en/function.odbc-rollback.php"}, {"name": "odbc_setoption", "synopsis": "This function allows fiddling with the ODBC options for a particular connection or query result. It was written to help find work around to problems in quirky ODBC drivers. You should probably only use this function if you are an ODBC programmer and understand the effects the various options will have. You will certainly need a good ODBC reference to explain all the different options and values that can be used. Different driver versions support different options.", "usage": "bool odbc_setoption ( resource $id , int $function , int $option , int $param )", "url": "https://secure.php.net/manual/en/function.odbc-setoption.php"}, {"name": "odbc_specialcolumns", "synopsis": "Retrieves either the optimal set of columns that uniquely identifies a row in the table, or columns that are automatically updated when any value in the row is updated by a transaction.", "usage": "resource odbc_specialcolumns ( resource $connection_id , int $type , string $qualifier , string $table , int $scope , int $nullable )", "url": "https://secure.php.net/manual/en/function.odbc-specialcolumns.php"}, {"name": "odbc_statistics", "synopsis": "Get statistics about a table and its indexes.", "usage": "resource odbc_statistics ( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy )", "url": "https://secure.php.net/manual/en/function.odbc-statistics.php"}, {"name": "odbc_tableprivileges", "synopsis": "Lists tables in the requested range and the privileges associated with each table.", "usage": "resource odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name )", "url": "https://secure.php.net/manual/en/function.odbc-tableprivileges.php"}, {"name": "odbc_tables", "synopsis": "Lists all tables in the requested range.", "usage": "resource odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] )", "url": "https://secure.php.net/manual/en/function.odbc-tables.php"}, {"name": "opcache_compile_file", "synopsis": "This function compiles a PHP script and adds it to the opcode cache without executing it. This can be used to prime the cache after a Web server restart by pre-caching files that will be included in later requests.", "usage": "bool opcache_compile_file ( string $file )", "url": "https://secure.php.net/manual/en/function.opcache-compile-file.php"}, {"name": "opcache_get_configuration", "synopsis": "This function returns configuration information about the cache instance", "usage": "array opcache_get_configuration ( void )", "url": "https://secure.php.net/manual/en/function.opcache-get-configuration.php"}, {"name": "opcache_get_status", "synopsis": "This function returns state information about the cache instance", "usage": "array opcache_get_status ([ bool $get_scripts = TRUE ] )", "url": "https://secure.php.net/manual/en/function.opcache-get-status.php"}, {"name": "opcache_invalidate", "synopsis": "This function invalidates a particular script from the opcode cache. If force is unset or FALSE, the script will only be invalidated if the modification time of the script is newer than the cached opcodes.", "usage": "bool opcache_invalidate ( string $script [, bool $force = FALSE ] )", "url": "https://secure.php.net/manual/en/function.opcache-invalidate.php"}, {"name": "opcache_is_script_cached", "synopsis": "This function checks if a PHP script has been cached in OPCache. This can be used to more easily detect the \"warming\" of the cache for a particular script.", "usage": "bool opcache_is_script_cached ( string $file )", "url": "https://secure.php.net/manual/en/function.opcache-is-script-cached.php"}, {"name": "opcache_reset", "synopsis": "This function resets the entire opcode cache. After calling opcache_reset(), all scripts will be reloaded and reparsed the next time they are hit.", "usage": "bool opcache_reset ( void )", "url": "https://secure.php.net/manual/en/function.opcache-reset.php"}, {"name": "openal_buffer_create", "synopsis": null, "usage": "resource openal_buffer_create ( void )", "url": "https://secure.php.net/manual/en/function.openal-buffer-create.php"}, {"name": "openal_buffer_data", "synopsis": null, "usage": "bool openal_buffer_data ( resource $buffer , int $format , string $data , int $freq )", "url": "https://secure.php.net/manual/en/function.openal-buffer-data.php"}, {"name": "openal_buffer_destroy", "synopsis": null, "usage": "bool openal_buffer_destroy ( resource $buffer )", "url": "https://secure.php.net/manual/en/function.openal-buffer-destroy.php"}, {"name": "openal_buffer_get", "synopsis": null, "usage": "int openal_buffer_get ( resource $buffer , int $property )", "url": "https://secure.php.net/manual/en/function.openal-buffer-get.php"}, {"name": "openal_buffer_loadwav", "synopsis": null, "usage": "bool openal_buffer_loadwav ( resource $buffer , string $wavfile )", "url": "https://secure.php.net/manual/en/function.openal-buffer-loadwav.php"}, {"name": "openal_context_create", "synopsis": null, "usage": "resource openal_context_create ( resource $device )", "url": "https://secure.php.net/manual/en/function.openal-context-create.php"}, {"name": "openal_context_current", "synopsis": null, "usage": "bool openal_context_current ( resource $context )", "url": "https://secure.php.net/manual/en/function.openal-context-current.php"}, {"name": "openal_context_destroy", "synopsis": null, "usage": "bool openal_context_destroy ( resource $context )", "url": "https://secure.php.net/manual/en/function.openal-context-destroy.php"}, {"name": "openal_context_process", "synopsis": null, "usage": "bool openal_context_process ( resource $context )", "url": "https://secure.php.net/manual/en/function.openal-context-process.php"}, {"name": "openal_context_suspend", "synopsis": null, "usage": "bool openal_context_suspend ( resource $context )", "url": "https://secure.php.net/manual/en/function.openal-context-suspend.php"}, {"name": "openal_device_close", "synopsis": null, "usage": "bool openal_device_close ( resource $device )", "url": "https://secure.php.net/manual/en/function.openal-device-close.php"}, {"name": "openal_device_open", "synopsis": null, "usage": "resource openal_device_open ([ string $device_desc ] )", "url": "https://secure.php.net/manual/en/function.openal-device-open.php"}, {"name": "openal_listener_get", "synopsis": null, "usage": "mixed openal_listener_get ( int $property )", "url": "https://secure.php.net/manual/en/function.openal-listener-get.php"}, {"name": "openal_listener_set", "synopsis": null, "usage": "bool openal_listener_set ( int $property , mixed $setting )", "url": "https://secure.php.net/manual/en/function.openal-listener-set.php"}, {"name": "openal_source_create", "synopsis": null, "usage": "resource openal_source_create ( void )", "url": "https://secure.php.net/manual/en/function.openal-source-create.php"}, {"name": "openal_source_destroy", "synopsis": null, "usage": "bool openal_source_destroy ( resource $source )", "url": "https://secure.php.net/manual/en/function.openal-source-destroy.php"}, {"name": "openal_source_get", "synopsis": null, "usage": "mixed openal_source_get ( resource $source , int $property )", "url": "https://secure.php.net/manual/en/function.openal-source-get.php"}, {"name": "openal_source_pause", "synopsis": null, "usage": "bool openal_source_pause ( resource $source )", "url": "https://secure.php.net/manual/en/function.openal-source-pause.php"}, {"name": "openal_source_play", "synopsis": null, "usage": "bool openal_source_play ( resource $source )", "url": "https://secure.php.net/manual/en/function.openal-source-play.php"}, {"name": "openal_source_rewind", "synopsis": null, "usage": "bool openal_source_rewind ( resource $source )", "url": "https://secure.php.net/manual/en/function.openal-source-rewind.php"}, {"name": "openal_source_set", "synopsis": null, "usage": "bool openal_source_set ( resource $source , int $property , mixed $setting )", "url": "https://secure.php.net/manual/en/function.openal-source-set.php"}, {"name": "openal_source_stop", "synopsis": null, "usage": "bool openal_source_stop ( resource $source )", "url": "https://secure.php.net/manual/en/function.openal-source-stop.php"}, {"name": "openal_stream", "synopsis": null, "usage": "resource openal_stream ( resource $source , int $format , int $rate )", "url": "https://secure.php.net/manual/en/function.openal-stream.php"}, {"name": "opendir", "synopsis": "Opens up a directory handle to be used in subsequent closedir(), readdir(), and rewinddir() calls.", "usage": "resource opendir ( string $path [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.opendir.php"}, {"name": "openlog", "synopsis": "openlog() opens a connection to the system logger for a program.", "usage": "bool openlog ( string $ident , int $option , int $facility )", "url": "https://secure.php.net/manual/en/function.openlog.php"}, {"name": "openssl_cipher_iv_length", "synopsis": "Gets the cipher initialization vector (iv) length.", "usage": "int openssl_cipher_iv_length ( string $method )", "url": "https://secure.php.net/manual/en/function.openssl-cipher-iv-length.php"}, {"name": "openssl_csr_export_to_file", "synopsis": "openssl_csr_export_to_file() takes the Certificate Signing Request represented by csr and saves it in PEM format into the file named by outfilename.", "usage": "bool openssl_csr_export_to_file ( mixed $csr , string $outfilename [, bool $notext = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-export-to-file.php"}, {"name": "openssl_csr_export", "synopsis": "openssl_csr_export() takes the Certificate Signing Request represented by csr and stores it in PEM format in out, which is passed by reference.", "usage": "bool openssl_csr_export ( mixed $csr , string &$out [, bool $notext = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-export.php"}, {"name": "openssl_csr_get_public_key", "synopsis": "openssl_csr_get_public_key() extracts the public key from csr and prepares it for use by other functions.", "usage": "resource openssl_csr_get_public_key ( mixed $csr [, bool $use_shortnames = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-get-public-key.php"}, {"name": "openssl_csr_get_subject", "synopsis": "openssl_csr_get_subject() returns subject distinguished name information encoded in the csr including fields commonName (CN), organizationName (O), countryName (C) etc.", "usage": "array openssl_csr_get_subject ( mixed $csr [, bool $use_shortnames = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-get-subject.php"}, {"name": "openssl_csr_new", "synopsis": "openssl_csr_new() generates a new CSR (Certificate Signing Request) based on the information provided by dn.", "usage": "mixed openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-new.php"}, {"name": "openssl_csr_sign", "synopsis": "openssl_csr_sign() generates an x509 certificate resource from the given CSR.", "usage": "resource openssl_csr_sign ( mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]] )", "url": "https://secure.php.net/manual/en/function.openssl-csr-sign.php"}, {"name": "openssl_decrypt", "synopsis": "Takes a raw or base64 encoded string and decrypts it using a given method and key.", "usage": "string openssl_decrypt ( string $data , string $method , string $key [, int $options = 0 [, string $iv = \"\" [, string $tag = \"\" [, string $aad = \"\" ]]]] )", "url": "https://secure.php.net/manual/en/function.openssl-decrypt.php"}, {"name": "openssl_dh_compute_key", "synopsis": "The shared secret returned by openssl_dh_compute_key() is often used as an encryption key to secretly communicate with a remote party. This is known as the Diffie-Hellman key exchange.", "usage": "string openssl_dh_compute_key ( string $pub_key , resource $dh_key )", "url": "https://secure.php.net/manual/en/function.openssl-dh-compute-key.php"}, {"name": "openssl_digest", "synopsis": "Computes a digest hash value for the given data using a given method, and returns a raw or binhex encoded string.", "usage": "string openssl_digest ( string $data , string $method [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.openssl-digest.php"}, {"name": "openssl_encrypt", "synopsis": "Encrypts given data with given method and key, returns a raw or base64 encoded string", "usage": "string openssl_encrypt ( string $data , string $method , string $key [, int $options = 0 [, string $iv = \"\" [, string &$tag = NULL [, string $aad = \"\" [, int $tag_length = 16 ]]]]] )", "url": "https://secure.php.net/manual/en/function.openssl-encrypt.php"}, {"name": "openssl_error_string", "synopsis": "openssl_error_string() returns the last error from the openSSL library. Error messages are queued, so this function should be called multiple times to collect all of the information. The last error will be the most recent one.", "usage": "string openssl_error_string ( void )", "url": "https://secure.php.net/manual/en/function.openssl-error-string.php"}, {"name": "openssl_free_key", "synopsis": "openssl_free_key() frees the key associated with the specified key_identifier from memory.", "usage": "void openssl_free_key ( resource $key_identifier )", "url": "https://secure.php.net/manual/en/function.openssl-free-key.php"}, {"name": "openssl_get_cert_locations", "synopsis": "openssl_get_cert_locations() returns an array with information about the available certificate locations that will be searched for SSL certificates.", "usage": "array openssl_get_cert_locations ( void )", "url": "https://secure.php.net/manual/en/function.openssl-get-cert-locations.php"}, {"name": "openssl_get_cipher_methods", "synopsis": "Gets a list of available cipher methods.", "usage": "array openssl_get_cipher_methods ([ bool $aliases = FALSE ] )", "url": "https://secure.php.net/manual/en/function.openssl-get-cipher-methods.php"}, {"name": "openssl_get_curve_names", "synopsis": "Gets the list of available curve names for use in Elliptic curve cryptography (ECC) for public/private key operations. The two most widely standardized/supported curves are prime256v1 (NIST P-256) and secp384r1 (NIST P-384).", "usage": "array openssl_get_curve_names ( void )", "url": "https://secure.php.net/manual/en/function.openssl-get-curve-names.php"}, {"name": "openssl_get_md_methods", "synopsis": "Gets a list of available digest methods.", "usage": "array openssl_get_md_methods ([ bool $aliases = FALSE ] )", "url": "https://secure.php.net/manual/en/function.openssl-get-md-methods.php"}, {"name": "openssl_open", "synopsis": "openssl_open() opens (decrypts) sealed_data using the private key associated with the key identifier priv_key_id and the envelope key env_key, and fills open_data with the decrypted data. The envelope key is generated when the data are sealed and can only be used by one specific private key. See openssl_seal() for more information.", "usage": "bool openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method = \"RC4\" [, string $iv ]] )", "url": "https://secure.php.net/manual/en/function.openssl-open.php"}, {"name": "openssl_pbkdf2", "synopsis": "openssl_pbkdf2() computes PBKDF2 (Password-Based Key Derivation Function 2), a key derivation function defined in PKCS5 v2.", "usage": "string openssl_pbkdf2 ( string $password , string $salt , int $key_length , int $iterations [, string $digest_algorithm = \"sha1\" ] )", "url": "https://secure.php.net/manual/en/function.openssl-pbkdf2.php"}, {"name": "openssl_pkcs12_export_to_file", "synopsis": "openssl_pkcs12_export_to_file() stores x509 into a file named by filename in a PKCS#12 file format.", "usage": "bool openssl_pkcs12_export_to_file ( mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs12-export-to-file.php"}, {"name": "openssl_pkcs12_export", "synopsis": "openssl_pkcs12_export() stores x509 into a string named by out in a PKCS#12 file format.", "usage": "bool openssl_pkcs12_export ( mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs12-export.php"}, {"name": "openssl_pkcs12_read", "synopsis": "openssl_pkcs12_read() parses the PKCS#12 certificate store supplied by pkcs12 into a array named certs.", "usage": "bool openssl_pkcs12_read ( string $pkcs12 , array &$certs , string $pass )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs12-read.php"}, {"name": "openssl_pkcs7_decrypt", "synopsis": "Decrypts the S/MIME encrypted message contained in the file specified by infilename using the certificate and its associated private key specified by recipcert and recipkey.", "usage": "bool openssl_pkcs7_decrypt ( string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs7-decrypt.php"}, {"name": "openssl_pkcs7_encrypt", "synopsis": "openssl_pkcs7_encrypt() takes the contents of the file named infile and encrypts them using an RC2 40-bit cipher so that they can only be read by the intended recipients specified by recipcerts.", "usage": "bool openssl_pkcs7_encrypt ( string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs7-encrypt.php"}, {"name": "openssl_pkcs7_read", "synopsis": "", "usage": "bool openssl_pkcs7_read ( string $infilename , array &$certs )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs7-read.php"}, {"name": "openssl_pkcs7_sign", "synopsis": "openssl_pkcs7_sign() takes the contents of the file named infilename and signs them using the certificate and its matching private key specified by signcert and privkey parameters.", "usage": "bool openssl_pkcs7_sign ( string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs7-sign.php"}, {"name": "openssl_pkcs7_verify", "synopsis": "openssl_pkcs7_verify() reads the S/MIME message contained in the given file and examines the digital signature.", "usage": "mixed openssl_pkcs7_verify ( string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content [, string $p7bfilename ]]]]] )", "url": "https://secure.php.net/manual/en/function.openssl-pkcs7-verify.php"}, {"name": "openssl_pkey_export_to_file", "synopsis": "openssl_pkey_export_to_file() saves an ascii-armoured (PEM encoded) rendition of key into the file named by outfilename.", "usage": "bool openssl_pkey_export_to_file ( mixed $key , string $outfilename [, string $passphrase [, array $configargs ]] )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-export-to-file.php"}, {"name": "openssl_pkey_export", "synopsis": "openssl_pkey_export() exports key as a PEM encoded string and stores it into out (which is passed by reference).", "usage": "bool openssl_pkey_export ( mixed $key , string &$out [, string $passphrase [, array $configargs ]] )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-export.php"}, {"name": "openssl_pkey_free", "synopsis": "This function frees a private key created by openssl_pkey_new().", "usage": "void openssl_pkey_free ( resource $key )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-free.php"}, {"name": "openssl_pkey_get_details", "synopsis": "This function returns the key details (bits, key, type).", "usage": "array openssl_pkey_get_details ( resource $key )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-get-details.php"}, {"name": "openssl_pkey_get_private", "synopsis": "openssl_get_privatekey() parses key and prepares it for use by other functions.", "usage": "resource openssl_pkey_get_private ( mixed $key [, string $passphrase = \"\" ] )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-get-private.php"}, {"name": "openssl_pkey_get_public", "synopsis": "openssl_get_publickey() extracts the public key from certificate and prepares it for use by other functions.", "usage": "resource openssl_pkey_get_public ( mixed $certificate )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-get-public.php"}, {"name": "openssl_pkey_new", "synopsis": "openssl_pkey_new() generates a new private and public key pair. The public component of the key can be obtained using openssl_pkey_get_public().", "usage": "resource openssl_pkey_new ([ array $configargs ] )", "url": "https://secure.php.net/manual/en/function.openssl-pkey-new.php"}, {"name": "openssl_private_decrypt", "synopsis": "openssl_private_decrypt() decrypts data that was previously encrypted via openssl_public_encrypt() and stores the result into decrypted.", "usage": "bool openssl_private_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )", "url": "https://secure.php.net/manual/en/function.openssl-private-decrypt.php"}, {"name": "openssl_private_encrypt", "synopsis": "openssl_private_encrypt() encrypts data with private key and stores the result into crypted. Encrypted data can be decrypted via openssl_public_decrypt().", "usage": "bool openssl_private_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )", "url": "https://secure.php.net/manual/en/function.openssl-private-encrypt.php"}, {"name": "openssl_public_decrypt", "synopsis": "openssl_public_decrypt() decrypts data that was previous encrypted via openssl_private_encrypt() and stores the result into decrypted.", "usage": "bool openssl_public_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )", "url": "https://secure.php.net/manual/en/function.openssl-public-decrypt.php"}, {"name": "openssl_public_encrypt", "synopsis": "openssl_public_encrypt() encrypts data with public key and stores the result into crypted. Encrypted data can be decrypted via openssl_private_decrypt().", "usage": "bool openssl_public_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] )", "url": "https://secure.php.net/manual/en/function.openssl-public-encrypt.php"}, {"name": "openssl_random_pseudo_bytes", "synopsis": "Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter.", "usage": "string openssl_random_pseudo_bytes ( int $length [, bool &$crypto_strong ] )", "url": "https://secure.php.net/manual/en/function.openssl-random-pseudo-bytes.php"}, {"name": "openssl_seal", "synopsis": "openssl_seal() seals (encrypts) data by using the given method with a randomly generated secret key. The key is encrypted with each of the public keys associated with the identifiers in pub_key_ids and each encrypted key is returned in env_keys. This means that one can send sealed data to multiple recipients (provided one has obtained their public keys). Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient's public key.", "usage": "int openssl_seal ( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method = \"RC4\" [, string &$iv ]] )", "url": "https://secure.php.net/manual/en/function.openssl-seal.php"}, {"name": "openssl_sign", "synopsis": "openssl_sign() computes a signature for the specified data by generating a cryptographic digital signature using the private key associated with priv_key_id. Note that the data itself is not encrypted.", "usage": "bool openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ] )", "url": "https://secure.php.net/manual/en/function.openssl-sign.php"}, {"name": "openssl_spki_export_challenge", "synopsis": "Exports challenge from encoded signed public key and challenge", "usage": "string openssl_spki_export_challenge ( string &$spkac )", "url": "https://secure.php.net/manual/en/function.openssl-spki-export-challenge.php"}, {"name": "openssl_spki_export", "synopsis": "Exports PEM formatted public key from encoded signed public key and challenge", "usage": "string openssl_spki_export ( string &$spkac )", "url": "https://secure.php.net/manual/en/function.openssl-spki-export.php"}, {"name": "openssl_spki_new", "synopsis": "Generates a signed public key and challenge using specified hashing algorithm", "usage": "string openssl_spki_new ( resource &$privkey , string &$challenge [, int $algorithm = 0 ] )", "url": "https://secure.php.net/manual/en/function.openssl-spki-new.php"}, {"name": "openssl_spki_verify", "synopsis": "Validates the supplied signed public key and challenge", "usage": "string openssl_spki_verify ( string &$spkac )", "url": "https://secure.php.net/manual/en/function.openssl-spki-verify.php"}, {"name": "openssl_verify", "synopsis": "openssl_verify() verifies that the signature is correct for the specified data using the public key associated with pub_key_id. This must be the public key corresponding to the private key used for signing.", "usage": "int openssl_verify ( string $data , string $signature , mixed $pub_key_id [, mixed $signature_alg = OPENSSL_ALGO_SHA1 ] )", "url": "https://secure.php.net/manual/en/function.openssl-verify.php"}, {"name": "openssl_x509_check_private_key", "synopsis": "Checks whether the given key is the private key that corresponds to cert.", "usage": "bool openssl_x509_check_private_key ( mixed $cert , mixed $key )", "url": "https://secure.php.net/manual/en/function.openssl-x509-check-private-key.php"}, {"name": "openssl_x509_checkpurpose", "synopsis": "openssl_x509_checkpurpose() examines a certificate to see if it can be used for the specified purpose.", "usage": "int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] )", "url": "https://secure.php.net/manual/en/function.openssl-x509-checkpurpose.php"}, {"name": "openssl_x509_export_to_file", "synopsis": "openssl_x509_export_to_file() stores x509 into a file named by outfilename in a PEM encoded format.", "usage": "bool openssl_x509_export_to_file ( mixed $x509 , string $outfilename [, bool $notext = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-x509-export-to-file.php"}, {"name": "openssl_x509_export", "synopsis": "openssl_x509_export() stores x509 into a string named by output in a PEM encoded format.", "usage": "bool openssl_x509_export ( mixed $x509 , string &$output [, bool $notext = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-x509-export.php"}, {"name": "openssl_x509_fingerprint", "synopsis": "openssl_x509_fingerprint() returns the digest of x509 as a string.", "usage": "string openssl_x509_fingerprint ( mixed $x509 [, string $hash_algorithm = \"sha1\" [, bool $raw_output = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.openssl-x509-fingerprint.php"}, {"name": "openssl_x509_free", "synopsis": "openssl_x509_free() frees the certificate associated with the specified x509cert resource from memory.", "usage": "void openssl_x509_free ( resource $x509cert )", "url": "https://secure.php.net/manual/en/function.openssl-x509-free.php"}, {"name": "openssl_x509_parse", "synopsis": "openssl_x509_parse() returns information about the supplied x509cert, including fields such as subject name, issuer name, purposes, valid from and valid to dates etc.", "usage": "array openssl_x509_parse ( mixed $x509cert [, bool $shortnames = TRUE ] )", "url": "https://secure.php.net/manual/en/function.openssl-x509-parse.php"}, {"name": "openssl_x509_read", "synopsis": "openssl_x509_read() parses the certificate supplied by x509certdata and returns a resource identifier for it.", "usage": "resource openssl_x509_read ( mixed $x509certdata )", "url": "https://secure.php.net/manual/en/function.openssl-x509-read.php"}, {"name": "ord", "synopsis": "Returns the ASCII value of the first character of string.", "usage": "int ord ( string $string )", "url": "https://secure.php.net/manual/en/function.ord.php"}, {"name": "output_add_rewrite_var", "synopsis": "This function adds another name/value pair to the URL rewrite mechanism. The name and value will be added to URLs (as GET parameter) and forms (as hidden input fields) the same way as the session ID when transparent URL rewriting is enabled with session.use_trans_sid.", "usage": "bool output_add_rewrite_var ( string $name , string $value )", "url": "https://secure.php.net/manual/en/function.output-add-rewrite-var.php"}, {"name": "output_reset_rewrite_vars", "synopsis": "This function resets the URL rewriter and removes all rewrite variables previously set by the output_add_rewrite_var() function.", "usage": "bool output_reset_rewrite_vars ( void )", "url": "https://secure.php.net/manual/en/function.output-reset-rewrite-vars.php"}, {"name": "override_function", "synopsis": "Overrides built-in functions by replacing them in the symbol table.", "usage": "bool override_function ( string $function_name , string $function_args , string $function_code )", "url": "https://secure.php.net/manual/en/function.override-function.php"}, {"name": "pack", "synopsis": "Pack given arguments into a binary string according to format.", "usage": "string pack ( string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.pack.php"}, {"name": "parse_ini_file", "synopsis": "parse_ini_file() loads in the ini file specified in filename, and returns the settings in it in an associative array.", "usage": "array parse_ini_file ( string $filename [, bool $process_sections = FALSE [, int $scanner_mode = INI_SCANNER_NORMAL ]] )", "url": "https://secure.php.net/manual/en/function.parse-ini-file.php"}, {"name": "parse_ini_string", "synopsis": "parse_ini_string() returns the settings in string ini in an associative array.", "usage": "array parse_ini_string ( string $ini [, bool $process_sections = FALSE [, int $scanner_mode = INI_SCANNER_NORMAL ]] )", "url": "https://secure.php.net/manual/en/function.parse-ini-string.php"}, {"name": "parse_str", "synopsis": "Parses encoded_string as if it were the query string passed via a URL and sets variables in the current scope (or in the array if result is provided).", "usage": "void parse_str ( string $encoded_string [, array &$result ] )", "url": "https://secure.php.net/manual/en/function.parse-str.php"}, {"name": "parse_url", "synopsis": "This function parses a URL and returns an associative array containing any of the various components of the URL that are present. The values of the array elements are not URL decoded.", "usage": "mixed parse_url ( string $url [, int $component = -1 ] )", "url": "https://secure.php.net/manual/en/function.parse-url.php"}, {"name": "parsekit_compile_file", "synopsis": null, "usage": "array parsekit_compile_file ( string $filename [, array &$errors [, int $options = PARSEKIT_QUIET ]] )", "url": "https://secure.php.net/manual/en/function.parsekit-compile-file.php"}, {"name": "parsekit_compile_string", "synopsis": null, "usage": "array parsekit_compile_string ( string $phpcode [, array &$errors [, int $options = PARSEKIT_QUIET ]] )", "url": "https://secure.php.net/manual/en/function.parsekit-compile-string.php"}, {"name": "parsekit_func_arginfo", "synopsis": null, "usage": "array parsekit_func_arginfo ( mixed $function )", "url": "https://secure.php.net/manual/en/function.parsekit-func-arginfo.php"}, {"name": "passthru", "synopsis": "The passthru() function is similar to the exec() function in that it executes a command. This function should be used in place of exec() or system() when the output from the Unix command is binary data which needs to be passed directly back to the browser. A common use for this is to execute something like the pbmplus utilities that can output an image stream directly. By setting the Content-type to image/gif and then calling a pbmplus program to output a gif, you can create PHP scripts that output images directly.", "usage": "void passthru ( string $command [, int &$return_var ] )", "url": "https://secure.php.net/manual/en/function.passthru.php"}, {"name": "password_get_info", "synopsis": "When passed in a valid hash created by an algorithm supported by password_hash(), this function will return an array of information about that hash.", "usage": "array password_get_info ( string $hash )", "url": "https://secure.php.net/manual/en/function.password-get-info.php"}, {"name": "password_hash", "synopsis": "password_hash() creates a new password hash using a strong one-way hashing algorithm. password_hash() is compatible with crypt(). Therefore, password hashes created by crypt() can be used with password_hash().", "usage": "string password_hash ( string $password , int $algo [, array $options ] )", "url": "https://secure.php.net/manual/en/function.password-hash.php"}, {"name": "password_needs_rehash", "synopsis": "This function checks to see if the supplied hash implements the algorithm and options provided. If not, it is assumed that the hash needs to be rehashed.", "usage": "bool password_needs_rehash ( string $hash , int $algo [, array $options ] )", "url": "https://secure.php.net/manual/en/function.password-needs-rehash.php"}, {"name": "password_verify", "synopsis": "Verifies that the given hash matches the given password.", "usage": "bool password_verify ( string $password , string $hash )", "url": "https://secure.php.net/manual/en/function.password-verify.php"}, {"name": "pathinfo", "synopsis": "pathinfo() returns information about path: either an associative array or a string, depending on options.", "usage": "mixed pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] )", "url": "https://secure.php.net/manual/en/function.pathinfo.php"}, {"name": "pclose", "synopsis": "Closes a file pointer to a pipe opened by popen().", "usage": "int pclose ( resource $handle )", "url": "https://secure.php.net/manual/en/function.pclose.php"}, {"name": "pcntl_alarm", "synopsis": "Creates a timer that will send a SIGALRM signal to the process after the given number of seconds. Any call to pcntl_alarm() will cancel any previously set alarm.", "usage": "int pcntl_alarm ( int $seconds )", "url": "https://secure.php.net/manual/en/function.pcntl-alarm.php"}, {"name": "pcntl_async_signals", "synopsis": "If the on parameter is omitted, pcntl_async_signals() returns whether asynchronous signal handling is enabled. Otherwise, asynchronous signal handling is enabled or disabled.", "usage": "bool pcntl_async_signals ([ bool $on = NULL ] )", "url": "https://secure.php.net/manual/en/function.pcntl-async-signals.php"}, {"name": "pcntl_exec", "synopsis": "Executes the program with the given arguments.", "usage": "void pcntl_exec ( string $path [, array $args [, array $envs ]] )", "url": "https://secure.php.net/manual/en/function.pcntl-exec.php"}, {"name": "pcntl_fork", "synopsis": "The pcntl_fork() function creates a child process that differs from the parent process only in its PID and PPID. Please see your system's fork(2) man page for specific details as to how fork works on your system.", "usage": "int pcntl_fork ( void )", "url": "https://secure.php.net/manual/en/function.pcntl-fork.php"}, {"name": "pcntl_get_last_error", "synopsis": "", "usage": "int pcntl_get_last_error ( void )", "url": "https://secure.php.net/manual/en/function.pcntl-get-last-error.php"}, {"name": "pcntl_getpriority", "synopsis": "pcntl_getpriority() gets the priority of pid. Because priority levels can differ between system types and kernel versions, please see your system's getpriority(2) man page for specific details.", "usage": "int pcntl_getpriority ([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )", "url": "https://secure.php.net/manual/en/function.pcntl-getpriority.php"}, {"name": "pcntl_setpriority", "synopsis": "pcntl_setpriority() sets the priority of pid.", "usage": "bool pcntl_setpriority ( int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] )", "url": "https://secure.php.net/manual/en/function.pcntl-setpriority.php"}, {"name": "pcntl_signal_dispatch", "synopsis": "The pcntl_signal_dispatch() function calls the signal handlers installed by pcntl_signal() for each pending signal.", "usage": "bool pcntl_signal_dispatch ( void )", "url": "https://secure.php.net/manual/en/function.pcntl-signal-dispatch.php"}, {"name": "pcntl_signal_get_handler", "synopsis": "The pcntl_signal_get_handler() function will get the current handler for the specified signo.", "usage": "mixed pcntl_signal_get_handler ( int $signo )", "url": "https://secure.php.net/manual/en/function.pcntl-signal-get-handler.php"}, {"name": "pcntl_signal", "synopsis": "The pcntl_signal() function installs a new signal handler or replaces the current signal handler for the signal indicated by signo.", "usage": "bool pcntl_signal ( int $signo , callable|int $handler [, bool $restart_syscalls = TRUE ] )", "url": "https://secure.php.net/manual/en/function.pcntl-signal.php"}, {"name": "pcntl_sigprocmask", "synopsis": "The pcntl_sigprocmask() function adds, removes or sets blocked signals, depending on the how parameter.", "usage": "bool pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] )", "url": "https://secure.php.net/manual/en/function.pcntl-sigprocmask.php"}, {"name": "pcntl_sigtimedwait", "synopsis": "The pcntl_sigtimedwait() function operates in exactly the same way as pcntl_sigwaitinfo() except that it takes two additional parameters, seconds and nanoseconds, which enable an upper bound to be placed on the time for which the script is suspended.", "usage": "int pcntl_sigtimedwait ( array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.pcntl-sigtimedwait.php"}, {"name": "pcntl_sigwaitinfo", "synopsis": "The pcntl_sigwaitinfo() function suspends execution of the calling script until one of the signals given in set are delivered. If one of the signal is already pending (e.g. blocked by pcntl_sigprocmask()), pcntl_sigwaitinfo() will return immediately.", "usage": "int pcntl_sigwaitinfo ( array $set [, array &$siginfo ] )", "url": "https://secure.php.net/manual/en/function.pcntl-sigwaitinfo.php"}, {"name": "pcntl_strerror", "synopsis": "", "usage": "string pcntl_strerror ( int $errno )", "url": "https://secure.php.net/manual/en/function.pcntl-strerror.php"}, {"name": "pcntl_wait", "synopsis": "The wait function suspends execution of the current process until a child has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function. If a child has already exited by the time of the call (a so-called \"zombie\" process), the function returns immediately. Any system resources used by the child are freed. Please see your system's wait(2) man page for specific details as to how wait works on your system.", "usage": "int pcntl_wait ( int &$status [, int $options = 0 [, array &$rusage ]] )", "url": "https://secure.php.net/manual/en/function.pcntl-wait.php"}, {"name": "pcntl_waitpid", "synopsis": "Suspends execution of the current process until a child as specified by the pid argument has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function.", "usage": "int pcntl_waitpid ( int $pid , int &$status [, int $options = 0 [, array &$rusage ]] )", "url": "https://secure.php.net/manual/en/function.pcntl-waitpid.php"}, {"name": "pcntl_wexitstatus", "synopsis": "Returns the return code of a terminated child. This function is only useful if pcntl_wifexited() returned TRUE.", "usage": "int pcntl_wexitstatus ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wexitstatus.php"}, {"name": "pcntl_wifexited", "synopsis": "Checks whether the child status code represents a normal exit.", "usage": "bool pcntl_wifexited ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wifexited.php"}, {"name": "pcntl_wifsignaled", "synopsis": "Checks whether the child process exited because of a signal which was not caught.", "usage": "bool pcntl_wifsignaled ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wifsignaled.php"}, {"name": "pcntl_wifstopped", "synopsis": "Checks whether the child process which caused the return is currently stopped; this is only possible if the call to pcntl_waitpid() was done using the option WUNTRACED.", "usage": "bool pcntl_wifstopped ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wifstopped.php"}, {"name": "pcntl_wstopsig", "synopsis": "Returns the number of the signal which caused the child to stop. This function is only useful if pcntl_wifstopped() returned TRUE.", "usage": "int pcntl_wstopsig ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wstopsig.php"}, {"name": "pcntl_wtermsig", "synopsis": "Returns the number of the signal that caused the child process to terminate. This function is only useful if pcntl_wifsignaled() returned TRUE.", "usage": "int pcntl_wtermsig ( int $status )", "url": "https://secure.php.net/manual/en/function.pcntl-wtermsig.php"}, {"name": "PDF_activate_item", "synopsis": "Activates a previously created structure element or other content item. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_activate_item ( resource $pdfdoc , int $id )", "url": "https://secure.php.net/manual/en/function.pdf-activate-item.php"}, {"name": "PDF_add_launchlink", "synopsis": "Adds a link to a web resource.", "usage": "bool PDF_add_launchlink ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename )", "url": "https://secure.php.net/manual/en/function.pdf-add-launchlink.php"}, {"name": "PDF_add_locallink", "synopsis": "Add a link annotation to a target within the current PDF file. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_locallink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest )", "url": "https://secure.php.net/manual/en/function.pdf-add-locallink.php"}, {"name": "PDF_add_nameddest", "synopsis": "Creates a named destination on an arbitrary page in the current document. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_nameddest ( resource $pdfdoc , string $name , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-add-nameddest.php"}, {"name": "PDF_add_note", "synopsis": "Sets an annotation for the current page. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_note ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )", "url": "https://secure.php.net/manual/en/function.pdf-add-note.php"}, {"name": "PDF_add_pdflink", "synopsis": "Add a file link annotation to a PDF target. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_pdflink ( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest )", "url": "https://secure.php.net/manual/en/function.pdf-add-pdflink.php"}, {"name": "PDF_add_table_cell", "synopsis": "Adds a cell to a new or existing table.", "usage": "int PDF_add_table_cell ( resource $pdfdoc , int $table , int $column , int $row , string $text , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-add-table-cell.php"}, {"name": "PDF_add_textflow", "synopsis": "Creates a Textflow object, or adds text and explicit options to an existing Textflow.", "usage": "int PDF_add_textflow ( resource $pdfdoc , int $textflow , string $text , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-add-textflow.php"}, {"name": "PDF_add_thumbnail", "synopsis": "Adds an existing image as thumbnail for the current page. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_thumbnail ( resource $pdfdoc , int $image )", "url": "https://secure.php.net/manual/en/function.pdf-add-thumbnail.php"}, {"name": "PDF_add_weblink", "synopsis": "Adds a weblink annotation to a target url on the Web. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_add_weblink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url )", "url": "https://secure.php.net/manual/en/function.pdf-add-weblink.php"}, {"name": "PDF_arc", "synopsis": "Adds a counterclockwise circular arc.", "usage": "bool PDF_arc ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )", "url": "https://secure.php.net/manual/en/function.pdf-arc.php"}, {"name": "PDF_arcn", "synopsis": "Except for the drawing direction, this function behaves exactly like PDF_arc().", "usage": "bool PDF_arcn ( resource $p , float $x , float $y , float $r , float $alpha , float $beta )", "url": "https://secure.php.net/manual/en/function.pdf-arcn.php"}, {"name": "PDF_attach_file", "synopsis": "Adds a file attachment annotation. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_attach_file ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon )", "url": "https://secure.php.net/manual/en/function.pdf-attach-file.php"}, {"name": "PDF_begin_document", "synopsis": "Creates a new PDF file subject to various options.", "usage": "int PDF_begin_document ( resource $pdfdoc , string $filename , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-begin-document.php"}, {"name": "PDF_begin_font", "synopsis": "Starts a Type 3 font definition.", "usage": "bool PDF_begin_font ( resource $pdfdoc , string $filename , float $a , float $b , float $c , float $d , float $e , float $f , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-begin-font.php"}, {"name": "PDF_begin_glyph", "synopsis": "Starts a glyph definition for a Type 3 font.", "usage": "bool PDF_begin_glyph ( resource $pdfdoc , string $glyphname , float $wx , float $llx , float $lly , float $urx , float $ury )", "url": "https://secure.php.net/manual/en/function.pdf-begin-glyph.php"}, {"name": "PDF_begin_item", "synopsis": "Opens a structure element or other content item with attributes supplied as options.", "usage": "int PDF_begin_item ( resource $pdfdoc , string $tag , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-begin-item.php"}, {"name": "PDF_begin_layer", "synopsis": "Starts a layer for subsequent output on the page. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_begin_layer ( resource $pdfdoc , int $layer )", "url": "https://secure.php.net/manual/en/function.pdf-begin-layer.php"}, {"name": "PDF_begin_page_ext", "synopsis": "Adds a new page to the document, and specifies various options. The parameters width and height are the dimensions of the new page in points. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_begin_page_ext ( resource $pdfdoc , float $width , float $height , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-begin-page-ext.php"}, {"name": "PDF_begin_page", "synopsis": "Adds a new page to the document. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_begin_page ( resource $pdfdoc , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.pdf-begin-page.php"}, {"name": "PDF_begin_pattern", "synopsis": "Starts a new pattern definition.", "usage": "int PDF_begin_pattern ( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )", "url": "https://secure.php.net/manual/en/function.pdf-begin-pattern.php"}, {"name": "PDF_begin_template_ext", "synopsis": "Starts a new template definition.", "usage": "int PDF_begin_template_ext ( resource $pdfdoc , float $width , float $height , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-begin-template-ext.php"}, {"name": "PDF_begin_template", "synopsis": "Starts a new template definition.", "usage": "int PDF_begin_template ( resource $pdfdoc , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.pdf-begin-template.php"}, {"name": "PDF_circle", "synopsis": "Adds a circle. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_circle ( resource $pdfdoc , float $x , float $y , float $r )", "url": "https://secure.php.net/manual/en/function.pdf-circle.php"}, {"name": "PDF_clip", "synopsis": "Uses the current path as clipping path, and terminate the path. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_clip ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-clip.php"}, {"name": "PDF_close_image", "synopsis": "Closes an image retrieved with the PDF_open_image() function.", "usage": "bool PDF_close_image ( resource $p , int $image )", "url": "https://secure.php.net/manual/en/function.pdf-close-image.php"}, {"name": "PDF_close_pdi_page", "synopsis": "Closes the page handle, and frees all page-related resources. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_close_pdi_page ( resource $p , int $page )", "url": "https://secure.php.net/manual/en/function.pdf-close-pdi-page.php"}, {"name": "PDF_close_pdi", "synopsis": "Closes all open page handles, and closes the input PDF document. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_close_pdi ( resource $p , int $doc )", "url": "https://secure.php.net/manual/en/function.pdf-close-pdi.php"}, {"name": "PDF_close", "synopsis": "Closes the generated PDF file, and frees all document-related resources. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_close ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-close.php"}, {"name": "PDF_closepath_fill_stroke", "synopsis": "Closes the path, fills, and strokes it. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_closepath_fill_stroke ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-closepath-fill-stroke.php"}, {"name": "PDF_closepath_stroke", "synopsis": "Closes the path, and strokes it. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_closepath_stroke ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-closepath-stroke.php"}, {"name": "PDF_closepath", "synopsis": "Closes the current path. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_closepath ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-closepath.php"}, {"name": "PDF_concat", "synopsis": "Concatenates a matrix to the current transformation matrix (CTM). Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_concat ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )", "url": "https://secure.php.net/manual/en/function.pdf-concat.php"}, {"name": "PDF_continue_text", "synopsis": "Prints text at the next line. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_continue_text ( resource $p , string $text )", "url": "https://secure.php.net/manual/en/function.pdf-continue-text.php"}, {"name": "PDF_create_3dview", "synopsis": "Creates a 3D view.", "usage": "int PDF_create_3dview ( resource $pdfdoc , string $username , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-3dview.php"}, {"name": "PDF_create_action", "synopsis": "Creates an action which can be applied to various objects and events.", "usage": "int PDF_create_action ( resource $pdfdoc , string $type , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-action.php"}, {"name": "PDF_create_annotation", "synopsis": "Creates a rectangular annotation on the current page.", "usage": "bool PDF_create_annotation ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $type , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-annotation.php"}, {"name": "PDF_create_bookmark", "synopsis": "Creates a bookmark subject to various options.", "usage": "int PDF_create_bookmark ( resource $pdfdoc , string $text , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-bookmark.php"}, {"name": "PDF_create_field", "synopsis": "Creates a form field on the current page subject to various options.", "usage": "bool PDF_create_field ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $name , string $type , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-field.php"}, {"name": "PDF_create_fieldgroup", "synopsis": "Creates a form field group subject to various options.", "usage": "bool PDF_create_fieldgroup ( resource $pdfdoc , string $name , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-fieldgroup.php"}, {"name": "PDF_create_gstate", "synopsis": "Creates a graphics state object subject to various options.", "usage": "int PDF_create_gstate ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-gstate.php"}, {"name": "PDF_create_pvf", "synopsis": "Creates a named virtual read-only file from data provided in memory.", "usage": "bool PDF_create_pvf ( resource $pdfdoc , string $filename , string $data , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-pvf.php"}, {"name": "PDF_create_textflow", "synopsis": "Preprocesses text for later formatting and creates a textflow object.", "usage": "int PDF_create_textflow ( resource $pdfdoc , string $text , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-create-textflow.php"}, {"name": "PDF_curveto", "synopsis": "Draws a Bezier curve from the current point, using 3 more control points. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_curveto ( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/function.pdf-curveto.php"}, {"name": "PDF_define_layer", "synopsis": "Creates a new layer definition.", "usage": "int PDF_define_layer ( resource $pdfdoc , string $name , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-define-layer.php"}, {"name": "PDF_delete_pvf", "synopsis": "Deletes a named virtual file and frees its data structures (but not the contents).", "usage": "int PDF_delete_pvf ( resource $pdfdoc , string $filename )", "url": "https://secure.php.net/manual/en/function.pdf-delete-pvf.php"}, {"name": "PDF_delete_table", "synopsis": "Deletes a table and all associated data structures.", "usage": "bool PDF_delete_table ( resource $pdfdoc , int $table , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-delete-table.php"}, {"name": "PDF_delete_textflow", "synopsis": "Deletes a textflow and the associated data structures.", "usage": "bool PDF_delete_textflow ( resource $pdfdoc , int $textflow )", "url": "https://secure.php.net/manual/en/function.pdf-delete-textflow.php"}, {"name": "PDF_delete", "synopsis": "Deletes a PDFlib object, and frees all internal resources. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_delete ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-delete.php"}, {"name": "PDF_encoding_set_char", "synopsis": "Adds a glyph name and/or Unicode value to a custom encoding.", "usage": "bool PDF_encoding_set_char ( resource $pdfdoc , string $encoding , int $slot , string $glyphname , int $uv )", "url": "https://secure.php.net/manual/en/function.pdf-encoding-set-char.php"}, {"name": "PDF_end_document", "synopsis": "Closes the generated PDF file and applies various options.", "usage": "bool PDF_end_document ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-end-document.php"}, {"name": "PDF_end_font", "synopsis": "Terminates a Type 3 font definition.", "usage": "bool PDF_end_font ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-end-font.php"}, {"name": "PDF_end_glyph", "synopsis": "Terminates a glyph definition for a Type 3 font.", "usage": "bool PDF_end_glyph ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-end-glyph.php"}, {"name": "PDF_end_item", "synopsis": "Closes a structure element or other content item.", "usage": "bool PDF_end_item ( resource $pdfdoc , int $id )", "url": "https://secure.php.net/manual/en/function.pdf-end-item.php"}, {"name": "PDF_end_layer", "synopsis": "Deactivates all active layers. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_end_layer ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-end-layer.php"}, {"name": "PDF_end_page_ext", "synopsis": "Finishes a page, and applies various options. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_end_page_ext ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-end-page-ext.php"}, {"name": "PDF_end_page", "synopsis": "Finishes the page. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_end_page ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-end-page.php"}, {"name": "PDF_end_pattern", "synopsis": "Finishes the pattern definition. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_end_pattern ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-end-pattern.php"}, {"name": "PDF_end_template", "synopsis": "Finishes a template definition. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_end_template ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-end-template.php"}, {"name": "PDF_endpath", "synopsis": "Ends the current path without filling or stroking it.", "usage": "bool PDF_endpath ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-endpath.php"}, {"name": "PDF_fill_imageblock", "synopsis": "Fills an image block with variable data according to its properties.", "usage": "int PDF_fill_imageblock ( resource $pdfdoc , int $page , string $blockname , int $image , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fill-imageblock.php"}, {"name": "PDF_fill_pdfblock", "synopsis": "Fills a PDF block with variable data according to its properties.", "usage": "int PDF_fill_pdfblock ( resource $pdfdoc , int $page , string $blockname , int $contents , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fill-pdfblock.php"}, {"name": "PDF_fill_stroke", "synopsis": "Fills and strokes the current path with the current fill and stroke color. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_fill_stroke ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-fill-stroke.php"}, {"name": "PDF_fill_textblock", "synopsis": "Fills a text block with variable data according to its properties.", "usage": "int PDF_fill_textblock ( resource $pdfdoc , int $page , string $blockname , string $text , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fill-textblock.php"}, {"name": "PDF_fill", "synopsis": "Fills the interior of the current path with the current fill color. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_fill ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-fill.php"}, {"name": "PDF_findfont", "synopsis": "Search for a font and prepare it for later use with PDF_setfont(). The metrics will be loaded, and if embed is nonzero, the font file will be checked, but not yet used. encoding is one of builtin, macroman, winansi, host, a user-defined encoding name or the name of a CMap. Parameter embed is optional before PHP 4.3.5 or with PDFlib less than 5.", "usage": "int PDF_findfont ( resource $p , string $fontname , string $encoding , int $embed )", "url": "https://secure.php.net/manual/en/function.pdf-findfont.php"}, {"name": "PDF_fit_image", "synopsis": "Places an image or template on the page, subject to various options. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_fit_image ( resource $pdfdoc , int $image , float $x , float $y , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fit-image.php"}, {"name": "PDF_fit_pdi_page", "synopsis": "Places an imported PDF page on the page, subject to various options. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_fit_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fit-pdi-page.php"}, {"name": "PDF_fit_table", "synopsis": "Places a table on the page fully or partially.", "usage": "string PDF_fit_table ( resource $pdfdoc , int $table , float $llx , float $lly , float $urx , float $ury , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fit-table.php"}, {"name": "PDF_fit_textflow", "synopsis": "Formats the next portion of a textflow into a rectangular area.", "usage": "string PDF_fit_textflow ( resource $pdfdoc , int $textflow , float $llx , float $lly , float $urx , float $ury , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fit-textflow.php"}, {"name": "PDF_fit_textline", "synopsis": "Places a single line of text on the page, subject to various options. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_fit_textline ( resource $pdfdoc , string $text , float $x , float $y , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-fit-textline.php"}, {"name": "PDF_get_apiname", "synopsis": "Gets the name of the API function which threw the last exception or failed.", "usage": "string PDF_get_apiname ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-get-apiname.php"}, {"name": "PDF_get_buffer", "synopsis": "Fetches the buffer containing the generated PDF data.", "usage": "string PDF_get_buffer ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-get-buffer.php"}, {"name": "PDF_get_errmsg", "synopsis": "Gets the text of the last thrown exception or the reason for a failed function call.", "usage": "string PDF_get_errmsg ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-get-errmsg.php"}, {"name": "PDF_get_errnum", "synopsis": "Gets the number of the last thrown exception or the reason for a failed function call.", "usage": "int PDF_get_errnum ( resource $pdfdoc )", "url": "https://secure.php.net/manual/en/function.pdf-get-errnum.php"}, {"name": "PDF_get_majorversion", "synopsis": "This function is deprecated since PDFlib version 5, use PDF_get_value() with the parameter major instead.", "usage": "int PDF_get_majorversion ( void )", "url": "https://secure.php.net/manual/en/function.pdf-get-majorversion.php"}, {"name": "PDF_get_minorversion", "synopsis": "Returns the minor version number of the PDFlib version.", "usage": "int PDF_get_minorversion ( void )", "url": "https://secure.php.net/manual/en/function.pdf-get-minorversion.php"}, {"name": "PDF_get_parameter", "synopsis": "Gets the contents of some PDFlib parameter with string type.", "usage": "string PDF_get_parameter ( resource $p , string $key , float $modifier )", "url": "https://secure.php.net/manual/en/function.pdf-get-parameter.php"}, {"name": "PDF_get_pdi_parameter", "synopsis": "Gets the contents of a PDI document parameter with string type.", "usage": "string PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved )", "url": "https://secure.php.net/manual/en/function.pdf-get-pdi-parameter.php"}, {"name": "PDF_get_pdi_value", "synopsis": "Gets the contents of a PDI document parameter with numerical type.", "usage": "float PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved )", "url": "https://secure.php.net/manual/en/function.pdf-get-pdi-value.php"}, {"name": "PDF_get_value", "synopsis": "Gets the value of some PDFlib parameter with numerical type.", "usage": "float PDF_get_value ( resource $p , string $key , float $modifier )", "url": "https://secure.php.net/manual/en/function.pdf-get-value.php"}, {"name": "PDF_info_font", "synopsis": "Queries detailed information about a loaded font.", "usage": "float PDF_info_font ( resource $pdfdoc , int $font , string $keyword , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-info-font.php"}, {"name": "PDF_info_matchbox", "synopsis": "Queries information about a matchbox on the current page.", "usage": "float PDF_info_matchbox ( resource $pdfdoc , string $boxname , int $num , string $keyword )", "url": "https://secure.php.net/manual/en/function.pdf-info-matchbox.php"}, {"name": "PDF_info_table", "synopsis": "Retrieves table information related to the most recently placed table instance.", "usage": "float PDF_info_table ( resource $pdfdoc , int $table , string $keyword )", "url": "https://secure.php.net/manual/en/function.pdf-info-table.php"}, {"name": "PDF_info_textflow", "synopsis": "Queries the current state of a textflow.", "usage": "float PDF_info_textflow ( resource $pdfdoc , int $textflow , string $keyword )", "url": "https://secure.php.net/manual/en/function.pdf-info-textflow.php"}, {"name": "PDF_info_textline", "synopsis": "Performs textline formatting and queries the resulting metrics.", "usage": "float PDF_info_textline ( resource $pdfdoc , string $text , string $keyword , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-info-textline.php"}, {"name": "PDF_initgraphics", "synopsis": "Reset all color and graphics state parameters to their defaults. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_initgraphics ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-initgraphics.php"}, {"name": "PDF_lineto", "synopsis": "Draws a line from the current point to another point. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_lineto ( resource $p , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.pdf-lineto.php"}, {"name": "PDF_load_3ddata", "synopsis": "Loads a 3D model from a disk-based or virtual file.", "usage": "int PDF_load_3ddata ( resource $pdfdoc , string $filename , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-load-3ddata.php"}, {"name": "PDF_load_font", "synopsis": "Searches for a font and prepares it for later use.", "usage": "int PDF_load_font ( resource $pdfdoc , string $fontname , string $encoding , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-load-font.php"}, {"name": "PDF_load_iccprofile", "synopsis": "Searches for an ICC profile, and prepares it for later use.", "usage": "int PDF_load_iccprofile ( resource $pdfdoc , string $profilename , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-load-iccprofile.php"}, {"name": "PDF_load_image", "synopsis": "Opens a disk-based or virtual image file subject to various options.", "usage": "int PDF_load_image ( resource $pdfdoc , string $imagetype , string $filename , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-load-image.php"}, {"name": "PDF_makespotcolor", "synopsis": "Finds a built-in spot color name, or makes a named spot color from the current fill color. Returns TRUE on success or FALSE on failure.", "usage": "int PDF_makespotcolor ( resource $p , string $spotname )", "url": "https://secure.php.net/manual/en/function.pdf-makespotcolor.php"}, {"name": "PDF_moveto", "synopsis": "Sets the current point for graphics output. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_moveto ( resource $p , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.pdf-moveto.php"}, {"name": "PDF_new", "synopsis": "Creates a new PDFlib object with default settings.", "usage": "resource PDF_new ( void )", "url": "https://secure.php.net/manual/en/function.pdf-new.php"}, {"name": "PDF_open_ccitt", "synopsis": "Opens a raw CCITT image.", "usage": "int PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 )", "url": "https://secure.php.net/manual/en/function.pdf-open-ccitt.php"}, {"name": "PDF_open_file", "synopsis": "Creates a new PDF file using the supplied file name. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_open_file ( resource $p , string $filename )", "url": "https://secure.php.net/manual/en/function.pdf-open-file.php"}, {"name": "PDF_open_image_file", "synopsis": "Opens an image file.", "usage": "int PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam )", "url": "https://secure.php.net/manual/en/function.pdf-open-image-file.php"}, {"name": "PDF_open_image", "synopsis": "Uses image data from a variety of data sources.", "usage": "int PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params )", "url": "https://secure.php.net/manual/en/function.pdf-open-image.php"}, {"name": "PDF_open_memory_image", "synopsis": "This function is not supported by PDFlib GmbH.", "usage": "int PDF_open_memory_image ( resource $p , resource $image )", "url": "https://secure.php.net/manual/en/function.pdf-open-memory-image.php"}, {"name": "PDF_open_pdi_document", "synopsis": "Open a disk-based or virtual PDF document and prepare it for later use.", "usage": "int PDF_open_pdi_document ( resource $p , string $filename , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-open-pdi-document.php"}, {"name": "PDF_open_pdi_page", "synopsis": "Prepares a page for later use with PDF_fit_pdi_page().", "usage": "int PDF_open_pdi_page ( resource $p , int $doc , int $pagenumber , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-open-pdi-page.php"}, {"name": "PDF_open_pdi", "synopsis": "Opens a disk-based or virtual PDF document and prepares it for later use.", "usage": "int PDF_open_pdi ( resource $pdfdoc , string $filename , string $optlist , int $len )", "url": "https://secure.php.net/manual/en/function.pdf-open-pdi.php"}, {"name": "PDF_pcos_get_number", "synopsis": "Gets the value of a pCOS path with type number or boolean.", "usage": "float PDF_pcos_get_number ( resource $p , int $doc , string $path )", "url": "https://secure.php.net/manual/en/function.pdf-pcos-get-number.php"}, {"name": "PDF_pcos_get_stream", "synopsis": "Gets the contents of a pCOS path with type stream, fstream, or string.", "usage": "string PDF_pcos_get_stream ( resource $p , int $doc , string $optlist , string $path )", "url": "https://secure.php.net/manual/en/function.pdf-pcos-get-stream.php"}, {"name": "PDF_pcos_get_string", "synopsis": "Gets the value of a pCOS path with type name, string, or boolean.", "usage": "string PDF_pcos_get_string ( resource $p , int $doc , string $path )", "url": "https://secure.php.net/manual/en/function.pdf-pcos-get-string.php"}, {"name": "PDF_place_image", "synopsis": "Places an image and scales it. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_place_image ( resource $pdfdoc , int $image , float $x , float $y , float $scale )", "url": "https://secure.php.net/manual/en/function.pdf-place-image.php"}, {"name": "PDF_place_pdi_page", "synopsis": "Places a PDF page and scales it. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy )", "url": "https://secure.php.net/manual/en/function.pdf-place-pdi-page.php"}, {"name": "PDF_process_pdi", "synopsis": "Processes certain elements of an imported PDF document.", "usage": "int PDF_process_pdi ( resource $pdfdoc , int $doc , int $page , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-process-pdi.php"}, {"name": "PDF_rect", "synopsis": "Draws a rectangle. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_rect ( resource $p , float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.pdf-rect.php"}, {"name": "PDF_restore", "synopsis": "Restores the most recently saved graphics state. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_restore ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-restore.php"}, {"name": "PDF_resume_page", "synopsis": "Resumes a page to add more content to it.", "usage": "bool PDF_resume_page ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-resume-page.php"}, {"name": "PDF_rotate", "synopsis": "Rotates the coordinate system. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_rotate ( resource $p , float $phi )", "url": "https://secure.php.net/manual/en/function.pdf-rotate.php"}, {"name": "PDF_save", "synopsis": "Saves the current graphics state. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_save ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-save.php"}, {"name": "PDF_scale", "synopsis": "Scales the coordinate system. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_scale ( resource $p , float $sx , float $sy )", "url": "https://secure.php.net/manual/en/function.pdf-scale.php"}, {"name": "PDF_set_border_color", "synopsis": "Sets the border color for all kinds of annotations. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_border_color ( resource $p , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.pdf-set-border-color.php"}, {"name": "PDF_set_border_dash", "synopsis": "Sets the border dash style for all kinds of annotations. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_border_dash ( resource $pdfdoc , float $black , float $white )", "url": "https://secure.php.net/manual/en/function.pdf-set-border-dash.php"}, {"name": "PDF_set_border_style", "synopsis": "Sets the border style for all kinds of annotations. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_border_style ( resource $pdfdoc , string $style , float $width )", "url": "https://secure.php.net/manual/en/function.pdf-set-border-style.php"}, {"name": "PDF_set_gstate", "synopsis": "Activates a graphics state object.", "usage": "bool PDF_set_gstate ( resource $pdfdoc , int $gstate )", "url": "https://secure.php.net/manual/en/function.pdf-set-gstate.php"}, {"name": "PDF_set_info", "synopsis": "Fill document information field key with value. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_info ( resource $p , string $key , string $value )", "url": "https://secure.php.net/manual/en/function.pdf-set-info.php"}, {"name": "PDF_set_layer_dependency", "synopsis": "Defines hierarchical and group relationships among layers. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_layer_dependency ( resource $pdfdoc , string $type , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-set-layer-dependency.php"}, {"name": "PDF_set_parameter", "synopsis": "Sets some PDFlib parameter with string type. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_parameter ( resource $p , string $key , string $value )", "url": "https://secure.php.net/manual/en/function.pdf-set-parameter.php"}, {"name": "PDF_set_text_pos", "synopsis": "Sets the position for text output on the page. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_text_pos ( resource $p , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.pdf-set-text-pos.php"}, {"name": "PDF_set_value", "synopsis": "Sets the value of some PDFlib parameter with numerical type. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_set_value ( resource $p , string $key , float $value )", "url": "https://secure.php.net/manual/en/function.pdf-set-value.php"}, {"name": "PDF_setcolor", "synopsis": "Sets the current color space and color. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setcolor ( resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )", "url": "https://secure.php.net/manual/en/function.pdf-setcolor.php"}, {"name": "PDF_setdash", "synopsis": "Sets the current dash pattern to b black and w white units. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setdash ( resource $pdfdoc , float $b , float $w )", "url": "https://secure.php.net/manual/en/function.pdf-setdash.php"}, {"name": "PDF_setdashpattern", "synopsis": "Sets a dash pattern defined by an option list. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setdashpattern ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-setdashpattern.php"}, {"name": "PDF_setflat", "synopsis": "Sets the flatness parameter. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setflat ( resource $pdfdoc , float $flatness )", "url": "https://secure.php.net/manual/en/function.pdf-setflat.php"}, {"name": "PDF_setfont", "synopsis": "Sets the current font in the specified fontsize, using a font handle returned by PDF_load_font(). Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setfont ( resource $pdfdoc , int $font , float $fontsize )", "url": "https://secure.php.net/manual/en/function.pdf-setfont.php"}, {"name": "PDF_setgray_fill", "synopsis": "Sets the current fill color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setgray_fill ( resource $p , float $g )", "url": "https://secure.php.net/manual/en/function.pdf-setgray-fill.php"}, {"name": "PDF_setgray_stroke", "synopsis": "Sets the current stroke color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setgray_stroke ( resource $p , float $g )", "url": "https://secure.php.net/manual/en/function.pdf-setgray-stroke.php"}, {"name": "PDF_setgray", "synopsis": "Sets the current fill and stroke color to a gray value between 0 and 1 inclusive. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setgray ( resource $p , float $g )", "url": "https://secure.php.net/manual/en/function.pdf-setgray.php"}, {"name": "PDF_setlinecap", "synopsis": "Sets the linecap parameter to control the shape at the end of a path with respect to stroking.", "usage": "bool PDF_setlinecap ( resource $p , int $linecap )", "url": "https://secure.php.net/manual/en/function.pdf-setlinecap.php"}, {"name": "PDF_setlinejoin", "synopsis": "Sets the linejoin parameter to specify the shape at the corners of paths that are stroked. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setlinejoin ( resource $p , int $value )", "url": "https://secure.php.net/manual/en/function.pdf-setlinejoin.php"}, {"name": "PDF_setlinewidth", "synopsis": "Sets the current line width. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setlinewidth ( resource $p , float $width )", "url": "https://secure.php.net/manual/en/function.pdf-setlinewidth.php"}, {"name": "PDF_setmatrix", "synopsis": "Explicitly sets the current transformation matrix. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f )", "url": "https://secure.php.net/manual/en/function.pdf-setmatrix.php"}, {"name": "PDF_setmiterlimit", "synopsis": "Sets the miter limit.Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setmiterlimit ( resource $pdfdoc , float $miter )", "url": "https://secure.php.net/manual/en/function.pdf-setmiterlimit.php"}, {"name": "PDF_setrgbcolor_fill", "synopsis": "Sets the current fill color to the supplied RGB values. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.pdf-setrgbcolor-fill.php"}, {"name": "PDF_setrgbcolor_stroke", "synopsis": "Sets the current stroke color to the supplied RGB values. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.pdf-setrgbcolor-stroke.php"}, {"name": "PDF_setrgbcolor", "synopsis": "Sets the current fill and stroke color to the supplied RGB values. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.pdf-setrgbcolor.php"}, {"name": "PDF_shading_pattern", "synopsis": "Defines a shading pattern using a shading object.", "usage": "int PDF_shading_pattern ( resource $pdfdoc , int $shading , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-shading-pattern.php"}, {"name": "PDF_shading", "synopsis": "Defines a blend from the current fill color to another color.", "usage": "int PDF_shading ( resource $pdfdoc , string $shtype , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-shading.php"}, {"name": "PDF_shfill", "synopsis": "Fills an area with a shading, based on a shading object.", "usage": "bool PDF_shfill ( resource $pdfdoc , int $shading )", "url": "https://secure.php.net/manual/en/function.pdf-shfill.php"}, {"name": "PDF_show_boxed", "synopsis": "This function is deprecated since PDFlib version 6, use PDF_fit_textline() for single lines, or the PDF_*_textflow() functions for multi-line formatting instead.", "usage": "int PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature )", "url": "https://secure.php.net/manual/en/function.pdf-show-boxed.php"}, {"name": "PDF_show_xy", "synopsis": "Prints text in the current font. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_show_xy ( resource $p , string $text , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.pdf-show-xy.php"}, {"name": "PDF_show", "synopsis": "Prints text in the current font and size at the current position. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_show ( resource $pdfdoc , string $text )", "url": "https://secure.php.net/manual/en/function.pdf-show.php"}, {"name": "PDF_skew", "synopsis": "Skews the coordinate system in x and y direction by alpha and beta degrees, respectively. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_skew ( resource $p , float $alpha , float $beta )", "url": "https://secure.php.net/manual/en/function.pdf-skew.php"}, {"name": "PDF_stringwidth", "synopsis": "Returns the width of text in an arbitrary font.", "usage": "float PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize )", "url": "https://secure.php.net/manual/en/function.pdf-stringwidth.php"}, {"name": "PDF_stroke", "synopsis": "Strokes the path with the current color and line width, and clear it. Returns TRUE on success or FALSE on failure.", "usage": "bool PDF_stroke ( resource $p )", "url": "https://secure.php.net/manual/en/function.pdf-stroke.php"}, {"name": "PDF_suspend_page", "synopsis": "Suspends the current page so that it can later be resumed with PDF_resume_page().", "usage": "bool PDF_suspend_page ( resource $pdfdoc , string $optlist )", "url": "https://secure.php.net/manual/en/function.pdf-suspend-page.php"}, {"name": "PDF_translate", "synopsis": "Translates the origin of the coordinate system.", "usage": "bool PDF_translate ( resource $p , float $tx , float $ty )", "url": "https://secure.php.net/manual/en/function.pdf-translate.php"}, {"name": "PDF_utf16_to_utf8", "synopsis": "Converts a string from UTF-16 format to UTF-8.", "usage": "string PDF_utf16_to_utf8 ( resource $pdfdoc , string $utf16string )", "url": "https://secure.php.net/manual/en/function.pdf-utf16-to-utf8.php"}, {"name": "PDF_utf32_to_utf16", "synopsis": "Converts a string from UTF-32 format to UTF-16.", "usage": "string PDF_utf32_to_utf16 ( resource $pdfdoc , string $utf32string , string $ordering )", "url": "https://secure.php.net/manual/en/function.pdf-utf32-to-utf16.php"}, {"name": "PDF_utf8_to_utf16", "synopsis": "Converts a string from UTF-8 format to UTF-16.", "usage": "string PDF_utf8_to_utf16 ( resource $pdfdoc , string $utf8string , string $ordering )", "url": "https://secure.php.net/manual/en/function.pdf-utf8-to-utf16.php"}, {"name": "pfsockopen", "synopsis": "This function behaves exactly as fsockopen() with the difference that the connection is not closed after the script finishes. It is the persistent version of fsockopen().", "usage": "resource pfsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") ]]]] )", "url": "https://secure.php.net/manual/en/function.pfsockopen.php"}, {"name": "pg_affected_rows", "synopsis": "pg_affected_rows() returns the number of tuples (instances/records/rows) affected by INSERT, UPDATE, and DELETE queries.", "usage": "int pg_affected_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-affected-rows.php"}, {"name": "pg_cancel_query", "synopsis": "pg_cancel_query() cancels an asynchronous query sent with pg_send_query(), pg_send_query_params() or pg_send_execute(). You cannot cancel a query executed using pg_query().", "usage": "bool pg_cancel_query ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-cancel-query.php"}, {"name": "pg_client_encoding", "synopsis": "PostgreSQL supports automatic character set conversion between server and client for certain character sets. pg_client_encoding() returns the client encoding as a string. The returned string will be one of the standard PostgreSQL encoding identifiers.", "usage": "string pg_client_encoding ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-client-encoding.php"}, {"name": "pg_close", "synopsis": "pg_close() closes the non-persistent connection to a PostgreSQL database associated with the given connection resource.", "usage": "bool pg_close ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-close.php"}, {"name": "pg_connect_poll", "synopsis": "pg_connect_poll() polls the status of a PostgreSQL connection created by calling pg_connect() with the PGSQL_CONNECT_ASYNC option.", "usage": "int pg_connect_poll ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-connect-poll.php"}, {"name": "pg_connect", "synopsis": "pg_connect() opens a connection to a PostgreSQL database specified by the connection_string.", "usage": "resource pg_connect ( string $connection_string [, int $connect_type ] )", "url": "https://secure.php.net/manual/en/function.pg-connect.php"}, {"name": "pg_connection_busy", "synopsis": "pg_connection_busy() determines whether or not a connection is busy. If it is busy, a previous query is still executing. If pg_get_result() is used on the connection, it will be blocked.", "usage": "bool pg_connection_busy ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-connection-busy.php"}, {"name": "pg_connection_reset", "synopsis": "pg_connection_reset() resets the connection. It is useful for error recovery.", "usage": "bool pg_connection_reset ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-connection-reset.php"}, {"name": "pg_connection_status", "synopsis": "pg_connection_status() returns the status of the specified connection.", "usage": "int pg_connection_status ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-connection-status.php"}, {"name": "pg_consume_input", "synopsis": "pg_consume_input() consumes any input waiting to be read from the database server.", "usage": "bool pg_consume_input ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-consume-input.php"}, {"name": "pg_convert", "synopsis": "pg_convert() checks and converts the values in assoc_array into suitable values for use in an SQL statement. Precondition for pg_convert() is the existence of a table table_name which has at least as many columns as assoc_array has elements. The fieldnames in table_name must match the indices in assoc_array and the corresponding datatypes must be compatible. Returns an array with the converted values on success, FALSE otherwise.", "usage": "array pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/function.pg-convert.php"}, {"name": "pg_copy_from", "synopsis": "pg_copy_from() inserts records into a table from rows. It issues a COPY FROM SQL command internally to insert records.", "usage": "bool pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] )", "url": "https://secure.php.net/manual/en/function.pg-copy-from.php"}, {"name": "pg_copy_to", "synopsis": "pg_copy_to() copies a table to an array. It issues COPY TO SQL command internally to retrieve records.", "usage": "array pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] )", "url": "https://secure.php.net/manual/en/function.pg-copy-to.php"}, {"name": "pg_dbname", "synopsis": "pg_dbname() returns the name of the database that the given PostgreSQL connection resource.", "usage": "string pg_dbname ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-dbname.php"}, {"name": "pg_delete", "synopsis": "pg_delete() deletes records from a table specified by the keys and values in assoc_array. If options is specified, pg_convert() is applied to assoc_array with the specified options.", "usage": "mixed pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )", "url": "https://secure.php.net/manual/en/function.pg-delete.php"}, {"name": "pg_end_copy", "synopsis": "pg_end_copy() syncs the PostgreSQL frontend (usually a web server process) with the PostgreSQL server after doing a copy operation performed by pg_put_line(). pg_end_copy() must be issued, otherwise the PostgreSQL server may get out of sync with the frontend and will report an error.", "usage": "bool pg_end_copy ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-end-copy.php"}, {"name": "pg_escape_bytea", "synopsis": "pg_escape_bytea() escapes string for bytea datatype. It returns escaped string.", "usage": "string pg_escape_bytea ([ resource $connection ], string $data )", "url": "https://secure.php.net/manual/en/function.pg-escape-bytea.php"}, {"name": "pg_escape_identifier", "synopsis": "pg_escape_identifier() escapes a identifier (e.g. table, field names) for quering the database. It returns an escaped identifier string for PostgreSQL server. pg_escape_identifier() adds double quotes before and after data. Users should not add double quotes. Use of this function is recommended for identifier parameters in query. For SQL literals (i.e. parameters except bytea), pg_escape_literal() or pg_escape_string() must be used. For bytea type fields, pg_escape_bytea() must be used instead.", "usage": "string pg_escape_identifier ([ resource $connection ], string $data )", "url": "https://secure.php.net/manual/en/function.pg-escape-identifier.php"}, {"name": "pg_escape_literal", "synopsis": "pg_escape_literal() escapes a literal for querying the PostgreSQL database. It returns an escaped literal in the PostgreSQL format. pg_escape_literal() adds quotes before and after data. Users should not add quotes. Use of this function is recommended instead of pg_escape_string(). If the type of the column is bytea, pg_escape_bytea() must be used instead. For escaping identifiers (e.g. table, field names), pg_escape_identifier() must be used.", "usage": "string pg_escape_literal ([ resource $connection ], string $data )", "url": "https://secure.php.net/manual/en/function.pg-escape-literal.php"}, {"name": "pg_escape_string", "synopsis": "pg_escape_string() escapes a string for querying the database. It returns an escaped string in the PostgreSQL format without quotes. pg_escape_literal() is more preferred way to escape SQL parameters for PostgreSQL. addslashes() must not be used with PostgreSQL. If the type of the column is bytea, pg_escape_bytea() must be used instead. pg_escape_identifier() must be used to escape identifiers (e.g. table names, field names)", "usage": "string pg_escape_string ([ resource $connection ], string $data )", "url": "https://secure.php.net/manual/en/function.pg-escape-string.php"}, {"name": "pg_execute", "synopsis": "Sends a request to execute a prepared statement with given parameters, and waits for the result.", "usage": "resource pg_execute ([ resource $connection ], string $stmtname , array $params )", "url": "https://secure.php.net/manual/en/function.pg-execute.php"}, {"name": "pg_fetch_all_columns", "synopsis": "pg_fetch_all_columns() returns an array that contains all rows (records) in a particular column of the result resource.", "usage": "array pg_fetch_all_columns ( resource $result [, int $column = 0 ] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-all-columns.php"}, {"name": "pg_fetch_all", "synopsis": "pg_fetch_all() returns an array that contains all rows (records) in the result resource.", "usage": "array pg_fetch_all ( resource $result [, int $result_type = PGSQL_ASSOC ] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-all.php"}, {"name": "pg_fetch_array", "synopsis": "pg_fetch_array() returns an array that corresponds to the fetched row (record).", "usage": "array pg_fetch_array ( resource $result [, int $row [, int $result_type = PGSQL_BOTH ]] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-array.php"}, {"name": "pg_fetch_assoc", "synopsis": "pg_fetch_assoc() returns an associative array that corresponds to the fetched row (records).", "usage": "array pg_fetch_assoc ( resource $result [, int $row ] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-assoc.php"}, {"name": "pg_fetch_object", "synopsis": "pg_fetch_object() returns an object with properties that correspond to the fetched row's field names. It can optionally instantiate an object of a specific class, and pass parameters to that class's constructor.", "usage": "object pg_fetch_object ( resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-object.php"}, {"name": "pg_fetch_result", "synopsis": "pg_fetch_result() returns the value of a particular row and field (column) in a PostgreSQL result resource.", "usage": "string pg_fetch_result ( resource $result , int $row , mixed $field )", "url": "https://secure.php.net/manual/en/function.pg-fetch-result.php"}, {"name": "pg_fetch_row", "synopsis": "pg_fetch_row() fetches one row of data from the result associated with the specified result resource.", "usage": "array pg_fetch_row ( resource $result [, int $row ] )", "url": "https://secure.php.net/manual/en/function.pg-fetch-row.php"}, {"name": "pg_field_is_null", "synopsis": "pg_field_is_null() tests if a field in a PostgreSQL result resource is SQL NULL or not.", "usage": "int pg_field_is_null ( resource $result , int $row , mixed $field )", "url": "https://secure.php.net/manual/en/function.pg-field-is-null.php"}, {"name": "pg_field_name", "synopsis": "pg_field_name() returns the name of the field occupying the given field_number in the given PostgreSQL result resource. Field numbering starts from 0.", "usage": "string pg_field_name ( resource $result , int $field_number )", "url": "https://secure.php.net/manual/en/function.pg-field-name.php"}, {"name": "pg_field_num", "synopsis": "pg_field_num() will return the number of the field number that corresponds to the field_name in the given PostgreSQL result resource.", "usage": "int pg_field_num ( resource $result , string $field_name )", "url": "https://secure.php.net/manual/en/function.pg-field-num.php"}, {"name": "pg_field_prtlen", "synopsis": "pg_field_prtlen() returns the actual printed length (number of characters) of a specific value in a PostgreSQL result. Row numbering starts at 0. This function will return FALSE on an error.", "usage": "int pg_field_prtlen ( resource $result , int $row_number , mixed $field_name_or_number )", "url": "https://secure.php.net/manual/en/function.pg-field-prtlen.php"}, {"name": "pg_field_size", "synopsis": "pg_field_size() returns the internal storage size (in bytes) of the field number in the given PostgreSQL result.", "usage": "int pg_field_size ( resource $result , int $field_number )", "url": "https://secure.php.net/manual/en/function.pg-field-size.php"}, {"name": "pg_field_table", "synopsis": "pg_field_table() returns the name of the table that field belongs to, or the table's oid if oid_only is TRUE.", "usage": "mixed pg_field_table ( resource $result , int $field_number [, bool $oid_only = FALSE ] )", "url": "https://secure.php.net/manual/en/function.pg-field-table.php"}, {"name": "pg_field_type_oid", "synopsis": "pg_field_type_oid() returns an integer containing the OID of the base type of the given field_number in the given PostgreSQL result resource.", "usage": "int pg_field_type_oid ( resource $result , int $field_number )", "url": "https://secure.php.net/manual/en/function.pg-field-type-oid.php"}, {"name": "pg_field_type", "synopsis": "pg_field_type() returns a string containing the base type name of the given field_number in the given PostgreSQL result resource.", "usage": "string pg_field_type ( resource $result , int $field_number )", "url": "https://secure.php.net/manual/en/function.pg-field-type.php"}, {"name": "pg_flush", "synopsis": "pg_flush() flushes any outbound query data waiting to be sent on the connection.", "usage": "mixed pg_flush ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-flush.php"}, {"name": "pg_free_result", "synopsis": "pg_free_result() frees the memory and data associated with the specified PostgreSQL query result resource.", "usage": "bool pg_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-free-result.php"}, {"name": "pg_get_notify", "synopsis": "pg_get_notify() gets notifications generated by a NOTIFY SQL command. To receive notifications, the LISTEN SQL command must be issued.", "usage": "array pg_get_notify ( resource $connection [, int $result_type ] )", "url": "https://secure.php.net/manual/en/function.pg-get-notify.php"}, {"name": "pg_get_pid", "synopsis": "pg_get_pid() gets the backend's (database server process) PID. The PID is useful to determine whether or not a NOTIFY message received via pg_get_notify() is sent from another process or not.", "usage": "int pg_get_pid ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-get-pid.php"}, {"name": "pg_get_result", "synopsis": "pg_get_result() gets the result resource from an asynchronous query executed by pg_send_query(), pg_send_query_params() or pg_send_execute().", "usage": "resource pg_get_result ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-get-result.php"}, {"name": "pg_host", "synopsis": "pg_host() returns the host name of the given PostgreSQL connection resource is connected to.", "usage": "string pg_host ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-host.php"}, {"name": "pg_insert", "synopsis": "pg_insert() inserts the values of assoc_array into the table specified by table_name. If options is specified, pg_convert() is applied to assoc_array with the specified options.", "usage": "mixed pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] )", "url": "https://secure.php.net/manual/en/function.pg-insert.php"}, {"name": "pg_last_error", "synopsis": "pg_last_error() returns the last error message for a given connection.", "usage": "string pg_last_error ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-last-error.php"}, {"name": "pg_last_notice", "synopsis": "pg_last_notice() returns the last notice message from the PostgreSQL server on the specified connection. The PostgreSQL server sends notice messages in several cases, for instance when creating a SERIAL column in a table.", "usage": "mixed pg_last_notice ( resource $connection [, int $option = PGSQL_NOTICE_LAST ] )", "url": "https://secure.php.net/manual/en/function.pg-last-notice.php"}, {"name": "pg_last_oid", "synopsis": "pg_last_oid() is used to retrieve the OID assigned to an inserted row.", "usage": "string pg_last_oid ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-last-oid.php"}, {"name": "pg_lo_close", "synopsis": "pg_lo_close() closes a large object. large_object is a resource for the large object from pg_lo_open().", "usage": "bool pg_lo_close ( resource $large_object )", "url": "https://secure.php.net/manual/en/function.pg-lo-close.php"}, {"name": "pg_lo_create", "synopsis": "pg_lo_create() creates a large object and returns the OID of the large object. PostgreSQL access modes INV_READ, INV_WRITE, and INV_ARCHIVE are not supported, the object is created always with both read and write access. INV_ARCHIVE has been removed from PostgreSQL itself (version 6.3 and above).", "usage": "int pg_lo_create ([ resource $connection [, mixed $object_id ]] )", "url": "https://secure.php.net/manual/en/function.pg-lo-create.php"}, {"name": "pg_lo_export", "synopsis": "pg_lo_export() takes a large object in a PostgreSQL database and saves its contents to a file on the local filesystem.", "usage": "bool pg_lo_export ([ resource $connection ], int $oid , string $pathname )", "url": "https://secure.php.net/manual/en/function.pg-lo-export.php"}, {"name": "pg_lo_import", "synopsis": "pg_lo_import() creates a new large object in the database using a file on the filesystem as its data source.", "usage": "int pg_lo_import ([ resource $connection ], string $pathname [, mixed $object_id ] )", "url": "https://secure.php.net/manual/en/function.pg-lo-import.php"}, {"name": "pg_lo_open", "synopsis": "pg_lo_open() opens a large object in the database and returns large object resource so that it can be manipulated.", "usage": "resource pg_lo_open ( resource $connection , int $oid , string $mode )", "url": "https://secure.php.net/manual/en/function.pg-lo-open.php"}, {"name": "pg_lo_read_all", "synopsis": "pg_lo_read_all() reads a large object and passes it straight through to the browser after sending all pending headers. Mainly intended for sending binary data like images or sound.", "usage": "int pg_lo_read_all ( resource $large_object )", "url": "https://secure.php.net/manual/en/function.pg-lo-read-all.php"}, {"name": "pg_lo_read", "synopsis": "pg_lo_read() reads at most len bytes from a large object and returns it as a string.", "usage": "string pg_lo_read ( resource $large_object [, int $len = 8192 ] )", "url": "https://secure.php.net/manual/en/function.pg-lo-read.php"}, {"name": "pg_lo_seek", "synopsis": "pg_lo_seek() seeks a position within a large object resource.", "usage": "bool pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] )", "url": "https://secure.php.net/manual/en/function.pg-lo-seek.php"}, {"name": "pg_lo_tell", "synopsis": "pg_lo_tell() returns the current position (offset from the beginning) of a large object.", "usage": "int pg_lo_tell ( resource $large_object )", "url": "https://secure.php.net/manual/en/function.pg-lo-tell.php"}, {"name": "pg_lo_truncate", "synopsis": "pg_lo_truncate() truncates a large object resource.", "usage": "bool pg_lo_truncate ( resource $large_object , int $size )", "url": "https://secure.php.net/manual/en/function.pg-lo-truncate.php"}, {"name": "pg_lo_unlink", "synopsis": "pg_lo_unlink() deletes a large object with the oid. Returns TRUE on success or FALSE on failure.", "usage": "bool pg_lo_unlink ( resource $connection , int $oid )", "url": "https://secure.php.net/manual/en/function.pg-lo-unlink.php"}, {"name": "pg_lo_write", "synopsis": "pg_lo_write() writes data into a large object at the current seek position.", "usage": "int pg_lo_write ( resource $large_object , string $data [, int $len ] )", "url": "https://secure.php.net/manual/en/function.pg-lo-write.php"}, {"name": "pg_meta_data", "synopsis": "pg_meta_data() returns table definition for table_name as an array.", "usage": "array pg_meta_data ( resource $connection , string $table_name [, bool $extended = FALSE ] )", "url": "https://secure.php.net/manual/en/function.pg-meta-data.php"}, {"name": "pg_num_fields", "synopsis": "pg_num_fields() returns the number of fields (columns) in a PostgreSQL result resource.", "usage": "int pg_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-num-fields.php"}, {"name": "pg_num_rows", "synopsis": "pg_num_rows() will return the number of rows in a PostgreSQL result resource.", "usage": "int pg_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-num-rows.php"}, {"name": "pg_options", "synopsis": "pg_options() will return a string containing the options specified on the given PostgreSQL connection resource.", "usage": "string pg_options ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-options.php"}, {"name": "pg_parameter_status", "synopsis": "Looks up a current parameter setting of the server.", "usage": "string pg_parameter_status ([ resource $connection ], string $param_name )", "url": "https://secure.php.net/manual/en/function.pg-parameter-status.php"}, {"name": "pg_pconnect", "synopsis": "pg_pconnect() opens a connection to a PostgreSQL database. It returns a connection resource that is needed by other PostgreSQL functions.", "usage": "resource pg_pconnect ( string $connection_string [, int $connect_type ] )", "url": "https://secure.php.net/manual/en/function.pg-pconnect.php"}, {"name": "pg_ping", "synopsis": "pg_ping() pings a database connection and tries to reconnect it if it is broken.", "usage": "bool pg_ping ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-ping.php"}, {"name": "pg_port", "synopsis": "pg_port() returns the port number that the given PostgreSQL connection resource is connected to.", "usage": "int pg_port ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-port.php"}, {"name": "pg_prepare", "synopsis": "pg_prepare() creates a prepared statement for later execution with pg_execute() or pg_send_execute(). This feature allows commands that will be used repeatedly to be parsed and planned just once, rather than each time they are executed. pg_prepare() is supported only against PostgreSQL 7.4 or higher connections; it will fail when using earlier versions.", "usage": "resource pg_prepare ([ resource $connection ], string $stmtname , string $query )", "url": "https://secure.php.net/manual/en/function.pg-prepare.php"}, {"name": "pg_put_line", "synopsis": "pg_put_line() sends a NULL-terminated string to the PostgreSQL backend server. This is needed in conjunction with PostgreSQL's COPY FROM command.", "usage": "bool pg_put_line ([ resource $connection ], string $data )", "url": "https://secure.php.net/manual/en/function.pg-put-line.php"}, {"name": "pg_query_params", "synopsis": "Submits a command to the server and waits for the result, with the ability to pass parameters separately from the SQL command text.", "usage": "resource pg_query_params ([ resource $connection ], string $query , array $params )", "url": "https://secure.php.net/manual/en/function.pg-query-params.php"}, {"name": "pg_query", "synopsis": "pg_query() executes the query on the specified database connection. pg_query_params() should be preferred in most cases.", "usage": "resource pg_query ([ resource $connection ], string $query )", "url": "https://secure.php.net/manual/en/function.pg-query.php"}, {"name": "pg_result_error_field", "synopsis": "pg_result_error_field() returns one of the detailed error message fields associated with result resource. It is only available against a PostgreSQL 7.4 or above server. The error field is specified by the fieldcode.", "usage": "string pg_result_error_field ( resource $result , int $fieldcode )", "url": "https://secure.php.net/manual/en/function.pg-result-error-field.php"}, {"name": "pg_result_error", "synopsis": "pg_result_error() returns any error message associated with the result resource. Therefore, the user has a better chance of getting the correct error message than with pg_last_error().", "usage": "string pg_result_error ( resource $result )", "url": "https://secure.php.net/manual/en/function.pg-result-error.php"}, {"name": "pg_result_seek", "synopsis": "pg_result_seek() sets the internal row offset in a result resource.", "usage": "bool pg_result_seek ( resource $result , int $offset )", "url": "https://secure.php.net/manual/en/function.pg-result-seek.php"}, {"name": "pg_result_status", "synopsis": "pg_result_status() returns the status of a result resource, or the PostgreSQL command completion tag associated with the result", "usage": "mixed pg_result_status ( resource $result [, int $type = PGSQL_STATUS_LONG ] )", "url": "https://secure.php.net/manual/en/function.pg-result-status.php"}, {"name": "pg_select", "synopsis": "pg_select() selects records specified by assoc_array which has field=>value. For a successful query, it returns an array containing all records and fields that match the condition specified by assoc_array.", "usage": "mixed pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC [, int $result_type = PGSQL_ASSOC ]] )", "url": "https://secure.php.net/manual/en/function.pg-select.php"}, {"name": "pg_send_execute", "synopsis": "Sends a request to execute a prepared statement with given parameters, without waiting for the result(s).", "usage": "bool pg_send_execute ( resource $connection , string $stmtname , array $params )", "url": "https://secure.php.net/manual/en/function.pg-send-execute.php"}, {"name": "pg_send_prepare", "synopsis": "Sends a request to create a prepared statement with the given parameters, without waiting for completion.", "usage": "bool pg_send_prepare ( resource $connection , string $stmtname , string $query )", "url": "https://secure.php.net/manual/en/function.pg-send-prepare.php"}, {"name": "pg_send_query_params", "synopsis": "Submits a command and separate parameters to the server without waiting for the result(s).", "usage": "bool pg_send_query_params ( resource $connection , string $query , array $params )", "url": "https://secure.php.net/manual/en/function.pg-send-query-params.php"}, {"name": "pg_send_query", "synopsis": "pg_send_query() sends a query or queries asynchronously to the connection. Unlike pg_query(), it can send multiple queries at once to PostgreSQL and get the results one by one using pg_get_result().", "usage": "bool pg_send_query ( resource $connection , string $query )", "url": "https://secure.php.net/manual/en/function.pg-send-query.php"}, {"name": "pg_set_client_encoding", "synopsis": "pg_set_client_encoding() sets the client encoding and returns 0 if success or -1 if error.", "usage": "int pg_set_client_encoding ([ resource $connection ], string $encoding )", "url": "https://secure.php.net/manual/en/function.pg-set-client-encoding.php"}, {"name": "pg_set_error_verbosity", "synopsis": "Determines the verbosity of messages returned by pg_last_error() and pg_result_error().", "usage": "int pg_set_error_verbosity ([ resource $connection ], int $verbosity )", "url": "https://secure.php.net/manual/en/function.pg-set-error-verbosity.php"}, {"name": "pg_socket", "synopsis": "pg_socket() returns a read only resource corresponding to the socket underlying the given PostgreSQL connection.", "usage": "resource pg_socket ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-socket.php"}, {"name": "pg_trace", "synopsis": "pg_trace() enables tracing of the PostgreSQL frontend/backend communication to a file. To fully understand the results, one needs to be familiar with the internals of PostgreSQL communication protocol.", "usage": "bool pg_trace ( string $pathname [, string $mode = \"w\" [, resource $connection ]] )", "url": "https://secure.php.net/manual/en/function.pg-trace.php"}, {"name": "pg_transaction_status", "synopsis": "Returns the current in-transaction status of the server.", "usage": "int pg_transaction_status ( resource $connection )", "url": "https://secure.php.net/manual/en/function.pg-transaction-status.php"}, {"name": "pg_tty", "synopsis": "pg_tty() returns the TTY name that server side debugging output is sent to on the given PostgreSQL connection resource.", "usage": "string pg_tty ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-tty.php"}, {"name": "pg_unescape_bytea", "synopsis": "pg_unescape_bytea() unescapes PostgreSQL bytea data values. It returns the unescaped string, possibly containing binary data.", "usage": "string pg_unescape_bytea ( string $data )", "url": "https://secure.php.net/manual/en/function.pg-unescape-bytea.php"}, {"name": "pg_untrace", "synopsis": "Stop tracing started by pg_trace().", "usage": "bool pg_untrace ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-untrace.php"}, {"name": "pg_update", "synopsis": "pg_update() updates records that matches condition with data. If options is specified, pg_convert() is applied to data with specified options.", "usage": "mixed pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] )", "url": "https://secure.php.net/manual/en/function.pg-update.php"}, {"name": "pg_version", "synopsis": "pg_version() returns an array with the client, protocol and server version. Protocol and server versions are only available if PHP was compiled with PostgreSQL 7.4 or later.", "usage": "array pg_version ([ resource $connection ] )", "url": "https://secure.php.net/manual/en/function.pg-version.php"}, {"name": "php_check_syntax", "synopsis": "Performs a syntax (lint) check on the specified filename testing for scripting errors.", "usage": "bool php_check_syntax ( string $filename [, string &$error_message ] )", "url": "https://secure.php.net/manual/en/function.php-check-syntax.php"}, {"name": "php_ini_loaded_file", "synopsis": "Check if a php.ini file is loaded, and retrieve its path.", "usage": "string php_ini_loaded_file ( void )", "url": "https://secure.php.net/manual/en/function.php-ini-loaded-file.php"}, {"name": "php_ini_scanned_files", "synopsis": "php_ini_scanned_files() returns a comma-separated list of configuration files parsed after php.ini. The directories searched are set by a compile time option and, optionally, by an environment variable at run time: more information can be found in the installation guide.", "usage": "string php_ini_scanned_files ( void )", "url": "https://secure.php.net/manual/en/function.php-ini-scanned-files.php"}, {"name": "php_logo_guid", "synopsis": "This function returns the ID which can be used to display the PHP logo using the built-in image. Logo is displayed only if expose_php is On.", "usage": "string php_logo_guid ( void )", "url": "https://secure.php.net/manual/en/function.php-logo-guid.php"}, {"name": "php_sapi_name", "synopsis": null, "usage": "string php_sapi_name ( void )", "url": "https://secure.php.net/manual/en/function.php-sapi-name.php"}, {"name": "php_strip_whitespace", "synopsis": "Returns the PHP source code in filename with PHP comments and whitespace removed. This may be useful for determining the amount of actual code in your scripts compared with the amount of comments. This is similar to using php -w from the commandline.", "usage": "string php_strip_whitespace ( string $filename )", "url": "https://secure.php.net/manual/en/function.php-strip-whitespace.php"}, {"name": "php_uname", "synopsis": "php_uname() returns a description of the operating system PHP is running on. This is the same string you see at the very top of the phpinfo() output. For the name of just the operating system, consider using the PHP_OS constant, but keep in mind this constant will contain the operating system PHP was built on.", "usage": "string php_uname ([ string $mode = \"a\" ] )", "url": "https://secure.php.net/manual/en/function.php-uname.php"}, {"name": "phpcredits", "synopsis": "This function prints out the credits listing the PHP developers, modules, etc. It generates the appropriate HTML codes to insert the information in a page.", "usage": "bool phpcredits ([ int $flag = CREDITS_ALL ] )", "url": "https://secure.php.net/manual/en/function.phpcredits.php"}, {"name": "phpinfo", "synopsis": "Outputs a large amount of information about the current state of PHP. This includes information about PHP compilation options and extensions, the PHP version, server information and environment (if compiled as a module), the PHP environment, OS version information, paths, master and local values of configuration options, HTTP headers, and the PHP License.", "usage": "bool phpinfo ([ int $what = INFO_ALL ] )", "url": "https://secure.php.net/manual/en/function.phpinfo.php"}, {"name": "phpversion", "synopsis": "Returns a string containing the version of the currently running PHP parser or extension.", "usage": "string phpversion ([ string $extension ] )", "url": "https://secure.php.net/manual/en/function.phpversion.php"}, {"name": "pi", "synopsis": null, "usage": "float pi ( void )", "url": "https://secure.php.net/manual/en/function.pi.php"}, {"name": "png2wbmp", "synopsis": "Converts a PNG file into a WBMP file.", "usage": "bool png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold )", "url": "https://secure.php.net/manual/en/function.png2wbmp.php"}, {"name": "popen", "synopsis": "Opens a pipe to a process executed by forking the command given by command.", "usage": "resource popen ( string $command , string $mode )", "url": "https://secure.php.net/manual/en/function.popen.php"}, {"name": "posix_access", "synopsis": "posix_access() checks the user's permission of a file.", "usage": "bool posix_access ( string $file [, int $mode = POSIX_F_OK ] )", "url": "https://secure.php.net/manual/en/function.posix-access.php"}, {"name": "posix_ctermid", "synopsis": "Generates a string which is the pathname for the current controlling terminal for the process. On error this will set errno, which can be checked using posix_get_last_error()", "usage": "string posix_ctermid ( void )", "url": "https://secure.php.net/manual/en/function.posix-ctermid.php"}, {"name": "posix_get_last_error", "synopsis": "Retrieve the error number set by the last posix function that failed. The system error message associated with the errno may be checked with posix_strerror().", "usage": "int posix_get_last_error ( void )", "url": "https://secure.php.net/manual/en/function.posix-get-last-error.php"}, {"name": "posix_getcwd", "synopsis": "Gets the absolute pathname of the script's current working directory. On error, it sets errno which can be checked using posix_get_last_error()", "usage": "string posix_getcwd ( void )", "url": "https://secure.php.net/manual/en/function.posix-getcwd.php"}, {"name": "posix_getegid", "synopsis": "Return the numeric effective group ID of the current process.", "usage": "int posix_getegid ( void )", "url": "https://secure.php.net/manual/en/function.posix-getegid.php"}, {"name": "posix_geteuid", "synopsis": "Return the numeric effective user ID of the current process. See also posix_getpwuid() for information on how to convert this into a useable username.", "usage": "int posix_geteuid ( void )", "url": "https://secure.php.net/manual/en/function.posix-geteuid.php"}, {"name": "posix_getgid", "synopsis": "Return the numeric real group ID of the current process.", "usage": "int posix_getgid ( void )", "url": "https://secure.php.net/manual/en/function.posix-getgid.php"}, {"name": "posix_getgrgid", "synopsis": "Gets information about a group provided its id.", "usage": "array posix_getgrgid ( int $gid )", "url": "https://secure.php.net/manual/en/function.posix-getgrgid.php"}, {"name": "posix_getgrnam", "synopsis": "Gets information about a group provided its name.", "usage": "array posix_getgrnam ( string $name )", "url": "https://secure.php.net/manual/en/function.posix-getgrnam.php"}, {"name": "posix_getgroups", "synopsis": "Gets the group set of the current process.", "usage": "array posix_getgroups ( void )", "url": "https://secure.php.net/manual/en/function.posix-getgroups.php"}, {"name": "posix_getlogin", "synopsis": "Returns the login name of the user owning the current process.", "usage": "string posix_getlogin ( void )", "url": "https://secure.php.net/manual/en/function.posix-getlogin.php"}, {"name": "posix_getpgid", "synopsis": "Returns the process group identifier of the process pid or FALSE on failure.", "usage": "int posix_getpgid ( int $pid )", "url": "https://secure.php.net/manual/en/function.posix-getpgid.php"}, {"name": "posix_getpgrp", "synopsis": "Return the process group identifier of the current process.", "usage": "int posix_getpgrp ( void )", "url": "https://secure.php.net/manual/en/function.posix-getpgrp.php"}, {"name": "posix_getpid", "synopsis": "Return the process identifier of the current process.", "usage": "int posix_getpid ( void )", "url": "https://secure.php.net/manual/en/function.posix-getpid.php"}, {"name": "posix_getppid", "synopsis": "Return the process identifier of the parent process of the current process.", "usage": "int posix_getppid ( void )", "url": "https://secure.php.net/manual/en/function.posix-getppid.php"}, {"name": "posix_getpwnam", "synopsis": "Returns an array of information about the given user.", "usage": "array posix_getpwnam ( string $username )", "url": "https://secure.php.net/manual/en/function.posix-getpwnam.php"}, {"name": "posix_getpwuid", "synopsis": "Returns an array of information about the user referenced by the given user ID.", "usage": "array posix_getpwuid ( int $uid )", "url": "https://secure.php.net/manual/en/function.posix-getpwuid.php"}, {"name": "posix_getrlimit", "synopsis": "posix_getrlimit() returns an array of information about the current resource's soft and hard limits.", "usage": "array posix_getrlimit ( void )", "url": "https://secure.php.net/manual/en/function.posix-getrlimit.php"}, {"name": "posix_getsid", "synopsis": "Return the session id of the process pid. The session id of a process is the process group id of the session leader.", "usage": "int posix_getsid ( int $pid )", "url": "https://secure.php.net/manual/en/function.posix-getsid.php"}, {"name": "posix_getuid", "synopsis": "Return the numeric real user ID of the current process.", "usage": "int posix_getuid ( void )", "url": "https://secure.php.net/manual/en/function.posix-getuid.php"}, {"name": "posix_initgroups", "synopsis": "Calculates the group access list for the user specified in name.", "usage": "bool posix_initgroups ( string $name , int $base_group_id )", "url": "https://secure.php.net/manual/en/function.posix-initgroups.php"}, {"name": "posix_isatty", "synopsis": "Determines if the file descriptor fd refers to a valid terminal type device.", "usage": "bool posix_isatty ( mixed $fd )", "url": "https://secure.php.net/manual/en/function.posix-isatty.php"}, {"name": "posix_kill", "synopsis": "Send the signal sig to the process with the process identifier pid.", "usage": "bool posix_kill ( int $pid , int $sig )", "url": "https://secure.php.net/manual/en/function.posix-kill.php"}, {"name": "posix_mkfifo", "synopsis": "posix_mkfifo() creates a special FIFO file which exists in the file system and acts as a bidirectional communication endpoint for processes.", "usage": "bool posix_mkfifo ( string $pathname , int $mode )", "url": "https://secure.php.net/manual/en/function.posix-mkfifo.php"}, {"name": "posix_mknod", "synopsis": "Creates a special or ordinary file.", "usage": "bool posix_mknod ( string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]] )", "url": "https://secure.php.net/manual/en/function.posix-mknod.php"}, {"name": "posix_setegid", "synopsis": "Set the effective group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function.", "usage": "bool posix_setegid ( int $gid )", "url": "https://secure.php.net/manual/en/function.posix-setegid.php"}, {"name": "posix_seteuid", "synopsis": "Set the effective user ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function.", "usage": "bool posix_seteuid ( int $uid )", "url": "https://secure.php.net/manual/en/function.posix-seteuid.php"}, {"name": "posix_setgid", "synopsis": "Set the real group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function. The appropriate order of function calls is posix_setgid() first, posix_setuid() last.", "usage": "bool posix_setgid ( int $gid )", "url": "https://secure.php.net/manual/en/function.posix-setgid.php"}, {"name": "posix_setpgid", "synopsis": "Let the process pid join the process group pgid.", "usage": "bool posix_setpgid ( int $pid , int $pgid )", "url": "https://secure.php.net/manual/en/function.posix-setpgid.php"}, {"name": "posix_setrlimit", "synopsis": "posix_setrlimit() sets the soft and hard limits for a given system resource.", "usage": "bool posix_setrlimit ( int $resource , int $softlimit , int $hardlimit )", "url": "https://secure.php.net/manual/en/function.posix-setrlimit.php"}, {"name": "posix_setsid", "synopsis": "Make the current process a session leader.", "usage": "int posix_setsid ( void )", "url": "https://secure.php.net/manual/en/function.posix-setsid.php"}, {"name": "posix_setuid", "synopsis": "Set the real user ID of the current process. This is a privileged function that needs appropriate privileges (usually root) on the system to be able to perform this function.", "usage": "bool posix_setuid ( int $uid )", "url": "https://secure.php.net/manual/en/function.posix-setuid.php"}, {"name": "posix_strerror", "synopsis": "Returns the POSIX system error message associated with the given errno. You may get the errno parameter by calling posix_get_last_error().", "usage": "string posix_strerror ( int $errno )", "url": "https://secure.php.net/manual/en/function.posix-strerror.php"}, {"name": "posix_times", "synopsis": "Gets information about the current CPU usage.", "usage": "array posix_times ( void )", "url": "https://secure.php.net/manual/en/function.posix-times.php"}, {"name": "posix_ttyname", "synopsis": "Returns a string for the absolute path to the current terminal device that is open on the file descriptor fd.", "usage": "string posix_ttyname ( mixed $fd )", "url": "https://secure.php.net/manual/en/function.posix-ttyname.php"}, {"name": "posix_uname", "synopsis": "Gets information about the system.", "usage": "array posix_uname ( void )", "url": "https://secure.php.net/manual/en/function.posix-uname.php"}, {"name": "pow", "synopsis": "Returns base raised to the power of exp.", "usage": "number pow ( number $base , number $exp )", "url": "https://secure.php.net/manual/en/function.pow.php"}, {"name": "preg_filter", "synopsis": "preg_filter() is identical to preg_replace() except it only returns the (possibly transformed) subjects where there was a match. For details about how this function works, read the preg_replace() documentation.", "usage": "mixed preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )", "url": "https://secure.php.net/manual/en/function.preg-filter.php"}, {"name": "preg_grep", "synopsis": "Returns the array consisting of the elements of the input array that match the given pattern.", "usage": "array preg_grep ( string $pattern , array $input [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.preg-grep.php"}, {"name": "preg_last_error", "synopsis": "Returns the error code of the last PCRE regex execution.", "usage": "int preg_last_error ( void )", "url": "https://secure.php.net/manual/en/function.preg-last-error.php"}, {"name": "preg_match_all", "synopsis": "Searches subject for all matches to the regular expression given in pattern and puts them in matches in the order specified by flags.", "usage": "int preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.preg-match-all.php"}, {"name": "preg_match", "synopsis": "Searches subject for a match to the regular expression given in pattern.", "usage": "int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.preg-match.php"}, {"name": "preg_quote", "synopsis": "preg_quote() takes str and puts a backslash in front of every character that is part of the regular expression syntax. This is useful if you have a run-time string that you need to match in some text and the string may contain special regex characters.", "usage": "string preg_quote ( string $str [, string $delimiter = NULL ] )", "url": "https://secure.php.net/manual/en/function.preg-quote.php"}, {"name": "preg_replace_callback_array", "synopsis": "The behavior of this function is similar to preg_replace_callback(), except that callbacks are executed on a per-pattern basis.", "usage": "mixed preg_replace_callback_array ( array $patterns_and_callbacks , mixed $subject [, int $limit = -1 [, int &$count ]] )", "url": "https://secure.php.net/manual/en/function.preg-replace-callback-array.php"}, {"name": "preg_replace_callback", "synopsis": "The behavior of this function is almost identical to preg_replace(), except for the fact that instead of replacement parameter, one should specify a callback.", "usage": "mixed preg_replace_callback ( mixed $pattern , callable $callback , mixed $subject [, int $limit = -1 [, int &$count ]] )", "url": "https://secure.php.net/manual/en/function.preg-replace-callback.php"}, {"name": "preg_replace", "synopsis": "Searches subject for matches to pattern and replaces them with replacement.", "usage": "mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] )", "url": "https://secure.php.net/manual/en/function.preg-replace.php"}, {"name": "preg_split", "synopsis": "Split the given string by a regular expression.", "usage": "array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/function.preg-split.php"}, {"name": "prev", "synopsis": "Rewind the internal array pointer.", "usage": "mixed prev ( array &$array )", "url": "https://secure.php.net/manual/en/function.prev.php"}, {"name": "print_r", "synopsis": "print_r() displays information about a variable in a way that's readable by humans.", "usage": "mixed print_r ( mixed $expression [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/function.print-r.php"}, {"name": "print", "synopsis": "Outputs arg.", "usage": "int print ( string $arg )", "url": "https://secure.php.net/manual/en/function.print.php"}, {"name": "printf", "synopsis": null, "usage": "int printf ( string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.printf.php"}, {"name": "proc_close", "synopsis": "proc_close() is similar to pclose() except that it only works on processes opened by proc_open(). proc_close() waits for the process to terminate, and returns its exit code. If you have open pipes to that process, you should fclose() them prior to calling this function in order to avoid a deadlock - the child process may not be able to exit while the pipes are open.", "usage": "int proc_close ( resource $process )", "url": "https://secure.php.net/manual/en/function.proc-close.php"}, {"name": "proc_get_status", "synopsis": "proc_get_status() fetches data about a process opened using proc_open().", "usage": "array proc_get_status ( resource $process )", "url": "https://secure.php.net/manual/en/function.proc-get-status.php"}, {"name": "proc_nice", "synopsis": "proc_nice() changes the priority of the current process by the amount specified in increment. A positive increment will lower the priority of the current process, whereas a negative increment will raise the priority.", "usage": "bool proc_nice ( int $increment )", "url": "https://secure.php.net/manual/en/function.proc-nice.php"}, {"name": "proc_open", "synopsis": "proc_open() is similar to popen() but provides a much greater degree of control over the program execution.", "usage": "resource proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]] )", "url": "https://secure.php.net/manual/en/function.proc-open.php"}, {"name": "proc_terminate", "synopsis": "Signals a process (created using proc_open()) that it should terminate. proc_terminate() returns immediately and does not wait for the process to terminate.", "usage": "bool proc_terminate ( resource $process [, int $signal = 15 ] )", "url": "https://secure.php.net/manual/en/function.proc-terminate.php"}, {"name": "property_exists", "synopsis": "This function checks if the given property exists in the specified class.", "usage": "bool property_exists ( mixed $class , string $property )", "url": "https://secure.php.net/manual/en/function.property-exists.php"}, {"name": "ps_add_bookmark", "synopsis": "Adds a bookmark for the current page. Bookmarks usually appear in PDF-Viewers left of the page in a hierarchical tree. Clicking on a bookmark will jump to the given page.", "usage": "int ps_add_bookmark ( resource $psdoc , string $text [, int $parent = 0 [, int $open = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ps-add-bookmark.php"}, {"name": "ps_add_launchlink", "synopsis": "Places a hyperlink at the given position pointing to a file program which is being started when clicked on. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border.", "usage": "bool ps_add_launchlink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename )", "url": "https://secure.php.net/manual/en/function.ps-add-launchlink.php"}, {"name": "ps_add_locallink", "synopsis": "Places a hyperlink at the given position pointing to a page in the same document. Clicking on the link will jump to the given page. The first page in a document has number 1.", "usage": "bool ps_add_locallink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , int $page , string $dest )", "url": "https://secure.php.net/manual/en/function.ps-add-locallink.php"}, {"name": "ps_add_note", "synopsis": "Adds a note at a certain position on the page. Notes are like little rectangular sheets with text on it, which can be placed anywhere on a page. They are shown either folded or unfolded. If folded, the specified icon is used as a placeholder.", "usage": "bool ps_add_note ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open )", "url": "https://secure.php.net/manual/en/function.ps-add-note.php"}, {"name": "ps_add_pdflink", "synopsis": "Places a hyperlink at the given position pointing to a second pdf document. Clicking on the link will branch to the document at the given page. The first page in a document has number 1.", "usage": "bool ps_add_pdflink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $filename , int $page , string $dest )", "url": "https://secure.php.net/manual/en/function.ps-add-pdflink.php"}, {"name": "ps_add_weblink", "synopsis": "Places a hyperlink at the given position pointing to a web page. The hyperlink's source position is a rectangle with its lower left corner at (llx, lly) and its upper right corner at (urx, ury). The rectangle has by default a thin blue border.", "usage": "bool ps_add_weblink ( resource $psdoc , float $llx , float $lly , float $urx , float $ury , string $url )", "url": "https://secure.php.net/manual/en/function.ps-add-weblink.php"}, {"name": "ps_arc", "synopsis": "Draws a portion of a circle with at middle point at (x, y). The arc starts at an angle of alpha and ends at an angle of beta. It is drawn counterclockwise (use ps_arcn() to draw clockwise). The subpath added to the current path starts on the arc at angle alpha and ends on the arc at angle beta.", "usage": "bool ps_arc ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )", "url": "https://secure.php.net/manual/en/function.ps-arc.php"}, {"name": "ps_arcn", "synopsis": "Draws a portion of a circle with at middle point at (x, y). The arc starts at an angle of alpha and ends at an angle of beta. It is drawn clockwise (use ps_arc() to draw counterclockwise). The subpath added to the current path starts on the arc at angle beta and ends on the arc at angle alpha.", "usage": "bool ps_arcn ( resource $psdoc , float $x , float $y , float $radius , float $alpha , float $beta )", "url": "https://secure.php.net/manual/en/function.ps-arcn.php"}, {"name": "ps_begin_page", "synopsis": "Starts a new page. Although the parameters width and height imply a different page size for each page, this is not possible in PostScript. The first call of ps_begin_page() will set the page size for the whole document. Consecutive calls will have no effect, except for creating a new page. The situation is different if you intent to convert the PostScript document into PDF. This function places pdfmarks into the document which can set the size for each page indiviually. The resulting PDF document will have different page sizes.", "usage": "bool ps_begin_page ( resource $psdoc , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.ps-begin-page.php"}, {"name": "ps_begin_pattern", "synopsis": "Starts a new pattern. A pattern is like a page containing e.g. a drawing which can be used for filling areas. It is used like a color by calling ps_setcolor() and setting the color space to pattern.", "usage": "int ps_begin_pattern ( resource $psdoc , float $width , float $height , float $xstep , float $ystep , int $painttype )", "url": "https://secure.php.net/manual/en/function.ps-begin-pattern.php"}, {"name": "ps_begin_template", "synopsis": "Starts a new template. A template is called a form in the postscript language. It is created similar to a pattern but used like an image. Templates are often used for drawings which are placed several times through out the document, e.g. like a company logo. All drawing functions may be used within a template. The template will not be drawn until it is placed by ps_place_image().", "usage": "int ps_begin_template ( resource $psdoc , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.ps-begin-template.php"}, {"name": "ps_circle", "synopsis": "Draws a circle with its middle point at (x, y). The circle starts and ends at position (x+radius, y). If this function is called outside a path it will start a new path. If it is called within a path it will add the circle as a subpath. If the last drawing operation does not end in point (x+radius, y) then there will be a gap in the path.", "usage": "bool ps_circle ( resource $psdoc , float $x , float $y , float $radius )", "url": "https://secure.php.net/manual/en/function.ps-circle.php"}, {"name": "ps_clip", "synopsis": "Takes the current path and uses it to define the border of a clipping area. Everything drawn outside of that area will not be visible.", "usage": "bool ps_clip ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-clip.php"}, {"name": "ps_close_image", "synopsis": "Closes an image and frees its resources. Once an image is closed it cannot be used anymore.", "usage": "void ps_close_image ( resource $psdoc , int $imageid )", "url": "https://secure.php.net/manual/en/function.ps-close-image.php"}, {"name": "ps_close", "synopsis": "Closes the PostScript document.", "usage": "bool ps_close ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-close.php"}, {"name": "ps_closepath_stroke", "synopsis": "Connects the last point with first point of a path and draws the resulting closed line.", "usage": "bool ps_closepath_stroke ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-closepath-stroke.php"}, {"name": "ps_closepath", "synopsis": "Connects the last point with the first point of a path. The resulting path can be used for stroking, filling, clipping, etc..", "usage": "bool ps_closepath ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-closepath.php"}, {"name": "ps_continue_text", "synopsis": "Output a text one line below the last line. The line spacing is taken from the value \"leading\" which must be set with ps_set_value(). The actual position of the text is determined by the values \"textx\" and \"texty\" which can be requested with ps_get_value()", "usage": "bool ps_continue_text ( resource $psdoc , string $text )", "url": "https://secure.php.net/manual/en/function.ps-continue-text.php"}, {"name": "ps_curveto", "synopsis": "Add a section of a cubic B\u00e9zier curve described by the three given control points to the current path.", "usage": "bool ps_curveto ( resource $psdoc , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/function.ps-curveto.php"}, {"name": "ps_delete", "synopsis": "Mainly frees memory used by the document. Also closes a file, if it was not closed before with ps_close(). You should in any case close the file with ps_close() before, because ps_close() not just closes the file but also outputs a trailor containing PostScript comments like the number of pages in the document and adding the bookmark hierarchy.", "usage": "bool ps_delete ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-delete.php"}, {"name": "ps_end_page", "synopsis": "Ends a page which was started with ps_begin_page(). Ending a page will leave the current drawing context, which e.g. requires to reload fonts if they were loading within the page, and to set many other drawing parameters like the line width, or color..", "usage": "bool ps_end_page ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-end-page.php"}, {"name": "ps_end_pattern", "synopsis": "Ends a pattern which was started with ps_begin_pattern(). Once a pattern has been ended, it can be used like a color to fill areas.", "usage": "bool ps_end_pattern ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-end-pattern.php"}, {"name": "ps_end_template", "synopsis": "Ends a template which was started with ps_begin_template(). Once a template has been ended, it can be used like an image.", "usage": "bool ps_end_template ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-end-template.php"}, {"name": "ps_fill_stroke", "synopsis": "Fills and draws the path constructed with previously called drawing functions like ps_lineto().", "usage": "bool ps_fill_stroke ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-fill-stroke.php"}, {"name": "ps_fill", "synopsis": "Fills the path constructed with previously called drawing functions like ps_lineto().", "usage": "bool ps_fill ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-fill.php"}, {"name": "ps_findfont", "synopsis": "Loads a font for later use. Before text is output with a loaded font it must be set with ps_setfont(). This function needs the adobe font metric file in order to calculate the space used up by the characters. A font which is loaded within a page will only be available on that page. Fonts which are to be used in the complete document have to be loaded before the first call of ps_begin_page(). Calling ps_findfont() between pages will make that font available for all following pages.", "usage": "int ps_findfont ( resource $psdoc , string $fontname , string $encoding [, bool $embed = FALSE ] )", "url": "https://secure.php.net/manual/en/function.ps-findfont.php"}, {"name": "ps_get_buffer", "synopsis": "This function is not implemented yet. It will always return an empty string. The idea for a later implementation is to write the contents of the postscript file into an internal buffer if in memory creation is requested, and retrieve the buffer content with this function. Currently, documents created in memory are send to the browser without buffering.", "usage": "string ps_get_buffer ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-get-buffer.php"}, {"name": "ps_get_parameter", "synopsis": "Gets several parameters which were directly set by ps_set_parameter() or indirectly by one of the other functions. Parameters are by definition string values. This function cannot be used to retrieve resources which were also set by ps_set_parameter().", "usage": "string ps_get_parameter ( resource $psdoc , string $name [, float $modifier ] )", "url": "https://secure.php.net/manual/en/function.ps-get-parameter.php"}, {"name": "ps_get_value", "synopsis": "Gets several values which were set by ps_set_value(). Values are by definition float values.", "usage": "float ps_get_value ( resource $psdoc , string $name [, float $modifier ] )", "url": "https://secure.php.net/manual/en/function.ps-get-value.php"}, {"name": "ps_hyphenate", "synopsis": "Hyphenates the passed word. ps_hyphenate() evaluates the value hyphenminchars (set by ps_set_value()) and the parameter hyphendict (set by ps_set_parameter()). hyphendict must be set before calling this function.", "usage": "array ps_hyphenate ( resource $psdoc , string $text )", "url": "https://secure.php.net/manual/en/function.ps-hyphenate.php"}, {"name": "ps_include_file", "synopsis": "", "usage": "bool ps_include_file ( resource $psdoc , string $file )", "url": "https://secure.php.net/manual/en/function.ps-include-file.php"}, {"name": "ps_lineto", "synopsis": "Adds a straight line from the current point to the given coordinates to the current path. Use ps_moveto() to set the starting point of the line.", "usage": "bool ps_lineto ( resource $psdoc , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-lineto.php"}, {"name": "ps_makespotcolor", "synopsis": "Creates a spot color from the current fill color. The fill color must be defined in rgb, cmyk or gray colorspace. The spot color name can be an arbitrary name. A spot color can be set as any color with ps_setcolor(). When the document is not printed but displayed by an postscript viewer the given color in the specified color space is use.", "usage": "int ps_makespotcolor ( resource $psdoc , string $name [, int $reserved = 0 ] )", "url": "https://secure.php.net/manual/en/function.ps-makespotcolor.php"}, {"name": "ps_moveto", "synopsis": "Sets the current point to new coordinates. If this is the first call of ps_moveto() after a previous path has been ended then it will start a new path. If this function is called in the middle of a path it will just set the current point and start a subpath.", "usage": "bool ps_moveto ( resource $psdoc , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-moveto.php"}, {"name": "ps_new", "synopsis": "Creates a new document instance. It does not create the file on disk or in memory, it just sets up everything. ps_new() is usually followed by a call of ps_open_file() to actually create the postscript document.", "usage": "resource ps_new ( void )", "url": "https://secure.php.net/manual/en/function.ps-new.php"}, {"name": "ps_open_file", "synopsis": "Creates a new file on disk and writes the PostScript document into it. The file will be closed when ps_close() is called.", "usage": "bool ps_open_file ( resource $psdoc [, string $filename ] )", "url": "https://secure.php.net/manual/en/function.ps-open-file.php"}, {"name": "ps_open_image_file", "synopsis": "Loads an image for later use.", "usage": "int ps_open_image_file ( resource $psdoc , string $type , string $filename [, string $stringparam [, int $intparam = 0 ]] )", "url": "https://secure.php.net/manual/en/function.ps-open-image-file.php"}, {"name": "ps_open_image", "synopsis": "Reads an image which is already available in memory. The parameter source is currently not evaluated and assumed to be memory. The image data is a sequence of pixels starting in th upper left corner and ending in the lower right corner. Each pixel consists of components color components, and each component has bpc bits.", "usage": "int ps_open_image ( resource $psdoc , string $type , string $source , string $data , int $lenght , int $width , int $height , int $components , int $bpc , string $params )", "url": "https://secure.php.net/manual/en/function.ps-open-image.php"}, {"name": "ps_open_memory_image", "synopsis": "", "usage": "int ps_open_memory_image ( resource $psdoc , int $gd )", "url": "https://secure.php.net/manual/en/function.ps-open-memory-image.php"}, {"name": "ps_place_image", "synopsis": "Places a formerly loaded image on the page. The image can be scaled. If the image shall be rotated as well, you will have to rotate the coordinate system before with ps_rotate().", "usage": "bool ps_place_image ( resource $psdoc , int $imageid , float $x , float $y , float $scale )", "url": "https://secure.php.net/manual/en/function.ps-place-image.php"}, {"name": "ps_rect", "synopsis": "Draws a rectangle with its lower left corner at (x, y). The rectangle starts and ends in its lower left corner. If this function is called outside a path it will start a new path. If it is called within a path it will add the rectangle as a subpath. If the last drawing operation does not end in the lower left corner then there will be a gap in the path.", "usage": "bool ps_rect ( resource $psdoc , float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/function.ps-rect.php"}, {"name": "ps_restore", "synopsis": "Restores a previously saved graphics context. Any call of ps_save() must be accompanied by a call to ps_restore(). All coordinate transformations, line style settings, color settings, etc. are being restored to the state before the call of ps_save().", "usage": "bool ps_restore ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-restore.php"}, {"name": "ps_rotate", "synopsis": "Sets the rotation of the coordinate system.", "usage": "bool ps_rotate ( resource $psdoc , float $rot )", "url": "https://secure.php.net/manual/en/function.ps-rotate.php"}, {"name": "ps_save", "synopsis": "Saves the current graphics context, containing colors, translation and rotation settings and some more. A saved context can be restored with ps_restore().", "usage": "bool ps_save ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-save.php"}, {"name": "ps_scale", "synopsis": "Sets horizontal and vertical scaling of the coordinate system.", "usage": "bool ps_scale ( resource $psdoc , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-scale.php"}, {"name": "ps_set_border_color", "synopsis": "Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the color of the rectangle's border line.", "usage": "bool ps_set_border_color ( resource $psdoc , float $red , float $green , float $blue )", "url": "https://secure.php.net/manual/en/function.ps-set-border-color.php"}, {"name": "ps_set_border_dash", "synopsis": "Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the length of the black and white portion of a dashed border line.", "usage": "bool ps_set_border_dash ( resource $psdoc , float $black , float $white )", "url": "https://secure.php.net/manual/en/function.ps-set-border-dash.php"}, {"name": "ps_set_border_style", "synopsis": "Links added with one of the functions ps_add_weblink(), ps_add_pdflink(), etc. will be displayed with a surounded rectangle when the postscript document is converted to pdf and viewed in a pdf viewer. This rectangle is not visible in the postscript document. This function sets the appearance and width of the border line.", "usage": "bool ps_set_border_style ( resource $psdoc , string $style , float $width )", "url": "https://secure.php.net/manual/en/function.ps-set-border-style.php"}, {"name": "ps_set_info", "synopsis": "Sets certain information fields of the document. This fields will be shown as a comment in the header of the PostScript file. If the document is converted to pdf this fields will also be used for the document information.", "usage": "bool ps_set_info ( resource $p , string $key , string $val )", "url": "https://secure.php.net/manual/en/function.ps-set-info.php"}, {"name": "ps_set_parameter", "synopsis": "Sets several parameters which are used by many functions. Parameters are by definition string values.", "usage": "bool ps_set_parameter ( resource $psdoc , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.ps-set-parameter.php"}, {"name": "ps_set_text_pos", "synopsis": "Set the position for the next text output. You may alternatively set the x and y value separately by calling ps_set_value() and choosing textx respectively texty as the value name.", "usage": "bool ps_set_text_pos ( resource $psdoc , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-set-text-pos.php"}, {"name": "ps_set_value", "synopsis": "Sets several values which are used by many functions. Parameters are by definition float values.", "usage": "bool ps_set_value ( resource $psdoc , string $name , float $value )", "url": "https://secure.php.net/manual/en/function.ps-set-value.php"}, {"name": "ps_setcolor", "synopsis": "Sets the color for drawing, filling, or both.", "usage": "bool ps_setcolor ( resource $psdoc , string $type , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 )", "url": "https://secure.php.net/manual/en/function.ps-setcolor.php"}, {"name": "ps_setdash", "synopsis": "Sets the length of the black and white portions of a dashed line.", "usage": "bool ps_setdash ( resource $psdoc , float $on , float $off )", "url": "https://secure.php.net/manual/en/function.ps-setdash.php"}, {"name": "ps_setflat", "synopsis": "", "usage": "bool ps_setflat ( resource $psdoc , float $value )", "url": "https://secure.php.net/manual/en/function.ps-setflat.php"}, {"name": "ps_setfont", "synopsis": "Sets a font, which has to be loaded before with ps_findfont(). Outputting text without setting a font results in an error.", "usage": "bool ps_setfont ( resource $psdoc , int $fontid , float $size )", "url": "https://secure.php.net/manual/en/function.ps-setfont.php"}, {"name": "ps_setgray", "synopsis": "Sets the gray value for all following drawing operations.", "usage": "bool ps_setgray ( resource $psdoc , float $gray )", "url": "https://secure.php.net/manual/en/function.ps-setgray.php"}, {"name": "ps_setlinecap", "synopsis": "Sets how line ends look like.", "usage": "bool ps_setlinecap ( resource $psdoc , int $type )", "url": "https://secure.php.net/manual/en/function.ps-setlinecap.php"}, {"name": "ps_setlinejoin", "synopsis": "Sets how lines are joined.", "usage": "bool ps_setlinejoin ( resource $psdoc , int $type )", "url": "https://secure.php.net/manual/en/function.ps-setlinejoin.php"}, {"name": "ps_setlinewidth", "synopsis": "Sets the line width for all following drawing operations.", "usage": "bool ps_setlinewidth ( resource $psdoc , float $width )", "url": "https://secure.php.net/manual/en/function.ps-setlinewidth.php"}, {"name": "ps_setmiterlimit", "synopsis": "If two lines join in a small angle and the line join is set to PS_LINEJOIN_MITER, then the resulting spike will be very long. The miter limit is the maximum ratio of the miter length (the length of the spike) and the line width.", "usage": "bool ps_setmiterlimit ( resource $psdoc , float $value )", "url": "https://secure.php.net/manual/en/function.ps-setmiterlimit.php"}, {"name": "ps_setoverprintmode", "synopsis": "", "usage": "bool ps_setoverprintmode ( resource $psdoc , int $mode )", "url": "https://secure.php.net/manual/en/function.ps-setoverprintmode.php"}, {"name": "ps_setpolydash", "synopsis": "Sets the length of the black and white portions of a dashed line. ps_setpolydash() is used to set more complicated dash patterns.", "usage": "bool ps_setpolydash ( resource $psdoc , float $arr )", "url": "https://secure.php.net/manual/en/function.ps-setpolydash.php"}, {"name": "ps_shading_pattern", "synopsis": "Creates a pattern based on a shading, which has to be created before with ps_shading(). Shading patterns can be used like regular patterns.", "usage": "int ps_shading_pattern ( resource $psdoc , int $shadingid , string $optlist )", "url": "https://secure.php.net/manual/en/function.ps-shading-pattern.php"}, {"name": "ps_shading", "synopsis": "Creates a shading, which can be used by ps_shfill() or ps_shading_pattern().", "usage": "int ps_shading ( resource $psdoc , string $type , float $x0 , float $y0 , float $x1 , float $y1 , float $c1 , float $c2 , float $c3 , float $c4 , string $optlist )", "url": "https://secure.php.net/manual/en/function.ps-shading.php"}, {"name": "ps_shfill", "synopsis": "Fills an area with a shading, which has to be created before with ps_shading(). This is an alternative way to creating a pattern from a shading ps_shading_pattern() and using the pattern as the filling color.", "usage": "bool ps_shfill ( resource $psdoc , int $shadingid )", "url": "https://secure.php.net/manual/en/function.ps-shfill.php"}, {"name": "ps_show_boxed", "synopsis": "Outputs a text in a given box. The lower left corner of the box is at (left, bottom). Line breaks will be inserted where needed. Multiple spaces are treated as one. Tabulators are treated as spaces.", "usage": "int ps_show_boxed ( resource $psdoc , string $text , float $left , float $bottom , float $width , float $height , string $hmode [, string $feature ] )", "url": "https://secure.php.net/manual/en/function.ps-show-boxed.php"}, {"name": "ps_show_xy", "synopsis": "Output a text at the given text position.", "usage": "bool ps_show_xy ( resource $psdoc , string $text , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-show-xy.php"}, {"name": "ps_show_xy2", "synopsis": "", "usage": "bool ps_show_xy2 ( resource $psdoc , string $text , int $len , float $xcoor , float $ycoor )", "url": "https://secure.php.net/manual/en/function.ps-show-xy2.php"}, {"name": "ps_show", "synopsis": "Output a text at the current text position. The text position can be set by storing the x and y coordinates into the values textx and texty with the function ps_set_value(). The function will issue an error if a font was not set before with ps_setfont().", "usage": "bool ps_show ( resource $psdoc , string $text )", "url": "https://secure.php.net/manual/en/function.ps-show.php"}, {"name": "ps_show2", "synopsis": "Output text at the current position. Do not print more than len characters.", "usage": "bool ps_show2 ( resource $psdoc , string $text , int $len )", "url": "https://secure.php.net/manual/en/function.ps-show2.php"}, {"name": "ps_string_geometry", "synopsis": "This function is similar to ps_stringwidth() but returns an array of dimensions containing the width, ascender, and descender of the text.", "usage": "array ps_string_geometry ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )", "url": "https://secure.php.net/manual/en/function.ps-string-geometry.php"}, {"name": "ps_stringwidth", "synopsis": "Calculates the width of a string in points if it was output in the given font and font size. This function needs an Adobe font metrics file to calculate the precise width. If kerning is turned on, it will be taken into account.", "usage": "float ps_stringwidth ( resource $psdoc , string $text [, int $fontid = 0 [, float $size = 0.0 ]] )", "url": "https://secure.php.net/manual/en/function.ps-stringwidth.php"}, {"name": "ps_stroke", "synopsis": "Draws the path constructed with previously called drawing functions like ps_lineto().", "usage": "bool ps_stroke ( resource $psdoc )", "url": "https://secure.php.net/manual/en/function.ps-stroke.php"}, {"name": "ps_symbol_name", "synopsis": "This function needs an Adobe font metrics file to know which glyphs are available.", "usage": "string ps_symbol_name ( resource $psdoc , int $ord [, int $fontid = 0 ] )", "url": "https://secure.php.net/manual/en/function.ps-symbol-name.php"}, {"name": "ps_symbol_width", "synopsis": "Calculates the width of a glyph in points if it was output in the given font and font size. This function needs an Adobe font metrics file to calculate the precise width.", "usage": "float ps_symbol_width ( resource $psdoc , int $ord [, int $fontid = 0 [, float $size = 0.0 ]] )", "url": "https://secure.php.net/manual/en/function.ps-symbol-width.php"}, {"name": "ps_symbol", "synopsis": "Output the glyph at position ord in the font encoding vector of the current font. The font encoding for a font can be set when loading the font with ps_findfont().", "usage": "bool ps_symbol ( resource $psdoc , int $ord )", "url": "https://secure.php.net/manual/en/function.ps-symbol.php"}, {"name": "ps_translate", "synopsis": "Sets a new initial point of the coordinate system.", "usage": "bool ps_translate ( resource $psdoc , float $x , float $y )", "url": "https://secure.php.net/manual/en/function.ps-translate.php"}, {"name": "pspell_add_to_personal", "synopsis": null, "usage": "bool pspell_add_to_personal ( int $dictionary_link , string $word )", "url": "https://secure.php.net/manual/en/function.pspell-add-to-personal.php"}, {"name": "pspell_add_to_session", "synopsis": null, "usage": "bool pspell_add_to_session ( int $dictionary_link , string $word )", "url": "https://secure.php.net/manual/en/function.pspell-add-to-session.php"}, {"name": "pspell_check", "synopsis": null, "usage": "bool pspell_check ( int $dictionary_link , string $word )", "url": "https://secure.php.net/manual/en/function.pspell-check.php"}, {"name": "pspell_clear_session", "synopsis": null, "usage": "bool pspell_clear_session ( int $dictionary_link )", "url": "https://secure.php.net/manual/en/function.pspell-clear-session.php"}, {"name": "pspell_config_create", "synopsis": "Create a config used to open a dictionary.", "usage": "int pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] )", "url": "https://secure.php.net/manual/en/function.pspell-config-create.php"}, {"name": "pspell_config_data_dir", "synopsis": "", "usage": "bool pspell_config_data_dir ( int $conf , string $directory )", "url": "https://secure.php.net/manual/en/function.pspell-config-data-dir.php"}, {"name": "pspell_config_dict_dir", "synopsis": "", "usage": "bool pspell_config_dict_dir ( int $conf , string $directory )", "url": "https://secure.php.net/manual/en/function.pspell-config-dict-dir.php"}, {"name": "pspell_config_ignore", "synopsis": null, "usage": "bool pspell_config_ignore ( int $dictionary_link , int $n )", "url": "https://secure.php.net/manual/en/function.pspell-config-ignore.php"}, {"name": "pspell_config_mode", "synopsis": null, "usage": "bool pspell_config_mode ( int $dictionary_link , int $mode )", "url": "https://secure.php.net/manual/en/function.pspell-config-mode.php"}, {"name": "pspell_config_personal", "synopsis": "Set a file that contains personal wordlist. The personal wordlist will be loaded and used in addition to the standard one after you call pspell_new_config(). The file is also the file where pspell_save_wordlist() will save personal wordlist to.", "usage": "bool pspell_config_personal ( int $dictionary_link , string $file )", "url": "https://secure.php.net/manual/en/function.pspell-config-personal.php"}, {"name": "pspell_config_repl", "synopsis": "Set a file that contains replacement pairs.", "usage": "bool pspell_config_repl ( int $dictionary_link , string $file )", "url": "https://secure.php.net/manual/en/function.pspell-config-repl.php"}, {"name": "pspell_config_runtogether", "synopsis": "This function determines whether run-together words will be treated as legal compounds. That is, \"thecat\" will be a legal compound, although there should be a space between the two words. Changing this setting only affects the results returned by pspell_check(); pspell_suggest() will still return suggestions.", "usage": "bool pspell_config_runtogether ( int $dictionary_link , bool $flag )", "url": "https://secure.php.net/manual/en/function.pspell-config-runtogether.php"}, {"name": "pspell_config_save_repl", "synopsis": "pspell_config_save_repl() determines whether pspell_save_wordlist() will save the replacement pairs along with the wordlist. Usually there is no need to use this function because if pspell_config_repl() is used, the replacement pairs will be saved by pspell_save_wordlist() anyway, and if it is not, the replacement pairs will not be saved.", "usage": "bool pspell_config_save_repl ( int $dictionary_link , bool $flag )", "url": "https://secure.php.net/manual/en/function.pspell-config-save-repl.php"}, {"name": "pspell_new_config", "synopsis": null, "usage": "int pspell_new_config ( int $config )", "url": "https://secure.php.net/manual/en/function.pspell-new-config.php"}, {"name": "pspell_new_personal", "synopsis": null, "usage": "int pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )", "url": "https://secure.php.net/manual/en/function.pspell-new-personal.php"}, {"name": "pspell_new", "synopsis": "pspell_new() opens up a new dictionary and returns the dictionary link identifier for use in other pspell functions.", "usage": "int pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] )", "url": "https://secure.php.net/manual/en/function.pspell-new.php"}, {"name": "pspell_save_wordlist", "synopsis": null, "usage": "bool pspell_save_wordlist ( int $dictionary_link )", "url": "https://secure.php.net/manual/en/function.pspell-save-wordlist.php"}, {"name": "pspell_store_replacement", "synopsis": null, "usage": "bool pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct )", "url": "https://secure.php.net/manual/en/function.pspell-store-replacement.php"}, {"name": "pspell_suggest", "synopsis": null, "usage": "array pspell_suggest ( int $dictionary_link , string $word )", "url": "https://secure.php.net/manual/en/function.pspell-suggest.php"}, {"name": "putenv", "synopsis": "Adds setting to the server environment. The environment variable will only exist for the duration of the current request. At the end of the request the environment is restored to its original state.", "usage": "bool putenv ( string $setting )", "url": "https://secure.php.net/manual/en/function.putenv.php"}, {"name": "px_close", "synopsis": "Closes the paradox database. This function will not close the file. You will have to call fclose() afterwards.", "usage": "bool px_close ( resource $pxdoc )", "url": "https://secure.php.net/manual/en/function.px-close.php"}, {"name": "px_create_fp", "synopsis": "Create a new paradox database file. The actual file has to be opened before with fopen(). Make sure the file is writable.", "usage": "bool px_create_fp ( resource $pxdoc , resource $file , array $fielddesc )", "url": "https://secure.php.net/manual/en/function.px-create-fp.php"}, {"name": "px_date2string", "synopsis": "Turns a date as it stored in the paradox file into human readable format. Paradox dates are the number of days since 1.1.0000. This function is just for convenience. It can be easily replaced by some math and the calendar functions as demonstrated in the example below.", "usage": "string px_date2string ( resource $pxdoc , int $value , string $format )", "url": "https://secure.php.net/manual/en/function.px-date2string.php"}, {"name": "px_delete_record", "synopsis": "This function deletes a record from the database. It does not free the space in the database file but just marks it as deleted. Inserting a new record afterwards will reuse the space.", "usage": "bool px_delete_record ( resource $pxdoc , int $num )", "url": "https://secure.php.net/manual/en/function.px-delete-record.php"}, {"name": "px_delete", "synopsis": "Deletes the resource of the paradox file and frees all memory.", "usage": "bool px_delete ( resource $pxdoc )", "url": "https://secure.php.net/manual/en/function.px-delete.php"}, {"name": "px_get_field", "synopsis": null, "usage": "array px_get_field ( resource $pxdoc , int $fieldno )", "url": "https://secure.php.net/manual/en/function.px-get-field.php"}, {"name": "px_get_info", "synopsis": null, "usage": "array px_get_info ( resource $pxdoc )", "url": "https://secure.php.net/manual/en/function.px-get-info.php"}, {"name": "px_get_parameter", "synopsis": "Gets various parameters.", "usage": "string px_get_parameter ( resource $pxdoc , string $name )", "url": "https://secure.php.net/manual/en/function.px-get-parameter.php"}, {"name": "px_get_record", "synopsis": null, "usage": "array px_get_record ( resource $pxdoc , int $num [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/function.px-get-record.php"}, {"name": "px_get_schema", "synopsis": "px_get_schema() returns the database schema.", "usage": "array px_get_schema ( resource $pxdoc [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/function.px-get-schema.php"}, {"name": "px_get_value", "synopsis": "Gets various values.", "usage": "float px_get_value ( resource $pxdoc , string $name )", "url": "https://secure.php.net/manual/en/function.px-get-value.php"}, {"name": "px_insert_record", "synopsis": "Inserts a new record into the database. The record is not necessarily inserted at the end of the database, but may be inserted at any position depending on where the first free slot is found.", "usage": "int px_insert_record ( resource $pxdoc , array $data )", "url": "https://secure.php.net/manual/en/function.px-insert-record.php"}, {"name": "px_new", "synopsis": "Create a new paradox object. You will have to call this function before any further functions. px_new() does not create any file on the disk, it just creates an instance of a paradox object. This function must not be called if the object oriented interface is used. Use new paradox_db() instead.", "usage": "resource px_new ( void )", "url": "https://secure.php.net/manual/en/function.px-new.php"}, {"name": "px_numfields", "synopsis": "Get the number of fields in a database file.", "usage": "int px_numfields ( resource $pxdoc )", "url": "https://secure.php.net/manual/en/function.px-numfields.php"}, {"name": "px_numrecords", "synopsis": "Get the number of records in a database file.", "usage": "int px_numrecords ( resource $pxdoc )", "url": "https://secure.php.net/manual/en/function.px-numrecords.php"}, {"name": "px_open_fp", "synopsis": "Open an existing paradox database file. The actual file has to be opened before with fopen(). This function can also be used to open primary index files and tread them like a paradox database. This is supported for those who would like to investigate a primary index. It cannot be used to accelerate access to a database file.", "usage": "bool px_open_fp ( resource $pxdoc , resource $file )", "url": "https://secure.php.net/manual/en/function.px-open-fp.php"}, {"name": "px_put_record", "synopsis": "Stores a record into a paradox database. The record is always added at the end of the database, regardless of any free slots. Use px_insert_record() to add a new record into the first free slot found in the database.", "usage": "bool px_put_record ( resource $pxdoc , array $record [, int $recpos = -1 ] )", "url": "https://secure.php.net/manual/en/function.px-put-record.php"}, {"name": "px_retrieve_record", "synopsis": "This function is very similar to px_get_record() but uses internally a different approach to retrieve the data. It relies on pxlib for reading each single field value, which usually results in support for more field types.", "usage": "array px_retrieve_record ( resource $pxdoc , int $num [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/function.px-retrieve-record.php"}, {"name": "px_set_blob_file", "synopsis": "Sets the name of the file where blobs are going to be read from or written into. Without calling this function, px_get_record() or px_retrieve_record() will only return data in blob fields if the data is part of the record and not stored in the blob file. Blob data is stored in the record if it is small enough to fit in the size of the blob field.", "usage": "bool px_set_blob_file ( resource $pxdoc , string $filename )", "url": "https://secure.php.net/manual/en/function.px-set-blob-file.php"}, {"name": "px_set_parameter", "synopsis": "Sets various parameters.", "usage": "bool px_set_parameter ( resource $pxdoc , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.px-set-parameter.php"}, {"name": "px_set_tablename", "synopsis": "Sets the table name of a paradox database, which was created with px_create_fp(). This function is deprecated use px_set_parameter() instead.", "usage": "void px_set_tablename ( resource $pxdoc , string $name )", "url": "https://secure.php.net/manual/en/function.px-set-tablename.php"}, {"name": "px_set_targetencoding", "synopsis": "Set the encoding for data retrieved from a character field. All character fields will be recoded to the encoding set by this function. If the encoding is not set, the character data will be returned in the DOS code page encoding as specified in the database file. The encoding can be any string identifier known to iconv or recode. On Unix systems run iconv -l for a list of available encodings.", "usage": "bool px_set_targetencoding ( resource $pxdoc , string $encoding )", "url": "https://secure.php.net/manual/en/function.px-set-targetencoding.php"}, {"name": "px_set_value", "synopsis": "Sets various values.", "usage": "bool px_set_value ( resource $pxdoc , string $name , float $value )", "url": "https://secure.php.net/manual/en/function.px-set-value.php"}, {"name": "px_timestamp2string", "synopsis": "Turns a timestamp as it stored in the paradox file into human readable format. Paradox timestamps are the number of miliseconds since 0001-01-02. This function is just for convenience. It can be easily replaced by some math and the calendar functions as demonstrated in the following example.", "usage": "string px_timestamp2string ( resource $pxdoc , float $value , string $format )", "url": "https://secure.php.net/manual/en/function.px-timestamp2string.php"}, {"name": "px_update_record", "synopsis": "Updates an exiting record in the database. The record starts at 0.", "usage": "bool px_update_record ( resource $pxdoc , array $data , int $num )", "url": "https://secure.php.net/manual/en/function.px-update-record.php"}, {"name": "quoted_printable_decode", "synopsis": "This function returns an 8-bit binary string corresponding to the decoded quoted printable string (according to \u00bb\u00a0RFC2045, section 6.7, not \u00bb\u00a0RFC2821, section 4.5.2, so additional periods are not stripped from the beginning of line).", "usage": "string quoted_printable_decode ( string $str )", "url": "https://secure.php.net/manual/en/function.quoted-printable-decode.php"}, {"name": "quoted_printable_encode", "synopsis": "Returns a quoted printable string created according to \u00bb\u00a0RFC2045, section 6.7.", "usage": "string quoted_printable_encode ( string $str )", "url": "https://secure.php.net/manual/en/function.quoted-printable-encode.php"}, {"name": "quotemeta", "synopsis": "Returns a version of str with a backslash character (\\) before every character that is among these:", "usage": "string quotemeta ( string $str )", "url": "https://secure.php.net/manual/en/function.quotemeta.php"}, {"name": "rad2deg", "synopsis": "This function converts number from radian to degrees.", "usage": "float rad2deg ( float $number )", "url": "https://secure.php.net/manual/en/function.rad2deg.php"}, {"name": "radius_acct_open", "synopsis": "", "usage": "resource radius_acct_open ( void )", "url": "https://secure.php.net/manual/en/function.radius-acct-open.php"}, {"name": "radius_add_server", "synopsis": "radius_add_server() may be called multiple times, and it may be used together with radius_config(). At most 10 servers may be specified. When multiple servers are given, they are tried in round-robin fashion until a valid response is received, or until each server's max_tries limit has been reached.", "usage": "bool radius_add_server ( resource $radius_handle , string $hostname , int $port , string $secret , int $timeout , int $max_tries )", "url": "https://secure.php.net/manual/en/function.radius-add-server.php"}, {"name": "radius_auth_open", "synopsis": "", "usage": "resource radius_auth_open ( void )", "url": "https://secure.php.net/manual/en/function.radius-auth-open.php"}, {"name": "radius_close", "synopsis": "It is not needed to call this function because php frees all resources at the end of each request.", "usage": "bool radius_close ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-close.php"}, {"name": "radius_config", "synopsis": "Before issuing any Radius requests, the library must be made aware of the servers it can contact. The easiest way to configure the library is to call radius_config(). radius_config() causes the library to read a configuration file whose format is described in \u00bb\u00a0radius.conf.", "usage": "bool radius_config ( resource $radius_handle , string $file )", "url": "https://secure.php.net/manual/en/function.radius-config.php"}, {"name": "radius_create_request", "synopsis": "A Radius request consists of a code specifying the kind of request, and zero or more attributes which provide additional information. To begin constructing a new request, call radius_create_request().", "usage": "bool radius_create_request ( resource $radius_handle , int $type )", "url": "https://secure.php.net/manual/en/function.radius-create-request.php"}, {"name": "radius_cvt_addr", "synopsis": "", "usage": "string radius_cvt_addr ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-cvt-addr.php"}, {"name": "radius_cvt_int", "synopsis": "", "usage": "int radius_cvt_int ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-cvt-int.php"}, {"name": "radius_cvt_string", "synopsis": "", "usage": "string radius_cvt_string ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-cvt-string.php"}, {"name": "radius_demangle_mppe_key", "synopsis": "When using MPPE with MS-CHAPv2, the send- and recv-keys are mangled (see \u00bb\u00a0RFC 2548), however this function is useless, because I don't think that there is or will be a PPTP-MPPE implementation in PHP.", "usage": "string radius_demangle_mppe_key ( resource $radius_handle , string $mangled )", "url": "https://secure.php.net/manual/en/function.radius-demangle-mppe-key.php"}, {"name": "radius_demangle", "synopsis": "Some data (Passwords, MS-CHAPv1 MPPE-Keys) is mangled for security reasons, and must be demangled before you can use them.", "usage": "string radius_demangle ( resource $radius_handle , string $mangled )", "url": "https://secure.php.net/manual/en/function.radius-demangle.php"}, {"name": "radius_get_attr", "synopsis": "Like Radius requests, each response may contain zero or more attributes. After a response has been received successfully by radius_send_request(), its attributes can be extracted one by one using radius_get_attr(). Each time radius_get_attr() is called, it gets the next attribute from the current response.", "usage": "mixed radius_get_attr ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-get-attr.php"}, {"name": "radius_get_tagged_attr_data", "synopsis": "If a tagged attribute has been returned from radius_get_attr(), radius_get_tagged_attr_data() will return the data from the attribute.", "usage": "string radius_get_tagged_attr_data ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-get-tagged-attr-data.php"}, {"name": "radius_get_tagged_attr_tag", "synopsis": "If a tagged attribute has been returned from radius_get_attr(), radius_get_tagged_attr_data() will return the tag from the attribute.", "usage": "int radius_get_tagged_attr_tag ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-get-tagged-attr-tag.php"}, {"name": "radius_get_vendor_attr", "synopsis": "If radius_get_attr() returns RADIUS_VENDOR_SPECIFIC, radius_get_vendor_attr() may be called to determine the vendor.", "usage": "array radius_get_vendor_attr ( string $data )", "url": "https://secure.php.net/manual/en/function.radius-get-vendor-attr.php"}, {"name": "radius_put_addr", "synopsis": "Attaches an IP address attribute to the current RADIUS request.", "usage": "bool radius_put_addr ( resource $radius_handle , int $type , string $addr [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-addr.php"}, {"name": "radius_put_attr", "synopsis": "Attaches a binary attribute to the current RADIUS request.", "usage": "bool radius_put_attr ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-attr.php"}, {"name": "radius_put_int", "synopsis": "Attaches an integer attribute to the current RADIUS request.", "usage": "bool radius_put_int ( resource $radius_handle , int $type , int $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-int.php"}, {"name": "radius_put_string", "synopsis": "Attaches a string attribute to the current RADIUS request. In general, radius_put_attr() is a more useful function for attaching string attributes, as it is binary safe.", "usage": "bool radius_put_string ( resource $radius_handle , int $type , string $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-string.php"}, {"name": "radius_put_vendor_addr", "synopsis": "Attaches an IP address vendor specific attribute to the current RADIUS request.", "usage": "bool radius_put_vendor_addr ( resource $radius_handle , int $vendor , int $type , string $addr )", "url": "https://secure.php.net/manual/en/function.radius-put-vendor-addr.php"}, {"name": "radius_put_vendor_attr", "synopsis": "Attaches a vendor specific binary attribute to the current RADIUS request.", "usage": "bool radius_put_vendor_attr ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-vendor-attr.php"}, {"name": "radius_put_vendor_int", "synopsis": "Attaches a vendor specific integer attribute to the current RADIUS request.", "usage": "bool radius_put_vendor_int ( resource $radius_handle , int $vendor , int $type , int $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-vendor-int.php"}, {"name": "radius_put_vendor_string", "synopsis": "Attaches a vendor specific string attribute to the current RADIUS request. In general, radius_put_vendor_attr() is a more useful function for attaching string attributes, as it is binary safe.", "usage": "bool radius_put_vendor_string ( resource $radius_handle , int $vendor , int $type , string $value [, int $options = 0 [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.radius-put-vendor-string.php"}, {"name": "radius_request_authenticator", "synopsis": "The request authenticator is needed for demangling mangled data like passwords and encryption-keys.", "usage": "string radius_request_authenticator ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-request-authenticator.php"}, {"name": "radius_salt_encrypt_attr", "synopsis": "Applies the RADIUS salt-encryption algorithm to the given value.", "usage": "string radius_salt_encrypt_attr ( resource $radius_handle , string $data )", "url": "https://secure.php.net/manual/en/function.radius-salt-encrypt-attr.php"}, {"name": "radius_send_request", "synopsis": "After the Radius request has been constructed, it is sent by radius_send_request().", "usage": "int radius_send_request ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-send-request.php"}, {"name": "radius_server_secret", "synopsis": "The shared secret is needed as salt for demangling mangled data like passwords and encryption-keys.", "usage": "string radius_server_secret ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-server-secret.php"}, {"name": "radius_strerror", "synopsis": "If Radius-functions fail then they record an error message. This error message can be retrieved with this function.", "usage": "string radius_strerror ( resource $radius_handle )", "url": "https://secure.php.net/manual/en/function.radius-strerror.php"}, {"name": "rand", "synopsis": null, "usage": "int rand ( void )", "url": "https://secure.php.net/manual/en/function.rand.php"}, {"name": "random_bytes", "synopsis": "Generates an arbitrary length string of cryptographic random bytes that are suitable for cryptographic use, such as when generating salts, keys or initialization vectors.", "usage": "string random_bytes ( int $length )", "url": "https://secure.php.net/manual/en/function.random-bytes.php"}, {"name": "random_int", "synopsis": "Generates cryptographic random integers that are suitable for use where unbiased results are critical, such as when shuffling a deck of cards for a poker game.", "usage": "int random_int ( int $min , int $max )", "url": "https://secure.php.net/manual/en/function.random-int.php"}, {"name": "range", "synopsis": "Create an array containing a range of elements.", "usage": "array range ( mixed $start , mixed $end [, number $step = 1 ] )", "url": "https://secure.php.net/manual/en/function.range.php"}, {"name": "rar_wrapper_cache_stats", "synopsis": "", "usage": "string rar_wrapper_cache_stats ( void )", "url": "https://secure.php.net/manual/en/function.rar-wrapper-cache-stats.php"}, {"name": "rawurldecode", "synopsis": "Returns a string in which the sequences with percent (%) signs followed by two hex digits have been replaced with literal characters.", "usage": "string rawurldecode ( string $str )", "url": "https://secure.php.net/manual/en/function.rawurldecode.php"}, {"name": "rawurlencode", "synopsis": "Encodes the given string according to \u00bb\u00a0RFC 3986.", "usage": "string rawurlencode ( string $str )", "url": "https://secure.php.net/manual/en/function.rawurlencode.php"}, {"name": "readdir", "synopsis": "Returns the name of the next entry in the directory. The entries are returned in the order in which they are stored by the filesystem.", "usage": "string readdir ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/function.readdir.php"}, {"name": "readfile", "synopsis": "Reads a file and writes it to the output buffer.", "usage": "int readfile ( string $filename [, bool $use_include_path = FALSE [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.readfile.php"}, {"name": "readgzfile", "synopsis": "Reads a file, decompresses it and writes it to standard output.", "usage": "int readgzfile ( string $filename [, int $use_include_path = 0 ] )", "url": "https://secure.php.net/manual/en/function.readgzfile.php"}, {"name": "readline_add_history", "synopsis": "This function adds a line to the command line history.", "usage": "bool readline_add_history ( string $line )", "url": "https://secure.php.net/manual/en/function.readline-add-history.php"}, {"name": "readline_callback_handler_install", "synopsis": "Sets up a readline callback interface then prints prompt and immediately returns. Calling this function twice without removing the previous callback interface will automatically and conveniently overwrite the old interface.", "usage": "bool readline_callback_handler_install ( string $prompt , callable $callback )", "url": "https://secure.php.net/manual/en/function.readline-callback-handler-install.php"}, {"name": "readline_callback_handler_remove", "synopsis": "Removes a previously installed callback handler and restores terminal settings.", "usage": "bool readline_callback_handler_remove ( void )", "url": "https://secure.php.net/manual/en/function.readline-callback-handler-remove.php"}, {"name": "readline_callback_read_char", "synopsis": "Reads a character of user input. When a line is received, this function informs the readline callback interface installed using readline_callback_handler_install() that a line is ready for input.", "usage": "void readline_callback_read_char ( void )", "url": "https://secure.php.net/manual/en/function.readline-callback-read-char.php"}, {"name": "readline_clear_history", "synopsis": "This function clears the entire command line history.", "usage": "bool readline_clear_history ( void )", "url": "https://secure.php.net/manual/en/function.readline-clear-history.php"}, {"name": "readline_completion_function", "synopsis": "This function registers a completion function. This is the same kind of functionality you'd get if you hit your tab key while using Bash.", "usage": "bool readline_completion_function ( callable $function )", "url": "https://secure.php.net/manual/en/function.readline-completion-function.php"}, {"name": "readline_info", "synopsis": "Gets or sets various internal readline variables.", "usage": "mixed readline_info ([ string $varname [, string $newvalue ]] )", "url": "https://secure.php.net/manual/en/function.readline-info.php"}, {"name": "readline_list_history", "synopsis": "Gets the entire command line history.", "usage": "array readline_list_history ( void )", "url": "https://secure.php.net/manual/en/function.readline-list-history.php"}, {"name": "readline_on_new_line", "synopsis": "Tells readline that the cursor has moved to a new line.", "usage": "void readline_on_new_line ( void )", "url": "https://secure.php.net/manual/en/function.readline-on-new-line.php"}, {"name": "readline_read_history", "synopsis": "This function reads a command history from a file.", "usage": "bool readline_read_history ([ string $filename ] )", "url": "https://secure.php.net/manual/en/function.readline-read-history.php"}, {"name": "readline_redisplay", "synopsis": "Redraws readline to redraw the display.", "usage": "void readline_redisplay ( void )", "url": "https://secure.php.net/manual/en/function.readline-redisplay.php"}, {"name": "readline_write_history", "synopsis": "This function writes the command history to a file.", "usage": "bool readline_write_history ([ string $filename ] )", "url": "https://secure.php.net/manual/en/function.readline-write-history.php"}, {"name": "readline", "synopsis": "Reads a single line from the user. You must add this line to the history yourself using readline_add_history().", "usage": "string readline ([ string $prompt ] )", "url": "https://secure.php.net/manual/en/function.readline.php"}, {"name": "readlink", "synopsis": "readlink() does the same as the readlink C function.", "usage": "string readlink ( string $path )", "url": "https://secure.php.net/manual/en/function.readlink.php"}, {"name": "realpath_cache_get", "synopsis": "Get the contents of the realpath cache.", "usage": "array realpath_cache_get ( void )", "url": "https://secure.php.net/manual/en/function.realpath-cache-get.php"}, {"name": "realpath_cache_size", "synopsis": "Get the amount of memory used by the realpath cache.", "usage": "int realpath_cache_size ( void )", "url": "https://secure.php.net/manual/en/function.realpath-cache-size.php"}, {"name": "realpath", "synopsis": "realpath() expands all symbolic links and resolves references to /./, /../ and extra / characters in the input path and returns the canonicalized absolute pathname.", "usage": "string realpath ( string $path )", "url": "https://secure.php.net/manual/en/function.realpath.php"}, {"name": "recode_file", "synopsis": "Recode the file referenced by file handle input into the file referenced by file handle output according to the recode request.", "usage": "bool recode_file ( string $request , resource $input , resource $output )", "url": "https://secure.php.net/manual/en/function.recode-file.php"}, {"name": "recode_string", "synopsis": "Recode the string string according to the recode request request.", "usage": "string recode_string ( string $request , string $string )", "url": "https://secure.php.net/manual/en/function.recode-string.php"}, {"name": "register_shutdown_function", "synopsis": "Registers a callback to be executed after script execution finishes or exit() is called.", "usage": "void register_shutdown_function ( callable $callback [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.register-shutdown-function.php"}, {"name": "register_tick_function", "synopsis": null, "usage": "bool register_tick_function ( callable $function [, mixed $arg [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.register-tick-function.php"}, {"name": "rename_function", "synopsis": "Renames a orig_name to new_name in the global function table. Useful for temporarily overriding built-in functions.", "usage": "bool rename_function ( string $original_name , string $new_name )", "url": "https://secure.php.net/manual/en/function.rename-function.php"}, {"name": "rename", "synopsis": "Attempts to rename oldname to newname, moving it between directories if necessary. If renaming a file and newname exists, it will be overwritten. If renaming a directory and newname exists, this function will emit a warning.", "usage": "bool rename ( string $oldname , string $newname [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.rename.php"}, {"name": "reset", "synopsis": "reset() rewinds array's internal pointer to the first element and returns the value of the first array element.", "usage": "mixed reset ( array &$array )", "url": "https://secure.php.net/manual/en/function.reset.php"}, {"name": "restore_error_handler", "synopsis": "Used after changing the error handler function using set_error_handler(), to revert to the previous error handler (which could be the built-in or a user defined function).", "usage": "bool restore_error_handler ( void )", "url": "https://secure.php.net/manual/en/function.restore-error-handler.php"}, {"name": "restore_exception_handler", "synopsis": "Used after changing the exception handler function using set_exception_handler(), to revert to the previous exception handler (which could be the built-in or a user defined function).", "usage": "bool restore_exception_handler ( void )", "url": "https://secure.php.net/manual/en/function.restore-exception-handler.php"}, {"name": "restore_include_path", "synopsis": null, "usage": "void restore_include_path ( void )", "url": "https://secure.php.net/manual/en/function.restore-include-path.php"}, {"name": "rewind", "synopsis": "Sets the file position indicator for handle to the beginning of the file stream.", "usage": "bool rewind ( resource $handle )", "url": "https://secure.php.net/manual/en/function.rewind.php"}, {"name": "rewinddir", "synopsis": "Resets the directory stream indicated by dir_handle to the beginning of the directory.", "usage": "void rewinddir ([ resource $dir_handle ] )", "url": "https://secure.php.net/manual/en/function.rewinddir.php"}, {"name": "rmdir", "synopsis": "Attempts to remove the directory named by dirname. The directory must be empty, and the relevant permissions must permit this. A E_WARNING level error will be generated on failure.", "usage": "bool rmdir ( string $dirname [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.rmdir.php"}, {"name": "round", "synopsis": "Returns the rounded value of val to specified precision (number of digits after the decimal point). precision can also be negative or zero (default).", "usage": "float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] )", "url": "https://secure.php.net/manual/en/function.round.php"}, {"name": "rpm_close", "synopsis": "rpm_close() will close an RPM file pointer.", "usage": "bool rpm_close ( resource $rpmr )", "url": "https://secure.php.net/manual/en/function.rpm-close.php"}, {"name": "rpm_get_tag", "synopsis": "rpm_get_tag() will retrieve a given tag from the RPM file's header and return it.", "usage": "mixed rpm_get_tag ( resource $rpmr , int $tagnum )", "url": "https://secure.php.net/manual/en/function.rpm-get-tag.php"}, {"name": "rpm_is_valid", "synopsis": "rpm_is_valid() will test an RPM file for validity as an RPM file. This is not the same as rpm_open() as it only checks the file for validity but does not return a file pointer to be used by further functions.", "usage": "bool rpm_is_valid ( string $filename )", "url": "https://secure.php.net/manual/en/function.rpm-is-valid.php"}, {"name": "rpm_open", "synopsis": "rpm_open() will open an RPM file and will determine if the file is a valid RPM file.", "usage": "resource rpm_open ( string $filename )", "url": "https://secure.php.net/manual/en/function.rpm-open.php"}, {"name": "rpm_version", "synopsis": "rpm_version() will return the current version of the rpmreader extension.", "usage": "string rpm_version ( void )", "url": "https://secure.php.net/manual/en/function.rpm-version.php"}, {"name": "rrd_create", "synopsis": "Creates the rdd database file.", "usage": "bool rrd_create ( string $filename , array $options )", "url": "https://secure.php.net/manual/en/function.rrd-create.php"}, {"name": "rrd_error", "synopsis": "Returns latest global rrd error message.", "usage": "string rrd_error ( void )", "url": "https://secure.php.net/manual/en/function.rrd-error.php"}, {"name": "rrd_fetch", "synopsis": "Gets data for graph output from RRD database file as array. This function has same result as rrd_graph(), but fetched data are returned as array, no image file is created.", "usage": "array rrd_fetch ( string $filename , array $options )", "url": "https://secure.php.net/manual/en/function.rrd-fetch.php"}, {"name": "rrd_first", "synopsis": "Returns the first data sample from the specified RRA of the RRD file.", "usage": "int rrd_first ( string $file [, int $raaindex = 0 ] )", "url": "https://secure.php.net/manual/en/function.rrd-first.php"}, {"name": "rrd_graph", "synopsis": "Creates image for a particular data from RRD file.", "usage": "array rrd_graph ( string $filename , array $options )", "url": "https://secure.php.net/manual/en/function.rrd-graph.php"}, {"name": "rrd_info", "synopsis": "Returns information about particular RRD database file.", "usage": "array rrd_info ( string $filename )", "url": "https://secure.php.net/manual/en/function.rrd-info.php"}, {"name": "rrd_last", "synopsis": "Returns the UNIX timestamp of the most recent update of the RRD database.", "usage": "int rrd_last ( string $filename )", "url": "https://secure.php.net/manual/en/function.rrd-last.php"}, {"name": "rrd_lastupdate", "synopsis": "Gets array of the UNIX timestamp and the values stored for each date in the most recent update of the RRD database file.", "usage": "array rrd_lastupdate ( string $filename )", "url": "https://secure.php.net/manual/en/function.rrd-lastupdate.php"}, {"name": "rrd_restore", "synopsis": "Restores the RRD file from the XML dump.", "usage": "bool rrd_restore ( string $xml_file , string $rrd_file [, array $options ] )", "url": "https://secure.php.net/manual/en/function.rrd-restore.php"}, {"name": "rrd_tune", "synopsis": "Change some options in the RRD dabase header file. E.g. renames the source for the data etc.", "usage": "bool rrd_tune ( string $filename , array $options )", "url": "https://secure.php.net/manual/en/function.rrd-tune.php"}, {"name": "rrd_update", "synopsis": "Updates the RRD database file. The input data is time interpolated according to the properties of the RRD database file.", "usage": "bool rrd_update ( string $filename , array $options )", "url": "https://secure.php.net/manual/en/function.rrd-update.php"}, {"name": "rrd_version", "synopsis": "Returns information about underlying rrdtool library.", "usage": "string rrd_version ( void )", "url": "https://secure.php.net/manual/en/function.rrd-version.php"}, {"name": "rrd_xport", "synopsis": "Exports the information about RRD database file. This data can be converted to XML file via user space PHP script and then restored back as RRD database file.", "usage": "array rrd_xport ( array $options )", "url": "https://secure.php.net/manual/en/function.rrd-xport.php"}, {"name": "rrdc_disconnect", "synopsis": "Close any outstanding connection to rrd caching daemon.", "usage": "void rrdc_disconnect ( void )", "url": "https://secure.php.net/manual/en/function.rrdc-disconnect.php"}, {"name": "rsort", "synopsis": "This function sorts an array in reverse order (highest to lowest).", "usage": "bool rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.rsort.php"}, {"name": "rtrim", "synopsis": "This function returns a string with whitespace (or other characters) stripped from the end of str.", "usage": "string rtrim ( string $str [, string $character_mask ] )", "url": "https://secure.php.net/manual/en/function.rtrim.php"}, {"name": "runkit_class_adopt", "synopsis": null, "usage": "bool runkit_class_adopt ( string $classname , string $parentname )", "url": "https://secure.php.net/manual/en/function.runkit-class-adopt.php"}, {"name": "runkit_class_emancipate", "synopsis": null, "usage": "bool runkit_class_emancipate ( string $classname )", "url": "https://secure.php.net/manual/en/function.runkit-class-emancipate.php"}, {"name": "runkit_constant_add", "synopsis": null, "usage": "bool runkit_constant_add ( string $constname , mixed $value )", "url": "https://secure.php.net/manual/en/function.runkit-constant-add.php"}, {"name": "runkit_constant_redefine", "synopsis": null, "usage": "bool runkit_constant_redefine ( string $constname , mixed $newvalue )", "url": "https://secure.php.net/manual/en/function.runkit-constant-redefine.php"}, {"name": "runkit_constant_remove", "synopsis": null, "usage": "bool runkit_constant_remove ( string $constname )", "url": "https://secure.php.net/manual/en/function.runkit-constant-remove.php"}, {"name": "runkit_function_add", "synopsis": null, "usage": "bool runkit_function_add ( string $funcname , string $arglist , string $code [, bool $return_by_reference = NULL [, string $doc_comment = NULL ]] )", "url": "https://secure.php.net/manual/en/function.runkit-function-add.php"}, {"name": "runkit_function_copy", "synopsis": null, "usage": "bool runkit_function_copy ( string $funcname , string $targetname )", "url": "https://secure.php.net/manual/en/function.runkit-function-copy.php"}, {"name": "runkit_function_redefine", "synopsis": null, "usage": "bool runkit_function_redefine ( string $funcname , string $arglist , string $code [, bool $return_by_reference = NULL [, string $doc_comment = NULL ]] )", "url": "https://secure.php.net/manual/en/function.runkit-function-redefine.php"}, {"name": "runkit_function_remove", "synopsis": null, "usage": "bool runkit_function_remove ( string $funcname )", "url": "https://secure.php.net/manual/en/function.runkit-function-remove.php"}, {"name": "runkit_function_rename", "synopsis": null, "usage": "bool runkit_function_rename ( string $funcname , string $newname )", "url": "https://secure.php.net/manual/en/function.runkit-function-rename.php"}, {"name": "runkit_import", "synopsis": "Similar to include however any code residing outside of a function or class is simply ignored. Additionally, depending on the value of flags, any functions or classes which already exist in the currently running environment may be automatically overwritten by their new definitions.", "usage": "bool runkit_import ( string $filename [, int $flags = RUNKIT_IMPORT_CLASS_METHODS ] )", "url": "https://secure.php.net/manual/en/function.runkit-import.php"}, {"name": "runkit_lint_file", "synopsis": "The runkit_lint_file() function performs a syntax (lint) check on the specified filename testing for scripting errors. This is similar to using php -l from the commandline.", "usage": "bool runkit_lint_file ( string $filename )", "url": "https://secure.php.net/manual/en/function.runkit-lint-file.php"}, {"name": "runkit_lint", "synopsis": "The runkit_lint() function performs a syntax (lint) check on the specified php code testing for scripting errors. This is similar to using php -l from the command line except runkit_lint() accepts actual code rather than a filename.", "usage": "bool runkit_lint ( string $code )", "url": "https://secure.php.net/manual/en/function.runkit-lint.php"}, {"name": "runkit_method_add", "synopsis": null, "usage": "bool runkit_method_add ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] )", "url": "https://secure.php.net/manual/en/function.runkit-method-add.php"}, {"name": "runkit_method_copy", "synopsis": null, "usage": "bool runkit_method_copy ( string $dClass , string $dMethod , string $sClass [, string $sMethod ] )", "url": "https://secure.php.net/manual/en/function.runkit-method-copy.php"}, {"name": "runkit_method_redefine", "synopsis": null, "usage": "bool runkit_method_redefine ( string $classname , string $methodname , string $args , string $code [, int $flags = RUNKIT_ACC_PUBLIC [, string $doc_comment = NULL ]] )", "url": "https://secure.php.net/manual/en/function.runkit-method-redefine.php"}, {"name": "runkit_method_remove", "synopsis": null, "usage": "bool runkit_method_remove ( string $classname , string $methodname )", "url": "https://secure.php.net/manual/en/function.runkit-method-remove.php"}, {"name": "runkit_method_rename", "synopsis": null, "usage": "bool runkit_method_rename ( string $classname , string $methodname , string $newname )", "url": "https://secure.php.net/manual/en/function.runkit-method-rename.php"}, {"name": "runkit_return_value_used", "synopsis": null, "usage": "bool runkit_return_value_used ( void )", "url": "https://secure.php.net/manual/en/function.runkit-return-value-used.php"}, {"name": "runkit_sandbox_output_handler", "synopsis": "Ordinarily, anything output (such as with echo or print) will be output as though it were printed from the parent's scope. Using runkit_sandbox_output_handler() however, output generated by the sandbox (including errors), can be captured by a function outside of the sandbox.", "usage": "mixed runkit_sandbox_output_handler ( object $sandbox [, mixed $callback ] )", "url": "https://secure.php.net/manual/en/function.runkit-sandbox-output-handler.php"}, {"name": "runkit_superglobals", "synopsis": null, "usage": "array runkit_superglobals ( void )", "url": "https://secure.php.net/manual/en/function.runkit-superglobals.php"}, {"name": "sapi_windows_cp_conv", "synopsis": "Convert string from one codepage to another.", "usage": "string sapi_windows_cp_conv ( int|string $in_codepage , int|string $out_codepage , string $subject )", "url": "https://secure.php.net/manual/en/function.sapi-windows-cp-conv.php"}, {"name": "sapi_windows_cp_get", "synopsis": "Get the identifier of the codepage of the current process.", "usage": "int sapi_windows_cp_get ( string $kind )", "url": "https://secure.php.net/manual/en/function.sapi-windows-cp-get.php"}, {"name": "sapi_windows_cp_is_utf8", "synopsis": "Indicates whether the codepage of the current process is UTF-8 compatible.", "usage": "bool sapi_windows_cp_is_utf8 ( void )", "url": "https://secure.php.net/manual/en/function.sapi-windows-cp-is-utf8.php"}, {"name": "sapi_windows_cp_set", "synopsis": "Set the codepage of the current process.", "usage": "bool sapi_windows_cp_set ( int $cp )", "url": "https://secure.php.net/manual/en/function.sapi-windows-cp-set.php"}, {"name": "scandir", "synopsis": "Returns an array of files and directories from the directory.", "usage": "array scandir ( string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]] )", "url": "https://secure.php.net/manual/en/function.scandir.php"}, {"name": "sem_acquire", "synopsis": "sem_acquire() by default blocks (if necessary) until the semaphore can be acquired. A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its maximum number of semaphore to be exceeded.", "usage": "bool sem_acquire ( resource $sem_identifier [, bool $nowait = FALSE ] )", "url": "https://secure.php.net/manual/en/function.sem-acquire.php"}, {"name": "sem_get", "synopsis": "sem_get() returns an id that can be used to access the System V semaphore with the given key.", "usage": "resource sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] )", "url": "https://secure.php.net/manual/en/function.sem-get.php"}, {"name": "sem_release", "synopsis": "sem_release() releases the semaphore if it is currently acquired by the calling process, otherwise a warning is generated.", "usage": "bool sem_release ( resource $sem_identifier )", "url": "https://secure.php.net/manual/en/function.sem-release.php"}, {"name": "sem_remove", "synopsis": "sem_remove() removes the given semaphore.", "usage": "bool sem_remove ( resource $sem_identifier )", "url": "https://secure.php.net/manual/en/function.sem-remove.php"}, {"name": "serialize", "synopsis": "Generates a storable representation of a value.", "usage": "string serialize ( mixed $value )", "url": "https://secure.php.net/manual/en/function.serialize.php"}, {"name": "session_abort", "synopsis": "session_abort() finishes session without saving data. Thus the original values in session data are kept.", "usage": "bool session_abort ( void )", "url": "https://secure.php.net/manual/en/function.session-abort.php"}, {"name": "session_cache_expire", "synopsis": "session_cache_expire() returns the current setting of session.cache_expire.", "usage": "int session_cache_expire ([ string $new_cache_expire ] )", "url": "https://secure.php.net/manual/en/function.session-cache-expire.php"}, {"name": "session_cache_limiter", "synopsis": "session_cache_limiter() returns the name of the current cache limiter.", "usage": "string session_cache_limiter ([ string $cache_limiter ] )", "url": "https://secure.php.net/manual/en/function.session-cache-limiter.php"}, {"name": "session_create_id", "synopsis": "session_create_id() is used to create new session id for the current session. It returns collision free session id.", "usage": "string session_create_id ([ string $prefix ] )", "url": "https://secure.php.net/manual/en/function.session-create-id.php"}, {"name": "session_decode", "synopsis": "session_decode() decodes the serialized session data provided in $data, and populates the $_SESSION superglobal with the result.", "usage": "bool session_decode ( string $data )", "url": "https://secure.php.net/manual/en/function.session-decode.php"}, {"name": "session_destroy", "synopsis": null, "usage": "bool session_destroy ( void )", "url": "https://secure.php.net/manual/en/function.session-destroy.php"}, {"name": "session_encode", "synopsis": "session_encode() returns a serialized string of the contents of the current session data stored in the $_SESSION superglobal.", "usage": "string session_encode ( void )", "url": "https://secure.php.net/manual/en/function.session-encode.php"}, {"name": "session_gc", "synopsis": "session_gc() is used to perform session data GC(garbage collection). PHP does probability based session GC by default.", "usage": "int session_gc ( void )", "url": "https://secure.php.net/manual/en/function.session-gc.php"}, {"name": "session_get_cookie_params", "synopsis": "Gets the session cookie parameters.", "usage": "array session_get_cookie_params ( void )", "url": "https://secure.php.net/manual/en/function.session-get-cookie-params.php"}, {"name": "session_id", "synopsis": "session_id() is used to get or set the session id for the current session.", "usage": "string session_id ([ string $id ] )", "url": "https://secure.php.net/manual/en/function.session-id.php"}, {"name": "session_is_registered", "synopsis": "Finds out whether a global variable is registered in a session.", "usage": "bool session_is_registered ( string $name )", "url": "https://secure.php.net/manual/en/function.session-is-registered.php"}, {"name": "session_module_name", "synopsis": "session_module_name() gets the name of the current session module.", "usage": "string session_module_name ([ string $module ] )", "url": "https://secure.php.net/manual/en/function.session-module-name.php"}, {"name": "session_name", "synopsis": "session_name() returns the name of the current session. If name is given, session_name() will update the session name and return the old session name.", "usage": "string session_name ([ string $name ] )", "url": "https://secure.php.net/manual/en/function.session-name.php"}, {"name": "session_pgsql_add_error", "synopsis": null, "usage": "bool session_pgsql_add_error ( int $error_level [, string $error_message ] )", "url": "https://secure.php.net/manual/en/function.session-pgsql-add-error.php"}, {"name": "session_pgsql_get_error", "synopsis": "Get the number of errors and optional the error messages.", "usage": "array session_pgsql_get_error ([ bool $with_error_message = FALSE ] )", "url": "https://secure.php.net/manual/en/function.session-pgsql-get-error.php"}, {"name": "session_pgsql_get_field", "synopsis": null, "usage": "string session_pgsql_get_field ( void )", "url": "https://secure.php.net/manual/en/function.session-pgsql-get-field.php"}, {"name": "session_pgsql_reset", "synopsis": "Reset the connection to the session database servers.", "usage": "bool session_pgsql_reset ( void )", "url": "https://secure.php.net/manual/en/function.session-pgsql-reset.php"}, {"name": "session_pgsql_set_field", "synopsis": null, "usage": "bool session_pgsql_set_field ( string $value )", "url": "https://secure.php.net/manual/en/function.session-pgsql-set-field.php"}, {"name": "session_pgsql_status", "synopsis": null, "usage": "array session_pgsql_status ( void )", "url": "https://secure.php.net/manual/en/function.session-pgsql-status.php"}, {"name": "session_regenerate_id", "synopsis": "session_regenerate_id() will replace the current session id with a new one, and keep the current session information.", "usage": "bool session_regenerate_id ([ bool $delete_old_session = FALSE ] )", "url": "https://secure.php.net/manual/en/function.session-regenerate-id.php"}, {"name": "session_register_shutdown", "synopsis": "Registers session_write_close() as a shutdown function.", "usage": "void session_register_shutdown ( void )", "url": "https://secure.php.net/manual/en/function.session-register-shutdown.php"}, {"name": "session_register", "synopsis": "session_register() accepts a variable number of arguments, any of which can be either a string holding the name of a variable or an array consisting of variable names or other arrays. For each name, session_register() registers the global variable with that name in the current session.", "usage": "bool session_register ( mixed $name [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.session-register.php"}, {"name": "session_reset", "synopsis": "session_reset() reinitializes a session with original values stored in session storage. This function requires an active session and discards changes in $_SESSION.", "usage": "bool session_reset ( void )", "url": "https://secure.php.net/manual/en/function.session-reset.php"}, {"name": "session_save_path", "synopsis": "session_save_path() returns the path of the current directory used to save session data.", "usage": "string session_save_path ([ string $path ] )", "url": "https://secure.php.net/manual/en/function.session-save-path.php"}, {"name": "session_set_cookie_params", "synopsis": "Set cookie parameters defined in the php.ini file. The effect of this function only lasts for the duration of the script. Thus, you need to call session_set_cookie_params() for every request and before session_start() is called.", "usage": "bool session_set_cookie_params ( int $lifetime [, string $path [, string $domain [, bool $secure = FALSE [, bool $httponly = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.session-set-cookie-params.php"}, {"name": "session_set_save_handler", "synopsis": "Since PHP 5.4 it is possible to register the following prototype:", "usage": "bool session_set_save_handler ( callable $open , callable $close , callable $read , callable $write , callable $destroy , callable $gc [, callable $create_sid [, callable $validate_sid [, callable $update_timestamp ]]] )", "url": "https://secure.php.net/manual/en/function.session-set-save-handler.php"}, {"name": "session_start", "synopsis": "session_start() creates a session or resumes the current one based on a session identifier passed via a GET or POST request, or passed via a cookie.", "usage": "bool session_start ([ array $options = array() ] )", "url": "https://secure.php.net/manual/en/function.session-start.php"}, {"name": "session_status", "synopsis": "session_status() is used to return the current session status.", "usage": "int session_status ( void )", "url": "https://secure.php.net/manual/en/function.session-status.php"}, {"name": "session_unregister", "synopsis": "session_unregister() unregisters the global variable named name from the current session.", "usage": "bool session_unregister ( string $name )", "url": "https://secure.php.net/manual/en/function.session-unregister.php"}, {"name": "session_unset", "synopsis": "The session_unset() function frees all session variables currently registered.", "usage": "bool session_unset ( void )", "url": "https://secure.php.net/manual/en/function.session-unset.php"}, {"name": "session_write_close", "synopsis": "End the current session and store session data.", "usage": "bool session_write_close ( void )", "url": "https://secure.php.net/manual/en/function.session-write-close.php"}, {"name": "set_error_handler", "synopsis": "Sets a user function (error_handler) to handle errors in a script.", "usage": "mixed set_error_handler ( callable $error_handler [, int $error_types = E_ALL | E_STRICT ] )", "url": "https://secure.php.net/manual/en/function.set-error-handler.php"}, {"name": "set_exception_handler", "synopsis": "Sets the default exception handler if an exception is not caught within a try/catch block. Execution will stop after the exception_handler is called.", "usage": "callable set_exception_handler ( callable $exception_handler )", "url": "https://secure.php.net/manual/en/function.set-exception-handler.php"}, {"name": "set_include_path", "synopsis": "Sets the include_path configuration option for the duration of the script.", "usage": "string set_include_path ( string $new_include_path )", "url": "https://secure.php.net/manual/en/function.set-include-path.php"}, {"name": "set_magic_quotes_runtime", "synopsis": "Set the current active configuration setting of magic_quotes_runtime.", "usage": "bool set_magic_quotes_runtime ( bool $new_setting )", "url": "https://secure.php.net/manual/en/function.set-magic-quotes-runtime.php"}, {"name": "set_time_limit", "synopsis": "Set the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini.", "usage": "bool set_time_limit ( int $seconds )", "url": "https://secure.php.net/manual/en/function.set-time-limit.php"}, {"name": "setcookie", "synopsis": "setcookie() defines a cookie to be sent along with the rest of the HTTP headers. Like other headers, cookies must be sent before any output from your script (this is a protocol restriction). This requires that you place calls to this function prior to any output, including <html> and <head> tags as well as any whitespace.", "usage": "bool setcookie ( string $name [, string $value = \"\" [, int $expire = 0 [, string $path = \"\" [, string $domain = \"\" [, bool $secure = FALSE [, bool $httponly = FALSE ]]]]]] )", "url": "https://secure.php.net/manual/en/function.setcookie.php"}, {"name": "setlocale", "synopsis": "Sets locale information.", "usage": "string setlocale ( int $category , string $locale [, string $... ] )", "url": "https://secure.php.net/manual/en/function.setlocale.php"}, {"name": "setproctitle", "synopsis": "Sets the process title of the current process.", "usage": "void setproctitle ( string $title )", "url": "https://secure.php.net/manual/en/function.setproctitle.php"}, {"name": "setrawcookie", "synopsis": "setrawcookie() is exactly the same as setcookie() except that the cookie value will not be automatically urlencoded when sent to the browser.", "usage": "bool setrawcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = FALSE [, bool $httponly = FALSE ]]]]]] )", "url": "https://secure.php.net/manual/en/function.setrawcookie.php"}, {"name": "setthreadtitle", "synopsis": "Sets the thread title.", "usage": "bool setthreadtitle ( string $title )", "url": "https://secure.php.net/manual/en/function.setthreadtitle.php"}, {"name": "settype", "synopsis": "Set the type of variable var to type.", "usage": "bool settype ( mixed &$var , string $type )", "url": "https://secure.php.net/manual/en/function.settype.php"}, {"name": "sha1_file", "synopsis": null, "usage": "string sha1_file ( string $filename [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.sha1-file.php"}, {"name": "sha1", "synopsis": null, "usage": "string sha1 ( string $str [, bool $raw_output = FALSE ] )", "url": "https://secure.php.net/manual/en/function.sha1.php"}, {"name": "shell_exec", "synopsis": "This function is identical to the backtick operator.", "usage": "string shell_exec ( string $cmd )", "url": "https://secure.php.net/manual/en/function.shell-exec.php"}, {"name": "shm_attach", "synopsis": "shm_attach() returns an id that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with memsize and the optional perm-bits perm.", "usage": "resource shm_attach ( int $key [, int $memsize [, int $perm = 0666 ]] )", "url": "https://secure.php.net/manual/en/function.shm-attach.php"}, {"name": "shm_detach", "synopsis": "shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach(). Remember, that shared memory still exist in the Unix system and the data is still present.", "usage": "bool shm_detach ( resource $shm_identifier )", "url": "https://secure.php.net/manual/en/function.shm-detach.php"}, {"name": "shm_get_var", "synopsis": "shm_get_var() returns the variable with a given variable_key, in the given shared memory segment. The variable is still present in the shared memory.", "usage": "mixed shm_get_var ( resource $shm_identifier , int $variable_key )", "url": "https://secure.php.net/manual/en/function.shm-get-var.php"}, {"name": "shm_has_var", "synopsis": "Checks whether a specific key exists inside a shared memory segment.", "usage": "bool shm_has_var ( resource $shm_identifier , int $variable_key )", "url": "https://secure.php.net/manual/en/function.shm-has-var.php"}, {"name": "shm_put_var", "synopsis": "shm_put_var() inserts or updates the variable with the given variable_key.", "usage": "bool shm_put_var ( resource $shm_identifier , int $variable_key , mixed $variable )", "url": "https://secure.php.net/manual/en/function.shm-put-var.php"}, {"name": "shm_remove_var", "synopsis": "Removes a variable with a given variable_key and frees the occupied memory.", "usage": "bool shm_remove_var ( resource $shm_identifier , int $variable_key )", "url": "https://secure.php.net/manual/en/function.shm-remove-var.php"}, {"name": "shm_remove", "synopsis": "shm_remove() removes the shared memory shm_identifier. All data will be destroyed.", "usage": "bool shm_remove ( resource $shm_identifier )", "url": "https://secure.php.net/manual/en/function.shm-remove.php"}, {"name": "shmop_close", "synopsis": "shmop_close() is used to close a shared memory block.", "usage": "void shmop_close ( resource $shmid )", "url": "https://secure.php.net/manual/en/function.shmop-close.php"}, {"name": "shmop_delete", "synopsis": "shmop_delete() is used to delete a shared memory block.", "usage": "bool shmop_delete ( resource $shmid )", "url": "https://secure.php.net/manual/en/function.shmop-delete.php"}, {"name": "shmop_open", "synopsis": "shmop_open() can create or open a shared memory block.", "usage": "resource shmop_open ( int $key , string $flags , int $mode , int $size )", "url": "https://secure.php.net/manual/en/function.shmop-open.php"}, {"name": "shmop_read", "synopsis": "shmop_read() will read a string from shared memory block.", "usage": "string shmop_read ( resource $shmid , int $start , int $count )", "url": "https://secure.php.net/manual/en/function.shmop-read.php"}, {"name": "shmop_size", "synopsis": "shmop_size() is used to get the size, in bytes of the shared memory block.", "usage": "int shmop_size ( resource $shmid )", "url": "https://secure.php.net/manual/en/function.shmop-size.php"}, {"name": "shmop_write", "synopsis": "shmop_write() will write a string into shared memory block.", "usage": "int shmop_write ( resource $shmid , string $data , int $offset )", "url": "https://secure.php.net/manual/en/function.shmop-write.php"}, {"name": "shuffle", "synopsis": "This function shuffles (randomizes the order of the elements in) an array. It uses a pseudo random number generator that is not suitable for cryptographic purposes.", "usage": "bool shuffle ( array &$array )", "url": "https://secure.php.net/manual/en/function.shuffle.php"}, {"name": "similar_text", "synopsis": "This calculates the similarity between two strings as described in Programming Classics: Implementing the World's Best Algorithms by Oliver (ISBN 0-131-00413-1). Note that this implementation does not use a stack as in Oliver's pseudo code, but recursive calls which may or may not speed up the whole process. Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string.", "usage": "int similar_text ( string $first , string $second [, float &$percent ] )", "url": "https://secure.php.net/manual/en/function.similar-text.php"}, {"name": "simplexml_import_dom", "synopsis": "This function takes a node of a DOM document and makes it into a SimpleXML node. This new object can then be used as a native SimpleXML element.", "usage": "SimpleXMLElement simplexml_import_dom ( DOMNode $node [, string $class_name = \"SimpleXMLElement\" ] )", "url": "https://secure.php.net/manual/en/function.simplexml-import-dom.php"}, {"name": "simplexml_load_file", "synopsis": "Convert the well-formed XML document in the given file to an object.", "usage": "SimpleXMLElement simplexml_load_file ( string $filename [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.simplexml-load-file.php"}, {"name": "simplexml_load_string", "synopsis": "Takes a well-formed XML string and returns it as an object.", "usage": "SimpleXMLElement simplexml_load_string ( string $data [, string $class_name = \"SimpleXMLElement\" [, int $options = 0 [, string $ns = \"\" [, bool $is_prefix = FALSE ]]]] )", "url": "https://secure.php.net/manual/en/function.simplexml-load-string.php"}, {"name": "sin", "synopsis": "sin() returns the sine of the arg parameter. The arg parameter is in radians.", "usage": "float sin ( float $arg )", "url": "https://secure.php.net/manual/en/function.sin.php"}, {"name": "sinh", "synopsis": "Returns the hyperbolic sine of arg, defined as (exp(arg) - exp(-arg))/2.", "usage": "float sinh ( float $arg )", "url": "https://secure.php.net/manual/en/function.sinh.php"}, {"name": "sleep", "synopsis": null, "usage": "int sleep ( int $seconds )", "url": "https://secure.php.net/manual/en/function.sleep.php"}, {"name": "snmp_get_quick_print", "synopsis": "Returns the current value stored in the UCD Library for quick_print. quick_print is off by default.", "usage": "bool snmp_get_quick_print ( void )", "url": "https://secure.php.net/manual/en/function.snmp-get-quick-print.php"}, {"name": "snmp_get_valueretrieval", "synopsis": null, "usage": "int snmp_get_valueretrieval ( void )", "url": "https://secure.php.net/manual/en/function.snmp-get-valueretrieval.php"}, {"name": "snmp_read_mib", "synopsis": "This function is used to load additional, e.g. vendor specific, MIBs so that human readable OIDs like VENDOR-MIB::foo.1 instead of error prone numeric OIDs can be used.", "usage": "bool snmp_read_mib ( string $filename )", "url": "https://secure.php.net/manual/en/function.snmp-read-mib.php"}, {"name": "snmp_set_enum_print", "synopsis": "This function toggles if snmpwalk/snmpget etc. should automatically lookup enum values in the MIB and return them together with their human readable string.", "usage": "bool snmp_set_enum_print ( int $enum_print )", "url": "https://secure.php.net/manual/en/function.snmp-set-enum-print.php"}, {"name": "snmp_set_oid_numeric_print", "synopsis": "This function is an alias of: snmp_set_oid_output_format().", "usage": "void snmp_set_oid_numeric_print ( int $oid_format )", "url": "https://secure.php.net/manual/en/function.snmp-set-oid-numeric-print.php"}, {"name": "snmp_set_oid_output_format", "synopsis": "snmp_set_oid_output_format() sets the output format to be full or numeric.", "usage": "bool snmp_set_oid_output_format ( int $oid_format = SNMP_OID_OUTPUT_MODULE )", "url": "https://secure.php.net/manual/en/function.snmp-set-oid-output-format.php"}, {"name": "snmp_set_quick_print", "synopsis": "Sets the value of quick_print within the UCD SNMP library. When this is set (1), the SNMP library will return 'quick printed' values. This means that just the value will be printed. When quick_print is not enabled (default) the UCD SNMP library prints extra information including the type of the value (i.e. IpAddress or OID). Additionally, if quick_print is not enabled, the library prints additional hex values for all strings of three characters or less.", "usage": "bool snmp_set_quick_print ( bool $quick_print )", "url": "https://secure.php.net/manual/en/function.snmp-set-quick-print.php"}, {"name": "snmp_set_valueretrieval", "synopsis": null, "usage": "bool snmp_set_valueretrieval ( int $method = SNMP_VALUE_LIBRARY )", "url": "https://secure.php.net/manual/en/function.snmp-set-valueretrieval.php"}, {"name": "snmp2_get", "synopsis": "The snmp2_get() function is used to read the value of an SNMP object specified by the object_id.", "usage": "string snmp2_get ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp2-get.php"}, {"name": "snmp2_getnext", "synopsis": "The snmp2_get_next() function is used to read the value of the SNMP object that follows the specified object_id.", "usage": "string snmp2_getnext ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp2-getnext.php"}, {"name": "snmp2_real_walk", "synopsis": "The snmp2_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.", "usage": "array snmp2_real_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp2-real-walk.php"}, {"name": "snmp2_set", "synopsis": "snmp2_set() is used to set the value of an SNMP object specified by the object_id.", "usage": "bool snmp2_set ( string $host , string $community , string $object_id , string $type , string $value [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp2-set.php"}, {"name": "snmp2_walk", "synopsis": "snmp2_walk() function is used to read all the values from an SNMP agent specified by the hostname.", "usage": "array snmp2_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp2-walk.php"}, {"name": "snmp3_get", "synopsis": "The snmp3_get() function is used to read the value of an SNMP object specified by the object_id.", "usage": "string snmp3_get ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp3-get.php"}, {"name": "snmp3_getnext", "synopsis": "The snmp3_getnext() function is used to read the value of the SNMP object that follows the specified object_id.", "usage": "string snmp3_getnext ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp3-getnext.php"}, {"name": "snmp3_real_walk", "synopsis": "The snmp3_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.", "usage": "array snmp3_real_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp3-real-walk.php"}, {"name": "snmp3_set", "synopsis": "snmp3_set() is used to set the value of an SNMP object specified by the object_id.", "usage": "bool snmp3_set ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp3-set.php"}, {"name": "snmp3_walk", "synopsis": "snmp3_walk() function is used to read all the values from an SNMP agent specified by the hostname.", "usage": "array snmp3_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmp3-walk.php"}, {"name": "snmpget", "synopsis": "The snmpget() function is used to read the value of an SNMP object specified by the object_id.", "usage": "string snmpget ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmpget.php"}, {"name": "snmpgetnext", "synopsis": "The snmpgetnext() function is used to read the value of the SNMP object that follows the specified object_id.", "usage": "string snmpgetnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmpgetnext.php"}, {"name": "snmprealwalk", "synopsis": "The snmprealwalk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids.", "usage": "array snmprealwalk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmprealwalk.php"}, {"name": "snmpset", "synopsis": "snmpset() is used to set the value of an SNMP object specified by the object_id.", "usage": "bool snmpset ( string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmpset.php"}, {"name": "snmpwalk", "synopsis": "snmpwalk() function is used to read all the values from an SNMP agent specified by the hostname.", "usage": "array snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmpwalk.php"}, {"name": "snmpwalkoid", "synopsis": "snmpwalkoid() function is used to read all object ids and their respective values from an SNMP agent specified by hostname.", "usage": "array snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] )", "url": "https://secure.php.net/manual/en/function.snmpwalkoid.php"}, {"name": "socket_accept", "synopsis": "After the socket socket has been created using socket_create(), bound to a name with socket_bind(), and told to listen for connections with socket_listen(), this function will accept incoming connections on that socket. Once a successful connection is made, a new socket resource is returned, which may be used for communication. If there are multiple connections queued on the socket, the first will be used. If there are no pending connections, socket_accept() will block until a connection becomes present. If socket has been made non-blocking using socket_set_blocking() or socket_set_nonblock(), FALSE will be returned.", "usage": "resource socket_accept ( resource $socket )", "url": "https://secure.php.net/manual/en/function.socket-accept.php"}, {"name": "socket_addrinfo_bind", "synopsis": "", "usage": "resource socket_addrinfo_bind ( resource $addr )", "url": "https://secure.php.net/manual/en/function.socket-addrinfo-bind.php"}, {"name": "socket_addrinfo_connect", "synopsis": "", "usage": "resource socket_addrinfo_connect ( resource $addr )", "url": "https://secure.php.net/manual/en/function.socket-addrinfo-connect.php"}, {"name": "socket_addrinfo_explain", "synopsis": "", "usage": "array socket_addrinfo_explain ( resource $addr )", "url": "https://secure.php.net/manual/en/function.socket-addrinfo-explain.php"}, {"name": "socket_addrinfo_lookup", "synopsis": "", "usage": "array socket_addrinfo_lookup ( string $host [, string $service [, array $hints ]] )", "url": "https://secure.php.net/manual/en/function.socket-addrinfo-lookup.php"}, {"name": "socket_bind", "synopsis": "Binds the name given in address to the socket described by socket. This has to be done before a connection is be established using socket_connect() or socket_listen().", "usage": "bool socket_bind ( resource $socket , string $address [, int $port = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-bind.php"}, {"name": "socket_clear_error", "synopsis": "This function clears the error code on the given socket or the global last socket error if no socket is specified.", "usage": "void socket_clear_error ([ resource $socket ] )", "url": "https://secure.php.net/manual/en/function.socket-clear-error.php"}, {"name": "socket_close", "synopsis": "socket_close() closes the socket resource given by socket. This function is specific to sockets and cannot be used on any other type of resources.", "usage": "void socket_close ( resource $socket )", "url": "https://secure.php.net/manual/en/function.socket-close.php"}, {"name": "socket_cmsg_space", "synopsis": "Calculates the size of the buffer that should be allocated for receiving the ancillary data.", "usage": "int socket_cmsg_space ( int $level , int $type [, int $n = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-cmsg-space.php"}, {"name": "socket_connect", "synopsis": "Initiate a connection to address using the socket resource socket, which must be a valid socket resource created with socket_create().", "usage": "bool socket_connect ( resource $socket , string $address [, int $port = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-connect.php"}, {"name": "socket_create_listen", "synopsis": "socket_create_listen() creates a new socket resource of type AF_INET listening on all local interfaces on the given port waiting for new connections.", "usage": "resource socket_create_listen ( int $port [, int $backlog = 128 ] )", "url": "https://secure.php.net/manual/en/function.socket-create-listen.php"}, {"name": "socket_create_pair", "synopsis": "socket_create_pair() creates two connected and indistinguishable sockets, and stores them in fd. This function is commonly used in IPC (InterProcess Communication).", "usage": "bool socket_create_pair ( int $domain , int $type , int $protocol , array &$fd )", "url": "https://secure.php.net/manual/en/function.socket-create-pair.php"}, {"name": "socket_create", "synopsis": "Creates and returns a socket resource, also referred to as an endpoint of communication. A typical network connection is made up of 2 sockets, one performing the role of the client, and another performing the role of the server.", "usage": "resource socket_create ( int $domain , int $type , int $protocol )", "url": "https://secure.php.net/manual/en/function.socket-create.php"}, {"name": "socket_export_stream", "synopsis": "", "usage": "resource socket_export_stream ( resource $socket )", "url": "https://secure.php.net/manual/en/function.socket-export-stream.php"}, {"name": "socket_get_option", "synopsis": "The socket_get_option() function retrieves the value for the option specified by the optname parameter for the specified socket.", "usage": "mixed socket_get_option ( resource $socket , int $level , int $optname )", "url": "https://secure.php.net/manual/en/function.socket-get-option.php"}, {"name": "socket_getpeername", "synopsis": "Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type.", "usage": "bool socket_getpeername ( resource $socket , string &$address [, int &$port ] )", "url": "https://secure.php.net/manual/en/function.socket-getpeername.php"}, {"name": "socket_getsockname", "synopsis": null, "usage": "bool socket_getsockname ( resource $socket , string &$addr [, int &$port ] )", "url": "https://secure.php.net/manual/en/function.socket-getsockname.php"}, {"name": "socket_import_stream", "synopsis": "Imports a stream that encapsulates a socket into a socket extension resource.", "usage": "resource socket_import_stream ( resource $stream )", "url": "https://secure.php.net/manual/en/function.socket-import-stream.php"}, {"name": "socket_last_error", "synopsis": "If a socket resource is passed to this function, the last error which occurred on this particular socket is returned. If the socket resource is omitted, the error code of the last failed socket function is returned. The latter is particularly helpful for functions like socket_create() which don't return a socket on failure and socket_select() which can fail for reasons not directly tied to a particular socket. The error code is suitable to be fed to socket_strerror() which returns a string describing the given error code.", "usage": "int socket_last_error ([ resource $socket ] )", "url": "https://secure.php.net/manual/en/function.socket-last-error.php"}, {"name": "socket_listen", "synopsis": "After the socket socket has been created using socket_create() and bound to a name with socket_bind(), it may be told to listen for incoming connections on socket.", "usage": "bool socket_listen ( resource $socket [, int $backlog = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-listen.php"}, {"name": "socket_read", "synopsis": "The function socket_read() reads from the socket resource socket created by the socket_create() or socket_accept() functions.", "usage": "string socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] )", "url": "https://secure.php.net/manual/en/function.socket-read.php"}, {"name": "socket_recv", "synopsis": "The socket_recv() function receives len bytes of data in buf from socket. socket_recv() can be used to gather data from connected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function.", "usage": "int socket_recv ( resource $socket , string &$buf , int $len , int $flags )", "url": "https://secure.php.net/manual/en/function.socket-recv.php"}, {"name": "socket_recvfrom", "synopsis": "The socket_recvfrom() function receives len bytes of data in buf from name on port port (if the socket is not of type AF_UNIX) using socket. socket_recvfrom() can be used to gather data from both connected and unconnected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function.", "usage": "int socket_recvfrom ( resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ] )", "url": "https://secure.php.net/manual/en/function.socket-recvfrom.php"}, {"name": "socket_recvmsg", "synopsis": "", "usage": "int socket_recvmsg ( resource $socket , string &$message [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-recvmsg.php"}, {"name": "socket_select", "synopsis": "socket_select() accepts arrays of sockets and waits for them to change status. Those coming with BSD sockets background will recognize that those socket resource arrays are in fact the so-called file descriptor sets. Three independent arrays of socket resources are watched.", "usage": "int socket_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-select.php"}, {"name": "socket_send", "synopsis": "The function socket_send() sends len bytes to the socket socket from buf.", "usage": "int socket_send ( resource $socket , string $buf , int $len , int $flags )", "url": "https://secure.php.net/manual/en/function.socket-send.php"}, {"name": "socket_sendmsg", "synopsis": "", "usage": "int socket_sendmsg ( resource $socket , array $message [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-sendmsg.php"}, {"name": "socket_sendto", "synopsis": "The function socket_sendto() sends len bytes from buf through the socket socket to the port at the address addr.", "usage": "int socket_sendto ( resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-sendto.php"}, {"name": "socket_set_block", "synopsis": "The socket_set_block() function removes the O_NONBLOCK flag on the socket specified by the socket parameter.", "usage": "bool socket_set_block ( resource $socket )", "url": "https://secure.php.net/manual/en/function.socket-set-block.php"}, {"name": "socket_set_nonblock", "synopsis": "The socket_set_nonblock() function sets the O_NONBLOCK flag on the socket specified by the socket parameter.", "usage": "bool socket_set_nonblock ( resource $socket )", "url": "https://secure.php.net/manual/en/function.socket-set-nonblock.php"}, {"name": "socket_set_option", "synopsis": "The socket_set_option() function sets the option specified by the optname parameter, at the specified protocol level, to the value pointed to by the optval parameter for the socket.", "usage": "bool socket_set_option ( resource $socket , int $level , int $optname , mixed $optval )", "url": "https://secure.php.net/manual/en/function.socket-set-option.php"}, {"name": "socket_shutdown", "synopsis": "The socket_shutdown() function allows you to stop incoming, outgoing or all data (the default) from being sent through the socket", "usage": "bool socket_shutdown ( resource $socket [, int $how = 2 ] )", "url": "https://secure.php.net/manual/en/function.socket-shutdown.php"}, {"name": "socket_strerror", "synopsis": "socket_strerror() takes as its errno parameter a socket error code as returned by socket_last_error() and returns the corresponding explanatory text.", "usage": "string socket_strerror ( int $errno )", "url": "https://secure.php.net/manual/en/function.socket-strerror.php"}, {"name": "socket_write", "synopsis": "The function socket_write() writes to the socket from the given buffer.", "usage": "int socket_write ( resource $socket , string $buffer [, int $length = 0 ] )", "url": "https://secure.php.net/manual/en/function.socket-write.php"}, {"name": "sodium_add", "synopsis": "", "usage": "void sodium_add ( string &$val , string $addv )", "url": "https://secure.php.net/manual/en/function.sodium-add.php"}, {"name": "sodium_base642bin", "synopsis": "", "usage": "string sodium_base642bin ( string $b64 , int $id [, string $ignore ] )", "url": "https://secure.php.net/manual/en/function.sodium-base642bin.php"}, {"name": "sodium_bin2base64", "synopsis": "", "usage": "string sodium_bin2base64 ( string $bin , int $id )", "url": "https://secure.php.net/manual/en/function.sodium-bin2base64.php"}, {"name": "sodium_bin2hex", "synopsis": "", "usage": "string sodium_bin2hex ( string $bin )", "url": "https://secure.php.net/manual/en/function.sodium-bin2hex.php"}, {"name": "sodium_compare", "synopsis": "", "usage": "int sodium_compare ( string $buf1 , string $buf2 )", "url": "https://secure.php.net/manual/en/function.sodium-compare.php"}, {"name": "sodium_crypto_aead_aes256gcm_decrypt", "synopsis": "", "usage": "string sodium_crypto_aead_aes256gcm_decrypt ( string $ciphertext , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-decrypt.php"}, {"name": "sodium_crypto_aead_aes256gcm_encrypt", "synopsis": "", "usage": "string sodium_crypto_aead_aes256gcm_encrypt ( string $msg , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-encrypt.php"}, {"name": "sodium_crypto_aead_aes256gcm_is_available", "synopsis": "", "usage": "bool sodium_crypto_aead_aes256gcm_is_available ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-is-available.php"}, {"name": "sodium_crypto_aead_aes256gcm_keygen", "synopsis": "", "usage": "string sodium_crypto_aead_aes256gcm_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-aes256gcm-keygen.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_decrypt", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_decrypt ( string $ciphertext , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-decrypt.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_encrypt", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_encrypt ( string $msg , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-encrypt.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_ietf_decrypt", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_ietf_decrypt ( string $ciphertext , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-decrypt.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_ietf_encrypt", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_ietf_encrypt ( string $msg , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-encrypt.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_ietf_keygen", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_ietf_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-ietf-keygen.php"}, {"name": "sodium_crypto_aead_chacha20poly1305_keygen", "synopsis": "", "usage": "string sodium_crypto_aead_chacha20poly1305_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-chacha20poly1305-keygen.php"}, {"name": "sodium_crypto_aead_xchacha20poly1305_ietf_decrypt", "synopsis": "", "usage": "string sodium_crypto_aead_xchacha20poly1305_ietf_decrypt ( string $ciphertext , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-decrypt.php"}, {"name": "sodium_crypto_aead_xchacha20poly1305_ietf_encrypt", "synopsis": "", "usage": "string sodium_crypto_aead_xchacha20poly1305_ietf_encrypt ( string $msg , string $ad , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-encrypt.php"}, {"name": "sodium_crypto_aead_xchacha20poly1305_ietf_keygen", "synopsis": "", "usage": "string sodium_crypto_aead_xchacha20poly1305_ietf_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-aead-xchacha20poly1305-ietf-keygen.php"}, {"name": "sodium_crypto_auth_keygen", "synopsis": "", "usage": "string sodium_crypto_auth_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-auth-keygen.php"}, {"name": "sodium_crypto_auth_verify", "synopsis": "", "usage": "bool sodium_crypto_auth_verify ( string $signature , string $msg , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-auth-verify.php"}, {"name": "sodium_crypto_auth", "synopsis": "", "usage": "string sodium_crypto_auth ( string $msg , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-auth.php"}, {"name": "sodium_crypto_box_keypair_from_secretkey_and_publickey", "synopsis": "", "usage": "string sodium_crypto_box_keypair_from_secretkey_and_publickey ( string $secret_key , string $public_key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-keypair-from-secretkey-and-publickey.php"}, {"name": "sodium_crypto_box_keypair", "synopsis": "", "usage": "string sodium_crypto_box_keypair ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-keypair.php"}, {"name": "sodium_crypto_box_open", "synopsis": "", "usage": "string sodium_crypto_box_open ( string $ciphertext , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-open.php"}, {"name": "sodium_crypto_box_publickey_from_secretkey", "synopsis": "", "usage": "string sodium_crypto_box_publickey_from_secretkey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-publickey-from-secretkey.php"}, {"name": "sodium_crypto_box_publickey", "synopsis": "", "usage": "string sodium_crypto_box_publickey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-publickey.php"}, {"name": "sodium_crypto_box_seal_open", "synopsis": "", "usage": "string sodium_crypto_box_seal_open ( string $ciphertext , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-seal-open.php"}, {"name": "sodium_crypto_box_seal", "synopsis": "", "usage": "string sodium_crypto_box_seal ( string $msg , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-seal.php"}, {"name": "sodium_crypto_box_secretkey", "synopsis": "", "usage": "string sodium_crypto_box_secretkey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-secretkey.php"}, {"name": "sodium_crypto_box_seed_keypair", "synopsis": "", "usage": "string sodium_crypto_box_seed_keypair ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box-seed-keypair.php"}, {"name": "sodium_crypto_box", "synopsis": "", "usage": "string sodium_crypto_box ( string $msg , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-box.php"}, {"name": "sodium_crypto_generichash_final", "synopsis": "", "usage": "string sodium_crypto_generichash_final ( string &$state [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-generichash-final.php"}, {"name": "sodium_crypto_generichash_init", "synopsis": "", "usage": "string sodium_crypto_generichash_init ([ string $key [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ]] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-generichash-init.php"}, {"name": "sodium_crypto_generichash_keygen", "synopsis": "", "usage": "string sodium_crypto_generichash_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-generichash-keygen.php"}, {"name": "sodium_crypto_generichash_update", "synopsis": "", "usage": "bool sodium_crypto_generichash_update ( string &$state , string $msg )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-generichash-update.php"}, {"name": "sodium_crypto_generichash", "synopsis": "", "usage": "string sodium_crypto_generichash ( string $msg [, string $key [, int $length = SODIUM_CRYPTO_GENERICHASH_BYTES ]] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-generichash.php"}, {"name": "sodium_crypto_kdf_derive_from_key", "synopsis": "", "usage": "string sodium_crypto_kdf_derive_from_key ( int $subkey_len , int $subkey_id , string $context , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kdf-derive-from-key.php"}, {"name": "sodium_crypto_kdf_keygen", "synopsis": "", "usage": "string sodium_crypto_kdf_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kdf-keygen.php"}, {"name": "sodium_crypto_kx_client_session_keys", "synopsis": "", "usage": "array sodium_crypto_kx_client_session_keys ( string $client_keypair , string $server_key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-client-session-keys.php"}, {"name": "sodium_crypto_kx_keypair", "synopsis": "", "usage": "string sodium_crypto_kx_keypair ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-keypair.php"}, {"name": "sodium_crypto_kx_publickey", "synopsis": "", "usage": "string sodium_crypto_kx_publickey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-publickey.php"}, {"name": "sodium_crypto_kx_secretkey", "synopsis": "", "usage": "string sodium_crypto_kx_secretkey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-secretkey.php"}, {"name": "sodium_crypto_kx_seed_keypair", "synopsis": "", "usage": "string sodium_crypto_kx_seed_keypair ( string $string )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-seed-keypair.php"}, {"name": "sodium_crypto_kx_server_session_keys", "synopsis": "", "usage": "array sodium_crypto_kx_server_session_keys ( string $server_keypair , string $client_key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-kx-server-session-keys.php"}, {"name": "sodium_crypto_pwhash_scryptsalsa208sha256_str_verify", "synopsis": "", "usage": "bool sodium_crypto_pwhash_scryptsalsa208sha256_str_verify ( string $hash , string $password )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256-str-verify.php"}, {"name": "sodium_crypto_pwhash_scryptsalsa208sha256_str", "synopsis": "", "usage": "string sodium_crypto_pwhash_scryptsalsa208sha256_str ( string $password , int $opslimit , int $memlimit )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256-str.php"}, {"name": "sodium_crypto_pwhash_scryptsalsa208sha256", "synopsis": "", "usage": "string sodium_crypto_pwhash_scryptsalsa208sha256 ( int $length , string $password , string $salt , int $opslimit , int $memlimit )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-scryptsalsa208sha256.php"}, {"name": "sodium_crypto_pwhash_str_needs_rehash", "synopsis": "", "usage": "bool sodium_crypto_pwhash_str_needs_rehash ( string $password , int $opslimit , int $memlimit )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-str-needs-rehash.php"}, {"name": "sodium_crypto_pwhash_str_verify", "synopsis": "", "usage": "bool sodium_crypto_pwhash_str_verify ( string $hash , string $password )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-str-verify.php"}, {"name": "sodium_crypto_pwhash_str", "synopsis": "", "usage": "string sodium_crypto_pwhash_str ( string $password , int $opslimit , int $memlimit )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash-str.php"}, {"name": "sodium_crypto_pwhash", "synopsis": "", "usage": "string sodium_crypto_pwhash ( int $length , string $password , string $salt , int $opslimit , int $memlimit [, int $alg ] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-pwhash.php"}, {"name": "sodium_crypto_scalarmult", "synopsis": "", "usage": "string sodium_crypto_scalarmult ( string $n , string $p )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-scalarmult.php"}, {"name": "sodium_crypto_secretbox_keygen", "synopsis": "", "usage": "string sodium_crypto_secretbox_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretbox-keygen.php"}, {"name": "sodium_crypto_secretbox_open", "synopsis": "", "usage": "string sodium_crypto_secretbox_open ( string $ciphertext , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretbox-open.php"}, {"name": "sodium_crypto_secretbox", "synopsis": "", "usage": "string sodium_crypto_secretbox ( string $string , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretbox.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_init_pull", "synopsis": "", "usage": "string sodium_crypto_secretstream_xchacha20poly1305_init_pull ( string $header , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-init-pull.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_init_push", "synopsis": "", "usage": "array sodium_crypto_secretstream_xchacha20poly1305_init_push ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-init-push.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_keygen", "synopsis": "", "usage": "string sodium_crypto_secretstream_xchacha20poly1305_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-keygen.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_pull", "synopsis": "", "usage": "array sodium_crypto_secretstream_xchacha20poly1305_pull ( string &$state , string $c [, string $ad ] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-pull.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_push", "synopsis": "", "usage": "string sodium_crypto_secretstream_xchacha20poly1305_push ( string &$state , string $msg [, string $ad [, int $tag ]] )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-push.php"}, {"name": "sodium_crypto_secretstream_xchacha20poly1305_rekey", "synopsis": "", "usage": "void sodium_crypto_secretstream_xchacha20poly1305_rekey ( string &$state )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-secretstream-xchacha20poly1305-rekey.php"}, {"name": "sodium_crypto_shorthash_keygen", "synopsis": "", "usage": "string sodium_crypto_shorthash_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-shorthash-keygen.php"}, {"name": "sodium_crypto_shorthash", "synopsis": "", "usage": "string sodium_crypto_shorthash ( string $msg , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-shorthash.php"}, {"name": "sodium_crypto_sign_detached", "synopsis": "", "usage": "string sodium_crypto_sign_detached ( string $msg , string $keypair )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-detached.php"}, {"name": "sodium_crypto_sign_ed25519_pk_to_curve25519", "synopsis": "", "usage": "string sodium_crypto_sign_ed25519_pk_to_curve25519 ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-ed25519-pk-to-curve25519.php"}, {"name": "sodium_crypto_sign_ed25519_sk_to_curve25519", "synopsis": "", "usage": "string sodium_crypto_sign_ed25519_sk_to_curve25519 ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-ed25519-sk-to-curve25519.php"}, {"name": "sodium_crypto_sign_keypair_from_secretkey_and_publickey", "synopsis": "", "usage": "string sodium_crypto_sign_keypair_from_secretkey_and_publickey ( string $secret_key , string $public_key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-keypair-from-secretkey-and-publickey.php"}, {"name": "sodium_crypto_sign_keypair", "synopsis": "", "usage": "string sodium_crypto_sign_keypair ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-keypair.php"}, {"name": "sodium_crypto_sign_open", "synopsis": "", "usage": "string sodium_crypto_sign_open ( string $string , string $keypair )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-open.php"}, {"name": "sodium_crypto_sign_publickey_from_secretkey", "synopsis": "", "usage": "string sodium_crypto_sign_publickey_from_secretkey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-publickey-from-secretkey.php"}, {"name": "sodium_crypto_sign_publickey", "synopsis": "", "usage": "string sodium_crypto_sign_publickey ( string $keypair )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-publickey.php"}, {"name": "sodium_crypto_sign_secretkey", "synopsis": "", "usage": "string sodium_crypto_sign_secretkey ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-secretkey.php"}, {"name": "sodium_crypto_sign_seed_keypair", "synopsis": "", "usage": "string sodium_crypto_sign_seed_keypair ( string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-seed-keypair.php"}, {"name": "sodium_crypto_sign_verify_detached", "synopsis": "", "usage": "bool sodium_crypto_sign_verify_detached ( string $signature , string $msg , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign-verify-detached.php"}, {"name": "sodium_crypto_sign", "synopsis": "", "usage": "string sodium_crypto_sign ( string $msg , string $secret_key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-sign.php"}, {"name": "sodium_crypto_stream_keygen", "synopsis": "", "usage": "string sodium_crypto_stream_keygen ( void )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-stream-keygen.php"}, {"name": "sodium_crypto_stream_xor", "synopsis": "", "usage": "string sodium_crypto_stream_xor ( string $msg , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-stream-xor.php"}, {"name": "sodium_crypto_stream", "synopsis": "", "usage": "string sodium_crypto_stream ( int $length , string $nonce , string $key )", "url": "https://secure.php.net/manual/en/function.sodium-crypto-stream.php"}, {"name": "sodium_hex2bin", "synopsis": "", "usage": "string sodium_hex2bin ( string $hex [, string $ignore ] )", "url": "https://secure.php.net/manual/en/function.sodium-hex2bin.php"}, {"name": "sodium_increment", "synopsis": "", "usage": "void sodium_increment ( string &$val )", "url": "https://secure.php.net/manual/en/function.sodium-increment.php"}, {"name": "sodium_memcmp", "synopsis": "", "usage": "int sodium_memcmp ( string $buf1 , string $buf2 )", "url": "https://secure.php.net/manual/en/function.sodium-memcmp.php"}, {"name": "sodium_memzero", "synopsis": "", "usage": "void sodium_memzero ( string &$buf )", "url": "https://secure.php.net/manual/en/function.sodium-memzero.php"}, {"name": "sodium_pad", "synopsis": "", "usage": "string sodium_pad ( string $unpadded , int $length )", "url": "https://secure.php.net/manual/en/function.sodium-pad.php"}, {"name": "sodium_unpad", "synopsis": "", "usage": "string sodium_unpad ( string $padded , int $length )", "url": "https://secure.php.net/manual/en/function.sodium-unpad.php"}, {"name": "solr_get_version", "synopsis": "This function returns the current version of the extension as a string.", "usage": "string solr_get_version ( void )", "url": "https://secure.php.net/manual/en/function.solr-get-version.php"}, {"name": "sort", "synopsis": "This function sorts an array. Elements will be arranged from lowest to highest when this function has completed.", "usage": "bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] )", "url": "https://secure.php.net/manual/en/function.sort.php"}, {"name": "soundex", "synopsis": "Calculates the soundex key of str.", "usage": "string soundex ( string $str )", "url": "https://secure.php.net/manual/en/function.soundex.php"}, {"name": "spl_autoload_call", "synopsis": "This function can be used to manually search for a class or interface using the registered __autoload functions.", "usage": "void spl_autoload_call ( string $class_name )", "url": "https://secure.php.net/manual/en/function.spl-autoload-call.php"}, {"name": "spl_autoload_extensions", "synopsis": "This function can modify and check the file extensions that the built in __autoload() fallback function spl_autoload() will be using.", "usage": "string spl_autoload_extensions ([ string $file_extensions ] )", "url": "https://secure.php.net/manual/en/function.spl-autoload-extensions.php"}, {"name": "spl_autoload_functions", "synopsis": "Get all registered __autoload() functions.", "usage": "array spl_autoload_functions ( void )", "url": "https://secure.php.net/manual/en/function.spl-autoload-functions.php"}, {"name": "spl_autoload_register", "synopsis": "Register a function with the spl provided __autoload queue. If the queue is not yet activated it will be activated.", "usage": "bool spl_autoload_register ([ callable $autoload_function [, bool $throw = TRUE [, bool $prepend = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.spl-autoload-register.php"}, {"name": "spl_autoload_unregister", "synopsis": "Removes a function from the autoload queue. If the queue is activated and empty after removing the given function then it will be deactivated.", "usage": "bool spl_autoload_unregister ( mixed $autoload_function )", "url": "https://secure.php.net/manual/en/function.spl-autoload-unregister.php"}, {"name": "spl_autoload", "synopsis": "This function is intended to be used as a default implementation for __autoload(). If nothing else is specified and spl_autoload_register() is called without any parameters then this function will be used for any later call to __autoload().", "usage": "void spl_autoload ( string $class_name [, string $file_extensions = spl_autoload_extensions() ] )", "url": "https://secure.php.net/manual/en/function.spl-autoload.php"}, {"name": "spl_classes", "synopsis": "This function returns an array with the current available SPL classes.", "usage": "array spl_classes ( void )", "url": "https://secure.php.net/manual/en/function.spl-classes.php"}, {"name": "spl_object_hash", "synopsis": "This function returns a unique identifier for the object. This id can be used as a hash key for storing objects, or for identifying an object, as long as the object is not destroyed. Once the object is destroyed, its hash may be reused for other objects.", "usage": "string spl_object_hash ( object $obj )", "url": "https://secure.php.net/manual/en/function.spl-object-hash.php"}, {"name": "spl_object_id", "synopsis": "This function returns a unique identifier for the object. The object id is unique for the lifetime of the object. Once the object is destroyed, its id may be reused for other objects. This behavior is similar to spl_object_hash().", "usage": "int spl_object_id ( object $obj )", "url": "https://secure.php.net/manual/en/function.spl-object-id.php"}, {"name": "split", "synopsis": "Splits a string into array by regular expression.", "usage": "array split ( string $pattern , string $string [, int $limit = -1 ] )", "url": "https://secure.php.net/manual/en/function.split.php"}, {"name": "spliti", "synopsis": "Splits a string into array by regular expression.", "usage": "array spliti ( string $pattern , string $string [, int $limit = -1 ] )", "url": "https://secure.php.net/manual/en/function.spliti.php"}, {"name": "sprintf", "synopsis": "Returns a string produced according to the formatting string format.", "usage": "string sprintf ( string $format [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/function.sprintf.php"}, {"name": "sql_regcase", "synopsis": "Creates a regular expression for a case insensitive match.", "usage": "string sql_regcase ( string $string )", "url": "https://secure.php.net/manual/en/function.sql-regcase.php"}, {"name": "sqlite_array_query", "synopsis": "Object oriented style (method):", "usage": "array sqlite_array_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-array-query.php"}, {"name": "sqlite_busy_timeout", "synopsis": "Object oriented style (method):", "usage": "void sqlite_busy_timeout ( resource $dbhandle , int $milliseconds )", "url": "https://secure.php.net/manual/en/function.sqlite-busy-timeout.php"}, {"name": "sqlite_changes", "synopsis": "Object oriented style (method):", "usage": "int sqlite_changes ( resource $dbhandle )", "url": "https://secure.php.net/manual/en/function.sqlite-changes.php"}, {"name": "sqlite_close", "synopsis": "Closes the given db_handle database handle. If the database was persistent, it will be closed and removed from the persistent list.", "usage": "void sqlite_close ( resource $dbhandle )", "url": "https://secure.php.net/manual/en/function.sqlite-close.php"}, {"name": "sqlite_column", "synopsis": "Fetches the value of a column named index_or_name (if it is a string), or of the ordinal column numbered index_or_name (if it is an integer) from the current row of the query result handle result.", "usage": "mixed sqlite_column ( resource $result , mixed $index_or_name [, bool $decode_binary = TRUE ] )", "url": "https://secure.php.net/manual/en/function.sqlite-column.php"}, {"name": "sqlite_create_aggregate", "synopsis": "Object oriented style (method):", "usage": "void sqlite_create_aggregate ( resource $dbhandle , string $function_name , callable $step_func , callable $finalize_func [, int $num_args = -1 ] )", "url": "https://secure.php.net/manual/en/function.sqlite-create-aggregate.php"}, {"name": "sqlite_create_function", "synopsis": "Object oriented style (method):", "usage": "void sqlite_create_function ( resource $dbhandle , string $function_name , callable $callback [, int $num_args = -1 ] )", "url": "https://secure.php.net/manual/en/function.sqlite-create-function.php"}, {"name": "sqlite_current", "synopsis": "Object oriented style (method):", "usage": "array sqlite_current ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-current.php"}, {"name": "sqlite_error_string", "synopsis": "Returns a human readable description of the error_code returned from sqlite_last_error().", "usage": "string sqlite_error_string ( int $error_code )", "url": "https://secure.php.net/manual/en/function.sqlite-error-string.php"}, {"name": "sqlite_escape_string", "synopsis": "sqlite_escape_string() will correctly quote the string specified by item for use in an SQLite SQL statement. This includes doubling up single-quote characters (') and checking for binary-unsafe characters in the query string.", "usage": "string sqlite_escape_string ( string $item )", "url": "https://secure.php.net/manual/en/function.sqlite-escape-string.php"}, {"name": "sqlite_exec", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_exec ( resource $dbhandle , string $query [, string &$error_msg ] )", "url": "https://secure.php.net/manual/en/function.sqlite-exec.php"}, {"name": "sqlite_factory", "synopsis": "sqlite_factory() behaves similarly to sqlite_open() in that it opens an SQLite database or attempts to create it if it does not exist. However, a SQLiteDatabase object is returned rather than a resource. Please see the sqlite_open() reference page for further usage and caveats.", "usage": "SQLiteDatabase sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-factory.php"}, {"name": "sqlite_fetch_all", "synopsis": "Object oriented style (method):", "usage": "array sqlite_fetch_all ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-fetch-all.php"}, {"name": "sqlite_fetch_array", "synopsis": "Object oriented style (method):", "usage": "array sqlite_fetch_array ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-fetch-array.php"}, {"name": "sqlite_fetch_column_types", "synopsis": "Object oriented style (method):", "usage": "array sqlite_fetch_column_types ( string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ] )", "url": "https://secure.php.net/manual/en/function.sqlite-fetch-column-types.php"}, {"name": "sqlite_fetch_object", "synopsis": "Object oriented style (method):", "usage": "object sqlite_fetch_object ( resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = TRUE ]]] )", "url": "https://secure.php.net/manual/en/function.sqlite-fetch-object.php"}, {"name": "sqlite_fetch_single", "synopsis": "Object oriented style (method):", "usage": "string sqlite_fetch_single ( resource $result [, bool $decode_binary = TRUE ] )", "url": "https://secure.php.net/manual/en/function.sqlite-fetch-single.php"}, {"name": "sqlite_field_name", "synopsis": "Object oriented style (method):", "usage": "string sqlite_field_name ( resource $result , int $field_index )", "url": "https://secure.php.net/manual/en/function.sqlite-field-name.php"}, {"name": "sqlite_has_more", "synopsis": "Finds whether more rows are available from the given result set.", "usage": "bool sqlite_has_more ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-has-more.php"}, {"name": "sqlite_has_prev", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_has_prev ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-has-prev.php"}, {"name": "SQLiteResult::key", "synopsis": "SQLiteResult::key() returns the current row index of the buffered result set result.", "usage": "int SQLiteResult::key ( void )", "url": "https://secure.php.net/manual/en/function.sqlite-key.php"}, {"name": "sqlite_last_error", "synopsis": "Object oriented style (method):", "usage": "int sqlite_last_error ( resource $dbhandle )", "url": "https://secure.php.net/manual/en/function.sqlite-last-error.php"}, {"name": "sqlite_last_insert_rowid", "synopsis": "Object oriented style (method):", "usage": "int sqlite_last_insert_rowid ( resource $dbhandle )", "url": "https://secure.php.net/manual/en/function.sqlite-last-insert-rowid.php"}, {"name": "sqlite_libencoding", "synopsis": "The SQLite library may be compiled in either ISO-8859-1 or UTF-8 compatible modes. This function allows you to determine which encoding scheme is used by your version of the library.", "usage": "string sqlite_libencoding ( void )", "url": "https://secure.php.net/manual/en/function.sqlite-libencoding.php"}, {"name": "sqlite_libversion", "synopsis": "Returns the version of the linked SQLite library.", "usage": "string sqlite_libversion ( void )", "url": "https://secure.php.net/manual/en/function.sqlite-libversion.php"}, {"name": "sqlite_next", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_next ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-next.php"}, {"name": "sqlite_num_fields", "synopsis": "Object oriented style (method):", "usage": "int sqlite_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-num-fields.php"}, {"name": "sqlite_num_rows", "synopsis": "Object oriented style (method):", "usage": "int sqlite_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-num-rows.php"}, {"name": "sqlite_open", "synopsis": "Object oriented style (constructor):", "usage": "resource sqlite_open ( string $filename [, int $mode = 0666 [, string &$error_message ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-open.php"}, {"name": "sqlite_popen", "synopsis": null, "usage": "resource sqlite_popen ( string $filename [, int $mode = 0666 [, string &$error_message ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-popen.php"}, {"name": "sqlite_prev", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_prev ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-prev.php"}, {"name": "sqlite_query", "synopsis": "Object oriented style (method):", "usage": "resource sqlite_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-query.php"}, {"name": "sqlite_rewind", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_rewind ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-rewind.php"}, {"name": "sqlite_seek", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_seek ( resource $result , int $rownum )", "url": "https://secure.php.net/manual/en/function.sqlite-seek.php"}, {"name": "sqlite_single_query", "synopsis": "Object oriented style (method):", "usage": "array sqlite_single_query ( resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-single-query.php"}, {"name": "sqlite_udf_decode_binary", "synopsis": "Decodes binary data passed as parameters to a UDF.", "usage": "string sqlite_udf_decode_binary ( string $data )", "url": "https://secure.php.net/manual/en/function.sqlite-udf-decode-binary.php"}, {"name": "sqlite_udf_encode_binary", "synopsis": "sqlite_udf_encode_binary() applies a binary encoding to the data so that it can be safely returned from queries (since the underlying libsqlite API is not binary safe).", "usage": "string sqlite_udf_encode_binary ( string $data )", "url": "https://secure.php.net/manual/en/function.sqlite-udf-encode-binary.php"}, {"name": "sqlite_unbuffered_query", "synopsis": "Object oriented style (method):", "usage": "resource sqlite_unbuffered_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )", "url": "https://secure.php.net/manual/en/function.sqlite-unbuffered-query.php"}, {"name": "sqlite_valid", "synopsis": "Object oriented style (method):", "usage": "bool sqlite_valid ( resource $result )", "url": "https://secure.php.net/manual/en/function.sqlite-valid.php"}, {"name": "sqlsrv_begin_transaction", "synopsis": "The transaction begun by sqlsrv_begin_transaction() includes all statements that were executed after the call to sqlsrv_begin_transaction() and before calls to sqlsrv_rollback() or sqlsrv_commit(). Explicit transactions should be started and committed or rolled back using these functions instead of executing SQL statements that begin and committ/roll back transactions. For more information, see \u00bb\u00a0SQLSRV Transactions.", "usage": "bool sqlsrv_begin_transaction ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-begin-transaction.php"}, {"name": "sqlsrv_cancel", "synopsis": "Cancels a statement. Any results associated with the statement that have not been consumed are deleted. After sqlsrv_cancel() has been called, the specified statement can be re-executed if it was created with sqlsrv_prepare(). Calling sqlsrv_cancel() is not necessary if all the results associated with the statement have been consumed.", "usage": "bool sqlsrv_cancel ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-cancel.php"}, {"name": "sqlsrv_client_info", "synopsis": "Returns information about the client and specified connection", "usage": "array sqlsrv_client_info ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-client-info.php"}, {"name": "sqlsrv_close", "synopsis": "Closes an open connection and releases resourses associated with the connection.", "usage": "bool sqlsrv_close ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-close.php"}, {"name": "sqlsrv_commit", "synopsis": "Commits a transaction that was begun with sqlsrv_begin_transaction(). The connection is returned to auto-commit mode after sqlsrv_commit() is called. The transaction that is committed includes all statements that were executed after the call to sqlsrv_begin_transaction(). Explicit transactions should be started and committed or rolled back using these functions instead of executing SQL statements that begin and committ/roll back transactions. For more information, see \u00bb\u00a0SQLSRV Transactions.", "usage": "bool sqlsrv_commit ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-commit.php"}, {"name": "sqlsrv_configure", "synopsis": "Changes the driver error handling and logging configurations.", "usage": "bool sqlsrv_configure ( string $setting , mixed $value )", "url": "https://secure.php.net/manual/en/function.sqlsrv-configure.php"}, {"name": "sqlsrv_connect", "synopsis": "Opens a connection to a Microsoft SQL Server database. By default, the connection is attempted using Windows Authentication. To connect using SQL Server Authentication, include \"UID\" and \"PWD\" in the connection options array.", "usage": "resource sqlsrv_connect ( string $serverName [, array $connectionInfo ] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-connect.php"}, {"name": "sqlsrv_errors", "synopsis": "Returns error and warning information about the last SQLSRV operation performed.", "usage": "mixed sqlsrv_errors ([ int $errorsOrWarnings ] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-errors.php"}, {"name": "sqlsrv_execute", "synopsis": "Executes a statement prepared with sqlsrv_prepare(). This function is ideal for executing a prepared statement multiple times with different parameter values.", "usage": "bool sqlsrv_execute ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-execute.php"}, {"name": "sqlsrv_fetch_array", "synopsis": "Returns the next available row of data as an associative array, a numeric array, or both (the default).", "usage": "array sqlsrv_fetch_array ( resource $stmt [, int $fetchType [, int $row [, int $offset ]]] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-fetch-array.php"}, {"name": "sqlsrv_fetch_object", "synopsis": "Retrieves the next row of data in a result set as an instance of the specified class with properties that match the row field names and values that correspond to the row field values.", "usage": "mixed sqlsrv_fetch_object ( resource $stmt [, string $className [, array $ctorParams [, int $row [, int $offset ]]]] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-fetch-object.php"}, {"name": "sqlsrv_fetch", "synopsis": "Makes the next row in a result set available for reading. Use sqlsrv_get_field() to read the fields of the row.", "usage": "mixed sqlsrv_fetch ( resource $stmt [, int $row [, int $offset ]] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-fetch.php"}, {"name": "sqlsrv_field_metadata", "synopsis": "Retrieves metadata for the fields of a statement prepared by sqlsrv_prepare() or sqlsrv_query(). sqlsrv_field_metadata() can be called on a statement before or after statement execution.", "usage": "mixed sqlsrv_field_metadata ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-field-metadata.php"}, {"name": "sqlsrv_free_stmt", "synopsis": "Frees all resources for the specified statement. The statement cannot be used after sqlsrv_free_stmt() has been called on it. If sqlsrv_free_stmt() is called on an in-progress statement that alters server state, statement execution is terminated and the statement is rolled back.", "usage": "bool sqlsrv_free_stmt ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-free-stmt.php"}, {"name": "sqlsrv_get_config", "synopsis": "Returns the value of the specified configuration setting.", "usage": "mixed sqlsrv_get_config ( string $setting )", "url": "https://secure.php.net/manual/en/function.sqlsrv-get-config.php"}, {"name": "sqlsrv_get_field", "synopsis": "Gets field data from the currently selected row. Fields must be accessed in order. Field indices start at 0.", "usage": "mixed sqlsrv_get_field ( resource $stmt , int $fieldIndex [, int $getAsType ] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-get-field.php"}, {"name": "sqlsrv_has_rows", "synopsis": "Indicates whether the specified statement has rows.", "usage": "bool sqlsrv_has_rows ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-has-rows.php"}, {"name": "sqlsrv_next_result", "synopsis": "Makes the next result of the specified statement active. Results include result sets, row counts, and output parameters.", "usage": "mixed sqlsrv_next_result ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-next-result.php"}, {"name": "sqlsrv_num_fields", "synopsis": "Retrieves the number of fields (columns) on a statement.", "usage": "mixed sqlsrv_num_fields ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-num-fields.php"}, {"name": "sqlsrv_num_rows", "synopsis": "Retrieves the number of rows in a result set. This function requires that the statment resource be created with a static or keyset cursor. For more information, see sqlsrv_query(), sqlsrv_prepare(), or \u00bb\u00a0Specifying a Cursor Type and Selecting Rows in the Microsoft SQLSRV documentation.", "usage": "mixed sqlsrv_num_rows ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-num-rows.php"}, {"name": "sqlsrv_prepare", "synopsis": "Prepares a query for execution. This function is ideal for preparing a query that will be executed multiple times with different parameter values.", "usage": "mixed sqlsrv_prepare ( resource $conn , string $sql [, array $params [, array $options ]] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-prepare.php"}, {"name": "sqlsrv_query", "synopsis": "Prepares and executes a query.", "usage": "mixed sqlsrv_query ( resource $conn , string $sql [, array $params [, array $options ]] )", "url": "https://secure.php.net/manual/en/function.sqlsrv-query.php"}, {"name": "sqlsrv_rollback", "synopsis": "Rolls back a transaction that was begun with sqlsrv_begin_transaction() and returns the connection to auto-commit mode.", "usage": "bool sqlsrv_rollback ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-rollback.php"}, {"name": "sqlsrv_rows_affected", "synopsis": "Returns the number of rows modified by the last INSERT, UPDATE, or DELETE query executed. For information about the number of rows returned by a SELECT query, see sqlsrv_num_rows().", "usage": "int sqlsrv_rows_affected ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-rows-affected.php"}, {"name": "sqlsrv_send_stream_data", "synopsis": "Send data from parameter streams to the server. Up to 8 KB of data is sent with each call.", "usage": "bool sqlsrv_send_stream_data ( resource $stmt )", "url": "https://secure.php.net/manual/en/function.sqlsrv-send-stream-data.php"}, {"name": "sqlsrv_server_info", "synopsis": "Returns information about the server.", "usage": "array sqlsrv_server_info ( resource $conn )", "url": "https://secure.php.net/manual/en/function.sqlsrv-server-info.php"}, {"name": "sqrt", "synopsis": "Returns the square root of arg.", "usage": "float sqrt ( float $arg )", "url": "https://secure.php.net/manual/en/function.sqrt.php"}, {"name": "srand", "synopsis": "Seeds the random number generator with seed or with a random value if no seed is given.", "usage": "void srand ([ int $seed ] )", "url": "https://secure.php.net/manual/en/function.srand.php"}, {"name": "sscanf", "synopsis": "The function sscanf() is the input analog of printf(). sscanf() reads from the string str and interprets it according to the specified format, which is described in the documentation for sprintf().", "usage": "mixed sscanf ( string $str , string $format [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/function.sscanf.php"}, {"name": "ssdeep_fuzzy_compare", "synopsis": "Calculates the match score between signature1 and signature2 using \u00bb\u00a0 context-triggered piecewise hashing, and returns the match score.", "usage": "int ssdeep_fuzzy_compare ( string $signature1 , string $signature2 )", "url": "https://secure.php.net/manual/en/function.ssdeep-fuzzy-compare.php"}, {"name": "ssdeep_fuzzy_hash_filename", "synopsis": "ssdeep_fuzzy_hash_filename() calculates the hash of the file specified by file_name using \u00bb\u00a0context-triggered piecewise hashing, and returns that hash.", "usage": "string ssdeep_fuzzy_hash_filename ( string $file_name )", "url": "https://secure.php.net/manual/en/function.ssdeep-fuzzy-hash-filename.php"}, {"name": "ssdeep_fuzzy_hash", "synopsis": "ssdeep_fuzzy_hash() calculates the hash of to_hash using \u00bb\u00a0 context-triggered piecewise hashing, and returns that hash.", "usage": "string ssdeep_fuzzy_hash ( string $to_hash )", "url": "https://secure.php.net/manual/en/function.ssdeep-fuzzy-hash.php"}, {"name": "ssh2_auth_agent", "synopsis": "Authenticate over SSH using the ssh agent", "usage": "bool ssh2_auth_agent ( resource $session , string $username )", "url": "https://secure.php.net/manual/en/function.ssh2-auth-agent.php"}, {"name": "ssh2_auth_hostbased_file", "synopsis": "Authenticate using a public hostkey read from a file.", "usage": "bool ssh2_auth_hostbased_file ( resource $session , string $username , string $hostname , string $pubkeyfile , string $privkeyfile [, string $passphrase [, string $local_username ]] )", "url": "https://secure.php.net/manual/en/function.ssh2-auth-hostbased-file.php"}, {"name": "ssh2_auth_none", "synopsis": "Attempt \"none\" authentication which usually will (and should) fail. As part of the failure, this function will return an array of accepted authentication methods.", "usage": "mixed ssh2_auth_none ( resource $session , string $username )", "url": "https://secure.php.net/manual/en/function.ssh2-auth-none.php"}, {"name": "ssh2_auth_password", "synopsis": "Authenticate over SSH using a plain password. Since version 0.12 this function also supports keyboard_interactive method.", "usage": "bool ssh2_auth_password ( resource $session , string $username , string $password )", "url": "https://secure.php.net/manual/en/function.ssh2-auth-password.php"}, {"name": "ssh2_auth_pubkey_file", "synopsis": "Authenticate using a public key read from a file.", "usage": "bool ssh2_auth_pubkey_file ( resource $session , string $username , string $pubkeyfile , string $privkeyfile [, string $passphrase ] )", "url": "https://secure.php.net/manual/en/function.ssh2-auth-pubkey-file.php"}, {"name": "ssh2_connect", "synopsis": "Establish a connection to a remote SSH server.", "usage": "resource ssh2_connect ( string $host [, int $port = 22 [, array $methods [, array $callbacks ]]] )", "url": "https://secure.php.net/manual/en/function.ssh2-connect.php"}, {"name": "ssh2_disconnect", "synopsis": "Close a connection to a remote SSH server.", "usage": "bool ssh2_disconnect ( resource $session )", "url": "https://secure.php.net/manual/en/function.ssh2-disconnect.php"}, {"name": "ssh2_exec", "synopsis": "Execute a command at the remote end and allocate a channel for it.", "usage": "resource ssh2_exec ( resource $session , string $command [, string $pty [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )", "url": "https://secure.php.net/manual/en/function.ssh2-exec.php"}, {"name": "ssh2_fetch_stream", "synopsis": "Fetches an alternate substream associated with an SSH2 channel stream. The SSH2 protocol currently defines only one substream, STDERR, which has a substream ID of SSH2_STREAM_STDERR (defined as 1).", "usage": "resource ssh2_fetch_stream ( resource $channel , int $streamid )", "url": "https://secure.php.net/manual/en/function.ssh2-fetch-stream.php"}, {"name": "ssh2_fingerprint", "synopsis": "Returns a server hostkey hash from an active session.", "usage": "string ssh2_fingerprint ( resource $session [, int $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX ] )", "url": "https://secure.php.net/manual/en/function.ssh2-fingerprint.php"}, {"name": "ssh2_methods_negotiated", "synopsis": "Returns list of negotiated methods.", "usage": "array ssh2_methods_negotiated ( resource $session )", "url": "https://secure.php.net/manual/en/function.ssh2-methods-negotiated.php"}, {"name": "ssh2_publickey_add", "synopsis": null, "usage": "bool ssh2_publickey_add ( resource $pkey , string $algoname , string $blob [, bool $overwrite = FALSE [, array $attributes ]] )", "url": "https://secure.php.net/manual/en/function.ssh2-publickey-add.php"}, {"name": "ssh2_publickey_init", "synopsis": "Request the Publickey subsystem from an already connected SSH2 server.", "usage": "resource ssh2_publickey_init ( resource $session )", "url": "https://secure.php.net/manual/en/function.ssh2-publickey-init.php"}, {"name": "ssh2_publickey_list", "synopsis": "List currently authorized publickeys.", "usage": "array ssh2_publickey_list ( resource $pkey )", "url": "https://secure.php.net/manual/en/function.ssh2-publickey-list.php"}, {"name": "ssh2_publickey_remove", "synopsis": "Removes an authorized publickey.", "usage": "bool ssh2_publickey_remove ( resource $pkey , string $algoname , string $blob )", "url": "https://secure.php.net/manual/en/function.ssh2-publickey-remove.php"}, {"name": "ssh2_scp_recv", "synopsis": "Copy a file from the remote server to the local filesystem using the SCP protocol.", "usage": "bool ssh2_scp_recv ( resource $session , string $remote_file , string $local_file )", "url": "https://secure.php.net/manual/en/function.ssh2-scp-recv.php"}, {"name": "ssh2_scp_send", "synopsis": "Copy a file from the local filesystem to the remote server using the SCP protocol.", "usage": "bool ssh2_scp_send ( resource $session , string $local_file , string $remote_file [, int $create_mode = 0644 ] )", "url": "https://secure.php.net/manual/en/function.ssh2-scp-send.php"}, {"name": "ssh2_sftp_chmod", "synopsis": "Attempts to change the mode of the specified file to that given in mode.", "usage": "bool ssh2_sftp_chmod ( resource $sftp , string $filename , int $mode )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-chmod.php"}, {"name": "ssh2_sftp_lstat", "synopsis": "Stats a symbolic link on the remote filesystem without following the link.", "usage": "array ssh2_sftp_lstat ( resource $sftp , string $path )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-lstat.php"}, {"name": "ssh2_sftp_mkdir", "synopsis": "Creates a directory on the remote file server with permissions set to mode.", "usage": "bool ssh2_sftp_mkdir ( resource $sftp , string $dirname [, int $mode = 0777 [, bool $recursive = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-mkdir.php"}, {"name": "ssh2_sftp_readlink", "synopsis": "Returns the target of a symbolic link.", "usage": "string ssh2_sftp_readlink ( resource $sftp , string $link )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-readlink.php"}, {"name": "ssh2_sftp_realpath", "synopsis": "Translates filename into the effective real path on the remote filesystem.", "usage": "string ssh2_sftp_realpath ( resource $sftp , string $filename )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-realpath.php"}, {"name": "ssh2_sftp_rename", "synopsis": "Renames a file on the remote filesystem.", "usage": "bool ssh2_sftp_rename ( resource $sftp , string $from , string $to )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-rename.php"}, {"name": "ssh2_sftp_rmdir", "synopsis": "Removes a directory from the remote file server.", "usage": "bool ssh2_sftp_rmdir ( resource $sftp , string $dirname )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-rmdir.php"}, {"name": "ssh2_sftp_stat", "synopsis": "Stats a file on the remote filesystem following any symbolic links.", "usage": "array ssh2_sftp_stat ( resource $sftp , string $path )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-stat.php"}, {"name": "ssh2_sftp_symlink", "synopsis": "Creates a symbolic link named link on the remote filesystem pointing to target.", "usage": "bool ssh2_sftp_symlink ( resource $sftp , string $target , string $link )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-symlink.php"}, {"name": "ssh2_sftp_unlink", "synopsis": "Deletes a file on the remote filesystem.", "usage": "bool ssh2_sftp_unlink ( resource $sftp , string $filename )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp-unlink.php"}, {"name": "ssh2_sftp", "synopsis": "Request the SFTP subsystem from an already connected SSH2 server.", "usage": "resource ssh2_sftp ( resource $session )", "url": "https://secure.php.net/manual/en/function.ssh2-sftp.php"}, {"name": "ssh2_shell", "synopsis": "Open a shell at the remote end and allocate a stream for it.", "usage": "resource ssh2_shell ( resource $session [, string $term_type = \"vanilla\" [, array $env [, int $width = 80 [, int $height = 25 [, int $width_height_type = SSH2_TERM_UNIT_CHARS ]]]]] )", "url": "https://secure.php.net/manual/en/function.ssh2-shell.php"}, {"name": "ssh2_tunnel", "synopsis": "Open a socket stream to an arbitrary host/port by way of the currently connected SSH server.", "usage": "resource ssh2_tunnel ( resource $session , string $host , int $port )", "url": "https://secure.php.net/manual/en/function.ssh2-tunnel.php"}, {"name": "stat", "synopsis": "Gathers the statistics of the file named by filename. If filename is a symbolic link, statistics are from the file itself, not the symlink.", "usage": "array stat ( string $filename )", "url": "https://secure.php.net/manual/en/function.stat.php"}, {"name": "stats_absolute_deviation", "synopsis": "Returns the absolute deviation of the values in a.", "usage": "float stats_absolute_deviation ( array $a )", "url": "https://secure.php.net/manual/en/function.stats-absolute-deviation.php"}, {"name": "stats_cdf_beta", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the beta distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_beta ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-beta.php"}, {"name": "stats_cdf_binomial", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the binomial distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_binomial ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-binomial.php"}, {"name": "stats_cdf_cauchy", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the Cauchy distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_cauchy ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-cauchy.php"}, {"name": "stats_cdf_chisquare", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the chi-square distribution. The kind of the return value and parameters (par1 and par2) are determined by which.", "usage": "float stats_cdf_chisquare ( float $par1 , float $par2 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-chisquare.php"}, {"name": "stats_cdf_exponential", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the exponential distribution. The kind of the return value and parameters (par1 and par2) are determined by which.", "usage": "float stats_cdf_exponential ( float $par1 , float $par2 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-exponential.php"}, {"name": "stats_cdf_f", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the F distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_f ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-f.php"}, {"name": "stats_cdf_gamma", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the gamma distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_gamma ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-gamma.php"}, {"name": "stats_cdf_laplace", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the Laplace distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_laplace ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-laplace.php"}, {"name": "stats_cdf_logistic", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the logistic distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_logistic ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-logistic.php"}, {"name": "stats_cdf_negative_binomial", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the negative binomial distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_negative_binomial ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-negative-binomial.php"}, {"name": "stats_cdf_noncentral_chisquare", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the non-central chi-square distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_noncentral_chisquare ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-noncentral-chisquare.php"}, {"name": "stats_cdf_noncentral_f", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the non-central F distribution. The kind of the return value and parameters (par1, par2, par3, and par4) are determined by which.", "usage": "float stats_cdf_noncentral_f ( float $par1 , float $par2 , float $par3 , float $par4 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-noncentral-f.php"}, {"name": "stats_cdf_noncentral_t", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the non-central t-distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_noncentral_t ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-noncentral-t.php"}, {"name": "stats_cdf_normal", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the normal distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_normal ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-normal.php"}, {"name": "stats_cdf_poisson", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the Poisson distribution. The kind of the return value and parameters (par1 and par2) are determined by which.", "usage": "float stats_cdf_poisson ( float $par1 , float $par2 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-poisson.php"}, {"name": "stats_cdf_t", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the t-distribution. The kind of the return value and parameters (par1 and par2) are determined by which.", "usage": "float stats_cdf_t ( float $par1 , float $par2 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-t.php"}, {"name": "stats_cdf_uniform", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the uniform distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_uniform ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-uniform.php"}, {"name": "stats_cdf_weibull", "synopsis": "Returns the cumulative distribution function, its inverse, or one of its parameters, of the binomial distribution. The kind of the return value and parameters (par1, par2, and par3) are determined by which.", "usage": "float stats_cdf_weibull ( float $par1 , float $par2 , float $par3 , int $which )", "url": "https://secure.php.net/manual/en/function.stats-cdf-weibull.php"}, {"name": "stats_covariance", "synopsis": "Returns the covariance of a and b.", "usage": "float stats_covariance ( array $a , array $b )", "url": "https://secure.php.net/manual/en/function.stats-covariance.php"}, {"name": "stats_dens_beta", "synopsis": "Returns the probability density at x, where the random variable follows the beta distribution of which the shape parameters are a and b.", "usage": "float stats_dens_beta ( float $x , float $a , float $b )", "url": "https://secure.php.net/manual/en/function.stats-dens-beta.php"}, {"name": "stats_dens_cauchy", "synopsis": "Returns the probability density at x, where the random variable follows the Cauchy distribution whose location and scale are ave and stdev, respectively.", "usage": "float stats_dens_cauchy ( float $x , float $ave , float $stdev )", "url": "https://secure.php.net/manual/en/function.stats-dens-cauchy.php"}, {"name": "stats_dens_chisquare", "synopsis": "Returns the probability density at x, where the random variable follows the chi-square distribution of which the degree of freedom is dfr.", "usage": "float stats_dens_chisquare ( float $x , float $dfr )", "url": "https://secure.php.net/manual/en/function.stats-dens-chisquare.php"}, {"name": "stats_dens_exponential", "synopsis": "Returns the probability density at x, where the random variable follows the exponential distribution of which the scale is scale.", "usage": "float stats_dens_exponential ( float $x , float $scale )", "url": "https://secure.php.net/manual/en/function.stats-dens-exponential.php"}, {"name": "stats_dens_f", "synopsis": "Returns the probability density at x, where the random variable follows the F distribution of which the degree of freedoms are dfr1 and dfr2.", "usage": "float stats_dens_f ( float $x , float $dfr1 , float $dfr2 )", "url": "https://secure.php.net/manual/en/function.stats-dens-f.php"}, {"name": "stats_dens_gamma", "synopsis": "Returns the probability density at x, where the random variable follows the gamma distribution of which the shape parameter is shape and the scale parameter is scale.", "usage": "float stats_dens_gamma ( float $x , float $shape , float $scale )", "url": "https://secure.php.net/manual/en/function.stats-dens-gamma.php"}, {"name": "stats_dens_laplace", "synopsis": "Returns the probability density at x, where the random variable follows the Laplace distribution of which the location parameter is ave and the scale parameter is stdev.", "usage": "float stats_dens_laplace ( float $x , float $ave , float $stdev )", "url": "https://secure.php.net/manual/en/function.stats-dens-laplace.php"}, {"name": "stats_dens_logistic", "synopsis": "Returns the probability density at x, where the random variable follows the logistic distribution of which the location parameter is ave and the scale parameter is stdev.", "usage": "float stats_dens_logistic ( float $x , float $ave , float $stdev )", "url": "https://secure.php.net/manual/en/function.stats-dens-logistic.php"}, {"name": "stats_dens_normal", "synopsis": "Returns the probability density at x, where the random variable follows the normal distribution of which the mean is ave and the standard deviation is stdev.", "usage": "float stats_dens_normal ( float $x , float $ave , float $stdev )", "url": "https://secure.php.net/manual/en/function.stats-dens-normal.php"}, {"name": "stats_dens_pmf_binomial", "synopsis": "Returns the probability mass at x, where the random variable follows the binomial distribution of which the number of trials is n and the success rate is pi.", "usage": "float stats_dens_pmf_binomial ( float $x , float $n , float $pi )", "url": "https://secure.php.net/manual/en/function.stats-dens-pmf-binomial.php"}, {"name": "stats_dens_pmf_hypergeometric", "synopsis": "Returns the probability mass at n1, where the random variable follows the hypergeometric distribution of which the number of failure is n2, the number of success samples is N1, and the number of failure samples is N2.", "usage": "float stats_dens_pmf_hypergeometric ( float $n1 , float $n2 , float $N1 , float $N2 )", "url": "https://secure.php.net/manual/en/function.stats-dens-pmf-hypergeometric.php"}, {"name": "stats_dens_pmf_negative_binomial", "synopsis": "Returns the probability density at x, where the random variable follows the negative binomial distribution of which the number of the success is n and the success rate is pi.", "usage": "float stats_dens_pmf_negative_binomial ( float $x , float $n , float $pi )", "url": "https://secure.php.net/manual/en/function.stats-dens-pmf-negative-binomial.php"}, {"name": "stats_dens_pmf_poisson", "synopsis": "Returns the probability mass at x, where the random variable follows the Poisson distribution whose parameter is lb.", "usage": "float stats_dens_pmf_poisson ( float $x , float $lb )", "url": "https://secure.php.net/manual/en/function.stats-dens-pmf-poisson.php"}, {"name": "stats_dens_t", "synopsis": "Returns the probability density at x, where the random variable follows the t-distribution of which the degree of freedom is dfr.", "usage": "float stats_dens_t ( float $x , float $dfr )", "url": "https://secure.php.net/manual/en/function.stats-dens-t.php"}, {"name": "stats_dens_uniform", "synopsis": "Returns the probability density at x, where the random variable follows the uniform distribution of which the lower bound is a and the upper bound is b.", "usage": "float stats_dens_uniform ( float $x , float $a , float $b )", "url": "https://secure.php.net/manual/en/function.stats-dens-uniform.php"}, {"name": "stats_dens_weibull", "synopsis": "Returns the probability density at x, where the random variable follows the Weibull distribution of which the shape parameter is a and the scale parameter is b.", "usage": "float stats_dens_weibull ( float $x , float $a , float $b )", "url": "https://secure.php.net/manual/en/function.stats-dens-weibull.php"}, {"name": "stats_harmonic_mean", "synopsis": "Returns the harmonic mean of the values in a.", "usage": "number stats_harmonic_mean ( array $a )", "url": "https://secure.php.net/manual/en/function.stats-harmonic-mean.php"}, {"name": "stats_kurtosis", "synopsis": "Returns the kurtosis of the values in a.", "usage": "float stats_kurtosis ( array $a )", "url": "https://secure.php.net/manual/en/function.stats-kurtosis.php"}, {"name": "stats_rand_gen_beta", "synopsis": "Returns a random deviate from the beta distribution with parameters A and B. The density of the beta is x^(a-1) * (1-x)^(b-1) / B(a,b) for 0 < x <. Method R. C. H. Cheng.", "usage": "float stats_rand_gen_beta ( float $a , float $b )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-beta.php"}, {"name": "stats_rand_gen_chisquare", "synopsis": "Returns a random deviate from the chi-square distribution where the degrees of freedom is df.", "usage": "float stats_rand_gen_chisquare ( float $df )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-chisquare.php"}, {"name": "stats_rand_gen_exponential", "synopsis": "Returns a random deviate from the exponential distribution of which the scale is av.", "usage": "float stats_rand_gen_exponential ( float $av )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-exponential.php"}, {"name": "stats_rand_gen_f", "synopsis": "Generates a random deviate from the F (variance ratio) distribution with \"dfn\" degrees of freedom in the numerator and \"dfd\" degrees of freedom in the denominator. Method : directly generates ratio of chisquare variates.", "usage": "float stats_rand_gen_f ( float $dfn , float $dfd )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-f.php"}, {"name": "stats_rand_gen_funiform", "synopsis": "Returns a random deviate from the uniform distribution from low to high.", "usage": "float stats_rand_gen_funiform ( float $low , float $high )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-funiform.php"}, {"name": "stats_rand_gen_gamma", "synopsis": "Generates a random deviate from the gamma distribution whose density is (A**R)/Gamma(R) * X**(R-1) * Exp(-A*X).", "usage": "float stats_rand_gen_gamma ( float $a , float $r )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-gamma.php"}, {"name": "stats_rand_gen_ibinomial_negative", "synopsis": "Returns a random deviate from a negative binomial distribution where the number of success is n and the success rate is p.", "usage": "int stats_rand_gen_ibinomial_negative ( int $n , float $p )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-ibinomial-negative.php"}, {"name": "stats_rand_gen_ibinomial", "synopsis": "Returns a random deviate from the binomial distribution whose number of trials is n and whose probability of an event in each trial is pp.", "usage": "int stats_rand_gen_ibinomial ( int $n , float $pp )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-ibinomial.php"}, {"name": "stats_rand_gen_int", "synopsis": "Returns a random integer between 1 and 2147483562", "usage": "int stats_rand_gen_int ( void )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-int.php"}, {"name": "stats_rand_gen_ipoisson", "synopsis": "Returns a random deviate from the Poisson distribution with parameter mu.", "usage": "int stats_rand_gen_ipoisson ( float $mu )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-ipoisson.php"}, {"name": "stats_rand_gen_iuniform", "synopsis": "Returns a random integer from the discrete uniform distribution between low (inclusive) and high (inclusive).", "usage": "int stats_rand_gen_iuniform ( int $low , int $high )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-iuniform.php"}, {"name": "stats_rand_gen_noncenral_chisquare", "synopsis": "Returns a random deviate from the non-central chi-square distribution with degrees of freedom, df, and non-centrality parameter, xnonc.", "usage": "float stats_rand_gen_noncenral_chisquare ( float $df , float $xnonc )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-noncenral-chisquare.php"}, {"name": "stats_rand_gen_noncentral_chisquare", "synopsis": "Returns a random deviate from the non-central chi-square distribution with degrees of freedom, df, and non-centrality parameter, xnonc.", "usage": "float stats_rand_gen_noncentral_chisquare ( float $df , float $xnonc )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-noncentral-chisquare.php"}, {"name": "stats_rand_gen_noncentral_f", "synopsis": "Returns a random deviate from the non-central F distribution where the degrees of freedoms are dfn (numerator) and dfd (denominator), and the non-centrality parameter is xnonc.", "usage": "float stats_rand_gen_noncentral_f ( float $dfn , float $dfd , float $xnonc )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-noncentral-f.php"}, {"name": "stats_rand_gen_noncentral_t", "synopsis": "Returns a random deviate from the non-central t-distribution with the degrees of freedom, df, and the non-centrality parameter, xnonc.", "usage": "float stats_rand_gen_noncentral_t ( float $df , float $xnonc )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-noncentral-t.php"}, {"name": "stats_rand_gen_normal", "synopsis": "Returns a random deviate from the normal distribution with mean, av, and standard deviation, sd.", "usage": "float stats_rand_gen_normal ( float $av , float $sd )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-normal.php"}, {"name": "stats_rand_gen_t", "synopsis": "Returns a random deviate from the t-distribution with the degrees of freedom, df.", "usage": "float stats_rand_gen_t ( float $df )", "url": "https://secure.php.net/manual/en/function.stats-rand-gen-t.php"}, {"name": "stats_rand_get_seeds", "synopsis": "Returns the current seed values of the random number generator", "usage": "array stats_rand_get_seeds ( void )", "url": "https://secure.php.net/manual/en/function.stats-rand-get-seeds.php"}, {"name": "stats_rand_phrase_to_seeds", "synopsis": "Generate two seeds for the random number generator from a phrase.", "usage": "array stats_rand_phrase_to_seeds ( string $phrase )", "url": "https://secure.php.net/manual/en/function.stats-rand-phrase-to-seeds.php"}, {"name": "stats_rand_ranf", "synopsis": "Returns a random floating point number from a uniform distribution between 0 (exclusive) and 1 (exclusive).", "usage": "float stats_rand_ranf ( void )", "url": "https://secure.php.net/manual/en/function.stats-rand-ranf.php"}, {"name": "stats_rand_setall", "synopsis": "Set iseed1 and iseed2 as seed values to the random generator used in statistic functions.", "usage": "void stats_rand_setall ( int $iseed1 , int $iseed2 )", "url": "https://secure.php.net/manual/en/function.stats-rand-setall.php"}, {"name": "stats_skew", "synopsis": "Returns the skewness of the values in a.", "usage": "float stats_skew ( array $a )", "url": "https://secure.php.net/manual/en/function.stats-skew.php"}, {"name": "stats_standard_deviation", "synopsis": "Returns the standard deviation of the values in a.", "usage": "float stats_standard_deviation ( array $a [, bool $sample = FALSE ] )", "url": "https://secure.php.net/manual/en/function.stats-standard-deviation.php"}, {"name": "stats_stat_binomial_coef", "synopsis": "Returns the binomial coefficient of n choose x.", "usage": "float stats_stat_binomial_coef ( int $x , int $n )", "url": "https://secure.php.net/manual/en/function.stats-stat-binomial-coef.php"}, {"name": "stats_stat_correlation", "synopsis": "Returns the Pearson correlation coefficient between arr1 and arr2.", "usage": "float stats_stat_correlation ( array $arr1 , array $arr2 )", "url": "https://secure.php.net/manual/en/function.stats-stat-correlation.php"}, {"name": "stats_stat_factorial", "synopsis": "Returns the factorial of an integer, n.", "usage": "float stats_stat_factorial ( int $n )", "url": "https://secure.php.net/manual/en/function.stats-stat-factorial.php"}, {"name": "stats_stat_independent_t", "synopsis": "Returns the t-value of the independent two-sample t-test between arr1 and arr2.", "usage": "float stats_stat_independent_t ( array $arr1 , array $arr2 )", "url": "https://secure.php.net/manual/en/function.stats-stat-independent-t.php"}, {"name": "stats_stat_innerproduct", "synopsis": "Returns the inner product of arr1 and arr2.", "usage": "float stats_stat_innerproduct ( array $arr1 , array $arr2 )", "url": "https://secure.php.net/manual/en/function.stats-stat-innerproduct.php"}, {"name": "stats_stat_paired_t", "synopsis": "Returns the t-value of the dependent t-test for paired samples arr1 and arr2.", "usage": "float stats_stat_paired_t ( array $arr1 , array $arr2 )", "url": "https://secure.php.net/manual/en/function.stats-stat-paired-t.php"}, {"name": "stats_stat_percentile", "synopsis": "Returns the perc-th percentile value of the array arr.", "usage": "float stats_stat_percentile ( array $arr , float $perc )", "url": "https://secure.php.net/manual/en/function.stats-stat-percentile.php"}, {"name": "stats_stat_powersum", "synopsis": "Returns the sum of the power-th power of a vector represented as an array arr.", "usage": "float stats_stat_powersum ( array $arr , float $power )", "url": "https://secure.php.net/manual/en/function.stats-stat-powersum.php"}, {"name": "stats_variance", "synopsis": "Returns the variance of the values in a.", "usage": "float stats_variance ( array $a [, bool $sample = FALSE ] )", "url": "https://secure.php.net/manual/en/function.stats-variance.php"}, {"name": "stomp_connect_error", "synopsis": "Returns a string description of the last connect error.", "usage": "string stomp_connect_error ( void )", "url": "https://secure.php.net/manual/en/function.stomp-connect-error.php"}, {"name": "stomp_version", "synopsis": "Returns a string containing the version of the current stomp extension.", "usage": "string stomp_version ( void )", "url": "https://secure.php.net/manual/en/function.stomp-version.php"}, {"name": "str_getcsv", "synopsis": "Parses a string input for fields in CSV format and returns an array containing the fields read.", "usage": "array str_getcsv ( string $input [, string $delimiter = \",\" [, string $enclosure = '\"' [, string $escape = \"\\\\\" ]]] )", "url": "https://secure.php.net/manual/en/function.str-getcsv.php"}, {"name": "str_ireplace", "synopsis": "This function returns a string or an array with all occurrences of search in subject (ignoring case) replaced with the given replace value. If you don't need fancy replacing rules, you should generally use this function instead of preg_replace() with the i modifier.", "usage": "mixed str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )", "url": "https://secure.php.net/manual/en/function.str-ireplace.php"}, {"name": "str_pad", "synopsis": "This function returns the input string padded on the left, the right, or both sides to the specified padding length. If the optional argument pad_string is not supplied, the input is padded with spaces, otherwise it is padded with characters from pad_string up to the limit.", "usage": "string str_pad ( string $input , int $pad_length [, string $pad_string = \" \" [, int $pad_type = STR_PAD_RIGHT ]] )", "url": "https://secure.php.net/manual/en/function.str-pad.php"}, {"name": "str_repeat", "synopsis": "Returns input repeated multiplier times.", "usage": "string str_repeat ( string $input , int $multiplier )", "url": "https://secure.php.net/manual/en/function.str-repeat.php"}, {"name": "str_replace", "synopsis": "This function returns a string or an array with all occurrences of search in subject replaced with the given replace value.", "usage": "mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] )", "url": "https://secure.php.net/manual/en/function.str-replace.php"}, {"name": "str_rot13", "synopsis": "Performs the ROT13 encoding on the str argument and returns the resulting string.", "usage": "string str_rot13 ( string $str )", "url": "https://secure.php.net/manual/en/function.str-rot13.php"}, {"name": "str_shuffle", "synopsis": null, "usage": "string str_shuffle ( string $str )", "url": "https://secure.php.net/manual/en/function.str-shuffle.php"}, {"name": "str_split", "synopsis": "Converts a string to an array.", "usage": "array str_split ( string $string [, int $split_length = 1 ] )", "url": "https://secure.php.net/manual/en/function.str-split.php"}, {"name": "str_word_count", "synopsis": "Counts the number of words inside string. If the optional format is not specified, then the return value will be an integer representing the number of words found. In the event the format is specified, the return value will be an array, content of which is dependent on the format. The possible value for the format and the resultant outputs are listed below.", "usage": "mixed str_word_count ( string $string [, int $format = 0 [, string $charlist ]] )", "url": "https://secure.php.net/manual/en/function.str-word-count.php"}, {"name": "strcasecmp", "synopsis": "Binary safe case-insensitive string comparison.", "usage": "int strcasecmp ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.strcasecmp.php"}, {"name": "strcmp", "synopsis": null, "usage": "int strcmp ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.strcmp.php"}, {"name": "strcoll", "synopsis": "Note that this comparison is case sensitive, and unlike strcmp() this function is not binary safe.", "usage": "int strcoll ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.strcoll.php"}, {"name": "strcspn", "synopsis": "Returns the length of the initial segment of subject which does not contain any of the characters in mask.", "usage": "int strcspn ( string $subject , string $mask [, int $start [, int $length ]] )", "url": "https://secure.php.net/manual/en/function.strcspn.php"}, {"name": "stream_bucket_append", "synopsis": null, "usage": "void stream_bucket_append ( resource $brigade , object $bucket )", "url": "https://secure.php.net/manual/en/function.stream-bucket-append.php"}, {"name": "stream_bucket_make_writeable", "synopsis": null, "usage": "object stream_bucket_make_writeable ( resource $brigade )", "url": "https://secure.php.net/manual/en/function.stream-bucket-make-writeable.php"}, {"name": "stream_bucket_new", "synopsis": null, "usage": "object stream_bucket_new ( resource $stream , string $buffer )", "url": "https://secure.php.net/manual/en/function.stream-bucket-new.php"}, {"name": "stream_bucket_prepend", "synopsis": "This function can be called to prepend a bucket to a bucket brigade. It is typically called from php_user_filter::filter().", "usage": "void stream_bucket_prepend ( resource $brigade , object $bucket )", "url": "https://secure.php.net/manual/en/function.stream-bucket-prepend.php"}, {"name": "stream_context_create", "synopsis": "Creates and returns a stream context with any options supplied in options preset.", "usage": "resource stream_context_create ([ array $options [, array $params ]] )", "url": "https://secure.php.net/manual/en/function.stream-context-create.php"}, {"name": "stream_context_get_default", "synopsis": null, "usage": "resource stream_context_get_default ([ array $options ] )", "url": "https://secure.php.net/manual/en/function.stream-context-get-default.php"}, {"name": "stream_context_get_options", "synopsis": null, "usage": "array stream_context_get_options ( resource $stream_or_context )", "url": "https://secure.php.net/manual/en/function.stream-context-get-options.php"}, {"name": "stream_context_get_params", "synopsis": "Retrieves parameter and options information from the stream or context.", "usage": "array stream_context_get_params ( resource $stream_or_context )", "url": "https://secure.php.net/manual/en/function.stream-context-get-params.php"}, {"name": "stream_context_set_default", "synopsis": null, "usage": "resource stream_context_set_default ( array $options )", "url": "https://secure.php.net/manual/en/function.stream-context-set-default.php"}, {"name": "stream_context_set_option", "synopsis": null, "usage": "bool stream_context_set_option ( resource $stream_or_context , string $wrapper , string $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.stream-context-set-option.php"}, {"name": "stream_context_set_params", "synopsis": "Sets parameters on the specified context.", "usage": "bool stream_context_set_params ( resource $stream_or_context , array $params )", "url": "https://secure.php.net/manual/en/function.stream-context-set-params.php"}, {"name": "stream_copy_to_stream", "synopsis": "Makes a copy of up to maxlength bytes of data from the current position (or from the offset position, if specified) in source to dest. If maxlength is not specified, all remaining content in source will be copied.", "usage": "int stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] )", "url": "https://secure.php.net/manual/en/function.stream-copy-to-stream.php"}, {"name": "stream_encoding", "synopsis": null, "usage": "bool stream_encoding ( resource $stream [, string $encoding ] )", "url": "https://secure.php.net/manual/en/function.stream-encoding.php"}, {"name": "stream_filter_append", "synopsis": "Adds filtername to the list of filters attached to stream.", "usage": "resource stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )", "url": "https://secure.php.net/manual/en/function.stream-filter-append.php"}, {"name": "stream_filter_prepend", "synopsis": "Adds filtername to the list of filters attached to stream.", "usage": "resource stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] )", "url": "https://secure.php.net/manual/en/function.stream-filter-prepend.php"}, {"name": "stream_filter_register", "synopsis": "stream_filter_register() allows you to implement your own filter on any registered stream used with all the other filesystem functions (such as fopen(), fread() etc.).", "usage": "bool stream_filter_register ( string $filtername , string $classname )", "url": "https://secure.php.net/manual/en/function.stream-filter-register.php"}, {"name": "stream_filter_remove", "synopsis": "Removes a stream filter previously added to a stream with stream_filter_prepend() or stream_filter_append(). Any data remaining in the filter's internal buffer will be flushed through to the next filter before removing it.", "usage": "bool stream_filter_remove ( resource $stream_filter )", "url": "https://secure.php.net/manual/en/function.stream-filter-remove.php"}, {"name": "stream_get_contents", "synopsis": "Identical to file_get_contents(), except that stream_get_contents() operates on an already open stream resource and returns the remaining contents in a string, up to maxlength bytes and starting at the specified offset.", "usage": "string stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] )", "url": "https://secure.php.net/manual/en/function.stream-get-contents.php"}, {"name": "stream_get_filters", "synopsis": null, "usage": "array stream_get_filters ( void )", "url": "https://secure.php.net/manual/en/function.stream-get-filters.php"}, {"name": "stream_get_line", "synopsis": "Gets a line from the given handle.", "usage": "string stream_get_line ( resource $handle , int $length [, string $ending ] )", "url": "https://secure.php.net/manual/en/function.stream-get-line.php"}, {"name": "stream_get_meta_data", "synopsis": "Returns information about an existing stream.", "usage": "array stream_get_meta_data ( resource $stream )", "url": "https://secure.php.net/manual/en/function.stream-get-meta-data.php"}, {"name": "stream_get_transports", "synopsis": null, "usage": "array stream_get_transports ( void )", "url": "https://secure.php.net/manual/en/function.stream-get-transports.php"}, {"name": "stream_get_wrappers", "synopsis": "Retrieve list of registered streams available on the running system.", "usage": "array stream_get_wrappers ( void )", "url": "https://secure.php.net/manual/en/function.stream-get-wrappers.php"}, {"name": "stream_is_local", "synopsis": "Checks if a stream, or a URL, is a local one or not.", "usage": "bool stream_is_local ( mixed $stream_or_url )", "url": "https://secure.php.net/manual/en/function.stream-is-local.php"}, {"name": "stream_isatty", "synopsis": "Determines if stream stream refers to a valid terminal type device. This is a more portable version of posix_isatty(), since it works on Windows systems too.", "usage": "bool stream_isatty ( resource $stream )", "url": "https://secure.php.net/manual/en/function.stream-isatty.php"}, {"name": "stream_notification_callback", "synopsis": "A callable function, used by the notification context parameter, called during an event.", "usage": "void stream_notification_callback ( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max )", "url": "https://secure.php.net/manual/en/function.stream-notification-callback.php"}, {"name": "stream_resolve_include_path", "synopsis": "Resolve filename against the include path according to the same rules as fopen()/include.", "usage": "string stream_resolve_include_path ( string $filename )", "url": "https://secure.php.net/manual/en/function.stream-resolve-include-path.php"}, {"name": "stream_select", "synopsis": "The stream_select() function accepts arrays of streams and waits for them to change status. Its operation is equivalent to that of the socket_select() function except in that it acts on streams.", "usage": "int stream_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] )", "url": "https://secure.php.net/manual/en/function.stream-select.php"}, {"name": "stream_set_blocking", "synopsis": "Sets blocking or non-blocking mode on a stream.", "usage": "bool stream_set_blocking ( resource $stream , bool $mode )", "url": "https://secure.php.net/manual/en/function.stream-set-blocking.php"}, {"name": "stream_set_chunk_size", "synopsis": "Set the stream chunk size.", "usage": "int stream_set_chunk_size ( resource $fp , int $chunk_size )", "url": "https://secure.php.net/manual/en/function.stream-set-chunk-size.php"}, {"name": "stream_set_read_buffer", "synopsis": "Sets the read buffer. It's the equivalent of stream_set_write_buffer(), but for read operations.", "usage": "int stream_set_read_buffer ( resource $stream , int $buffer )", "url": "https://secure.php.net/manual/en/function.stream-set-read-buffer.php"}, {"name": "stream_set_timeout", "synopsis": "Sets the timeout value on stream, expressed in the sum of seconds and microseconds.", "usage": "bool stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] )", "url": "https://secure.php.net/manual/en/function.stream-set-timeout.php"}, {"name": "stream_set_write_buffer", "synopsis": "Sets the buffering for write operations on the given stream to buffer bytes.", "usage": "int stream_set_write_buffer ( resource $stream , int $buffer )", "url": "https://secure.php.net/manual/en/function.stream-set-write-buffer.php"}, {"name": "stream_socket_accept", "synopsis": "Accept a connection on a socket previously created by stream_socket_server().", "usage": "resource stream_socket_accept ( resource $server_socket [, float $timeout = ini_get(\"default_socket_timeout\") [, string &$peername ]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-accept.php"}, {"name": "stream_socket_client", "synopsis": "Initiates a stream or datagram connection to the destination specified by remote_socket. The type of socket created is determined by the transport specified using standard URL formatting: transport://target. For Internet Domain sockets (AF_INET) such as TCP and UDP, the target portion of the remote_socket parameter should consist of a hostname or IP address followed by a colon and a port number. For Unix domain sockets, the target portion should point to the socket file on the filesystem.", "usage": "resource stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get(\"default_socket_timeout\") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-client.php"}, {"name": "stream_socket_enable_crypto", "synopsis": null, "usage": "mixed stream_socket_enable_crypto ( resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-enable-crypto.php"}, {"name": "stream_socket_get_name", "synopsis": "Returns the local or remote name of a given socket connection.", "usage": "string stream_socket_get_name ( resource $handle , bool $want_peer )", "url": "https://secure.php.net/manual/en/function.stream-socket-get-name.php"}, {"name": "stream_socket_pair", "synopsis": "stream_socket_pair() creates a pair of connected, indistinguishable socket streams. This function is commonly used in IPC (Inter-Process Communication).", "usage": "array stream_socket_pair ( int $domain , int $type , int $protocol )", "url": "https://secure.php.net/manual/en/function.stream-socket-pair.php"}, {"name": "stream_socket_recvfrom", "synopsis": "stream_socket_recvfrom() accepts data from a remote socket up to length bytes.", "usage": "string stream_socket_recvfrom ( resource $socket , int $length [, int $flags = 0 [, string &$address ]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-recvfrom.php"}, {"name": "stream_socket_sendto", "synopsis": "Sends the specified data through the socket.", "usage": "int stream_socket_sendto ( resource $socket , string $data [, int $flags = 0 [, string $address ]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-sendto.php"}, {"name": "stream_socket_server", "synopsis": "Creates a stream or datagram socket on the specified local_socket.", "usage": "resource stream_socket_server ( string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]] )", "url": "https://secure.php.net/manual/en/function.stream-socket-server.php"}, {"name": "stream_socket_shutdown", "synopsis": "Shutdowns (partially or not) a full-duplex connection.", "usage": "bool stream_socket_shutdown ( resource $stream , int $how )", "url": "https://secure.php.net/manual/en/function.stream-socket-shutdown.php"}, {"name": "stream_supports_lock", "synopsis": "Tells whether the stream supports locking through flock().", "usage": "bool stream_supports_lock ( resource $stream )", "url": "https://secure.php.net/manual/en/function.stream-supports-lock.php"}, {"name": "stream_wrapper_register", "synopsis": "Allows you to implement your own protocol handlers and streams for use with all the other filesystem functions (such as fopen(), fread() etc.).", "usage": "bool stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.stream-wrapper-register.php"}, {"name": "stream_wrapper_restore", "synopsis": "Restores a built-in wrapper previously unregistered with stream_wrapper_unregister().", "usage": "bool stream_wrapper_restore ( string $protocol )", "url": "https://secure.php.net/manual/en/function.stream-wrapper-restore.php"}, {"name": "stream_wrapper_unregister", "synopsis": "Allows you to disable an already defined stream wrapper. Once the wrapper has been disabled you may override it with a user-defined wrapper using stream_wrapper_register() or reenable it later on with stream_wrapper_restore().", "usage": "bool stream_wrapper_unregister ( string $protocol )", "url": "https://secure.php.net/manual/en/function.stream-wrapper-unregister.php"}, {"name": "strftime", "synopsis": "Format the time and/or date according to locale settings. Month and weekday names and other language-dependent strings respect the current locale set with setlocale().", "usage": "string strftime ( string $format [, int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.strftime.php"}, {"name": "strip_tags", "synopsis": "This function tries to return a string with all NULL bytes, HTML and PHP tags stripped from a given str. It uses the same tag stripping state machine as the fgetss() function.", "usage": "string strip_tags ( string $str [, string $allowable_tags ] )", "url": "https://secure.php.net/manual/en/function.strip-tags.php"}, {"name": "stripcslashes", "synopsis": "Returns a string with backslashes stripped off. Recognizes C-like \\n, \\r ..., octal and hexadecimal representation.", "usage": "string stripcslashes ( string $str )", "url": "https://secure.php.net/manual/en/function.stripcslashes.php"}, {"name": "stripos", "synopsis": "Find the numeric position of the first occurrence of needle in the haystack string.", "usage": "int stripos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.stripos.php"}, {"name": "stripslashes", "synopsis": "Un-quotes a quoted string.", "usage": "string stripslashes ( string $str )", "url": "https://secure.php.net/manual/en/function.stripslashes.php"}, {"name": "stristr", "synopsis": "Returns all of haystack starting from and including the first occurrence of needle to the end.", "usage": "string stristr ( string $haystack , mixed $needle [, bool $before_needle = FALSE ] )", "url": "https://secure.php.net/manual/en/function.stristr.php"}, {"name": "strlen", "synopsis": "Returns the length of the given string.", "usage": "int strlen ( string $string )", "url": "https://secure.php.net/manual/en/function.strlen.php"}, {"name": "strnatcasecmp", "synopsis": "This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would. The behaviour of this function is similar to strnatcmp(), except that the comparison is not case sensitive. For more information see: Martin Pool's \u00bb\u00a0Natural Order String Comparison page.", "usage": "int strnatcasecmp ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.strnatcasecmp.php"}, {"name": "strnatcmp", "synopsis": "This function implements a comparison algorithm that orders alphanumeric strings in the way a human being would, this is described as a \"natural ordering\". Note that this comparison is case sensitive.", "usage": "int strnatcmp ( string $str1 , string $str2 )", "url": "https://secure.php.net/manual/en/function.strnatcmp.php"}, {"name": "strncasecmp", "synopsis": "This function is similar to strcasecmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison.", "usage": "int strncasecmp ( string $str1 , string $str2 , int $len )", "url": "https://secure.php.net/manual/en/function.strncasecmp.php"}, {"name": "strncmp", "synopsis": "This function is similar to strcmp(), with the difference that you can specify the (upper limit of the) number of characters from each string to be used in the comparison.", "usage": "int strncmp ( string $str1 , string $str2 , int $len )", "url": "https://secure.php.net/manual/en/function.strncmp.php"}, {"name": "strpbrk", "synopsis": "strpbrk() searches the haystack string for a char_list.", "usage": "string strpbrk ( string $haystack , string $char_list )", "url": "https://secure.php.net/manual/en/function.strpbrk.php"}, {"name": "strpos", "synopsis": "Find the numeric position of the first occurrence of needle in the haystack string.", "usage": "int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.strpos.php"}, {"name": "strptime", "synopsis": "strptime() returns an array with the date parsed, or FALSE on error.", "usage": "array strptime ( string $date , string $format )", "url": "https://secure.php.net/manual/en/function.strptime.php"}, {"name": "strrchr", "synopsis": "This function returns the portion of haystack which starts at the last occurrence of needle and goes until the end of haystack.", "usage": "string strrchr ( string $haystack , mixed $needle )", "url": "https://secure.php.net/manual/en/function.strrchr.php"}, {"name": "strrev", "synopsis": "Returns string, reversed.", "usage": "string strrev ( string $string )", "url": "https://secure.php.net/manual/en/function.strrev.php"}, {"name": "strripos", "synopsis": "Find the numeric position of the last occurrence of needle in the haystack string.", "usage": "int strripos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.strripos.php"}, {"name": "strrpos", "synopsis": "Find the numeric position of the last occurrence of needle in the haystack string.", "usage": "int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.strrpos.php"}, {"name": "strspn", "synopsis": "Finds the length of the initial segment of subject that contains only characters from mask.", "usage": "int strspn ( string $subject , string $mask [, int $start [, int $length ]] )", "url": "https://secure.php.net/manual/en/function.strspn.php"}, {"name": "strstr", "synopsis": "Returns part of haystack string starting from and including the first occurrence of needle to the end of haystack.", "usage": "string strstr ( string $haystack , mixed $needle [, bool $before_needle = FALSE ] )", "url": "https://secure.php.net/manual/en/function.strstr.php"}, {"name": "strtok", "synopsis": "strtok() splits a string (str) into smaller strings (tokens), with each token being delimited by any character from token. That is, if you have a string like \"This is an example string\" you could tokenize this string into its individual words by using the space character as the token.", "usage": "string strtok ( string $str , string $token )", "url": "https://secure.php.net/manual/en/function.strtok.php"}, {"name": "strtolower", "synopsis": "Returns string with all alphabetic characters converted to lowercase.", "usage": "string strtolower ( string $string )", "url": "https://secure.php.net/manual/en/function.strtolower.php"}, {"name": "strtotime", "synopsis": null, "usage": "int strtotime ( string $time [, int $now = time() ] )", "url": "https://secure.php.net/manual/en/function.strtotime.php"}, {"name": "strtoupper", "synopsis": "Returns string with all alphabetic characters converted to uppercase.", "usage": "string strtoupper ( string $string )", "url": "https://secure.php.net/manual/en/function.strtoupper.php"}, {"name": "strtr", "synopsis": "If given three arguments, this function returns a copy of str where all occurrences of each (single-byte) character in from have been translated to the corresponding character in to, i.e., every occurrence of $from[$n] has been replaced with $to[$n], where $n is a valid offset in both arguments.", "usage": "string strtr ( string $str , string $from , string $to )", "url": "https://secure.php.net/manual/en/function.strtr.php"}, {"name": "strval", "synopsis": null, "usage": "string strval ( mixed $var )", "url": "https://secure.php.net/manual/en/function.strval.php"}, {"name": "substr_compare", "synopsis": "substr_compare() compares main_str from position offset with str up to length characters.", "usage": "int substr_compare ( string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.substr-compare.php"}, {"name": "substr_count", "synopsis": "substr_count() returns the number of times the needle substring occurs in the haystack string. Please note that needle is case sensitive.", "usage": "int substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] )", "url": "https://secure.php.net/manual/en/function.substr-count.php"}, {"name": "substr_replace", "synopsis": "substr_replace() replaces a copy of string delimited by the start and (optionally) length parameters with the string given in replacement.", "usage": "mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] )", "url": "https://secure.php.net/manual/en/function.substr-replace.php"}, {"name": "substr", "synopsis": "Returns the portion of string specified by the start and length parameters.", "usage": "string substr ( string $string , int $start [, int $length ] )", "url": "https://secure.php.net/manual/en/function.substr.php"}, {"name": "svn_add", "synopsis": "Adds the file, directory or symbolic link at path to the working directory. The item will be added to the repository the next time you call svn_commit() on the working copy.", "usage": "bool svn_add ( string $path [, bool $recursive = TRUE [, bool $force = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.svn-add.php"}, {"name": "svn_auth_get_parameter", "synopsis": "Retrieves authentication parameter at key. For a list of valid keys and their meanings, consult the authentication constants list.", "usage": "string svn_auth_get_parameter ( string $key )", "url": "https://secure.php.net/manual/en/function.svn-auth-get-parameter.php"}, {"name": "svn_auth_set_parameter", "synopsis": "Sets authentication parameter at key to value. For a list of valid keys and their meanings, consult the authentication constants list.", "usage": "void svn_auth_set_parameter ( string $key , string $value )", "url": "https://secure.php.net/manual/en/function.svn-auth-set-parameter.php"}, {"name": "svn_blame", "synopsis": "Get the SVN blame of a file from a repository URL.", "usage": "array svn_blame ( string $repository_url [, int $revision_no = SVN_REVISION_HEAD ] )", "url": "https://secure.php.net/manual/en/function.svn-blame.php"}, {"name": "svn_cat", "synopsis": "Returns the contents of the URL repos_url to a file in the repository, optionally at revision number revision_no.", "usage": "string svn_cat ( string $repos_url [, int $revision_no ] )", "url": "https://secure.php.net/manual/en/function.svn-cat.php"}, {"name": "svn_checkout", "synopsis": "Checks out a working copy from the repository at repos to targetpath at revision revision.", "usage": "bool svn_checkout ( string $repos , string $targetpath [, int $revision [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/function.svn-checkout.php"}, {"name": "svn_cleanup", "synopsis": "Recursively cleanup working copy directory workingdir, finishing any incomplete operations and removing working copy locks. Use when a working copy is in limbo and needs to be usable again.", "usage": "bool svn_cleanup ( string $workingdir )", "url": "https://secure.php.net/manual/en/function.svn-cleanup.php"}, {"name": "svn_client_version", "synopsis": "Returns the version of the SVN client libraries", "usage": "string svn_client_version ( void )", "url": "https://secure.php.net/manual/en/function.svn-client-version.php"}, {"name": "svn_commit", "synopsis": "Commits changes made in the local working copy files enumerated in the targets array to the repository, with the log message log. Directories in the targets array will be recursively committed unless recursive is set to FALSE.", "usage": "array svn_commit ( string $log , array $targets [, bool $recursive = TRUE ] )", "url": "https://secure.php.net/manual/en/function.svn-commit.php"}, {"name": "svn_delete", "synopsis": "Deletes the file, directory or symbolic link at path from the working directory. The item will be deleted from the repository the next time you call svn_commit() on the working copy.", "usage": "bool svn_delete ( string $path [, bool $force = FALSE ] )", "url": "https://secure.php.net/manual/en/function.svn-delete.php"}, {"name": "svn_diff", "synopsis": "Recursively diffs two paths, path1 and path2.", "usage": "array svn_diff ( string $path1 , int $rev1 , string $path2 , int $rev2 )", "url": "https://secure.php.net/manual/en/function.svn-diff.php"}, {"name": "svn_export", "synopsis": "Export the contents of either a working copy or repository into a 'clean' directory.", "usage": "bool svn_export ( string $frompath , string $topath [, bool $working_copy = TRUE [, int $revision_no = -1 ]] )", "url": "https://secure.php.net/manual/en/function.svn-export.php"}, {"name": "svn_fs_abort_txn", "synopsis": null, "usage": "bool svn_fs_abort_txn ( resource $txn )", "url": "https://secure.php.net/manual/en/function.svn-fs-abort-txn.php"}, {"name": "svn_fs_apply_text", "synopsis": null, "usage": "resource svn_fs_apply_text ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-apply-text.php"}, {"name": "svn_fs_begin_txn2", "synopsis": null, "usage": "resource svn_fs_begin_txn2 ( resource $repos , int $rev )", "url": "https://secure.php.net/manual/en/function.svn-fs-begin-txn2.php"}, {"name": "svn_fs_change_node_prop", "synopsis": null, "usage": "bool svn_fs_change_node_prop ( resource $root , string $path , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.svn-fs-change-node-prop.php"}, {"name": "svn_fs_check_path", "synopsis": null, "usage": "int svn_fs_check_path ( resource $fsroot , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-check-path.php"}, {"name": "svn_fs_contents_changed", "synopsis": null, "usage": "bool svn_fs_contents_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )", "url": "https://secure.php.net/manual/en/function.svn-fs-contents-changed.php"}, {"name": "svn_fs_copy", "synopsis": null, "usage": "bool svn_fs_copy ( resource $from_root , string $from_path , resource $to_root , string $to_path )", "url": "https://secure.php.net/manual/en/function.svn-fs-copy.php"}, {"name": "svn_fs_delete", "synopsis": null, "usage": "bool svn_fs_delete ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-delete.php"}, {"name": "svn_fs_dir_entries", "synopsis": null, "usage": "array svn_fs_dir_entries ( resource $fsroot , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-dir-entries.php"}, {"name": "svn_fs_file_contents", "synopsis": null, "usage": "resource svn_fs_file_contents ( resource $fsroot , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-file-contents.php"}, {"name": "svn_fs_file_length", "synopsis": null, "usage": "int svn_fs_file_length ( resource $fsroot , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-file-length.php"}, {"name": "svn_fs_is_dir", "synopsis": null, "usage": "bool svn_fs_is_dir ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-is-dir.php"}, {"name": "svn_fs_is_file", "synopsis": null, "usage": "bool svn_fs_is_file ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-is-file.php"}, {"name": "svn_fs_make_dir", "synopsis": null, "usage": "bool svn_fs_make_dir ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-make-dir.php"}, {"name": "svn_fs_make_file", "synopsis": null, "usage": "bool svn_fs_make_file ( resource $root , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-make-file.php"}, {"name": "svn_fs_node_created_rev", "synopsis": null, "usage": "int svn_fs_node_created_rev ( resource $fsroot , string $path )", "url": "https://secure.php.net/manual/en/function.svn-fs-node-created-rev.php"}, {"name": "svn_fs_node_prop", "synopsis": null, "usage": "string svn_fs_node_prop ( resource $fsroot , string $path , string $propname )", "url": "https://secure.php.net/manual/en/function.svn-fs-node-prop.php"}, {"name": "svn_fs_props_changed", "synopsis": null, "usage": "bool svn_fs_props_changed ( resource $root1 , string $path1 , resource $root2 , string $path2 )", "url": "https://secure.php.net/manual/en/function.svn-fs-props-changed.php"}, {"name": "svn_fs_revision_prop", "synopsis": null, "usage": "string svn_fs_revision_prop ( resource $fs , int $revnum , string $propname )", "url": "https://secure.php.net/manual/en/function.svn-fs-revision-prop.php"}, {"name": "svn_fs_revision_root", "synopsis": null, "usage": "resource svn_fs_revision_root ( resource $fs , int $revnum )", "url": "https://secure.php.net/manual/en/function.svn-fs-revision-root.php"}, {"name": "svn_fs_txn_root", "synopsis": null, "usage": "resource svn_fs_txn_root ( resource $txn )", "url": "https://secure.php.net/manual/en/function.svn-fs-txn-root.php"}, {"name": "svn_fs_youngest_rev", "synopsis": null, "usage": "int svn_fs_youngest_rev ( resource $fs )", "url": "https://secure.php.net/manual/en/function.svn-fs-youngest-rev.php"}, {"name": "svn_import", "synopsis": "Commits unversioned path into repository at url. If path is a directory and nonrecursive is FALSE, the directory will be imported recursively.", "usage": "bool svn_import ( string $path , string $url , bool $nonrecursive )", "url": "https://secure.php.net/manual/en/function.svn-import.php"}, {"name": "svn_log", "synopsis": "svn_log() returns the complete history of the item at the repository URL repos_url, or the history of a specific revision if start_revision is set. This function is equivalent to svn log --verbose -r $start_revision $repos_url.", "usage": "array svn_log ( string $repos_url [, int $start_revision [, int $end_revision [, int $limit = 0 [, int $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY ]]]] )", "url": "https://secure.php.net/manual/en/function.svn-log.php"}, {"name": "svn_ls", "synopsis": "This function queries the repository URL and returns a list of files and directories, optionally from a specific revision. This is equivalent to svn list $repos_url[@$revision_no]", "usage": "array svn_ls ( string $repos_url [, int $revision_no = SVN_REVISION_HEAD [, bool $recurse = FALSE [, bool $peg = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.svn-ls.php"}, {"name": "svn_mkdir", "synopsis": "Creates a directory in a working copy or repository.", "usage": "bool svn_mkdir ( string $path [, string $log_message ] )", "url": "https://secure.php.net/manual/en/function.svn-mkdir.php"}, {"name": "svn_repos_create", "synopsis": null, "usage": "resource svn_repos_create ( string $path [, array $config [, array $fsconfig ]] )", "url": "https://secure.php.net/manual/en/function.svn-repos-create.php"}, {"name": "svn_repos_fs_begin_txn_for_commit", "synopsis": null, "usage": "resource svn_repos_fs_begin_txn_for_commit ( resource $repos , int $rev , string $author , string $log_msg )", "url": "https://secure.php.net/manual/en/function.svn-repos-fs-begin-txn-for-commit.php"}, {"name": "svn_repos_fs_commit_txn", "synopsis": null, "usage": "int svn_repos_fs_commit_txn ( resource $txn )", "url": "https://secure.php.net/manual/en/function.svn-repos-fs-commit-txn.php"}, {"name": "svn_repos_fs", "synopsis": null, "usage": "resource svn_repos_fs ( resource $repos )", "url": "https://secure.php.net/manual/en/function.svn-repos-fs.php"}, {"name": "svn_repos_hotcopy", "synopsis": null, "usage": "bool svn_repos_hotcopy ( string $repospath , string $destpath , bool $cleanlogs )", "url": "https://secure.php.net/manual/en/function.svn-repos-hotcopy.php"}, {"name": "svn_repos_open", "synopsis": null, "usage": "resource svn_repos_open ( string $path )", "url": "https://secure.php.net/manual/en/function.svn-repos-open.php"}, {"name": "svn_repos_recover", "synopsis": null, "usage": "bool svn_repos_recover ( string $path )", "url": "https://secure.php.net/manual/en/function.svn-repos-recover.php"}, {"name": "svn_revert", "synopsis": "Revert any local changes to the path in a working copy.", "usage": "bool svn_revert ( string $path [, bool $recursive = FALSE ] )", "url": "https://secure.php.net/manual/en/function.svn-revert.php"}, {"name": "svn_status", "synopsis": "Returns the status of working copy files and directories, giving modifications, additions, deletions and other changes to items in the working copy.", "usage": "array svn_status ( string $path [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.svn-status.php"}, {"name": "svn_update", "synopsis": "Update working copy at path to revision revno. If recurse is true, directories will be recursively updated.", "usage": "int svn_update ( string $path [, int $revno = SVN_REVISION_HEAD [, bool $recurse = TRUE ]] )", "url": "https://secure.php.net/manual/en/function.svn-update.php"}, {"name": "swoole_async_dns_lookup", "synopsis": "", "usage": "bool swoole_async_dns_lookup ( string $hostname , callable $callback )", "url": "https://secure.php.net/manual/en/function.swoole-async-dns-lookup.php"}, {"name": "swoole_async_read", "synopsis": "", "usage": "bool swoole_async_read ( string $filename , callable $callback [, int $chunk_size = 65536 [, int $offset = 0 ]] )", "url": "https://secure.php.net/manual/en/function.swoole-async-read.php"}, {"name": "swoole_async_readfile", "synopsis": "", "usage": "bool swoole_async_readfile ( string $filename , callable $callback )", "url": "https://secure.php.net/manual/en/function.swoole-async-readfile.php"}, {"name": "swoole_async_set", "synopsis": "", "usage": "void swoole_async_set ( array $settings )", "url": "https://secure.php.net/manual/en/function.swoole-async-set.php"}, {"name": "swoole_async_write", "synopsis": "", "usage": "bool swoole_async_write ( string $filename , string $content [, integer $offset [, callable $callback ]] )", "url": "https://secure.php.net/manual/en/function.swoole-async-write.php"}, {"name": "swoole_async_writefile", "synopsis": "", "usage": "bool swoole_async_writefile ( string $filename , string $content [, callable $callback [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/function.swoole-async-writefile.php"}, {"name": "swoole_client_select", "synopsis": "", "usage": "int swoole_client_select ( array &$read_array , array &$write_array , array &$error_array [, float $timeout = 0.5 ] )", "url": "https://secure.php.net/manual/en/function.swoole-client-select.php"}, {"name": "swoole_cpu_num", "synopsis": "", "usage": "int swoole_cpu_num ( void )", "url": "https://secure.php.net/manual/en/function.swoole-cpu-num.php"}, {"name": "swoole_errno", "synopsis": "", "usage": "int swoole_errno ( void )", "url": "https://secure.php.net/manual/en/function.swoole-errno.php"}, {"name": "swoole_event_add", "synopsis": "", "usage": "int swoole_event_add ( int $fd [, callable $read_callback [, callable $write_callback [, int $events = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.swoole-event-add.php"}, {"name": "swoole_event_defer", "synopsis": "", "usage": "bool swoole_event_defer ( callable $callback )", "url": "https://secure.php.net/manual/en/function.swoole-event-defer.php"}, {"name": "swoole_event_del", "synopsis": "", "usage": "bool swoole_event_del ( int $fd )", "url": "https://secure.php.net/manual/en/function.swoole-event-del.php"}, {"name": "swoole_event_exit", "synopsis": "", "usage": "void swoole_event_exit ( void )", "url": "https://secure.php.net/manual/en/function.swoole-event-exit.php"}, {"name": "swoole_event_set", "synopsis": "", "usage": "bool swoole_event_set ( int $fd [, callable $read_callback [, callable $write_callback [, int $events = 0 ]]] )", "url": "https://secure.php.net/manual/en/function.swoole-event-set.php"}, {"name": "swoole_event_wait", "synopsis": "", "usage": "void swoole_event_wait ( void )", "url": "https://secure.php.net/manual/en/function.swoole-event-wait.php"}, {"name": "swoole_event_write", "synopsis": "", "usage": "bool swoole_event_write ( int $fd , string $data )", "url": "https://secure.php.net/manual/en/function.swoole-event-write.php"}, {"name": "swoole_get_local_ip", "synopsis": "", "usage": "array swoole_get_local_ip ( void )", "url": "https://secure.php.net/manual/en/function.swoole-get-local-ip.php"}, {"name": "swoole_last_error", "synopsis": "", "usage": "int swoole_last_error ( void )", "url": "https://secure.php.net/manual/en/function.swoole-last-error.php"}, {"name": "swoole_load_module", "synopsis": "", "usage": "mixed swoole_load_module ( string $filename )", "url": "https://secure.php.net/manual/en/function.swoole-load-module.php"}, {"name": "swoole_select", "synopsis": "", "usage": "int swoole_select ( array &$read_array , array &$write_array , array &$error_array [, float $timeout ] )", "url": "https://secure.php.net/manual/en/function.swoole-select.php"}, {"name": "swoole_set_process_name", "synopsis": "", "usage": "void swoole_set_process_name ( string $process_name [, int $size = 128 ] )", "url": "https://secure.php.net/manual/en/function.swoole-set-process-name.php"}, {"name": "swoole_strerror", "synopsis": "", "usage": "string swoole_strerror ( int $errno [, int $error_type = 0 ] )", "url": "https://secure.php.net/manual/en/function.swoole-strerror.php"}, {"name": "swoole_timer_after", "synopsis": "", "usage": "int swoole_timer_after ( int $ms , callable $callback [, mixed $param ] )", "url": "https://secure.php.net/manual/en/function.swoole-timer-after.php"}, {"name": "swoole_timer_exists", "synopsis": "", "usage": "bool swoole_timer_exists ( int $timer_id )", "url": "https://secure.php.net/manual/en/function.swoole-timer-exists.php"}, {"name": "swoole_timer_tick", "synopsis": "", "usage": "int swoole_timer_tick ( int $ms , callable $callback [, mixed $param ] )", "url": "https://secure.php.net/manual/en/function.swoole-timer-tick.php"}, {"name": "swoole_version", "synopsis": "", "usage": "string swoole_version ( void )", "url": "https://secure.php.net/manual/en/function.swoole-version.php"}, {"name": "sybase_affected_rows", "synopsis": "sybase_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query on the server associated with the specified link identifier.", "usage": "int sybase_affected_rows ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.sybase-affected-rows.php"}, {"name": "sybase_close", "synopsis": "sybase_close() closes the link to a Sybase database that's associated with the specified link link_identifier.", "usage": "bool sybase_close ([ resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.sybase-close.php"}, {"name": "sybase_connect", "synopsis": "sybase_connect() establishes a connection to a Sybase server.", "usage": "resource sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = FALSE ]]]]]] )", "url": "https://secure.php.net/manual/en/function.sybase-connect.php"}, {"name": "sybase_data_seek", "synopsis": "sybase_data_seek() moves the internal row pointer of the Sybase result associated with the specified result identifier to pointer to the specified row number. The next call to sybase_fetch_row() would return that row.", "usage": "bool sybase_data_seek ( resource $result_identifier , int $row_number )", "url": "https://secure.php.net/manual/en/function.sybase-data-seek.php"}, {"name": "sybase_deadlock_retry_count", "synopsis": "Using sybase_deadlock_retry_count(), the number of retries can be defined in cases of deadlocks. By default, every deadlock is retried an infinite number of times or until the process is killed by Sybase, the executing script is killed (for instance, by set_time_limit()) or the query succeeds.", "usage": "void sybase_deadlock_retry_count ( int $retry_count )", "url": "https://secure.php.net/manual/en/function.sybase-deadlock-retry-count.php"}, {"name": "sybase_fetch_array", "synopsis": "sybase_fetch_array() is an extended version of sybase_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys.", "usage": "array sybase_fetch_array ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-fetch-array.php"}, {"name": "sybase_fetch_assoc", "synopsis": "sybase_fetch_assoc() is a version of sybase_fetch_row() that uses column names instead of integers for indices in the result array. Columns from different tables with the same names are returned as name, name1, name2, ..., nameN.", "usage": "array sybase_fetch_assoc ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-fetch-assoc.php"}, {"name": "sybase_fetch_field", "synopsis": "sybase_fetch_field() can be used in order to obtain information about fields in a certain query result.", "usage": "object sybase_fetch_field ( resource $result [, int $field_offset = -1 ] )", "url": "https://secure.php.net/manual/en/function.sybase-fetch-field.php"}, {"name": "sybase_fetch_object", "synopsis": "sybase_fetch_object() is similar to sybase_fetch_assoc(), with one difference - an object is returned, instead of an array.", "usage": "object sybase_fetch_object ( resource $result [, mixed $object ] )", "url": "https://secure.php.net/manual/en/function.sybase-fetch-object.php"}, {"name": "sybase_fetch_row", "synopsis": "sybase_fetch_row() fetches one row of data from the result associated with the specified result identifier.", "usage": "array sybase_fetch_row ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-fetch-row.php"}, {"name": "sybase_field_seek", "synopsis": "Seeks to the specified field offset. If the next call to sybase_fetch_field() won't include a field offset, this field would be returned.", "usage": "bool sybase_field_seek ( resource $result , int $field_offset )", "url": "https://secure.php.net/manual/en/function.sybase-field-seek.php"}, {"name": "sybase_free_result", "synopsis": "sybase_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call sybase_free_result() with the result identifier as an argument and the associated result memory will be freed.", "usage": "bool sybase_free_result ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-free-result.php"}, {"name": "sybase_get_last_message", "synopsis": "sybase_get_last_message() returns the last message reported by the server.", "usage": "string sybase_get_last_message ( void )", "url": "https://secure.php.net/manual/en/function.sybase-get-last-message.php"}, {"name": "sybase_min_client_severity", "synopsis": "sybase_min_client_severity() sets the minimum client severity level.", "usage": "void sybase_min_client_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.sybase-min-client-severity.php"}, {"name": "sybase_min_error_severity", "synopsis": "sybase_min_error_severity() sets the minimum error severity level.", "usage": "void sybase_min_error_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.sybase-min-error-severity.php"}, {"name": "sybase_min_message_severity", "synopsis": "sybase_min_message_severity() sets the minimum message severity level.", "usage": "void sybase_min_message_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.sybase-min-message-severity.php"}, {"name": "sybase_min_server_severity", "synopsis": "sybase_min_server_severity() sets the minimum server severity level.", "usage": "void sybase_min_server_severity ( int $severity )", "url": "https://secure.php.net/manual/en/function.sybase-min-server-severity.php"}, {"name": "sybase_num_fields", "synopsis": "sybase_num_fields() returns the number of fields in a result set.", "usage": "int sybase_num_fields ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-num-fields.php"}, {"name": "sybase_num_rows", "synopsis": "sybase_num_rows() returns the number of rows in a result set.", "usage": "int sybase_num_rows ( resource $result )", "url": "https://secure.php.net/manual/en/function.sybase-num-rows.php"}, {"name": "sybase_pconnect", "synopsis": "sybase_pconnect() acts very much like sybase_connect() with two major differences.", "usage": "resource sybase_pconnect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]] )", "url": "https://secure.php.net/manual/en/function.sybase-pconnect.php"}, {"name": "sybase_query", "synopsis": "sybase_query() sends a query to the currently active database on the server that's associated with the specified link identifier.", "usage": "mixed sybase_query ( string $query [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.sybase-query.php"}, {"name": "sybase_result", "synopsis": "Returns the contents of the cell at the row and offset in the specified Sybase result set.", "usage": "string sybase_result ( resource $result , int $row , mixed $field )", "url": "https://secure.php.net/manual/en/function.sybase-result.php"}, {"name": "sybase_select_db", "synopsis": "sybase_select_db() sets the current active database on the server that's associated with the specified link identifier.", "usage": "bool sybase_select_db ( string $database_name [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.sybase-select-db.php"}, {"name": "sybase_set_message_handler", "synopsis": "sybase_set_message_handler() sets a user function to handle messages generated by the server. You may specify the name of a global function, or use an array to specify an object reference and a method name.", "usage": "bool sybase_set_message_handler ( callable $handler [, resource $link_identifier ] )", "url": "https://secure.php.net/manual/en/function.sybase-set-message-handler.php"}, {"name": "sybase_unbuffered_query", "synopsis": "sybase_unbuffered_query() sends a query to the currently active database on the server that's associated with the specified link identifier. If the link identifier isn't specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it.", "usage": "resource sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] )", "url": "https://secure.php.net/manual/en/function.sybase-unbuffered-query.php"}, {"name": "symlink", "synopsis": "symlink() creates a symbolic link to the existing target with the specified name link.", "usage": "bool symlink ( string $target , string $link )", "url": "https://secure.php.net/manual/en/function.symlink.php"}, {"name": "sys_get_temp_dir", "synopsis": "Returns the path of the directory PHP stores temporary files in by default.", "usage": "string sys_get_temp_dir ( void )", "url": "https://secure.php.net/manual/en/function.sys-get-temp-dir.php"}, {"name": "sys_getloadavg", "synopsis": "Returns three samples representing the average system load (the number of processes in the system run queue) over the last 1, 5 and 15 minutes, respectively.", "usage": "array sys_getloadavg ( void )", "url": "https://secure.php.net/manual/en/function.sys-getloadavg.php"}, {"name": "syslog", "synopsis": "syslog() generates a log message that will be distributed by the system logger.", "usage": "bool syslog ( int $priority , string $message )", "url": "https://secure.php.net/manual/en/function.syslog.php"}, {"name": "system", "synopsis": "system() is just like the C version of the function in that it executes the given command and outputs the result.", "usage": "string system ( string $command [, int &$return_var ] )", "url": "https://secure.php.net/manual/en/function.system.php"}, {"name": "taint", "synopsis": "Make a string tainted. This is used for testing purpose only.", "usage": "bool taint ( string &$string [, string $... ] )", "url": "https://secure.php.net/manual/en/function.taint.php"}, {"name": "tan", "synopsis": "tan() returns the tangent of the arg parameter. The arg parameter is in radians.", "usage": "float tan ( float $arg )", "url": "https://secure.php.net/manual/en/function.tan.php"}, {"name": "tanh", "synopsis": "Returns the hyperbolic tangent of arg, defined as sinh(arg)/cosh(arg).", "usage": "float tanh ( float $arg )", "url": "https://secure.php.net/manual/en/function.tanh.php"}, {"name": "tcpwrap_check", "synopsis": "This function consults the /etc/hosts.allow and /etc/hosts.deny files to check if access to service daemon should be granted or denied for a client.", "usage": "bool tcpwrap_check ( string $daemon , string $address [, string $user [, bool $nodns = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.tcpwrap-check.php"}, {"name": "tempnam", "synopsis": "Creates a file with a unique filename, with access permission set to 0600, in the specified directory. If the directory does not exist or is not writable, tempnam() may generate a file in the system's temporary directory, and return the full path to that file, including its name.", "usage": "string tempnam ( string $dir , string $prefix )", "url": "https://secure.php.net/manual/en/function.tempnam.php"}, {"name": "textdomain", "synopsis": "This function sets the domain to search within when calls are made to gettext(), usually the named after an application.", "usage": "string textdomain ( string $text_domain = NULL )", "url": "https://secure.php.net/manual/en/function.textdomain.php"}, {"name": "tidy_access_count", "synopsis": "tidy_access_count() returns the number of accessibility warnings found for the specified document.", "usage": "int tidy_access_count ( tidy $object )", "url": "https://secure.php.net/manual/en/function.tidy-access-count.php"}, {"name": "tidy_config_count", "synopsis": "Returns the number of errors encountered in the configuration of the specified tidy object.", "usage": "int tidy_config_count ( tidy $object )", "url": "https://secure.php.net/manual/en/function.tidy-config-count.php"}, {"name": "tidy_error_count", "synopsis": "Returns the number of Tidy errors encountered for the specified document.", "usage": "int tidy_error_count ( tidy $object )", "url": "https://secure.php.net/manual/en/function.tidy-error-count.php"}, {"name": "tidy_get_output", "synopsis": "Gets a string with the repaired html.", "usage": "string tidy_get_output ( tidy $object )", "url": "https://secure.php.net/manual/en/function.tidy-get-output.php"}, {"name": "tidy_load_config", "synopsis": "Loads a Tidy configuration file, with the specified encoding.", "usage": "void tidy_load_config ( string $filename , string $encoding )", "url": "https://secure.php.net/manual/en/function.tidy-load-config.php"}, {"name": "tidy_reset_config", "synopsis": "This function restores the Tidy configuration to the default values.", "usage": "bool tidy_reset_config ( void )", "url": "https://secure.php.net/manual/en/function.tidy-reset-config.php"}, {"name": "tidy_save_config", "synopsis": "Saves current settings to the specified file. Only non-default values are written.", "usage": "bool tidy_save_config ( string $filename )", "url": "https://secure.php.net/manual/en/function.tidy-save-config.php"}, {"name": "tidy_set_encoding", "synopsis": "Sets the encoding for input/output documents.", "usage": "bool tidy_set_encoding ( string $encoding )", "url": "https://secure.php.net/manual/en/function.tidy-set-encoding.php"}, {"name": "tidy_setopt", "synopsis": "tidy_setopt() updates the specified option with a new value.", "usage": "bool tidy_setopt ( string $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.tidy-setopt.php"}, {"name": "tidy_warning_count", "synopsis": "Returns the number of Tidy warnings encountered for the specified document.", "usage": "int tidy_warning_count ( tidy $object )", "url": "https://secure.php.net/manual/en/function.tidy-warning-count.php"}, {"name": "time_nanosleep", "synopsis": "Delays program execution for the given number of seconds and nanoseconds.", "usage": "mixed time_nanosleep ( int $seconds , int $nanoseconds )", "url": "https://secure.php.net/manual/en/function.time-nanosleep.php"}, {"name": "time_sleep_until", "synopsis": "Makes the script sleep until the specified timestamp.", "usage": "bool time_sleep_until ( float $timestamp )", "url": "https://secure.php.net/manual/en/function.time-sleep-until.php"}, {"name": "time", "synopsis": "Returns the current time measured in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).", "usage": "int time ( void )", "url": "https://secure.php.net/manual/en/function.time.php"}, {"name": "timezone_name_from_abbr", "synopsis": null, "usage": "string timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] )", "url": "https://secure.php.net/manual/en/function.timezone-name-from-abbr.php"}, {"name": "timezone_version_get", "synopsis": "Returns the current version of the timezonedb.", "usage": "string timezone_version_get ( void )", "url": "https://secure.php.net/manual/en/function.timezone-version-get.php"}, {"name": "tmpfile", "synopsis": "Creates a temporary file with a unique name in read-write (w+) mode and returns a file handle .", "usage": "resource tmpfile ( void )", "url": "https://secure.php.net/manual/en/function.tmpfile.php"}, {"name": "token_get_all", "synopsis": "token_get_all() parses the given source string into PHP language tokens using the Zend engine's lexical scanner.", "usage": "array token_get_all ( string $source [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.token-get-all.php"}, {"name": "token_name", "synopsis": "token_name() gets the symbolic name for a PHP token value.", "usage": "string token_name ( int $token )", "url": "https://secure.php.net/manual/en/function.token-name.php"}, {"name": "touch", "synopsis": "Attempts to set the access and modification times of the file named in the filename parameter to the value given in time. Note that the access time is always modified, regardless of the number of parameters.", "usage": "bool touch ( string $filename [, int $time = time() [, int $atime ]] )", "url": "https://secure.php.net/manual/en/function.touch.php"}, {"name": "trader_acos", "synopsis": "Calculates the arc cosine for each value in real and returns the resulting array.", "usage": "array trader_acos ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-acos.php"}, {"name": "trader_ad", "synopsis": "", "usage": "array trader_ad ( array $high , array $low , array $close , array $volume )", "url": "https://secure.php.net/manual/en/function.trader-ad.php"}, {"name": "trader_add", "synopsis": "Calculates the vector addition of real0 to real1 and returns the resulting vector.", "usage": "array trader_add ( array $real0 , array $real1 )", "url": "https://secure.php.net/manual/en/function.trader-add.php"}, {"name": "trader_adosc", "synopsis": "", "usage": "array trader_adosc ( array $high , array $low , array $close , array $volume [, int $fastPeriod [, int $slowPeriod ]] )", "url": "https://secure.php.net/manual/en/function.trader-adosc.php"}, {"name": "trader_adx", "synopsis": "", "usage": "array trader_adx ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-adx.php"}, {"name": "trader_adxr", "synopsis": "", "usage": "array trader_adxr ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-adxr.php"}, {"name": "trader_apo", "synopsis": "", "usage": "array trader_apo ( array $real [, int $fastPeriod [, int $slowPeriod [, int $mAType ]]] )", "url": "https://secure.php.net/manual/en/function.trader-apo.php"}, {"name": "trader_aroon", "synopsis": "", "usage": "array trader_aroon ( array $high , array $low [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-aroon.php"}, {"name": "trader_aroonosc", "synopsis": "", "usage": "array trader_aroonosc ( array $high , array $low [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-aroonosc.php"}, {"name": "trader_asin", "synopsis": "Calculates the arc sine for each value in real and returns the resulting array.", "usage": "array trader_asin ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-asin.php"}, {"name": "trader_atan", "synopsis": "Calculates the arc tangent for each value in real and returns the resulting array.", "usage": "array trader_atan ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-atan.php"}, {"name": "trader_atr", "synopsis": "", "usage": "array trader_atr ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-atr.php"}, {"name": "trader_avgprice", "synopsis": "", "usage": "array trader_avgprice ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-avgprice.php"}, {"name": "trader_bbands", "synopsis": "", "usage": "array trader_bbands ( array $real [, int $timePeriod [, float $nbDevUp [, float $nbDevDn [, int $mAType ]]]] )", "url": "https://secure.php.net/manual/en/function.trader-bbands.php"}, {"name": "trader_beta", "synopsis": "", "usage": "array trader_beta ( array $real0 , array $real1 [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-beta.php"}, {"name": "trader_bop", "synopsis": "", "usage": "array trader_bop ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-bop.php"}, {"name": "trader_cci", "synopsis": "", "usage": "array trader_cci ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-cci.php"}, {"name": "trader_cdl2crows", "synopsis": "", "usage": "array trader_cdl2crows ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl2crows.php"}, {"name": "trader_cdl3blackcrows", "synopsis": "", "usage": "array trader_cdl3blackcrows ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3blackcrows.php"}, {"name": "trader_cdl3inside", "synopsis": "", "usage": "array trader_cdl3inside ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3inside.php"}, {"name": "trader_cdl3linestrike", "synopsis": "", "usage": "array trader_cdl3linestrike ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3linestrike.php"}, {"name": "trader_cdl3outside", "synopsis": "", "usage": "array trader_cdl3outside ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3outside.php"}, {"name": "trader_cdl3starsinsouth", "synopsis": "", "usage": "array trader_cdl3starsinsouth ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3starsinsouth.php"}, {"name": "trader_cdl3whitesoldiers", "synopsis": "", "usage": "array trader_cdl3whitesoldiers ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdl3whitesoldiers.php"}, {"name": "trader_cdlabandonedbaby", "synopsis": "", "usage": "array trader_cdlabandonedbaby ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdlabandonedbaby.php"}, {"name": "trader_cdladvanceblock", "synopsis": "", "usage": "array trader_cdladvanceblock ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdladvanceblock.php"}, {"name": "trader_cdlbelthold", "synopsis": "", "usage": "array trader_cdlbelthold ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlbelthold.php"}, {"name": "trader_cdlbreakaway", "synopsis": "", "usage": "array trader_cdlbreakaway ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlbreakaway.php"}, {"name": "trader_cdlclosingmarubozu", "synopsis": "", "usage": "array trader_cdlclosingmarubozu ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlclosingmarubozu.php"}, {"name": "trader_cdlconcealbabyswall", "synopsis": "", "usage": "array trader_cdlconcealbabyswall ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlconcealbabyswall.php"}, {"name": "trader_cdlcounterattack", "synopsis": "", "usage": "array trader_cdlcounterattack ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlcounterattack.php"}, {"name": "trader_cdldarkcloudcover", "synopsis": "", "usage": "array trader_cdldarkcloudcover ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdldarkcloudcover.php"}, {"name": "trader_cdldoji", "synopsis": "", "usage": "array trader_cdldoji ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdldoji.php"}, {"name": "trader_cdldojistar", "synopsis": "", "usage": "array trader_cdldojistar ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdldojistar.php"}, {"name": "trader_cdldragonflydoji", "synopsis": "", "usage": "array trader_cdldragonflydoji ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdldragonflydoji.php"}, {"name": "trader_cdlengulfing", "synopsis": "", "usage": "array trader_cdlengulfing ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlengulfing.php"}, {"name": "trader_cdleveningdojistar", "synopsis": "", "usage": "array trader_cdleveningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdleveningdojistar.php"}, {"name": "trader_cdleveningstar", "synopsis": "", "usage": "array trader_cdleveningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdleveningstar.php"}, {"name": "trader_cdlgapsidesidewhite", "synopsis": "", "usage": "array trader_cdlgapsidesidewhite ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlgapsidesidewhite.php"}, {"name": "trader_cdlgravestonedoji", "synopsis": "", "usage": "array trader_cdlgravestonedoji ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlgravestonedoji.php"}, {"name": "trader_cdlhammer", "synopsis": "", "usage": "array trader_cdlhammer ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhammer.php"}, {"name": "trader_cdlhangingman", "synopsis": "", "usage": "array trader_cdlhangingman ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhangingman.php"}, {"name": "trader_cdlharami", "synopsis": "", "usage": "array trader_cdlharami ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlharami.php"}, {"name": "trader_cdlharamicross", "synopsis": "", "usage": "array trader_cdlharamicross ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlharamicross.php"}, {"name": "trader_cdlhighwave", "synopsis": "", "usage": "array trader_cdlhighwave ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhighwave.php"}, {"name": "trader_cdlhikkake", "synopsis": "", "usage": "array trader_cdlhikkake ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhikkake.php"}, {"name": "trader_cdlhikkakemod", "synopsis": "", "usage": "array trader_cdlhikkakemod ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhikkakemod.php"}, {"name": "trader_cdlhomingpigeon", "synopsis": "", "usage": "array trader_cdlhomingpigeon ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlhomingpigeon.php"}, {"name": "trader_cdlidentical3crows", "synopsis": "", "usage": "array trader_cdlidentical3crows ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlidentical3crows.php"}, {"name": "trader_cdlinneck", "synopsis": "", "usage": "array trader_cdlinneck ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlinneck.php"}, {"name": "trader_cdlinvertedhammer", "synopsis": "", "usage": "array trader_cdlinvertedhammer ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlinvertedhammer.php"}, {"name": "trader_cdlkicking", "synopsis": "", "usage": "array trader_cdlkicking ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlkicking.php"}, {"name": "trader_cdlkickingbylength", "synopsis": "", "usage": "array trader_cdlkickingbylength ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlkickingbylength.php"}, {"name": "trader_cdlladderbottom", "synopsis": "", "usage": "array trader_cdlladderbottom ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlladderbottom.php"}, {"name": "trader_cdllongleggeddoji", "synopsis": "", "usage": "array trader_cdllongleggeddoji ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdllongleggeddoji.php"}, {"name": "trader_cdllongline", "synopsis": "", "usage": "array trader_cdllongline ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdllongline.php"}, {"name": "trader_cdlmarubozu", "synopsis": "", "usage": "array trader_cdlmarubozu ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlmarubozu.php"}, {"name": "trader_cdlmatchinglow", "synopsis": "", "usage": "array trader_cdlmatchinglow ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlmatchinglow.php"}, {"name": "trader_cdlmathold", "synopsis": "", "usage": "array trader_cdlmathold ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdlmathold.php"}, {"name": "trader_cdlmorningdojistar", "synopsis": "", "usage": "array trader_cdlmorningdojistar ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdlmorningdojistar.php"}, {"name": "trader_cdlmorningstar", "synopsis": "", "usage": "array trader_cdlmorningstar ( array $open , array $high , array $low , array $close [, float $penetration ] )", "url": "https://secure.php.net/manual/en/function.trader-cdlmorningstar.php"}, {"name": "trader_cdlonneck", "synopsis": "", "usage": "array trader_cdlonneck ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlonneck.php"}, {"name": "trader_cdlpiercing", "synopsis": "", "usage": "array trader_cdlpiercing ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlpiercing.php"}, {"name": "trader_cdlrickshawman", "synopsis": "", "usage": "array trader_cdlrickshawman ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlrickshawman.php"}, {"name": "trader_cdlrisefall3methods", "synopsis": "", "usage": "array trader_cdlrisefall3methods ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlrisefall3methods.php"}, {"name": "trader_cdlseparatinglines", "synopsis": "", "usage": "array trader_cdlseparatinglines ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlseparatinglines.php"}, {"name": "trader_cdlshootingstar", "synopsis": "", "usage": "array trader_cdlshootingstar ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlshootingstar.php"}, {"name": "trader_cdlshortline", "synopsis": "", "usage": "array trader_cdlshortline ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlshortline.php"}, {"name": "trader_cdlspinningtop", "synopsis": "", "usage": "array trader_cdlspinningtop ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlspinningtop.php"}, {"name": "trader_cdlstalledpattern", "synopsis": "", "usage": "array trader_cdlstalledpattern ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlstalledpattern.php"}, {"name": "trader_cdlsticksandwich", "synopsis": "", "usage": "array trader_cdlsticksandwich ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlsticksandwich.php"}, {"name": "trader_cdltakuri", "synopsis": "", "usage": "array trader_cdltakuri ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdltakuri.php"}, {"name": "trader_cdltasukigap", "synopsis": "", "usage": "array trader_cdltasukigap ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdltasukigap.php"}, {"name": "trader_cdlthrusting", "synopsis": "", "usage": "array trader_cdlthrusting ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlthrusting.php"}, {"name": "trader_cdltristar", "synopsis": "", "usage": "array trader_cdltristar ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdltristar.php"}, {"name": "trader_cdlunique3river", "synopsis": "", "usage": "array trader_cdlunique3river ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlunique3river.php"}, {"name": "trader_cdlupsidegap2crows", "synopsis": "", "usage": "array trader_cdlupsidegap2crows ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlupsidegap2crows.php"}, {"name": "trader_cdlxsidegap3methods", "synopsis": "", "usage": "array trader_cdlxsidegap3methods ( array $open , array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-cdlxsidegap3methods.php"}, {"name": "trader_ceil", "synopsis": "Calculates the next highest integer for each value in real and returns the resulting array.", "usage": "array trader_ceil ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ceil.php"}, {"name": "trader_cmo", "synopsis": "", "usage": "array trader_cmo ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-cmo.php"}, {"name": "trader_correl", "synopsis": "", "usage": "array trader_correl ( array $real0 , array $real1 [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-correl.php"}, {"name": "trader_cos", "synopsis": "Calculates the cosine for each value in real and returns the resulting array.", "usage": "array trader_cos ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-cos.php"}, {"name": "trader_cosh", "synopsis": "Calculates the hyperbolic cosine for each value in real and returns the resulting array.", "usage": "array trader_cosh ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-cosh.php"}, {"name": "trader_dema", "synopsis": "", "usage": "array trader_dema ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-dema.php"}, {"name": "trader_div", "synopsis": "Divides each value from real0 by the corresponding value from real1 and returns the resulting array.", "usage": "array trader_div ( array $real0 , array $real1 )", "url": "https://secure.php.net/manual/en/function.trader-div.php"}, {"name": "trader_dx", "synopsis": "", "usage": "array trader_dx ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-dx.php"}, {"name": "trader_ema", "synopsis": "", "usage": "array trader_ema ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-ema.php"}, {"name": "trader_errno", "synopsis": "Get error code of the last operation.", "usage": "int trader_errno ( void )", "url": "https://secure.php.net/manual/en/function.trader-errno.php"}, {"name": "trader_exp", "synopsis": "Calculates e raised to the power of each value in real. Returns an array with the calculated data.", "usage": "array trader_exp ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-exp.php"}, {"name": "trader_floor", "synopsis": "Calculates the next lowest integer for each value in real and returns the resulting array.", "usage": "array trader_floor ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-floor.php"}, {"name": "trader_get_compat", "synopsis": "Get compatibility mode which affects the way calculations are done by all the extension functions.", "usage": "int trader_get_compat ( void )", "url": "https://secure.php.net/manual/en/function.trader-get-compat.php"}, {"name": "trader_get_unstable_period", "synopsis": "Get unstable period factor for a particular function.", "usage": "int trader_get_unstable_period ( int $functionId )", "url": "https://secure.php.net/manual/en/function.trader-get-unstable-period.php"}, {"name": "trader_ht_dcperiod", "synopsis": "", "usage": "array trader_ht_dcperiod ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-dcperiod.php"}, {"name": "trader_ht_dcphase", "synopsis": "", "usage": "array trader_ht_dcphase ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-dcphase.php"}, {"name": "trader_ht_phasor", "synopsis": "", "usage": "array trader_ht_phasor ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-phasor.php"}, {"name": "trader_ht_sine", "synopsis": "", "usage": "array trader_ht_sine ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-sine.php"}, {"name": "trader_ht_trendline", "synopsis": "", "usage": "array trader_ht_trendline ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-trendline.php"}, {"name": "trader_ht_trendmode", "synopsis": "", "usage": "array trader_ht_trendmode ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ht-trendmode.php"}, {"name": "trader_kama", "synopsis": "", "usage": "array trader_kama ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-kama.php"}, {"name": "trader_linearreg_angle", "synopsis": "", "usage": "array trader_linearreg_angle ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-linearreg-angle.php"}, {"name": "trader_linearreg_intercept", "synopsis": "", "usage": "array trader_linearreg_intercept ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-linearreg-intercept.php"}, {"name": "trader_linearreg_slope", "synopsis": "", "usage": "array trader_linearreg_slope ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-linearreg-slope.php"}, {"name": "trader_linearreg", "synopsis": "", "usage": "array trader_linearreg ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-linearreg.php"}, {"name": "trader_ln", "synopsis": "Calculates the natural logarithm for each value in real and returns the resulting array.", "usage": "array trader_ln ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-ln.php"}, {"name": "trader_log10", "synopsis": "Calculates the base-10 logarithm for each value in real and returns the resulting array.", "usage": "array trader_log10 ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-log10.php"}, {"name": "trader_ma", "synopsis": "", "usage": "array trader_ma ( array $real [, int $timePeriod [, int $mAType ]] )", "url": "https://secure.php.net/manual/en/function.trader-ma.php"}, {"name": "trader_macd", "synopsis": "", "usage": "array trader_macd ( array $real [, int $fastPeriod [, int $slowPeriod [, int $signalPeriod ]]] )", "url": "https://secure.php.net/manual/en/function.trader-macd.php"}, {"name": "trader_macdext", "synopsis": "", "usage": "array trader_macdext ( array $real [, int $fastPeriod [, int $fastMAType [, int $slowPeriod [, int $slowMAType [, int $signalPeriod [, int $signalMAType ]]]]]] )", "url": "https://secure.php.net/manual/en/function.trader-macdext.php"}, {"name": "trader_macdfix", "synopsis": "", "usage": "array trader_macdfix ( array $real [, int $signalPeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-macdfix.php"}, {"name": "trader_mama", "synopsis": "", "usage": "array trader_mama ( array $real [, float $fastLimit [, float $slowLimit ]] )", "url": "https://secure.php.net/manual/en/function.trader-mama.php"}, {"name": "trader_mavp", "synopsis": "", "usage": "array trader_mavp ( array $real , array $periods [, int $minPeriod [, int $maxPeriod [, int $mAType ]]] )", "url": "https://secure.php.net/manual/en/function.trader-mavp.php"}, {"name": "trader_max", "synopsis": "", "usage": "array trader_max ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-max.php"}, {"name": "trader_maxindex", "synopsis": "", "usage": "array trader_maxindex ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-maxindex.php"}, {"name": "trader_medprice", "synopsis": "", "usage": "array trader_medprice ( array $high , array $low )", "url": "https://secure.php.net/manual/en/function.trader-medprice.php"}, {"name": "trader_mfi", "synopsis": "", "usage": "array trader_mfi ( array $high , array $low , array $close , array $volume [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-mfi.php"}, {"name": "trader_midpoint", "synopsis": "", "usage": "array trader_midpoint ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-midpoint.php"}, {"name": "trader_midprice", "synopsis": "", "usage": "array trader_midprice ( array $high , array $low [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-midprice.php"}, {"name": "trader_min", "synopsis": "", "usage": "array trader_min ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-min.php"}, {"name": "trader_minindex", "synopsis": "", "usage": "array trader_minindex ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-minindex.php"}, {"name": "trader_minmax", "synopsis": "", "usage": "array trader_minmax ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-minmax.php"}, {"name": "trader_minmaxindex", "synopsis": "", "usage": "array trader_minmaxindex ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-minmaxindex.php"}, {"name": "trader_minus_di", "synopsis": "", "usage": "array trader_minus_di ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-minus-di.php"}, {"name": "trader_minus_dm", "synopsis": "", "usage": "array trader_minus_dm ( array $high , array $low [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-minus-dm.php"}, {"name": "trader_mom", "synopsis": "", "usage": "array trader_mom ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-mom.php"}, {"name": "trader_mult", "synopsis": "Calculates the vector dot product of real0 with real1 and returns the resulting vector.", "usage": "array trader_mult ( array $real0 , array $real1 )", "url": "https://secure.php.net/manual/en/function.trader-mult.php"}, {"name": "trader_natr", "synopsis": "", "usage": "array trader_natr ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-natr.php"}, {"name": "trader_obv", "synopsis": "", "usage": "array trader_obv ( array $real , array $volume )", "url": "https://secure.php.net/manual/en/function.trader-obv.php"}, {"name": "trader_plus_di", "synopsis": "", "usage": "array trader_plus_di ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-plus-di.php"}, {"name": "trader_plus_dm", "synopsis": "", "usage": "array trader_plus_dm ( array $high , array $low [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-plus-dm.php"}, {"name": "trader_ppo", "synopsis": "", "usage": "array trader_ppo ( array $real [, int $fastPeriod [, int $slowPeriod [, int $mAType ]]] )", "url": "https://secure.php.net/manual/en/function.trader-ppo.php"}, {"name": "trader_roc", "synopsis": "", "usage": "array trader_roc ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-roc.php"}, {"name": "trader_rocp", "synopsis": "", "usage": "array trader_rocp ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-rocp.php"}, {"name": "trader_rocr", "synopsis": "", "usage": "array trader_rocr ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-rocr.php"}, {"name": "trader_rocr100", "synopsis": "", "usage": "array trader_rocr100 ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-rocr100.php"}, {"name": "trader_rsi", "synopsis": "", "usage": "array trader_rsi ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-rsi.php"}, {"name": "trader_sar", "synopsis": "", "usage": "array trader_sar ( array $high , array $low [, float $acceleration [, float $maximum ]] )", "url": "https://secure.php.net/manual/en/function.trader-sar.php"}, {"name": "trader_sarext", "synopsis": "", "usage": "array trader_sarext ( array $high , array $low [, float $startValue [, float $offsetOnReverse [, float $accelerationInitLong [, float $accelerationLong [, float $accelerationMaxLong [, float $accelerationInitShort [, float $accelerationShort [, float $accelerationMaxShort ]]]]]]]] )", "url": "https://secure.php.net/manual/en/function.trader-sarext.php"}, {"name": "trader_set_compat", "synopsis": "Set compatibility mode which will affect the way calculations are done by all the extension functions.", "usage": "void trader_set_compat ( int $compatId )", "url": "https://secure.php.net/manual/en/function.trader-set-compat.php"}, {"name": "trader_set_unstable_period", "synopsis": "Influences unstable period factor for functions, which are sensible to it. More information about unstable periods can be found on the \u00bb\u00a0TA-Lib API documentation page.", "usage": "void trader_set_unstable_period ( int $functionId , int $timePeriod )", "url": "https://secure.php.net/manual/en/function.trader-set-unstable-period.php"}, {"name": "trader_sin", "synopsis": "Calculates the sine for each value in real and returns the resulting array.", "usage": "array trader_sin ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-sin.php"}, {"name": "trader_sinh", "synopsis": "Calculates the hyperbolic sine for each value in real and returns the resulting array.", "usage": "array trader_sinh ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-sinh.php"}, {"name": "trader_sma", "synopsis": "", "usage": "array trader_sma ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-sma.php"}, {"name": "trader_sqrt", "synopsis": "Calculates the square root of each value in real and returns the resulting array.", "usage": "array trader_sqrt ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-sqrt.php"}, {"name": "trader_stddev", "synopsis": "", "usage": "array trader_stddev ( array $real [, int $timePeriod [, float $nbDev ]] )", "url": "https://secure.php.net/manual/en/function.trader-stddev.php"}, {"name": "trader_stoch", "synopsis": "", "usage": "array trader_stoch ( array $high , array $low , array $close [, int $fastK_Period [, int $slowK_Period [, int $slowK_MAType [, int $slowD_Period [, int $slowD_MAType ]]]]] )", "url": "https://secure.php.net/manual/en/function.trader-stoch.php"}, {"name": "trader_stochf", "synopsis": "", "usage": "array trader_stochf ( array $high , array $low , array $close [, int $fastK_Period [, int $fastD_Period [, int $fastD_MAType ]]] )", "url": "https://secure.php.net/manual/en/function.trader-stochf.php"}, {"name": "trader_stochrsi", "synopsis": "", "usage": "array trader_stochrsi ( array $real [, int $timePeriod [, int $fastK_Period [, int $fastD_Period [, int $fastD_MAType ]]]] )", "url": "https://secure.php.net/manual/en/function.trader-stochrsi.php"}, {"name": "trader_sub", "synopsis": "Calculates the vector subtraction of real1 from real0 and returns the resulting vector.", "usage": "array trader_sub ( array $real0 , array $real1 )", "url": "https://secure.php.net/manual/en/function.trader-sub.php"}, {"name": "trader_sum", "synopsis": "", "usage": "array trader_sum ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-sum.php"}, {"name": "trader_t3", "synopsis": "", "usage": "array trader_t3 ( array $real [, int $timePeriod [, float $vFactor ]] )", "url": "https://secure.php.net/manual/en/function.trader-t3.php"}, {"name": "trader_tan", "synopsis": "Calculates the tangent for each value in real and returns the resulting array.", "usage": "array trader_tan ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-tan.php"}, {"name": "trader_tanh", "synopsis": "Calculates the hyperbolic tangent for each value in real and returns the resulting array.", "usage": "array trader_tanh ( array $real )", "url": "https://secure.php.net/manual/en/function.trader-tanh.php"}, {"name": "trader_tema", "synopsis": "", "usage": "array trader_tema ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-tema.php"}, {"name": "trader_trange", "synopsis": "", "usage": "array trader_trange ( array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-trange.php"}, {"name": "trader_trima", "synopsis": "", "usage": "array trader_trima ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-trima.php"}, {"name": "trader_trix", "synopsis": "", "usage": "array trader_trix ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-trix.php"}, {"name": "trader_tsf", "synopsis": "", "usage": "array trader_tsf ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-tsf.php"}, {"name": "trader_typprice", "synopsis": "", "usage": "array trader_typprice ( array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-typprice.php"}, {"name": "trader_ultosc", "synopsis": "", "usage": "array trader_ultosc ( array $high , array $low , array $close [, int $timePeriod1 [, int $timePeriod2 [, int $timePeriod3 ]]] )", "url": "https://secure.php.net/manual/en/function.trader-ultosc.php"}, {"name": "trader_var", "synopsis": "", "usage": "array trader_var ( array $real [, int $timePeriod [, float $nbDev ]] )", "url": "https://secure.php.net/manual/en/function.trader-var.php"}, {"name": "trader_wclprice", "synopsis": "", "usage": "array trader_wclprice ( array $high , array $low , array $close )", "url": "https://secure.php.net/manual/en/function.trader-wclprice.php"}, {"name": "trader_willr", "synopsis": "", "usage": "array trader_willr ( array $high , array $low , array $close [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-willr.php"}, {"name": "trader_wma", "synopsis": "", "usage": "array trader_wma ( array $real [, int $timePeriod ] )", "url": "https://secure.php.net/manual/en/function.trader-wma.php"}, {"name": "trait_exists", "synopsis": "", "usage": "bool trait_exists ( string $traitname [, bool $autoload ] )", "url": "https://secure.php.net/manual/en/function.trait-exists.php"}, {"name": "trigger_error", "synopsis": "Used to trigger a user error condition, it can be used in conjunction with the built-in error handler, or with a user defined function that has been set as the new error handler (set_error_handler()).", "usage": "bool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] )", "url": "https://secure.php.net/manual/en/function.trigger-error.php"}, {"name": "trim", "synopsis": "This function returns a string with whitespace stripped from the beginning and end of str. Without the second parameter, trim() will strip these characters:", "usage": "string trim ( string $str [, string $character_mask = \" \\t\\n\\r\\0\\x0B\" ] )", "url": "https://secure.php.net/manual/en/function.trim.php"}, {"name": "uasort", "synopsis": "This function sorts an array such that array indices maintain their correlation with the array elements they are associated with, using a user-defined comparison function.", "usage": "bool uasort ( array &$array , callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.uasort.php"}, {"name": "ucfirst", "synopsis": "Returns a string with the first character of str capitalized, if that character is alphabetic.", "usage": "string ucfirst ( string $str )", "url": "https://secure.php.net/manual/en/function.ucfirst.php"}, {"name": "ucwords", "synopsis": "Returns a string with the first character of each word in str capitalized, if that character is alphabetic.", "usage": "string ucwords ( string $str [, string $delimiters = \" \\t\\r\\n\\f\\v\" ] )", "url": "https://secure.php.net/manual/en/function.ucwords.php"}, {"name": "udm_add_search_limit", "synopsis": "udm_add_search_limit() adds search restrictions.", "usage": "bool udm_add_search_limit ( resource $agent , int $var , string $val )", "url": "https://secure.php.net/manual/en/function.udm-add-search-limit.php"}, {"name": "udm_alloc_agent_array", "synopsis": "udm_alloc_agent_array() will create an agent with multiple database connections.", "usage": "resource udm_alloc_agent_array ( array $databases )", "url": "https://secure.php.net/manual/en/function.udm-alloc-agent-array.php"}, {"name": "udm_alloc_agent", "synopsis": "Allocate a mnoGoSearch session.", "usage": "resource udm_alloc_agent ( string $dbaddr [, string $dbmode ] )", "url": "https://secure.php.net/manual/en/function.udm-alloc-agent.php"}, {"name": "udm_api_version", "synopsis": "Gets the mnoGoSearch API version.", "usage": "int udm_api_version ( void )", "url": "https://secure.php.net/manual/en/function.udm-api-version.php"}, {"name": "udm_cat_list", "synopsis": "Gets all the categories on the same level with the current one.", "usage": "array udm_cat_list ( resource $agent , string $category )", "url": "https://secure.php.net/manual/en/function.udm-cat-list.php"}, {"name": "udm_cat_path", "synopsis": "Returns an array describing the path in the categories tree from the tree root to the current one, specified by category.", "usage": "array udm_cat_path ( resource $agent , string $category )", "url": "https://secure.php.net/manual/en/function.udm-cat-path.php"}, {"name": "udm_check_charset", "synopsis": "", "usage": "bool udm_check_charset ( resource $agent , string $charset )", "url": "https://secure.php.net/manual/en/function.udm-check-charset.php"}, {"name": "udm_clear_search_limits", "synopsis": "udm_clear_search_limits() resets defined search limitations.", "usage": "bool udm_clear_search_limits ( resource $agent )", "url": "https://secure.php.net/manual/en/function.udm-clear-search-limits.php"}, {"name": "udm_crc32", "synopsis": "", "usage": "int udm_crc32 ( resource $agent , string $str )", "url": "https://secure.php.net/manual/en/function.udm-crc32.php"}, {"name": "udm_errno", "synopsis": "Receiving numeric agent error code.", "usage": "int udm_errno ( resource $agent )", "url": "https://secure.php.net/manual/en/function.udm-errno.php"}, {"name": "udm_error", "synopsis": "Gets the agent error message.", "usage": "string udm_error ( resource $agent )", "url": "https://secure.php.net/manual/en/function.udm-error.php"}, {"name": "udm_find", "synopsis": "Performs a search.", "usage": "resource udm_find ( resource $agent , string $query )", "url": "https://secure.php.net/manual/en/function.udm-find.php"}, {"name": "udm_free_agent", "synopsis": "Freeing up memory allocated for agent session.", "usage": "int udm_free_agent ( resource $agent )", "url": "https://secure.php.net/manual/en/function.udm-free-agent.php"}, {"name": "udm_free_ispell_data", "synopsis": "Frees the memory allocated for ispell data.", "usage": "bool udm_free_ispell_data ( int $agent )", "url": "https://secure.php.net/manual/en/function.udm-free-ispell-data.php"}, {"name": "udm_free_res", "synopsis": "Freeing up memory allocated for results.", "usage": "bool udm_free_res ( resource $res )", "url": "https://secure.php.net/manual/en/function.udm-free-res.php"}, {"name": "udm_get_doc_count", "synopsis": "udm_get_doc_count() returns the number of documents in the database.", "usage": "int udm_get_doc_count ( resource $agent )", "url": "https://secure.php.net/manual/en/function.udm-get-doc-count.php"}, {"name": "udm_get_res_field", "synopsis": "Fetch a mnoGoSearch result field.", "usage": "string udm_get_res_field ( resource $res , int $row , int $field )", "url": "https://secure.php.net/manual/en/function.udm-get-res-field.php"}, {"name": "udm_get_res_param", "synopsis": "Gets the mnoGoSearch result parameters.", "usage": "string udm_get_res_param ( resource $res , int $param )", "url": "https://secure.php.net/manual/en/function.udm-get-res-param.php"}, {"name": "udm_hash32", "synopsis": "udm_hash32() will take a string str and return a quite unique 32-bit hash number from it.", "usage": "int udm_hash32 ( resource $agent , string $str )", "url": "https://secure.php.net/manual/en/function.udm-hash32.php"}, {"name": "udm_load_ispell_data", "synopsis": "udm_load_ispell_data() loads ispell data.", "usage": "bool udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag )", "url": "https://secure.php.net/manual/en/function.udm-load-ispell-data.php"}, {"name": "udm_set_agent_param", "synopsis": "Defines mnoGoSearch session parameters.", "usage": "bool udm_set_agent_param ( resource $agent , int $var , string $val )", "url": "https://secure.php.net/manual/en/function.udm-set-agent-param.php"}, {"name": "UI\\Draw\\Text\\Font\\fontFamilies", "synopsis": "Returns an array of valid font families for the current system", "usage": "array UI\\Draw\\Text\\Font\\fontFamilies ( void )", "url": "https://secure.php.net/manual/en/function.ui-draw-text-font-fontfamilies.php"}, {"name": "UI\\quit", "synopsis": "Shall cause the main loop to be exited", "usage": "void UI\\quit ( void )", "url": "https://secure.php.net/manual/en/function.ui-quit.php"}, {"name": "UI\\run", "synopsis": "Shall cause PHP to enter into the main loop, by default control will not be returned to the caller", "usage": "void UI\\run ([ int $flags ] )", "url": "https://secure.php.net/manual/en/function.ui-run.php"}, {"name": "uksort", "synopsis": "uksort() will sort the keys of an array using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.", "usage": "bool uksort ( array &$array , callable $key_compare_func )", "url": "https://secure.php.net/manual/en/function.uksort.php"}, {"name": "umask", "synopsis": "umask() sets PHP's umask to mask & 0777 and returns the old umask. When PHP is being used as a server module, the umask is restored when each request is finished.", "usage": "int umask ([ int $mask ] )", "url": "https://secure.php.net/manual/en/function.umask.php"}, {"name": "uniqid", "synopsis": "Gets a prefixed unique identifier based on the current time in microseconds.", "usage": "string uniqid ([ string $prefix = \"\" [, bool $more_entropy = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.uniqid.php"}, {"name": "unixtojd", "synopsis": "Return the Julian Day for a Unix timestamp (seconds since 1.1.1970), or for the current day if no timestamp is given. Either way, the time is regarded as local time (not UTC).", "usage": "int unixtojd ([ int $timestamp = time() ] )", "url": "https://secure.php.net/manual/en/function.unixtojd.php"}, {"name": "unlink", "synopsis": "Deletes filename. Similar to the Unix C unlink() function. An E_WARNING level error will be generated on failure.", "usage": "bool unlink ( string $filename [, resource $context ] )", "url": "https://secure.php.net/manual/en/function.unlink.php"}, {"name": "unpack", "synopsis": "Unpacks from a binary string into an array according to the given format.", "usage": "array unpack ( string $format , string $data [, int $offset = 0 ] )", "url": "https://secure.php.net/manual/en/function.unpack.php"}, {"name": "unregister_tick_function", "synopsis": null, "usage": "void unregister_tick_function ( string $function_name )", "url": "https://secure.php.net/manual/en/function.unregister-tick-function.php"}, {"name": "unserialize", "synopsis": null, "usage": "mixed unserialize ( string $str [, array $options ] )", "url": "https://secure.php.net/manual/en/function.unserialize.php"}, {"name": "unset", "synopsis": "unset() destroys the specified variables.", "usage": "void unset ( mixed $var [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.unset.php"}, {"name": "untaint", "synopsis": "Untaint strings", "usage": "bool untaint ( string &$string [, string $... ] )", "url": "https://secure.php.net/manual/en/function.untaint.php"}, {"name": "uopz_allow_exit", "synopsis": "By default uopz disables the exit opcode, so exit() calls are practically ignored. uopz_allow_exit() allows to control this behavior.", "usage": "void uopz_allow_exit ( bool $allow )", "url": "https://secure.php.net/manual/en/function.uopz-allow-exit.php"}, {"name": "uopz_backup", "synopsis": "Backup a function at runtime, to be restored on shutdown", "usage": "void uopz_backup ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-backup.php"}, {"name": "uopz_compose", "synopsis": "Creates a new class of the given name that implements, extends, or uses all of the provided classes", "usage": "void uopz_compose ( string $name , array $classes [, array $methods [, array $properties [, int $flags ]]] )", "url": "https://secure.php.net/manual/en/function.uopz-compose.php"}, {"name": "uopz_copy", "synopsis": "Copy a function by name", "usage": "Closure uopz_copy ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-copy.php"}, {"name": "uopz_delete", "synopsis": "Deletes a function or method", "usage": "void uopz_delete ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-delete.php"}, {"name": "uopz_extend", "synopsis": "Makes class extend parent", "usage": "bool uopz_extend ( string $class , string $parent )", "url": "https://secure.php.net/manual/en/function.uopz-extend.php"}, {"name": "uopz_flags", "synopsis": "Get or set the flags on a class or function entry at runtime", "usage": "int uopz_flags ([ string $class ], string $function , int $flags )", "url": "https://secure.php.net/manual/en/function.uopz-flags.php"}, {"name": "uopz_function", "synopsis": "Creates a function at runtime", "usage": "void uopz_function ([ string $class ], string $function , Closure $handler [, int $modifiers ] )", "url": "https://secure.php.net/manual/en/function.uopz-function.php"}, {"name": "uopz_get_exit_status", "synopsis": "Retrieves the last set exit status, i.e. the value passed to exit().", "usage": "mixed uopz_get_exit_status ( void )", "url": "https://secure.php.net/manual/en/function.uopz-get-exit-status.php"}, {"name": "uopz_get_mock", "synopsis": "Returns the current mock for class.", "usage": "mixed uopz_get_mock ( string $class )", "url": "https://secure.php.net/manual/en/function.uopz-get-mock.php"}, {"name": "uopz_get_return", "synopsis": "Gets the return value of the function previously set by uopz_set_return().", "usage": "mixed uopz_get_return ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-get-return.php"}, {"name": "uopz_implement", "synopsis": "Makes class implement interface", "usage": "bool uopz_implement ( string $class , string $interface )", "url": "https://secure.php.net/manual/en/function.uopz-implement.php"}, {"name": "uopz_overload", "synopsis": "Overloads the specified opcode with the user defined function", "usage": "void uopz_overload ( int $opcode , Callable $callable )", "url": "https://secure.php.net/manual/en/function.uopz-overload.php"}, {"name": "uopz_redefine", "synopsis": "Redefines the given constant as value", "usage": "bool uopz_redefine ([ string $class ], string $constant , mixed $value )", "url": "https://secure.php.net/manual/en/function.uopz-redefine.php"}, {"name": "uopz_rename", "synopsis": "Renames function to rename", "usage": "void uopz_rename ([ string $class ], string $function , string $rename )", "url": "https://secure.php.net/manual/en/function.uopz-rename.php"}, {"name": "uopz_restore", "synopsis": "Restore a previously backed up function", "usage": "void uopz_restore ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-restore.php"}, {"name": "uopz_set_mock", "synopsis": "If mock is a string containing the name of a class then it will be instantiated instead of class. mock can also be an object.", "usage": "void uopz_set_mock ( string $class , mixed $mock )", "url": "https://secure.php.net/manual/en/function.uopz-set-mock.php"}, {"name": "uopz_set_return", "synopsis": "Sets the return value of the function to value. If value is a Closure and execute is set, the Closure will be executed in place of the original function.", "usage": "bool uopz_set_return ([ string $class ], string $function , mixed $value [, bool $execute = FALSE ] )", "url": "https://secure.php.net/manual/en/function.uopz-set-return.php"}, {"name": "uopz_undefine", "synopsis": "Removes the constant at runtime", "usage": "bool uopz_undefine ([ string $class ], string $constant )", "url": "https://secure.php.net/manual/en/function.uopz-undefine.php"}, {"name": "uopz_unset_mock", "synopsis": "Unsets the previously set mock for class.", "usage": "void uopz_unset_mock ( string $class )", "url": "https://secure.php.net/manual/en/function.uopz-unset-mock.php"}, {"name": "uopz_unset_return", "synopsis": "Unsets the return value of the function previously set by uopz_set_return().", "usage": "bool uopz_unset_return ([ string $class ], string $function )", "url": "https://secure.php.net/manual/en/function.uopz-unset-return.php"}, {"name": "urldecode", "synopsis": "Decodes any %## encoding in the given string. Plus symbols ('+') are decoded to a space character.", "usage": "string urldecode ( string $str )", "url": "https://secure.php.net/manual/en/function.urldecode.php"}, {"name": "urlencode", "synopsis": "This function is convenient when encoding a string to be used in a query part of a URL, as a convenient way to pass variables to the next page.", "usage": "string urlencode ( string $str )", "url": "https://secure.php.net/manual/en/function.urlencode.php"}, {"name": "use_soap_error_handler", "synopsis": "This function sets whether or not to use the SOAP error handler in the SOAP server. It will return the previous value. If set to TRUE, details of errors in a SoapServer application will be sent to the client as a SOAP fault message. If FALSE, the standard PHP error handler is used. The default is to send error to the client as SOAP fault message.", "usage": "bool use_soap_error_handler ([ bool $handler = TRUE ] )", "url": "https://secure.php.net/manual/en/function.use-soap-error-handler.php"}, {"name": "usleep", "synopsis": "Delays program execution for the given number of microseconds.", "usage": "void usleep ( int $micro_seconds )", "url": "https://secure.php.net/manual/en/function.usleep.php"}, {"name": "usort", "synopsis": "This function will sort an array by its values using a user-supplied comparison function. If the array you wish to sort needs to be sorted by some non-trivial criteria, you should use this function.", "usage": "bool usort ( array &$array , callable $value_compare_func )", "url": "https://secure.php.net/manual/en/function.usort.php"}, {"name": "utf8_decode", "synopsis": "This function converts the string data from the UTF-8 encoding to ISO-8859-1. Bytes in the string which are not valid UTF-8, and UTF-8 characters which do not exist in ISO-8859-1 (that is, characters above U+00FF) are replaced with ?.", "usage": "string utf8_decode ( string $data )", "url": "https://secure.php.net/manual/en/function.utf8-decode.php"}, {"name": "utf8_encode", "synopsis": "This function converts the string data from the ISO-8859-1 encoding to UTF-8.", "usage": "string utf8_encode ( string $data )", "url": "https://secure.php.net/manual/en/function.utf8-encode.php"}, {"name": "var_dump", "synopsis": null, "usage": "void var_dump ( mixed $expression [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.var-dump.php"}, {"name": "var_export", "synopsis": null, "usage": "mixed var_export ( mixed $expression [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/function.var-export.php"}, {"name": "variant_abs", "synopsis": "Returns the absolute value of a variant.", "usage": "mixed variant_abs ( mixed $val )", "url": "https://secure.php.net/manual/en/function.variant-abs.php"}, {"name": "variant_add", "synopsis": "Adds left to right using the following rules (taken from the MSDN library), which correspond to those of Visual Basic:", "usage": "mixed variant_add ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-add.php"}, {"name": "variant_and", "synopsis": "Performs a bitwise AND operation. Note that this is slightly different from a regular AND operation.", "usage": "mixed variant_and ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-and.php"}, {"name": "variant_cast", "synopsis": "This function makes a copy of variant and then performs a variant cast operation to force the copy to have the type given by type.", "usage": "variant variant_cast ( variant $variant , int $type )", "url": "https://secure.php.net/manual/en/function.variant-cast.php"}, {"name": "variant_cat", "synopsis": "Concatenates left with right and returns the result.", "usage": "mixed variant_cat ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-cat.php"}, {"name": "variant_cmp", "synopsis": "Compares left with right.", "usage": "int variant_cmp ( mixed $left , mixed $right [, int $lcid [, int $flags ]] )", "url": "https://secure.php.net/manual/en/function.variant-cmp.php"}, {"name": "variant_date_from_timestamp", "synopsis": "Converts timestamp from a unix timestamp value into a variant of type VT_DATE. This allows easier interopability between the unix-ish parts of PHP and COM.", "usage": "variant variant_date_from_timestamp ( int $timestamp )", "url": "https://secure.php.net/manual/en/function.variant-date-from-timestamp.php"}, {"name": "variant_date_to_timestamp", "synopsis": "Converts variant from a VT_DATE (or similar) value into a Unix timestamp. This allows easier interopability between the Unix-ish parts of PHP and COM.", "usage": "int variant_date_to_timestamp ( variant $variant )", "url": "https://secure.php.net/manual/en/function.variant-date-to-timestamp.php"}, {"name": "variant_div", "synopsis": "Divides left by right and returns the result.", "usage": "mixed variant_div ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-div.php"}, {"name": "variant_eqv", "synopsis": "Performs a bitwise equivalence on two variants.", "usage": "mixed variant_eqv ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-eqv.php"}, {"name": "variant_fix", "synopsis": "Gets the integer portion of a variant.", "usage": "mixed variant_fix ( mixed $variant )", "url": "https://secure.php.net/manual/en/function.variant-fix.php"}, {"name": "variant_get_type", "synopsis": "Returns the type of a variant object.", "usage": "int variant_get_type ( variant $variant )", "url": "https://secure.php.net/manual/en/function.variant-get-type.php"}, {"name": "variant_idiv", "synopsis": "Converts left and right to integer values, and then performs integer division.", "usage": "mixed variant_idiv ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-idiv.php"}, {"name": "variant_imp", "synopsis": "Performs a bitwise implication operation.", "usage": "mixed variant_imp ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-imp.php"}, {"name": "variant_int", "synopsis": "Gets the integer portion of a variant.", "usage": "mixed variant_int ( mixed $variant )", "url": "https://secure.php.net/manual/en/function.variant-int.php"}, {"name": "variant_mod", "synopsis": "Divides left by right and returns the remainder.", "usage": "mixed variant_mod ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-mod.php"}, {"name": "variant_mul", "synopsis": "Multiplies left by right.", "usage": "mixed variant_mul ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-mul.php"}, {"name": "variant_neg", "synopsis": "Performs logical negation of variant.", "usage": "mixed variant_neg ( mixed $variant )", "url": "https://secure.php.net/manual/en/function.variant-neg.php"}, {"name": "variant_not", "synopsis": "Performs bitwise not negation on variant and returns the result.", "usage": "mixed variant_not ( mixed $variant )", "url": "https://secure.php.net/manual/en/function.variant-not.php"}, {"name": "variant_or", "synopsis": "Performs a bitwise OR operation. Note that this is slightly different from a regular OR operation.", "usage": "mixed variant_or ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-or.php"}, {"name": "variant_pow", "synopsis": "Returns the result of left to the power of right.", "usage": "mixed variant_pow ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-pow.php"}, {"name": "variant_round", "synopsis": "Returns the value of variant rounded to decimals decimal places.", "usage": "mixed variant_round ( mixed $variant , int $decimals )", "url": "https://secure.php.net/manual/en/function.variant-round.php"}, {"name": "variant_set_type", "synopsis": "This function is similar to variant_cast() except that the variant is modified \"in-place\"; no new variant is created. The parameters for this function have identical meaning to those of variant_cast().", "usage": "void variant_set_type ( variant $variant , int $type )", "url": "https://secure.php.net/manual/en/function.variant-set-type.php"}, {"name": "variant_set", "synopsis": "Converts value to a variant and assigns it to the variant object; no new variant object is created, and the old value of variant is freed/released.", "usage": "void variant_set ( variant $variant , mixed $value )", "url": "https://secure.php.net/manual/en/function.variant-set.php"}, {"name": "variant_sub", "synopsis": "Subtracts right from left.", "usage": "mixed variant_sub ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-sub.php"}, {"name": "variant_xor", "synopsis": "Performs a logical exclusion.", "usage": "mixed variant_xor ( mixed $left , mixed $right )", "url": "https://secure.php.net/manual/en/function.variant-xor.php"}, {"name": "version_compare", "synopsis": "version_compare() compares two \"PHP-standardized\" version number strings.", "usage": "int version_compare ( string $version1 , string $version2 )", "url": "https://secure.php.net/manual/en/function.version-compare.php"}, {"name": "vfprintf", "synopsis": "Write a string produced according to format to the stream resource specified by handle.", "usage": "int vfprintf ( resource $handle , string $format , array $args )", "url": "https://secure.php.net/manual/en/function.vfprintf.php"}, {"name": "virtual", "synopsis": "virtual() is an Apache-specific function which is similar to <!--#include virtual...--> in mod_include. It performs an Apache sub-request. It is useful for including CGI scripts or .shtml files, or anything else that you would parse through Apache. Note that for a CGI script, the script must generate valid CGI headers. At the minimum that means it must generate a Content-Type header.", "usage": "bool virtual ( string $filename )", "url": "https://secure.php.net/manual/en/function.virtual.php"}, {"name": "vpopmail_add_alias_domain_ex", "synopsis": null, "usage": "bool vpopmail_add_alias_domain_ex ( string $olddomain , string $newdomain )", "url": "https://secure.php.net/manual/en/function.vpopmail-add-alias-domain-ex.php"}, {"name": "vpopmail_add_alias_domain", "synopsis": null, "usage": "bool vpopmail_add_alias_domain ( string $domain , string $aliasdomain )", "url": "https://secure.php.net/manual/en/function.vpopmail-add-alias-domain.php"}, {"name": "vpopmail_add_domain_ex", "synopsis": null, "usage": "bool vpopmail_add_domain_ex ( string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]] )", "url": "https://secure.php.net/manual/en/function.vpopmail-add-domain-ex.php"}, {"name": "vpopmail_add_domain", "synopsis": null, "usage": "bool vpopmail_add_domain ( string $domain , string $dir , int $uid , int $gid )", "url": "https://secure.php.net/manual/en/function.vpopmail-add-domain.php"}, {"name": "vpopmail_add_user", "synopsis": null, "usage": "bool vpopmail_add_user ( string $user , string $domain , string $password [, string $gecos [, bool $apop ]] )", "url": "https://secure.php.net/manual/en/function.vpopmail-add-user.php"}, {"name": "vpopmail_alias_add", "synopsis": null, "usage": "bool vpopmail_alias_add ( string $user , string $domain , string $alias )", "url": "https://secure.php.net/manual/en/function.vpopmail-alias-add.php"}, {"name": "vpopmail_alias_del_domain", "synopsis": null, "usage": "bool vpopmail_alias_del_domain ( string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-alias-del-domain.php"}, {"name": "vpopmail_alias_del", "synopsis": null, "usage": "bool vpopmail_alias_del ( string $user , string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-alias-del.php"}, {"name": "vpopmail_alias_get_all", "synopsis": null, "usage": "array vpopmail_alias_get_all ( string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-alias-get-all.php"}, {"name": "vpopmail_alias_get", "synopsis": null, "usage": "array vpopmail_alias_get ( string $alias , string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-alias-get.php"}, {"name": "vpopmail_auth_user", "synopsis": null, "usage": "bool vpopmail_auth_user ( string $user , string $domain , string $password [, string $apop ] )", "url": "https://secure.php.net/manual/en/function.vpopmail-auth-user.php"}, {"name": "vpopmail_del_domain_ex", "synopsis": null, "usage": "bool vpopmail_del_domain_ex ( string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-del-domain-ex.php"}, {"name": "vpopmail_del_domain", "synopsis": null, "usage": "bool vpopmail_del_domain ( string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-del-domain.php"}, {"name": "vpopmail_del_user", "synopsis": null, "usage": "bool vpopmail_del_user ( string $user , string $domain )", "url": "https://secure.php.net/manual/en/function.vpopmail-del-user.php"}, {"name": "vpopmail_error", "synopsis": null, "usage": "string vpopmail_error ( void )", "url": "https://secure.php.net/manual/en/function.vpopmail-error.php"}, {"name": "vpopmail_passwd", "synopsis": null, "usage": "bool vpopmail_passwd ( string $user , string $domain , string $password [, bool $apop ] )", "url": "https://secure.php.net/manual/en/function.vpopmail-passwd.php"}, {"name": "vpopmail_set_user_quota", "synopsis": null, "usage": "bool vpopmail_set_user_quota ( string $user , string $domain , string $quota )", "url": "https://secure.php.net/manual/en/function.vpopmail-set-user-quota.php"}, {"name": "vprintf", "synopsis": "Display array values as a formatted string according to format (which is described in the documentation for sprintf()).", "usage": "int vprintf ( string $format , array $args )", "url": "https://secure.php.net/manual/en/function.vprintf.php"}, {"name": "vsprintf", "synopsis": "Operates as sprintf() but accepts an array of arguments, rather than a variable number of arguments.", "usage": "string vsprintf ( string $format , array $args )", "url": "https://secure.php.net/manual/en/function.vsprintf.php"}, {"name": "wddx_add_vars", "synopsis": "Serializes the passed variables and add the result to the given packet.", "usage": "bool wddx_add_vars ( resource $packet_id , mixed $var_name [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.wddx-add-vars.php"}, {"name": "wddx_deserialize", "synopsis": "Unserializes a WDDX packet.", "usage": "mixed wddx_deserialize ( string $packet )", "url": "https://secure.php.net/manual/en/function.wddx-deserialize.php"}, {"name": "wddx_packet_end", "synopsis": "Ends and returns the given WDDX packet.", "usage": "string wddx_packet_end ( resource $packet_id )", "url": "https://secure.php.net/manual/en/function.wddx-packet-end.php"}, {"name": "wddx_packet_start", "synopsis": "Start a new WDDX packet for incremental addition of variables. It automatically creates a structure definition inside the packet to contain the variables.", "usage": "resource wddx_packet_start ([ string $comment ] )", "url": "https://secure.php.net/manual/en/function.wddx-packet-start.php"}, {"name": "wddx_serialize_value", "synopsis": "Creates a WDDX packet from a single given value.", "usage": "string wddx_serialize_value ( mixed $var [, string $comment ] )", "url": "https://secure.php.net/manual/en/function.wddx-serialize-value.php"}, {"name": "wddx_serialize_vars", "synopsis": "Creates a WDDX packet with a structure that contains the serialized representation of the passed variables.", "usage": "string wddx_serialize_vars ( mixed $var_name [, mixed $... ] )", "url": "https://secure.php.net/manual/en/function.wddx-serialize-vars.php"}, {"name": "win32_continue_service", "synopsis": "Resumes a paused, named service. Requires administrative privileges.", "usage": "int win32_continue_service ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-continue-service.php"}, {"name": "win32_create_service", "synopsis": null, "usage": "mixed win32_create_service ( array $details [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-create-service.php"}, {"name": "win32_delete_service", "synopsis": "Attempts to delete a service from the SCM database. Administrative privileges are required for this to succeed.", "usage": "mixed win32_delete_service ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-delete-service.php"}, {"name": "win32_get_last_control_message", "synopsis": "Returns the control code that was last sent to this service process. When running as a service you should periodically check this to determine if your service needs to stop running.", "usage": "int win32_get_last_control_message ( void )", "url": "https://secure.php.net/manual/en/function.win32-get-last-control-message.php"}, {"name": "win32_pause_service", "synopsis": "Pauses a named service. Requires administrative privileges.", "usage": "int win32_pause_service ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-pause-service.php"}, {"name": "win32_ps_list_procs", "synopsis": "Retrieves statistics about all running processes.", "usage": "array win32_ps_list_procs ( void )", "url": "https://secure.php.net/manual/en/function.win32-ps-list-procs.php"}, {"name": "win32_ps_stat_mem", "synopsis": "Retrieves statistics about the global memory utilization.", "usage": "array win32_ps_stat_mem ( void )", "url": "https://secure.php.net/manual/en/function.win32-ps-stat-mem.php"}, {"name": "win32_ps_stat_proc", "synopsis": "Retrieves statistics about the process with the process id pid.", "usage": "array win32_ps_stat_proc ([ int $pid = 0 ] )", "url": "https://secure.php.net/manual/en/function.win32-ps-stat-proc.php"}, {"name": "win32_query_service_status", "synopsis": "Queries the current status for a service, returning an array of information.", "usage": "mixed win32_query_service_status ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-query-service-status.php"}, {"name": "win32_set_service_status", "synopsis": "Informs the SCM of the current status of a running service. This call is only valid for a running service process.", "usage": "bool win32_set_service_status ( int $status [, int $checkpoint = 0 ] )", "url": "https://secure.php.net/manual/en/function.win32-set-service-status.php"}, {"name": "win32_start_service_ctrl_dispatcher", "synopsis": "When launched via the Service Control Manager, a service process is required to \"check-in\" with it to establish service monitoring and communication facilities. This function performs the check-in by spawning a thread to handle the lower-level communication with the service control manager.", "usage": "mixed win32_start_service_ctrl_dispatcher ( string $name )", "url": "https://secure.php.net/manual/en/function.win32-start-service-ctrl-dispatcher.php"}, {"name": "win32_start_service", "synopsis": "Attempts to start the named service. Usually requires administrative privileges.", "usage": "int win32_start_service ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-start-service.php"}, {"name": "win32_stop_service", "synopsis": "Stops a named service. Requires administrative privileges.", "usage": "int win32_stop_service ( string $servicename [, string $machine ] )", "url": "https://secure.php.net/manual/en/function.win32-stop-service.php"}, {"name": "wincache_fcache_fileinfo", "synopsis": "Retrieves information about file cache content and its usage.", "usage": "array wincache_fcache_fileinfo ([ bool $summaryonly = FALSE ] )", "url": "https://secure.php.net/manual/en/function.wincache-fcache-fileinfo.php"}, {"name": "wincache_fcache_meminfo", "synopsis": "Retrieves information about memory usage by file cache.", "usage": "array wincache_fcache_meminfo ( void )", "url": "https://secure.php.net/manual/en/function.wincache-fcache-meminfo.php"}, {"name": "wincache_lock", "synopsis": "Obtains an exclusive lock on a given key. The execution of the current script will be blocked until the lock can be obtained. Once the lock is obtained, the other scripts that try to request the lock by using the same key will be blocked, until the current script releases the lock by using wincache_unlock().", "usage": "bool wincache_lock ( string $key [, bool $isglobal = FALSE ] )", "url": "https://secure.php.net/manual/en/function.wincache-lock.php"}, {"name": "wincache_ocache_fileinfo", "synopsis": "Retrieves information about opcode cache content and its usage.", "usage": "array wincache_ocache_fileinfo ([ bool $summaryonly = FALSE ] )", "url": "https://secure.php.net/manual/en/function.wincache-ocache-fileinfo.php"}, {"name": "wincache_ocache_meminfo", "synopsis": "Retrieves information about memory usage by opcode cache.", "usage": "array wincache_ocache_meminfo ( void )", "url": "https://secure.php.net/manual/en/function.wincache-ocache-meminfo.php"}, {"name": "wincache_refresh_if_changed", "synopsis": "Refreshes the cache entries for the files, whose names were passed in the input argument. If no argument is specified then refreshes all the entries in the cache.", "usage": "bool wincache_refresh_if_changed ([ array $files = NULL ] )", "url": "https://secure.php.net/manual/en/function.wincache-refresh-if-changed.php"}, {"name": "wincache_rplist_fileinfo", "synopsis": "Retrieves information about cached mappings between relative file paths and corresponding absolute file paths.", "usage": "array wincache_rplist_fileinfo ([ bool $summaryonly = FALSE ] )", "url": "https://secure.php.net/manual/en/function.wincache-rplist-fileinfo.php"}, {"name": "wincache_rplist_meminfo", "synopsis": "Retrieves information about memory usage by resolve file path cache.", "usage": "array wincache_rplist_meminfo ( void )", "url": "https://secure.php.net/manual/en/function.wincache-rplist-meminfo.php"}, {"name": "wincache_scache_info", "synopsis": "Retrieves information about session cache content and its usage.", "usage": "array wincache_scache_info ([ bool $summaryonly = FALSE ] )", "url": "https://secure.php.net/manual/en/function.wincache-scache-info.php"}, {"name": "wincache_scache_meminfo", "synopsis": "Retrieves information about memory usage by session cache.", "usage": "array wincache_scache_meminfo ( void )", "url": "https://secure.php.net/manual/en/function.wincache-scache-meminfo.php"}, {"name": "wincache_ucache_add", "synopsis": "Adds a variable in user cache, only if this variable doesn't already exist in the cache. The added variable remains in the user cache unless its time to live expires or it is deleted by using wincache_ucache_delete() or wincache_ucache_clear() functions.", "usage": "bool wincache_ucache_add ( string $key , mixed $value [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-add.php"}, {"name": "wincache_ucache_cas", "synopsis": "Compares the variable associated with the key with old_value and if it matches then assigns the new_value to it.", "usage": "bool wincache_ucache_cas ( string $key , int $old_value , int $new_value )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-cas.php"}, {"name": "wincache_ucache_clear", "synopsis": "Clears/deletes all the values stored in the user cache.", "usage": "bool wincache_ucache_clear ( void )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-clear.php"}, {"name": "wincache_ucache_dec", "synopsis": "Decrements the value associated with the key by 1 or as specified by dec_by.", "usage": "mixed wincache_ucache_dec ( string $key [, int $dec_by = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-dec.php"}, {"name": "wincache_ucache_delete", "synopsis": "Deletes the elements in the user cache pointed by key.", "usage": "bool wincache_ucache_delete ( mixed $key )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-delete.php"}, {"name": "wincache_ucache_exists", "synopsis": "Checks if a variable with the key exists in the user cache or not.", "usage": "bool wincache_ucache_exists ( string $key )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-exists.php"}, {"name": "wincache_ucache_get", "synopsis": "Gets a variable stored in the user cache.", "usage": "mixed wincache_ucache_get ( mixed $key [, bool &$success ] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-get.php"}, {"name": "wincache_ucache_inc", "synopsis": "Increments the value associated with the key by 1 or as specified by inc_by.", "usage": "mixed wincache_ucache_inc ( string $key [, int $inc_by = 1 [, bool &$success ]] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-inc.php"}, {"name": "wincache_ucache_info", "synopsis": "Retrieves information about data stored in the user cache.", "usage": "array wincache_ucache_info ([ bool $summaryonly = FALSE [, string $key = NULL ]] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-info.php"}, {"name": "wincache_ucache_meminfo", "synopsis": "Retrieves information about memory usage by user cache.", "usage": "array wincache_ucache_meminfo ( void )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-meminfo.php"}, {"name": "wincache_ucache_set", "synopsis": "Adds a variable in user cache. Overwrites a variable if it already exists in the cache. The added or updated variable remains in the user cache unless its time to live expires or it is deleted by using wincache_ucache_delete() or wincache_ucache_clear() functions.", "usage": "bool wincache_ucache_set ( mixed $key , mixed $value [, int $ttl = 0 ] )", "url": "https://secure.php.net/manual/en/function.wincache-ucache-set.php"}, {"name": "wincache_unlock", "synopsis": "Releases an exclusive lock that was obtained on a given key by using wincache_lock(). If any other process was blocked waiting for the lock on this key, that process will be able to obtain the lock.", "usage": "bool wincache_unlock ( string $key )", "url": "https://secure.php.net/manual/en/function.wincache-unlock.php"}, {"name": "wordwrap", "synopsis": "Wraps a string to a given number of characters using a string break character.", "usage": "string wordwrap ( string $str [, int $width = 75 [, string $break = \"\\n\" [, bool $cut = FALSE ]]] )", "url": "https://secure.php.net/manual/en/function.wordwrap.php"}, {"name": "xattr_get", "synopsis": "This function gets the value of an extended attribute of a file.", "usage": "string xattr_get ( string $filename , string $name [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.xattr-get.php"}, {"name": "xattr_list", "synopsis": "This functions gets a list of names of extended attributes of a file.", "usage": "array xattr_list ( string $filename [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.xattr-list.php"}, {"name": "xattr_remove", "synopsis": "This function removes an extended attribute of a file.", "usage": "bool xattr_remove ( string $filename , string $name [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.xattr-remove.php"}, {"name": "xattr_set", "synopsis": "This function sets the value of an extended attribute of a file.", "usage": "bool xattr_set ( string $filename , string $name , string $value [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.xattr-set.php"}, {"name": "xattr_supported", "synopsis": "This functions checks if the filesystem holding the given file supports extended attributes. Read access to the file is required.", "usage": "bool xattr_supported ( string $filename [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/function.xattr-supported.php"}, {"name": "xdiff_file_bdiff_size", "synopsis": "Returns a size of a result file that would be created after applying binary patch from file file to the original file.", "usage": "int xdiff_file_bdiff_size ( string $file )", "url": "https://secure.php.net/manual/en/function.xdiff-file-bdiff-size.php"}, {"name": "xdiff_file_bdiff", "synopsis": "Makes a binary diff of two files and stores the result in a patch file. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch()/xdiff_string_bpatch().", "usage": "bool xdiff_file_bdiff ( string $old_file , string $new_file , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-bdiff.php"}, {"name": "xdiff_file_bpatch", "synopsis": "Patches a file with a binary patch and stores the result in a file dest. This function accepts patches created both via xdiff_file_bdiff() and xdiff_file_rabdiff() functions or their string counterparts.", "usage": "bool xdiff_file_bpatch ( string $file , string $patch , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-bpatch.php"}, {"name": "xdiff_file_diff_binary", "synopsis": "Makes a binary diff of two files and stores the result in a patch file. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch().", "usage": "bool xdiff_file_diff_binary ( string $old_file , string $new_file , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-diff-binary.php"}, {"name": "xdiff_file_diff", "synopsis": "Makes an unified diff containing differences between old_file and new_file and stores it in dest file. The resulting file is human-readable. An optional context parameter specifies how many lines of context should be added around each change. Setting minimal parameter to true will result in outputting the shortest patch file possible (can take a long time).", "usage": "bool xdiff_file_diff ( string $old_file , string $new_file , string $dest [, int $context = 3 [, bool $minimal = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.xdiff-file-diff.php"}, {"name": "xdiff_file_merge3", "synopsis": "Merges three files into one and stores the result in a file dest. The old_file is an original version while new_file1 and new_file2 are modified versions of an original.", "usage": "mixed xdiff_file_merge3 ( string $old_file , string $new_file1 , string $new_file2 , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-merge3.php"}, {"name": "xdiff_file_patch_binary", "synopsis": "Patches a file with a binary patch and stores the result in a file dest. This function accepts patches created both via xdiff_file_bdiff() or xdiff_file_rabdiff() functions or their string counterparts.", "usage": "bool xdiff_file_patch_binary ( string $file , string $patch , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-patch-binary.php"}, {"name": "xdiff_file_patch", "synopsis": "Patches a file with a patch and stores the result in a file. patch has to be an unified diff created by xdiff_file_diff()/xdiff_string_diff() function. An optional flags parameter specifies mode of operation.", "usage": "mixed xdiff_file_patch ( string $file , string $patch , string $dest [, int $flags = DIFF_PATCH_NORMAL ] )", "url": "https://secure.php.net/manual/en/function.xdiff-file-patch.php"}, {"name": "xdiff_file_rabdiff", "synopsis": "Makes a binary diff of two files and stores the result in a patch file. The difference between this function and xdiff_file_bdiff() is different algorithm used which should result in faster execution and smaller diff produced. This function works with both text and binary files. Resulting patch file can be later applied using xdiff_file_bpatch()/xdiff_string_bpatch().", "usage": "bool xdiff_file_rabdiff ( string $old_file , string $new_file , string $dest )", "url": "https://secure.php.net/manual/en/function.xdiff-file-rabdiff.php"}, {"name": "xdiff_string_bdiff_size", "synopsis": "Returns a size of a result file that would be created after applying binary patch to the original file.", "usage": "int xdiff_string_bdiff_size ( string $patch )", "url": "https://secure.php.net/manual/en/function.xdiff-string-bdiff-size.php"}, {"name": "xdiff_string_bdiff", "synopsis": "Makes a binary diff of two strings and returns the result. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()/xdiff_file_bpatch().", "usage": "string xdiff_string_bdiff ( string $old_data , string $new_data )", "url": "https://secure.php.net/manual/en/function.xdiff-string-bdiff.php"}, {"name": "xdiff_string_bpatch", "synopsis": "Patches a string str with a binary patch. This function accepts patches created both via xdiff_string_bdiff() and xdiff_string_rabdiff() functions or their file counterparts.", "usage": "string xdiff_string_bpatch ( string $str , string $patch )", "url": "https://secure.php.net/manual/en/function.xdiff-string-bpatch.php"}, {"name": "xdiff_string_bdiff", "synopsis": "Makes a binary diff of two strings and returns the result. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()/xdiff_file_bpatch().", "usage": "string xdiff_string_bdiff ( string $old_data , string $new_data )", "url": "https://secure.php.net/manual/en/function.xdiff-string-diff-binary.php"}, {"name": "xdiff_string_diff", "synopsis": "Makes an unified diff containing differences between old_data string and new_data string and returns it. The resulting diff is human-readable. An optional context parameter specifies how many lines of context should be added around each change. Setting minimal parameter to true will result in outputting the shortest patch file possible (can take a long time).", "usage": "string xdiff_string_diff ( string $old_data , string $new_data [, int $context = 3 [, bool $minimal = FALSE ]] )", "url": "https://secure.php.net/manual/en/function.xdiff-string-diff.php"}, {"name": "xdiff_string_merge3", "synopsis": "Merges three strings into one and returns the result. The old_data is an original version of data while new_data1 and new_data2 are modified versions of an original. An optional error is used to pass any rejected parts during merging process.", "usage": "mixed xdiff_string_merge3 ( string $old_data , string $new_data1 , string $new_data2 [, string &$error ] )", "url": "https://secure.php.net/manual/en/function.xdiff-string-merge3.php"}, {"name": "xdiff_string_patch_binary", "synopsis": "Patches a string str with a binary patch. This function accepts patches created both via xdiff_string_bdiff() and xdiff_string_rabdiff() functions or their file counterparts.", "usage": "string xdiff_string_patch_binary ( string $str , string $patch )", "url": "https://secure.php.net/manual/en/function.xdiff-string-patch-binary.php"}, {"name": "xdiff_string_patch", "synopsis": "Patches a str string with an unified patch in patch parameter and returns the result. patch has to be an unified diff created by xdiff_file_diff()/xdiff_string_diff() function. An optional flags parameter specifies mode of operation. Any rejected parts of the patch will be stored inside error variable if it is provided.", "usage": "string xdiff_string_patch ( string $str , string $patch [, int $flags [, string &$error ]] )", "url": "https://secure.php.net/manual/en/function.xdiff-string-patch.php"}, {"name": "xdiff_string_bdiff", "synopsis": "Makes a binary diff of two strings and returns the result. The difference between this function and xdiff_string_bdiff() is different algorithm used which should result in faster execution and smaller diff produced. This function works with both text and binary data. Resulting patch can be later applied using xdiff_string_bpatch()/xdiff_file_bpatch().", "usage": "string xdiff_string_bdiff ( string $old_data , string $new_data )", "url": "https://secure.php.net/manual/en/function.xdiff-string-rabdiff.php"}, {"name": "xhprof_disable", "synopsis": "Stops the profiler, and returns xhprof data from the run.", "usage": "array xhprof_disable ( void )", "url": "https://secure.php.net/manual/en/function.xhprof-disable.php"}, {"name": "xhprof_enable", "synopsis": "Start xhprof profiling.", "usage": "void xhprof_enable ([ int $flags = 0 [, array $options ]] )", "url": "https://secure.php.net/manual/en/function.xhprof-enable.php"}, {"name": "xhprof_sample_disable", "synopsis": "Stops the sample mode xhprof profiler, and", "usage": "array xhprof_sample_disable ( void )", "url": "https://secure.php.net/manual/en/function.xhprof-sample-disable.php"}, {"name": "xhprof_sample_enable", "synopsis": "Starts profiling in sample mode, which is a lighter weight version of xhprof_enable(). The sampling interval is 0.1 seconds, and samples record the full function call stack. The main use case is when lower overhead is required when doing performance monitoring and diagnostics.", "usage": "void xhprof_sample_enable ( void )", "url": "https://secure.php.net/manual/en/function.xhprof-sample-enable.php"}, {"name": "xml_error_string", "synopsis": "Gets the XML parser error string associated with the given code.", "usage": "string xml_error_string ( int $code )", "url": "https://secure.php.net/manual/en/function.xml-error-string.php"}, {"name": "xml_get_current_byte_index", "synopsis": "Gets the current byte index of the given XML parser.", "usage": "int xml_get_current_byte_index ( resource $parser )", "url": "https://secure.php.net/manual/en/function.xml-get-current-byte-index.php"}, {"name": "xml_get_current_column_number", "synopsis": "Gets the current column number of the given XML parser.", "usage": "int xml_get_current_column_number ( resource $parser )", "url": "https://secure.php.net/manual/en/function.xml-get-current-column-number.php"}, {"name": "xml_get_current_line_number", "synopsis": "Gets the current line number for the given XML parser.", "usage": "int xml_get_current_line_number ( resource $parser )", "url": "https://secure.php.net/manual/en/function.xml-get-current-line-number.php"}, {"name": "xml_get_error_code", "synopsis": "Gets the XML parser error code.", "usage": "int xml_get_error_code ( resource $parser )", "url": "https://secure.php.net/manual/en/function.xml-get-error-code.php"}, {"name": "xml_parse_into_struct", "synopsis": "This function parses an XML string into 2 parallel array structures, one (index) containing pointers to the location of the appropriate values in the values array. These last two parameters must be passed by reference.", "usage": "int xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] )", "url": "https://secure.php.net/manual/en/function.xml-parse-into-struct.php"}, {"name": "xml_parse", "synopsis": "xml_parse() parses an XML document. The handlers for the configured events are called as many times as necessary.", "usage": "int xml_parse ( resource $parser , string $data [, bool $is_final = FALSE ] )", "url": "https://secure.php.net/manual/en/function.xml-parse.php"}, {"name": "xml_parser_create_ns", "synopsis": "xml_parser_create_ns() creates a new XML parser with XML namespace support and returns a resource handle referencing it to be used by the other XML functions.", "usage": "resource xml_parser_create_ns ([ string $encoding [, string $separator = \":\" ]] )", "url": "https://secure.php.net/manual/en/function.xml-parser-create-ns.php"}, {"name": "xml_parser_create", "synopsis": "xml_parser_create() creates a new XML parser and returns a resource handle referencing it to be used by the other XML functions.", "usage": "resource xml_parser_create ([ string $encoding ] )", "url": "https://secure.php.net/manual/en/function.xml-parser-create.php"}, {"name": "xml_parser_free", "synopsis": "Frees the given XML parser.", "usage": "bool xml_parser_free ( resource $parser )", "url": "https://secure.php.net/manual/en/function.xml-parser-free.php"}, {"name": "xml_parser_get_option", "synopsis": "Gets an option value from an XML parser.", "usage": "mixed xml_parser_get_option ( resource $parser , int $option )", "url": "https://secure.php.net/manual/en/function.xml-parser-get-option.php"}, {"name": "xml_parser_set_option", "synopsis": "Sets an option in an XML parser.", "usage": "bool xml_parser_set_option ( resource $parser , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/function.xml-parser-set-option.php"}, {"name": "xml_set_character_data_handler", "synopsis": "Sets the character data handler function for the XML parser parser.", "usage": "bool xml_set_character_data_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-character-data-handler.php"}, {"name": "xml_set_default_handler", "synopsis": "Sets the default handler function for the XML parser parser.", "usage": "bool xml_set_default_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-default-handler.php"}, {"name": "xml_set_element_handler", "synopsis": "Sets the element handler functions for the XML parser. start_element_handler and end_element_handler are strings containing the names of functions that must exist when xml_parse() is called for parser.", "usage": "bool xml_set_element_handler ( resource $parser , callable $start_element_handler , callable $end_element_handler )", "url": "https://secure.php.net/manual/en/function.xml-set-element-handler.php"}, {"name": "xml_set_end_namespace_decl_handler", "synopsis": "Set a handler to be called when leaving the scope of a namespace declaration. This will be called, for each namespace declaration, after the handler for the end tag of the element in which the namespace was declared.", "usage": "bool xml_set_end_namespace_decl_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-end-namespace-decl-handler.php"}, {"name": "xml_set_external_entity_ref_handler", "synopsis": "Sets the external entity reference handler function for the XML parser parser.", "usage": "bool xml_set_external_entity_ref_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-external-entity-ref-handler.php"}, {"name": "xml_set_notation_decl_handler", "synopsis": "Sets the notation declaration handler function for the XML parser parser.", "usage": "bool xml_set_notation_decl_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-notation-decl-handler.php"}, {"name": "xml_set_object", "synopsis": "This function allows to use parser inside object. All callback functions could be set with xml_set_element_handler() etc and assumed to be methods of object.", "usage": "bool xml_set_object ( resource $parser , object &$object )", "url": "https://secure.php.net/manual/en/function.xml-set-object.php"}, {"name": "xml_set_processing_instruction_handler", "synopsis": "Sets the processing instruction (PI) handler function for the XML parser parser.", "usage": "bool xml_set_processing_instruction_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-processing-instruction-handler.php"}, {"name": "xml_set_start_namespace_decl_handler", "synopsis": "Set a handler to be called when a namespace is declared. Namespace declarations occur inside start tags. But the namespace declaration start handler is called before the start tag handler for each namespace declared in that start tag.", "usage": "bool xml_set_start_namespace_decl_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-start-namespace-decl-handler.php"}, {"name": "xml_set_unparsed_entity_decl_handler", "synopsis": "Sets the unparsed entity declaration handler function for the XML parser parser.", "usage": "bool xml_set_unparsed_entity_decl_handler ( resource $parser , callable $handler )", "url": "https://secure.php.net/manual/en/function.xml-set-unparsed-entity-decl-handler.php"}, {"name": "xmlrpc_decode_request", "synopsis": null, "usage": "mixed xmlrpc_decode_request ( string $xml , string &$method [, string $encoding ] )", "url": "https://secure.php.net/manual/en/function.xmlrpc-decode-request.php"}, {"name": "xmlrpc_decode", "synopsis": null, "usage": "mixed xmlrpc_decode ( string $xml [, string $encoding = \"iso-8859-1\" ] )", "url": "https://secure.php.net/manual/en/function.xmlrpc-decode.php"}, {"name": "xmlrpc_encode_request", "synopsis": null, "usage": "string xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] )", "url": "https://secure.php.net/manual/en/function.xmlrpc-encode-request.php"}, {"name": "xmlrpc_encode", "synopsis": null, "usage": "string xmlrpc_encode ( mixed $value )", "url": "https://secure.php.net/manual/en/function.xmlrpc-encode.php"}, {"name": "xmlrpc_get_type", "synopsis": null, "usage": "string xmlrpc_get_type ( mixed $value )", "url": "https://secure.php.net/manual/en/function.xmlrpc-get-type.php"}, {"name": "xmlrpc_is_fault", "synopsis": null, "usage": "bool xmlrpc_is_fault ( array $arg )", "url": "https://secure.php.net/manual/en/function.xmlrpc-is-fault.php"}, {"name": "xmlrpc_parse_method_descriptions", "synopsis": null, "usage": "array xmlrpc_parse_method_descriptions ( string $xml )", "url": "https://secure.php.net/manual/en/function.xmlrpc-parse-method-descriptions.php"}, {"name": "xmlrpc_server_add_introspection_data", "synopsis": null, "usage": "int xmlrpc_server_add_introspection_data ( resource $server , array $desc )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-add-introspection-data.php"}, {"name": "xmlrpc_server_call_method", "synopsis": null, "usage": "string xmlrpc_server_call_method ( resource $server , string $xml , mixed $user_data [, array $output_options ] )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-call-method.php"}, {"name": "xmlrpc_server_create", "synopsis": null, "usage": "resource xmlrpc_server_create ( void )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-create.php"}, {"name": "xmlrpc_server_destroy", "synopsis": null, "usage": "bool xmlrpc_server_destroy ( resource $server )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-destroy.php"}, {"name": "xmlrpc_server_register_introspection_callback", "synopsis": null, "usage": "bool xmlrpc_server_register_introspection_callback ( resource $server , string $function )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-register-introspection-callback.php"}, {"name": "xmlrpc_server_register_method", "synopsis": null, "usage": "bool xmlrpc_server_register_method ( resource $server , string $method_name , string $function )", "url": "https://secure.php.net/manual/en/function.xmlrpc-server-register-method.php"}, {"name": "xmlrpc_set_type", "synopsis": "Sets xmlrpc type, base64 or datetime, for a PHP string value.", "usage": "bool xmlrpc_set_type ( string &$value , string $type )", "url": "https://secure.php.net/manual/en/function.xmlrpc-set-type.php"}, {"name": "XMLWriter::endAttribute", "synopsis": "Procedural style", "usage": "bool XMLWriter::endAttribute ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-attribute.php"}, {"name": "XMLWriter::endCdata", "synopsis": "Procedural style", "usage": "bool XMLWriter::endCdata ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-cdata.php"}, {"name": "XMLWriter::endComment", "synopsis": "Procedural style", "usage": "bool XMLWriter::endComment ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-comment.php"}, {"name": "XMLWriter::endDocument", "synopsis": "Procedural style", "usage": "bool XMLWriter::endDocument ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-document.php"}, {"name": "XMLWriter::endDtdAttlist", "synopsis": "Procedural style", "usage": "bool XMLWriter::endDtdAttlist ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-dtd-attlist.php"}, {"name": "XMLWriter::endDtdElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::endDtdElement ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-dtd-element.php"}, {"name": "XMLWriter::endDtdEntity", "synopsis": "Procedural style", "usage": "bool XMLWriter::endDtdEntity ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-dtd-entity.php"}, {"name": "XMLWriter::endDtd", "synopsis": "Procedural style", "usage": "bool XMLWriter::endDtd ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-dtd.php"}, {"name": "XMLWriter::endElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::endElement ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-element.php"}, {"name": "XMLWriter::endPi", "synopsis": "Procedural style", "usage": "bool XMLWriter::endPi ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-end-pi.php"}, {"name": "XMLWriter::flush", "synopsis": "Procedural style", "usage": "mixed XMLWriter::flush ([ bool $empty = TRUE ] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-flush.php"}, {"name": "XMLWriter::fullEndElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::fullEndElement ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-full-end-element.php"}, {"name": "XMLWriter::openMemory", "synopsis": "Procedural style", "usage": "bool XMLWriter::openMemory ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-open-memory.php"}, {"name": "XMLWriter::openUri", "synopsis": "Procedural style", "usage": "bool XMLWriter::openUri ( string $uri )", "url": "https://secure.php.net/manual/en/function.xmlwriter-open-uri.php"}, {"name": "XMLWriter::outputMemory", "synopsis": "Procedural style", "usage": "string XMLWriter::outputMemory ([ bool $flush = TRUE ] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-output-memory.php"}, {"name": "XMLWriter::setIndentString", "synopsis": "Procedural style", "usage": "bool XMLWriter::setIndentString ( string $indentString )", "url": "https://secure.php.net/manual/en/function.xmlwriter-set-indent-string.php"}, {"name": "XMLWriter::setIndent", "synopsis": "Procedural style", "usage": "bool XMLWriter::setIndent ( bool $indent )", "url": "https://secure.php.net/manual/en/function.xmlwriter-set-indent.php"}, {"name": "XMLWriter::startAttributeNs", "synopsis": "Procedural style", "usage": "bool XMLWriter::startAttributeNs ( string $prefix , string $name , string $uri )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-attribute-ns.php"}, {"name": "XMLWriter::startAttribute", "synopsis": "Procedural style", "usage": "bool XMLWriter::startAttribute ( string $name )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-attribute.php"}, {"name": "XMLWriter::startCdata", "synopsis": "Procedural style", "usage": "bool XMLWriter::startCdata ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-cdata.php"}, {"name": "XMLWriter::startComment", "synopsis": "Procedural style", "usage": "bool XMLWriter::startComment ( void )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-comment.php"}, {"name": "XMLWriter::startDocument", "synopsis": "Procedural style", "usage": "bool XMLWriter::startDocument ([ string $version = 1.0 [, string $encoding = NULL [, string $standalone ]]] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-document.php"}, {"name": "XMLWriter::startDtdAttlist", "synopsis": "Procedural style", "usage": "bool XMLWriter::startDtdAttlist ( string $name )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-dtd-attlist.php"}, {"name": "XMLWriter::startDtdElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::startDtdElement ( string $qualifiedName )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-dtd-element.php"}, {"name": "XMLWriter::startDtdEntity", "synopsis": "Procedural style", "usage": "bool XMLWriter::startDtdEntity ( string $name , bool $isparam )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-dtd-entity.php"}, {"name": "XMLWriter::startDtd", "synopsis": "Procedural style", "usage": "bool XMLWriter::startDtd ( string $qualifiedName [, string $publicId [, string $systemId ]] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-dtd.php"}, {"name": "XMLWriter::startElementNs", "synopsis": "Procedural style", "usage": "bool XMLWriter::startElementNs ( string $prefix , string $name , string $uri )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-element-ns.php"}, {"name": "XMLWriter::startElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::startElement ( string $name )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-element.php"}, {"name": "XMLWriter::startPi", "synopsis": "Procedural style", "usage": "bool XMLWriter::startPi ( string $target )", "url": "https://secure.php.net/manual/en/function.xmlwriter-start-pi.php"}, {"name": "XMLWriter::text", "synopsis": "Procedural style", "usage": "bool XMLWriter::text ( string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-text.php"}, {"name": "XMLWriter::writeAttributeNs", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeAttributeNs ( string $prefix , string $name , string $uri , string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-attribute-ns.php"}, {"name": "XMLWriter::writeAttribute", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeAttribute ( string $name , string $value )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-attribute.php"}, {"name": "XMLWriter::writeCdata", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeCdata ( string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-cdata.php"}, {"name": "XMLWriter::writeComment", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeComment ( string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-comment.php"}, {"name": "XMLWriter::writeDtdAttlist", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeDtdAttlist ( string $name , string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-dtd-attlist.php"}, {"name": "XMLWriter::writeDtdElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeDtdElement ( string $name , string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-dtd-element.php"}, {"name": "XMLWriter::writeDtdEntity", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeDtdEntity ( string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-dtd-entity.php"}, {"name": "XMLWriter::writeDtd", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeDtd ( string $name [, string $publicId [, string $systemId [, string $subset ]]] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-dtd.php"}, {"name": "XMLWriter::writeElementNs", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeElementNs ( string $prefix , string $name , string $uri [, string $content ] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-element-ns.php"}, {"name": "XMLWriter::writeElement", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeElement ( string $name [, string $content ] )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-element.php"}, {"name": "XMLWriter::writePi", "synopsis": "Procedural style", "usage": "bool XMLWriter::writePi ( string $target , string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-pi.php"}, {"name": "XMLWriter::writeRaw", "synopsis": "Procedural style", "usage": "bool XMLWriter::writeRaw ( string $content )", "url": "https://secure.php.net/manual/en/function.xmlwriter-write-raw.php"}, {"name": "yaml_emit_file", "synopsis": "Generate a YAML representation of the provided data in the filename.", "usage": "bool yaml_emit_file ( string $filename , mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.yaml-emit-file.php"}, {"name": "yaml_emit", "synopsis": "Generate a YAML representation of the provided data.", "usage": "string yaml_emit ( mixed $data [, int $encoding = YAML_ANY_ENCODING [, int $linebreak = YAML_ANY_BREAK [, array $callbacks = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.yaml-emit.php"}, {"name": "yaml_parse_file", "synopsis": "Convert all or part of a YAML document stream read from a file to a PHP variable.", "usage": "mixed yaml_parse_file ( string $filename [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.yaml-parse-file.php"}, {"name": "yaml_parse_url", "synopsis": "Convert all or part of a YAML document stream read from a URL to a PHP variable.", "usage": "mixed yaml_parse_url ( string $url [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.yaml-parse-url.php"}, {"name": "yaml_parse", "synopsis": "Convert all or part of a YAML document stream to a PHP variable.", "usage": "mixed yaml_parse ( string $input [, int $pos = 0 [, int &$ndocs [, array $callbacks = NULL ]]] )", "url": "https://secure.php.net/manual/en/function.yaml-parse.php"}, {"name": "yaz_addinfo", "synopsis": "Returns additional error information for the last request on the server.", "usage": "string yaz_addinfo ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-addinfo.php"}, {"name": "yaz_ccl_conf", "synopsis": "This function configures the CCL query parser for a server with definitions of access points (CCL qualifiers) and their mapping to RPN.", "usage": "void yaz_ccl_conf ( resource $id , array $config )", "url": "https://secure.php.net/manual/en/function.yaz-ccl-conf.php"}, {"name": "yaz_ccl_parse", "synopsis": "This function invokes a CCL parser. It converts a given CCL FIND query to an RPN query which may be passed to the yaz_search() function to perform a search.", "usage": "bool yaz_ccl_parse ( resource $id , string $query , array &$result )", "url": "https://secure.php.net/manual/en/function.yaz-ccl-parse.php"}, {"name": "yaz_close", "synopsis": "Closes the connection given by parameter id.", "usage": "bool yaz_close ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-close.php"}, {"name": "yaz_connect", "synopsis": "This function returns a connection resource on success, zero on failure.", "usage": "mixed yaz_connect ( string $zurl [, mixed $options ] )", "url": "https://secure.php.net/manual/en/function.yaz-connect.php"}, {"name": "yaz_database", "synopsis": "This function allows you to change databases within a session by specifying one or more databases to be used in search, retrieval, etc. - overriding databases specified in call to yaz_connect().", "usage": "bool yaz_database ( resource $id , string $databases )", "url": "https://secure.php.net/manual/en/function.yaz-database.php"}, {"name": "yaz_element", "synopsis": "This function sets the element set name for retrieval.", "usage": "bool yaz_element ( resource $id , string $elementset )", "url": "https://secure.php.net/manual/en/function.yaz-element.php"}, {"name": "yaz_errno", "synopsis": "Returns an error number for the server (last request) identified by id.", "usage": "int yaz_errno ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-errno.php"}, {"name": "yaz_error", "synopsis": "yaz_error() returns an English text message corresponding to the last error number as returned by yaz_errno().", "usage": "string yaz_error ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-error.php"}, {"name": "yaz_es_result", "synopsis": "This function inspects the last returned Extended Service result from a server. An Extended Service is initiated by either yaz_item_order() or yaz_es().", "usage": "array yaz_es_result ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-es-result.php"}, {"name": "yaz_es", "synopsis": "This function prepares for an Extended Service Request. Extended Services is family of various Z39.50 facilities, such as Record Update, Item Order, Database administration etc.", "usage": "void yaz_es ( resource $id , string $type , array $args )", "url": "https://secure.php.net/manual/en/function.yaz-es.php"}, {"name": "yaz_get_option", "synopsis": "Returns the value of the option specified with name.", "usage": "string yaz_get_option ( resource $id , string $name )", "url": "https://secure.php.net/manual/en/function.yaz-get-option.php"}, {"name": "yaz_hits", "synopsis": "yaz_hits() returns the number of hits for the last search.", "usage": "int yaz_hits ( resource $id [, array &$searchresult ] )", "url": "https://secure.php.net/manual/en/function.yaz-hits.php"}, {"name": "yaz_itemorder", "synopsis": "This function prepares for an Extended Services request using the Profile for the Use of Z39.50 Item Order Extended Service to Transport ILL (Profile/1). See \u00bb\u00a0this and the \u00bb\u00a0specification.", "usage": "void yaz_itemorder ( resource $id , array $args )", "url": "https://secure.php.net/manual/en/function.yaz-itemorder.php"}, {"name": "yaz_present", "synopsis": "This function prepares for retrieval of records after a successful search.", "usage": "bool yaz_present ( resource $id )", "url": "https://secure.php.net/manual/en/function.yaz-present.php"}, {"name": "yaz_range", "synopsis": "Specifies a range of records to retrieve.", "usage": "void yaz_range ( resource $id , int $start , int $number )", "url": "https://secure.php.net/manual/en/function.yaz-range.php"}, {"name": "yaz_record", "synopsis": "The yaz_record() function inspects a record in the current result set at the position specified by parameter pos.", "usage": "string yaz_record ( resource $id , int $pos , string $type )", "url": "https://secure.php.net/manual/en/function.yaz-record.php"}, {"name": "yaz_scan_result", "synopsis": "yaz_scan_result() returns terms and associated information as received from the server in the last performed yaz_scan().", "usage": "array yaz_scan_result ( resource $id [, array &$result ] )", "url": "https://secure.php.net/manual/en/function.yaz-scan-result.php"}, {"name": "yaz_scan", "synopsis": "This function prepares for a Z39.50 Scan Request on the specified connection.", "usage": "void yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] )", "url": "https://secure.php.net/manual/en/function.yaz-scan.php"}, {"name": "yaz_schema", "synopsis": "yaz_schema() specifies the schema for retrieval.", "usage": "void yaz_schema ( resource $id , string $schema )", "url": "https://secure.php.net/manual/en/function.yaz-schema.php"}, {"name": "yaz_search", "synopsis": "yaz_search() prepares for a search on the given connection.", "usage": "bool yaz_search ( resource $id , string $type , string $query )", "url": "https://secure.php.net/manual/en/function.yaz-search.php"}, {"name": "yaz_set_option", "synopsis": "Sets one or more options on the given connection.", "usage": "void yaz_set_option ( resource $id , string $name , string $value )", "url": "https://secure.php.net/manual/en/function.yaz-set-option.php"}, {"name": "yaz_sort", "synopsis": "This function sets sorting criteria and enables Z39.50 Sort.", "usage": "void yaz_sort ( resource $id , string $criteria )", "url": "https://secure.php.net/manual/en/function.yaz-sort.php"}, {"name": "yaz_syntax", "synopsis": "yaz_syntax() specifies the preferred record syntax for retrieval", "usage": "void yaz_syntax ( resource $id , string $syntax )", "url": "https://secure.php.net/manual/en/function.yaz-syntax.php"}, {"name": "yaz_wait", "synopsis": "This function carries out networked (blocked) activity for outstanding requests which have been prepared by the functions yaz_connect(), yaz_search(), yaz_present(), yaz_scan() and yaz_itemorder().", "usage": "mixed yaz_wait ([ array &$options ] )", "url": "https://secure.php.net/manual/en/function.yaz-wait.php"}, {"name": "yp_all", "synopsis": "", "usage": "void yp_all ( string $domain , string $map , string $callback )", "url": "https://secure.php.net/manual/en/function.yp-all.php"}, {"name": "yp_cat", "synopsis": "Returns all map entries.", "usage": "array yp_cat ( string $domain , string $map )", "url": "https://secure.php.net/manual/en/function.yp-cat.php"}, {"name": "yp_err_string", "synopsis": "Returns the error message associated with the given error code. Useful to indicate what exactly went wrong.", "usage": "string yp_err_string ( int $errorcode )", "url": "https://secure.php.net/manual/en/function.yp-err-string.php"}, {"name": "yp_errno", "synopsis": "Returns the error code of the previous operation.", "usage": "int yp_errno ( void )", "url": "https://secure.php.net/manual/en/function.yp-errno.php"}, {"name": "yp_first", "synopsis": "Gets the first key-value pair from the named map in the named domain.", "usage": "array yp_first ( string $domain , string $map )", "url": "https://secure.php.net/manual/en/function.yp-first.php"}, {"name": "yp_get_default_domain", "synopsis": "Returns the default domain of the node. Can be used as the domain parameter for successive NIS calls.", "usage": "string yp_get_default_domain ( void )", "url": "https://secure.php.net/manual/en/function.yp-get-default-domain.php"}, {"name": "yp_master", "synopsis": "Returns the machine name of the master NIS server for a map.", "usage": "string yp_master ( string $domain , string $map )", "url": "https://secure.php.net/manual/en/function.yp-master.php"}, {"name": "yp_match", "synopsis": "Returns the value associated with the passed key out of the specified map.", "usage": "string yp_match ( string $domain , string $map , string $key )", "url": "https://secure.php.net/manual/en/function.yp-match.php"}, {"name": "yp_next", "synopsis": "Returns the next key-value pair in the named map after the specified key.", "usage": "array yp_next ( string $domain , string $map , string $key )", "url": "https://secure.php.net/manual/en/function.yp-next.php"}, {"name": "yp_order", "synopsis": "Gets the order number for a map.", "usage": "int yp_order ( string $domain , string $map )", "url": "https://secure.php.net/manual/en/function.yp-order.php"}, {"name": "zend_logo_guid", "synopsis": "This function returns the ID which can be used to display the Zend logo using the built-in image.", "usage": "string zend_logo_guid ( void )", "url": "https://secure.php.net/manual/en/function.zend-logo-guid.php"}, {"name": "zend_thread_id", "synopsis": "This function returns a unique identifier for the current thread.", "usage": "int zend_thread_id ( void )", "url": "https://secure.php.net/manual/en/function.zend-thread-id.php"}, {"name": "zend_version", "synopsis": "Returns a string containing the version of the currently running Zend Engine.", "usage": "string zend_version ( void )", "url": "https://secure.php.net/manual/en/function.zend-version.php"}, {"name": "zip_close", "synopsis": "Closes the given ZIP file archive.", "usage": "void zip_close ( resource $zip )", "url": "https://secure.php.net/manual/en/function.zip-close.php"}, {"name": "zip_entry_close", "synopsis": "Closes the specified directory entry.", "usage": "bool zip_entry_close ( resource $zip_entry )", "url": "https://secure.php.net/manual/en/function.zip-entry-close.php"}, {"name": "zip_entry_compressedsize", "synopsis": "Returns the compressed size of the specified directory entry.", "usage": "int zip_entry_compressedsize ( resource $zip_entry )", "url": "https://secure.php.net/manual/en/function.zip-entry-compressedsize.php"}, {"name": "zip_entry_compressionmethod", "synopsis": "Returns the compression method of the directory entry specified by zip_entry.", "usage": "string zip_entry_compressionmethod ( resource $zip_entry )", "url": "https://secure.php.net/manual/en/function.zip-entry-compressionmethod.php"}, {"name": "zip_entry_filesize", "synopsis": "Returns the actual size of the specified directory entry.", "usage": "int zip_entry_filesize ( resource $zip_entry )", "url": "https://secure.php.net/manual/en/function.zip-entry-filesize.php"}, {"name": "zip_entry_name", "synopsis": "Returns the name of the specified directory entry.", "usage": "string zip_entry_name ( resource $zip_entry )", "url": "https://secure.php.net/manual/en/function.zip-entry-name.php"}, {"name": "zip_entry_open", "synopsis": "Opens a directory entry in a zip file for reading.", "usage": "bool zip_entry_open ( resource $zip , resource $zip_entry [, string $mode ] )", "url": "https://secure.php.net/manual/en/function.zip-entry-open.php"}, {"name": "zip_entry_read", "synopsis": "Reads from an open directory entry.", "usage": "string zip_entry_read ( resource $zip_entry [, int $length = 1024 ] )", "url": "https://secure.php.net/manual/en/function.zip-entry-read.php"}, {"name": "zip_open", "synopsis": "Opens a new zip archive for reading.", "usage": "resource zip_open ( string $filename )", "url": "https://secure.php.net/manual/en/function.zip-open.php"}, {"name": "zip_read", "synopsis": "Reads the next entry in a zip file archive.", "usage": "resource zip_read ( resource $zip )", "url": "https://secure.php.net/manual/en/function.zip-read.php"}, {"name": "zlib_decode", "synopsis": "Uncompress any raw/gzip/zlib encoded data.", "usage": "string zlib_decode ( string $data [, string $max_decoded_len ] )", "url": "https://secure.php.net/manual/en/function.zlib-decode.php"}, {"name": "zlib_encode", "synopsis": "Compress data with the specified encoding.", "usage": "string zlib_encode ( string $data , int $encoding [, int $level = -1 ] )", "url": "https://secure.php.net/manual/en/function.zlib-encode.php"}, {"name": "zlib_get_coding_type", "synopsis": "Returns the coding type used for output compression.", "usage": "string zlib_get_coding_type ( void )", "url": "https://secure.php.net/manual/en/function.zlib-get-coding-type.php"}, {"name": "GearmanClient::addOptions", "synopsis": "Adds one or more options to those already set.", "usage": "public bool GearmanClient::addOptions ( int $options )", "url": "https://secure.php.net/manual/en/gearmanclient.addoptions.php"}, {"name": "GearmanClient::addServer", "synopsis": "Adds a job server to a list of servers that can be used to run a task. No socket I/O happens here; the server is simply added to the list.", "usage": "public bool GearmanClient::addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addserver.php"}, {"name": "GearmanClient::addServers", "synopsis": "Adds a list of job servers that can be used to run a task. No socket I/O happens here; the servers are simply added to the full list of servers.", "usage": "public bool GearmanClient::addServers ([ string $servers = 127.0.0.1:4730 ] )", "url": "https://secure.php.net/manual/en/gearmanclient.addservers.php"}, {"name": "GearmanClient::addTask", "synopsis": "Adds a task to be run in parallel with other tasks. Call this method for all the tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work. Note that enough workers need to be available for the tasks to all run in parallel.", "usage": "public GearmanTask GearmanClient::addTask ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtask.php"}, {"name": "GearmanClient::addTaskBackground", "synopsis": "Adds a background task to be run in parallel with other tasks. Call this method for all the tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work.", "usage": "public GearmanTask GearmanClient::addTaskBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtaskbackground.php"}, {"name": "GearmanClient::addTaskHigh", "synopsis": "Adds a high priority task to be run in parallel with other tasks. Call this method for all the high priority tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work. Tasks with a high priority will be selected from the queue before those of normal or low priority.", "usage": "public GearmanTask GearmanClient::addTaskHigh ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtaskhigh.php"}, {"name": "GearmanClient::addTaskHighBackground", "synopsis": "Adds a high priority background task to be run in parallel with other tasks. Call this method for all the tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work. Tasks with a high priority will be selected from the queue before those of normal or low priority.", "usage": "public GearmanTask GearmanClient::addTaskHighBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtaskhighbackground.php"}, {"name": "GearmanClient::addTaskLow", "synopsis": "Adds a low priority background task to be run in parallel with other tasks. Call this method for all the tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work. Tasks with a low priority will be selected from the queue after those of normal or low priority.", "usage": "public GearmanTask GearmanClient::addTaskLow ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtasklow.php"}, {"name": "GearmanClient::addTaskLowBackground", "synopsis": "Adds a low priority background task to be run in parallel with other tasks. Call this method for all the tasks to be run in parallel, then call GearmanClient::runTasks() to perform the work. Tasks with a low priority will be selected from the queue after those of normal or high priority.", "usage": "public GearmanTask GearmanClient::addTaskLowBackground ( string $function_name , string $workload [, mixed &$context [, string $unique ]] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtasklowbackground.php"}, {"name": "GearmanClient::addTaskStatus", "synopsis": "Used to request status information from the Gearman server, which will call the specified status callback (set using GearmanClient::setStatusCallback()).", "usage": "public GearmanTask GearmanClient::addTaskStatus ( string $job_handle [, string &$context ] )", "url": "https://secure.php.net/manual/en/gearmanclient.addtaskstatus.php"}, {"name": "GearmanClient::clearCallbacks", "synopsis": "Clears all the task callback functions that have previously been set.", "usage": "public bool GearmanClient::clearCallbacks ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.clearcallbacks.php"}, {"name": "GearmanClient::clone", "synopsis": "Creates a copy of a GearmanClient object.", "usage": "public GearmanClient GearmanClient::clone ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.clone.php"}, {"name": "GearmanClient::__construct", "synopsis": "Creates a GearmanClient instance representing a client that connects to the job server and submits tasks to complete.", "usage": "public GearmanClient::__construct ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.construct.php"}, {"name": "GearmanClient::context", "synopsis": "Get the application context previously set with GearmanClient::setContext().", "usage": "public string GearmanClient::context ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.context.php"}, {"name": "GearmanClient::data", "synopsis": "Get the application data previously set with GearmanClient::setData().", "usage": "public string GearmanClient::data ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.data.php"}, {"name": "GearmanClient::do", "synopsis": "The GearmanClient::do() method is deprecated as of pecl/gearman 1.0.0. Use GearmanClient::doNormal().", "usage": "public string GearmanClient::do ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.do.php"}, {"name": "GearmanClient::doBackground", "synopsis": "Runs a task in the background, returning a job handle which can be used to get the status of the running task.", "usage": "public string GearmanClient::doBackground ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.dobackground.php"}, {"name": "GearmanClient::doHigh", "synopsis": "Runs a single high priority task and returns a string representation of the result. It is up to the GearmanClient and GearmanWorker to agree on the format of the result. High priority tasks will get precedence over normal and low priority tasks in the job queue.", "usage": "public string GearmanClient::doHigh ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.dohigh.php"}, {"name": "GearmanClient::doHighBackground", "synopsis": "Runs a high priority task in the background, returning a job handle which can be used to get the status of the running task. High priority tasks take precedence over normal and low priority tasks in the job queue.", "usage": "public string GearmanClient::doHighBackground ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.dohighbackground.php"}, {"name": "GearmanClient::doJobHandle", "synopsis": "Gets that job handle for a running task. This should be used between repeated GearmanClient::doNormal() calls. The job handle can then be used to get information on the task.", "usage": "public string GearmanClient::doJobHandle ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.dojobhandle.php"}, {"name": "GearmanClient::doLow", "synopsis": "Runs a single low priority task and returns a string representation of the result. It is up to the GearmanClient and GearmanWorker to agree on the format of the result. Normal and high priority tasks will get precedence over low priority tasks in the job queue.", "usage": "public string GearmanClient::doLow ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.dolow.php"}, {"name": "GearmanClient::doLowBackground", "synopsis": "Runs a low priority task in the background, returning a job handle which can be used to get the status of the running task. Normal and high priority tasks take precedence over low priority tasks in the job queue.", "usage": "public string GearmanClient::doLowBackground ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.dolowbackground.php"}, {"name": "GearmanClient::doNormal", "synopsis": "Runs a single task and returns a string representation of the result. It is up to the GearmanClient and GearmanWorker to agree on the format of the result.", "usage": "public string GearmanClient::doNormal ( string $function_name , string $workload [, string $unique ] )", "url": "https://secure.php.net/manual/en/gearmanclient.donormal.php"}, {"name": "GearmanClient::doStatus", "synopsis": "Returns the status for the running task. This should be used between repeated GearmanClient::doNormal() calls.", "usage": "public array GearmanClient::doStatus ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.dostatus.php"}, {"name": "GearmanClient::echo", "synopsis": "The GearmanClient::echo() method is deprecated as of pecl/gearman 1.0.0. Use GearmanClient::ping().", "usage": "public bool GearmanClient::echo ( string $workload )", "url": "https://secure.php.net/manual/en/gearmanclient.echo.php"}, {"name": "GearmanClient::error", "synopsis": "Returns an error string for the last error encountered.", "usage": "public string GearmanClient::error ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.error.php"}, {"name": "GearmanClient::getErrno", "synopsis": "Value of errno in the case of a GEARMAN_ERRNO return value.", "usage": "public int GearmanClient::getErrno ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.geterrno.php"}, {"name": "GearmanClient::jobStatus", "synopsis": "Gets the status for a background job given a job handle. The status information will specify whether the job is known, whether the job is currently running, and the percentage completion.", "usage": "public array GearmanClient::jobStatus ( string $job_handle )", "url": "https://secure.php.net/manual/en/gearmanclient.jobstatus.php"}, {"name": "GearmanClient::ping", "synopsis": "Sends some arbitrary data to all job servers to see if they echo it back. The data sent is not used or processed in any other way. Primarily used for testing and debugging.", "usage": "public bool GearmanClient::ping ( string $workload )", "url": "https://secure.php.net/manual/en/gearmanclient.ping.php"}, {"name": "GearmanClient::removeOptions", "synopsis": "Removes (unsets) one or more options.", "usage": "public bool GearmanClient::removeOptions ( int $options )", "url": "https://secure.php.net/manual/en/gearmanclient.removeoptions.php"}, {"name": "GearmanClient::returnCode", "synopsis": "Returns the last Gearman return code.", "usage": "public int GearmanClient::returnCode ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.returncode.php"}, {"name": "GearmanClient::runTasks", "synopsis": "For a set of tasks previously added with GearmanClient::addTask(), GearmanClient::addTaskHigh(), GearmanClient::addTaskLow(), GearmanClient::addTaskBackground(), GearmanClient::addTaskHighBackground(), or GearmanClient::addTaskLowBackground(), this call starts running the tasks in parallel.", "usage": "public bool GearmanClient::runTasks ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.runtasks.php"}, {"name": "GearmanClient::setClientCallback", "synopsis": "Sets the callback function for accepting data packets for a task. The callback function should take a single argument, a GearmanTask object.", "usage": "public void GearmanClient::setClientCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setclientcallback.php"}, {"name": "GearmanClient::setCompleteCallback", "synopsis": "Use to set a function to be called when a GearmanTask is completed, or when GearmanJob::sendComplete() is invoked by a worker (whichever happens first).", "usage": "public bool GearmanClient::setCompleteCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setcompletecallback.php"}, {"name": "GearmanClient::setContext", "synopsis": "Sets an arbitrary string to provide application context that can later be retrieved by GearmanClient::context().", "usage": "public bool GearmanClient::setContext ( string $context )", "url": "https://secure.php.net/manual/en/gearmanclient.setcontext.php"}, {"name": "GearmanClient::setCreatedCallback", "synopsis": "Sets a function to be called when a task is received and queued by the Gearman job server. The callback should accept a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setCreatedCallback ( string $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setcreatedcallback.php"}, {"name": "GearmanClient::setData", "synopsis": "Sets some arbitrary application data that can later be retrieved by GearmanClient::data().", "usage": "public bool GearmanClient::setData ( string $data )", "url": "https://secure.php.net/manual/en/gearmanclient.setdata.php"}, {"name": "GearmanClient::setDataCallback", "synopsis": "Sets the callback function for accepting data packets for a task. The callback function should take a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setDataCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setdatacallback.php"}, {"name": "GearmanClient::setExceptionCallback", "synopsis": "Specifies a function to call when a worker for a task sends an exception.", "usage": "public bool GearmanClient::setExceptionCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setexceptioncallback.php"}, {"name": "GearmanClient::setFailCallback", "synopsis": "Sets the callback function to be used when a task does not complete successfully. The function should accept a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setFailCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setfailcallback.php"}, {"name": "GearmanClient::setOptions", "synopsis": "Sets one or more client options.", "usage": "public bool GearmanClient::setOptions ( int $options )", "url": "https://secure.php.net/manual/en/gearmanclient.setoptions.php"}, {"name": "GearmanClient::setStatusCallback", "synopsis": "Sets a callback function used for getting updated status information from a worker. The function should accept a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setStatusCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setstatuscallback.php"}, {"name": "GearmanClient::setTimeout", "synopsis": "Sets the timeout for socket I/O activity.", "usage": "public bool GearmanClient::setTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/gearmanclient.settimeout.php"}, {"name": "GearmanClient::setWarningCallback", "synopsis": "Sets a function to be called when a worker sends a warning. The callback should accept a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setWarningCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setwarningcallback.php"}, {"name": "GearmanClient::setWorkloadCallback", "synopsis": "Sets a function to be called when a worker needs to send back data prior to job completion. A worker can do this when it needs to send updates, send partial results, or flush data during long running jobs. The callback should accept a single argument, a GearmanTask object.", "usage": "public bool GearmanClient::setWorkloadCallback ( callable $callback )", "url": "https://secure.php.net/manual/en/gearmanclient.setworkloadcallback.php"}, {"name": "GearmanClient::timeout", "synopsis": "Returns the timeout in milliseconds to wait for I/O activity.", "usage": "public int GearmanClient::timeout ( void )", "url": "https://secure.php.net/manual/en/gearmanclient.timeout.php"}, {"name": "GearmanJob::complete", "synopsis": "Sends result data and the complete status update for this job.", "usage": "public bool GearmanJob::complete ( string $result )", "url": "https://secure.php.net/manual/en/gearmanjob.complete.php"}, {"name": "GearmanJob::__construct", "synopsis": "Creates a GearmanJob instance representing a job the worker is to complete.", "usage": "public GearmanJob::__construct ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.construct.php"}, {"name": "GearmanJob::data", "synopsis": "Sends data to the job server (and any listening clients) for this job.", "usage": "public bool GearmanJob::data ( string $data )", "url": "https://secure.php.net/manual/en/gearmanjob.data.php"}, {"name": "GearmanJob::exception", "synopsis": "Sends the supplied exception when this job is running.", "usage": "public bool GearmanJob::exception ( string $exception )", "url": "https://secure.php.net/manual/en/gearmanjob.exception.php"}, {"name": "GearmanJob::fail", "synopsis": "Sends failure status for this job, indicating that the job failed in a known way (as opposed to failing due to a thrown exception).", "usage": "public bool GearmanJob::fail ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.fail.php"}, {"name": "GearmanJob::functionName", "synopsis": "Returns the function name for this job. This is the function the work will execute to perform the job.", "usage": "public string GearmanJob::functionName ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.functionname.php"}, {"name": "GearmanJob::handle", "synopsis": "Returns the opaque job handle assigned by the job server.", "usage": "public string GearmanJob::handle ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.handle.php"}, {"name": "GearmanJob::returnCode", "synopsis": "Returns the last return code issued by the job server.", "usage": "public int GearmanJob::returnCode ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.returncode.php"}, {"name": "GearmanJob::sendComplete", "synopsis": "Sends result data and the complete status update for this job.", "usage": "public bool GearmanJob::sendComplete ( string $result )", "url": "https://secure.php.net/manual/en/gearmanjob.sendcomplete.php"}, {"name": "GearmanJob::sendData", "synopsis": "Sends data to the job server (and any listening clients) for this job.", "usage": "public bool GearmanJob::sendData ( string $data )", "url": "https://secure.php.net/manual/en/gearmanjob.senddata.php"}, {"name": "GearmanJob::sendException", "synopsis": "Sends the supplied exception when this job is running.", "usage": "public bool GearmanJob::sendException ( string $exception )", "url": "https://secure.php.net/manual/en/gearmanjob.sendexception.php"}, {"name": "GearmanJob::sendFail", "synopsis": "Sends failure status for this job, indicating that the job failed in a known way (as opposed to failing due to a thrown exception).", "usage": "public bool GearmanJob::sendFail ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.sendfail.php"}, {"name": "GearmanJob::sendStatus", "synopsis": "Sends status information to the job server and any listening clients. Use this to specify what percentage of the job has been completed.", "usage": "public bool GearmanJob::sendStatus ( int $numerator , int $denominator )", "url": "https://secure.php.net/manual/en/gearmanjob.sendstatus.php"}, {"name": "GearmanJob::sendWarning", "synopsis": "Sends a warning for this job while it is running.", "usage": "public bool GearmanJob::sendWarning ( string $warning )", "url": "https://secure.php.net/manual/en/gearmanjob.sendwarning.php"}, {"name": "GearmanJob::setReturn", "synopsis": "Sets the return value for this job, indicates how the job completed.", "usage": "public bool GearmanJob::setReturn ( int $gearman_return_t )", "url": "https://secure.php.net/manual/en/gearmanjob.setreturn.php"}, {"name": "GearmanJob::status", "synopsis": "Sends status information to the job server and any listening clients. Use this to specify what percentage of the job has been completed.", "usage": "public bool GearmanJob::status ( int $numerator , int $denominator )", "url": "https://secure.php.net/manual/en/gearmanjob.status.php"}, {"name": "GearmanJob::unique", "synopsis": "Returns the unique identifiter for this job. The identifier is assigned by the client.", "usage": "public string GearmanJob::unique ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.unique.php"}, {"name": "GearmanJob::warning", "synopsis": "Sends a warning for this job while it is running.", "usage": "public bool GearmanJob::warning ( string $warning )", "url": "https://secure.php.net/manual/en/gearmanjob.warning.php"}, {"name": "GearmanJob::workload", "synopsis": "Returns the workload for the job. This is serialized data that is to be processed by the worker.", "usage": "public string GearmanJob::workload ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.workload.php"}, {"name": "GearmanJob::workloadSize", "synopsis": "Returns the size of the job's work load (the data the worker is to process) in bytes.", "usage": "public int GearmanJob::workloadSize ( void )", "url": "https://secure.php.net/manual/en/gearmanjob.workloadsize.php"}, {"name": "GearmanTask::__construct", "synopsis": "Creates a GearmanTask instance representing a task to be submitted to a job server.", "usage": "public GearmanTask::__construct ( void )", "url": "https://secure.php.net/manual/en/gearmantask.construct.php"}, {"name": "GearmanTask::create", "synopsis": "Returns a new GearmanTask object.", "usage": "public GearmanTask GearmanTask::create ( void )", "url": "https://secure.php.net/manual/en/gearmantask.create.php"}, {"name": "GearmanTask::data", "synopsis": "Returns data being returned for a task by a worker.", "usage": "public string GearmanTask::data ( void )", "url": "https://secure.php.net/manual/en/gearmantask.data.php"}, {"name": "GearmanTask::dataSize", "synopsis": "Returns the size of the data being returned for a task.", "usage": "public int GearmanTask::dataSize ( void )", "url": "https://secure.php.net/manual/en/gearmantask.datasize.php"}, {"name": "GearmanTask::function", "synopsis": "Returns the name of the function this task is associated with, i.e., the function the Gearman worker calls.", "usage": "public string GearmanTask::function ( void )", "url": "https://secure.php.net/manual/en/gearmantask.function.php"}, {"name": "GearmanTask::functionName", "synopsis": "Returns the name of the function this task is associated with, i.e., the function the Gearman worker calls.", "usage": "public string GearmanTask::functionName ( void )", "url": "https://secure.php.net/manual/en/gearmantask.functionname.php"}, {"name": "GearmanTask::isKnown", "synopsis": "Gets the status information for whether or not this task is known to the job server.", "usage": "public bool GearmanTask::isKnown ( void )", "url": "https://secure.php.net/manual/en/gearmantask.isknown.php"}, {"name": "GearmanTask::isRunning", "synopsis": "Indicates whether or not this task is currently running.", "usage": "public bool GearmanTask::isRunning ( void )", "url": "https://secure.php.net/manual/en/gearmantask.isrunning.php"}, {"name": "GearmanTask::jobHandle", "synopsis": "Returns the job handle for this task.", "usage": "public string GearmanTask::jobHandle ( void )", "url": "https://secure.php.net/manual/en/gearmantask.jobhandle.php"}, {"name": "GearmanTask::recvData", "synopsis": "", "usage": "public array GearmanTask::recvData ( int $data_len )", "url": "https://secure.php.net/manual/en/gearmantask.recvdata.php"}, {"name": "GearmanTask::returnCode", "synopsis": "Returns the last Gearman return code for this task.", "usage": "public int GearmanTask::returnCode ( void )", "url": "https://secure.php.net/manual/en/gearmantask.returncode.php"}, {"name": "GearmanTask::sendData", "synopsis": "", "usage": "public int GearmanTask::sendData ( string $data )", "url": "https://secure.php.net/manual/en/gearmantask.senddata.php"}, {"name": "GearmanTask::sendWorkload", "synopsis": "", "usage": "public int GearmanTask::sendWorkload ( string $data )", "url": "https://secure.php.net/manual/en/gearmantask.sendworkload.php"}, {"name": "GearmanTask::taskDenominator", "synopsis": "Returns the denominator of the percentage of the task that is complete expressed as a fraction.", "usage": "public int GearmanTask::taskDenominator ( void )", "url": "https://secure.php.net/manual/en/gearmantask.taskdenominator.php"}, {"name": "GearmanTask::taskNumerator", "synopsis": "Returns the numerator of the percentage of the task that is complete expressed as a fraction.", "usage": "public int GearmanTask::taskNumerator ( void )", "url": "https://secure.php.net/manual/en/gearmantask.tasknumerator.php"}, {"name": "GearmanTask::unique", "synopsis": "Returns the unique identifier for this task. This is assigned by the GearmanClient, as opposed to the job handle which is set by the Gearman job server.", "usage": "public string GearmanTask::unique ( void )", "url": "https://secure.php.net/manual/en/gearmantask.unique.php"}, {"name": "GearmanTask::uuid", "synopsis": "Returns the unique identifier for this task. This is assigned by the GearmanClient, as opposed to the job handle which is set by the Gearman job server.", "usage": "public string GearmanTask::uuid ( void )", "url": "https://secure.php.net/manual/en/gearmantask.uuid.php"}, {"name": "GearmanWorker::addFunction", "synopsis": "Registers a function name with the job server and specifies a callback corresponding to that function. Optionally specify extra application context data to be used when the callback is called and a timeout.", "usage": "public bool GearmanWorker::addFunction ( string $function_name , callable $function [, mixed &$context [, int $timeout ]] )", "url": "https://secure.php.net/manual/en/gearmanworker.addfunction.php"}, {"name": "GearmanWorker::addOptions", "synopsis": "Adds one or more options to the options previously set.", "usage": "public bool GearmanWorker::addOptions ( int $option )", "url": "https://secure.php.net/manual/en/gearmanworker.addoptions.php"}, {"name": "GearmanWorker::addServer", "synopsis": "Adds a job server to this worker. This goes into a list of servers than can be used to run jobs. No socket I/O happens here.", "usage": "public bool GearmanWorker::addServer ([ string $host = 127.0.0.1 [, int $port = 4730 ]] )", "url": "https://secure.php.net/manual/en/gearmanworker.addserver.php"}, {"name": "GearmanWorker::addServers", "synopsis": "Adds one or more job servers to this worker. These go into a list of servers that can be used to run jobs. No socket I/O happens here.", "usage": "public bool GearmanWorker::addServers ( string $servers = 127.0.0.1:4730 )", "url": "https://secure.php.net/manual/en/gearmanworker.addservers.php"}, {"name": "GearmanWorker::clone", "synopsis": "Creates a copy of the worker.", "usage": "public void GearmanWorker::clone ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.clone.php"}, {"name": "GearmanWorker::__construct", "synopsis": "Creates a GearmanWorker instance representing a worker that connects to the job server and accepts tasks to run.", "usage": "public GearmanWorker::__construct ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.construct.php"}, {"name": "GearmanWorker::echo", "synopsis": "Sends data to all job servers to see if they echo it back. This is a test function to see if job servers are responding properly.", "usage": "public bool GearmanWorker::echo ( string $workload )", "url": "https://secure.php.net/manual/en/gearmanworker.echo.php"}, {"name": "GearmanWorker::error", "synopsis": "Returns an error string for the last error encountered.", "usage": "public string GearmanWorker::error ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.error.php"}, {"name": "GearmanWorker::getErrno", "synopsis": "Returns the value of errno in the case of a GEARMAN_ERRNO return value.", "usage": "public int GearmanWorker::getErrno ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.geterrno.php"}, {"name": "GearmanWorker::options", "synopsis": "Gets the options previously set for the worker.", "usage": "public int GearmanWorker::options ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.options.php"}, {"name": "GearmanWorker::register", "synopsis": "Registers a function name with the job server with an optional timeout. The timeout specifies how many seconds the server will wait before marking a job as failed. If the timeout is set to zero, there is no timeout.", "usage": "public bool GearmanWorker::register ( string $function_name [, int $timeout ] )", "url": "https://secure.php.net/manual/en/gearmanworker.register.php"}, {"name": "GearmanWorker::removeOptions", "synopsis": "Removes (unsets) one or more worker options.", "usage": "public bool GearmanWorker::removeOptions ( int $option )", "url": "https://secure.php.net/manual/en/gearmanworker.removeoptions.php"}, {"name": "GearmanWorker::returnCode", "synopsis": "Returns the last Gearman return code.", "usage": "public int GearmanWorker::returnCode ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.returncode.php"}, {"name": "GearmanWorker::setId", "synopsis": "Assigns the worker an identifier.", "usage": "public bool GearmanWorker::setId ( string $id )", "url": "https://secure.php.net/manual/en/gearmanworker.setid.php"}, {"name": "GearmanWorker::setOptions", "synopsis": "Sets one or more options to the supplied value.", "usage": "public bool GearmanWorker::setOptions ( int $option )", "url": "https://secure.php.net/manual/en/gearmanworker.setoptions.php"}, {"name": "GearmanWorker::setTimeout", "synopsis": "Sets the interval of time to wait for socket I/O activity.", "usage": "public bool GearmanWorker::setTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/gearmanworker.settimeout.php"}, {"name": "GearmanWorker::timeout", "synopsis": "Returns the current time to wait, in milliseconds, for socket I/O activity.", "usage": "public int GearmanWorker::timeout ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.timeout.php"}, {"name": "GearmanWorker::unregister", "synopsis": "Unregisters a function name with the job servers ensuring that no more jobs (for that function) are sent to this worker.", "usage": "public bool GearmanWorker::unregister ( string $function_name )", "url": "https://secure.php.net/manual/en/gearmanworker.unregister.php"}, {"name": "GearmanWorker::unregisterAll", "synopsis": "Unregisters all previously registered functions, ensuring that no more jobs are sent to this worker.", "usage": "public bool GearmanWorker::unregisterAll ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.unregisterall.php"}, {"name": "GearmanWorker::wait", "synopsis": "Causes the worker to wait for activity from one of the Gearman job servers when operating in non-blocking I/O mode. On failure, issues a E_WARNING with the last Gearman error encountered.", "usage": "public bool GearmanWorker::wait ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.wait.php"}, {"name": "GearmanWorker::work", "synopsis": "Waits for a job to be assigned and then calls the appropriate callback function. Issues an E_WARNING with the last Gearman error if the return code is not one of GEARMAN_SUCCESS, GEARMAN_IO_WAIT, or GEARMAN_WORK_FAIL.", "usage": "public bool GearmanWorker::work ( void )", "url": "https://secure.php.net/manual/en/gearmanworker.work.php"}, {"name": "Gender\\Gender::connect", "synopsis": "Connect to an external name dictionary. Currently only streams are supported.", "usage": "public bool Gender\\Gender::connect ( string $dsn )", "url": "https://secure.php.net/manual/en/gender-gender.connect.php"}, {"name": "Gender\\Gender::__construct", "synopsis": "Create a Gender object optionally connecting to an external name dictionary. When no external database was given, compiled in data will be used.", "usage": "public Gender\\Gender::__construct ([ string $dsn ] )", "url": "https://secure.php.net/manual/en/gender-gender.construct.php"}, {"name": "Gender\\Gender::country", "synopsis": "Returns the textual representation of a country from a Gender class constant.", "usage": "public array Gender\\Gender::country ( int $country )", "url": "https://secure.php.net/manual/en/gender-gender.country.php"}, {"name": "Gender\\Gender::get", "synopsis": "Get the gender of the name in a particular country.", "usage": "public int Gender\\Gender::get ( string $name [, int $country ] )", "url": "https://secure.php.net/manual/en/gender-gender.get.php"}, {"name": "Gender\\Gender::isNick", "synopsis": "Check whether the name0 is a nick of the name1.", "usage": "public array Gender\\Gender::isNick ( string $name0 , string $name1 [, int $country ] )", "url": "https://secure.php.net/manual/en/gender-gender.isnick.php"}, {"name": "Gender\\Gender::similarNames", "synopsis": "Get similar names for the given name and country.", "usage": "public array Gender\\Gender::similarNames ( string $name [, int $country ] )", "url": "https://secure.php.net/manual/en/gender-gender.similarnames.php"}, {"name": "Generator::current", "synopsis": null, "usage": "public mixed Generator::current ( void )", "url": "https://secure.php.net/manual/en/generator.current.php"}, {"name": "Generator::getReturn", "synopsis": null, "usage": "public mixed Generator::getReturn ( void )", "url": "https://secure.php.net/manual/en/generator.getreturn.php"}, {"name": "Generator::key", "synopsis": "Gets the key of the yielded value.", "usage": "public mixed Generator::key ( void )", "url": "https://secure.php.net/manual/en/generator.key.php"}, {"name": "Generator::next", "synopsis": "Calling Generator::next() is equivalent to calling Generator::send() with NULL as argument.", "usage": "public void Generator::next ( void )", "url": "https://secure.php.net/manual/en/generator.next.php"}, {"name": "Generator::rewind", "synopsis": "If iteration has already begun, this will throw an exception.", "usage": "public void Generator::rewind ( void )", "url": "https://secure.php.net/manual/en/generator.rewind.php"}, {"name": "Generator::send", "synopsis": "Sends the given value to the generator as the result of the current yield expression and resumes execution of the generator.", "usage": "public mixed Generator::send ( mixed $value )", "url": "https://secure.php.net/manual/en/generator.send.php"}, {"name": "Generator::throw", "synopsis": "Throws an exception into the generator and resumes execution of the generator. The behavior will be the same as if the current yield expression was replaced with a throw $exception statement.", "usage": "public mixed Generator::throw ( Throwable $exception )", "url": "https://secure.php.net/manual/en/generator.throw.php"}, {"name": "Generator::valid", "synopsis": null, "usage": "public bool Generator::valid ( void )", "url": "https://secure.php.net/manual/en/generator.valid.php"}, {"name": "Generator::__wakeup", "synopsis": "Throws an exception as generators can't be serialized.", "usage": "public void Generator::__wakeup ( void )", "url": "https://secure.php.net/manual/en/generator.wakeup.php"}, {"name": "GlobIterator::__construct", "synopsis": "Constructs a new directory iterator from a glob expression.", "usage": "public GlobIterator::__construct ( string $pattern [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )", "url": "https://secure.php.net/manual/en/globiterator.construct.php"}, {"name": "GlobIterator::count", "synopsis": "Gets the number of directories and files found by the glob expression.", "usage": "public int GlobIterator::count ( void )", "url": "https://secure.php.net/manual/en/globiterator.count.php"}, {"name": "Gmagick::addimage", "synopsis": "Adds new image to Gmagick object from the current position of the source object. After the operation iterator position is moved at the end of the list.", "usage": "public Gmagick Gmagick::addimage ( Gmagick $source )", "url": "https://secure.php.net/manual/en/gmagick.addimage.php"}, {"name": "Gmagick::addnoiseimage", "synopsis": "Adds random noise to the image.", "usage": "public Gmagick Gmagick::addnoiseimage ( int $noise_type )", "url": "https://secure.php.net/manual/en/gmagick.addnoiseimage.php"}, {"name": "Gmagick::annotateimage", "synopsis": "Annotates an image with text.", "usage": "public Gmagick Gmagick::annotateimage ( GmagickDraw $GmagickDraw , float $x , float $y , float $angle , string $text )", "url": "https://secure.php.net/manual/en/gmagick.annotateimage.php"}, {"name": "Gmagick::blurimage", "synopsis": "Adds blur filter to image.", "usage": "public Gmagick Gmagick::blurimage ( float $radius , float $sigma [, int $channel ] )", "url": "https://secure.php.net/manual/en/gmagick.blurimage.php"}, {"name": "Gmagick::borderimage", "synopsis": "Surrounds the image with a border of the color defined by the bordercolor GmagickPixel object or a color string.", "usage": "public Gmagick Gmagick::borderimage ( GmagickPixel $color , int $width , int $height )", "url": "https://secure.php.net/manual/en/gmagick.borderimage.php"}, {"name": "Gmagick::charcoalimage", "synopsis": "Simulates a charcoal drawing.", "usage": "public Gmagick Gmagick::charcoalimage ( float $radius , float $sigma )", "url": "https://secure.php.net/manual/en/gmagick.charcoalimage.php"}, {"name": "Gmagick::chopimage", "synopsis": "Removes a region of an image and collapses the image to occupy the removed portion.", "usage": "public Gmagick Gmagick::chopimage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/gmagick.chopimage.php"}, {"name": "Gmagick::clear", "synopsis": "Clears all resources associated to Gmagick object", "usage": "public Gmagick Gmagick::clear ( void )", "url": "https://secure.php.net/manual/en/gmagick.clear.php"}, {"name": "Gmagick::commentimage", "synopsis": "Adds a comment to your image.", "usage": "public Gmagick Gmagick::commentimage ( string $comment )", "url": "https://secure.php.net/manual/en/gmagick.commentimage.php"}, {"name": "Gmagick::compositeimage", "synopsis": "Composite one image onto another at the specified offset.", "usage": "public Gmagick Gmagick::compositeimage ( Gmagick $source , int $COMPOSE , int $x , int $y )", "url": "https://secure.php.net/manual/en/gmagick.compositeimage.php"}, {"name": "Gmagick::__construct", "synopsis": "The Gmagick constructor.", "usage": "public Gmagick::__construct ([ string $filename ] )", "url": "https://secure.php.net/manual/en/gmagick.construct.php"}, {"name": "Gmagick::cropimage", "synopsis": "Extracts a region of the image.", "usage": "public Gmagick Gmagick::cropimage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/gmagick.cropimage.php"}, {"name": "Gmagick::cropthumbnailimage", "synopsis": "Creates a fixed size thumbnail by first scaling the image down and cropping a specified area from the center.", "usage": "public Gmagick Gmagick::cropthumbnailimage ( int $width , int $height )", "url": "https://secure.php.net/manual/en/gmagick.cropthumbnailimage.php"}, {"name": "Gmagick::current", "synopsis": "Returns reference to the current gmagick object with image pointer at the correct sequence.", "usage": "public Gmagick Gmagick::current ( void )", "url": "https://secure.php.net/manual/en/gmagick.current.php"}, {"name": "Gmagick::cyclecolormapimage", "synopsis": "Displaces an image's colormap by a given number of positions. If you cycle the colormap a number of times you can produce a psychedelic effect.", "usage": "public Gmagick Gmagick::cyclecolormapimage ( int $displace )", "url": "https://secure.php.net/manual/en/gmagick.cyclecolormapimage.php"}, {"name": "Gmagick::deconstructimages", "synopsis": "Compares each image with the next in a sequence and returns the maximum bounding region of any pixel differences it discovers.", "usage": "public Gmagick Gmagick::deconstructimages ( void )", "url": "https://secure.php.net/manual/en/gmagick.deconstructimages.php"}, {"name": "Gmagick::despeckleimage", "synopsis": "Reduces the speckle noise in an image while preserving the edges of the original image.", "usage": "public Gmagick Gmagick::despeckleimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.despeckleimage.php"}, {"name": "Gmagick::destroy", "synopsis": "Destroys the Gmagick object and frees all resources associated with it", "usage": "public bool Gmagick::destroy ( void )", "url": "https://secure.php.net/manual/en/gmagick.destroy.php"}, {"name": "Gmagick::drawimage", "synopsis": "Renders the GmagickDraw object on the current image", "usage": "public Gmagick Gmagick::drawimage ( GmagickDraw $GmagickDraw )", "url": "https://secure.php.net/manual/en/gmagick.drawimage.php"}, {"name": "Gmagick::edgeimage", "synopsis": "Enhance edges within the image with a convolution filter of the given radius. Use radius 0 and it will be auto-selected.", "usage": "public Gmagick Gmagick::edgeimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.edgeimage.php"}, {"name": "Gmagick::embossimage", "synopsis": "Returns a grayscale image with a three-dimensional effect. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and it will choose a suitable radius for you.", "usage": "public Gmagick Gmagick::embossimage ( float $radius , float $sigma )", "url": "https://secure.php.net/manual/en/gmagick.embossimage.php"}, {"name": "Gmagick::enhanceimage", "synopsis": "Applies a digital filter that improves the quality of a noisy image.", "usage": "public Gmagick Gmagick::enhanceimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.enhanceimage.php"}, {"name": "Gmagick::equalizeimage", "synopsis": "Equalizes the image histogram.", "usage": "public Gmagick Gmagick::equalizeimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.equalizeimage.php"}, {"name": "Gmagick::flipimage", "synopsis": "Creates a vertical mirror image by reflecting the pixels around the central x-axis.", "usage": "public Gmagick Gmagick::flipimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.flipimage.php"}, {"name": "Gmagick::flopimage", "synopsis": "Creates a horizontal mirror image by reflecting the pixels around the central y-axis.", "usage": "public Gmagick Gmagick::flopimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.flopimage.php"}, {"name": "Gmagick::frameimage", "synopsis": "Adds a simulated three-dimensional border around the image. The width and height specify the border width of the vertical and horizontal sides of the frame. The inner and outer bevels indicate the width of the inner and outer shadows of the frame.", "usage": "public Gmagick Gmagick::frameimage ( GmagickPixel $color , int $width , int $height , int $inner_bevel , int $outer_bevel )", "url": "https://secure.php.net/manual/en/gmagick.frameimage.php"}, {"name": "Gmagick::gammaimage", "synopsis": "Gamma-corrects an image. The same image viewed on different devices will have perceptual differences in the way the image's intensities are represented on the screen. Specify individual gamma levels for the red, green, and blue channels, or adjust all three with the gamma parameter. Values typically range from 0.8 to 2.3.", "usage": "public Gmagick Gmagick::gammaimage ( float $gamma )", "url": "https://secure.php.net/manual/en/gmagick.gammaimage.php"}, {"name": "Gmagick::getcopyright", "synopsis": "Returns the GraphicsMagick API copyright as a string.", "usage": "public string Gmagick::getcopyright ( void )", "url": "https://secure.php.net/manual/en/gmagick.getcopyright.php"}, {"name": "Gmagick::getfilename", "synopsis": "Returns the filename associated with an image sequence.", "usage": "public string Gmagick::getfilename ( void )", "url": "https://secure.php.net/manual/en/gmagick.getfilename.php"}, {"name": "Gmagick::getimagebackgroundcolor", "synopsis": "Returns the image background color.", "usage": "public GmagickPixel Gmagick::getimagebackgroundcolor ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagebackgroundcolor.php"}, {"name": "Gmagick::getimageblueprimary", "synopsis": "Returns the chromaticity blue primary point for the image.", "usage": "public array Gmagick::getimageblueprimary ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageblueprimary.php"}, {"name": "Gmagick::getimagebordercolor", "synopsis": "Returns the image border color.", "usage": "public GmagickPixel Gmagick::getimagebordercolor ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagebordercolor.php"}, {"name": "Gmagick::getimagechanneldepth", "synopsis": "Gets the depth for a particular image channel.", "usage": "public int Gmagick::getimagechanneldepth ( int $channel_type )", "url": "https://secure.php.net/manual/en/gmagick.getimagechanneldepth.php"}, {"name": "Gmagick::getimagecolors", "synopsis": "Returns the color of the specified colormap index.", "usage": "public int Gmagick::getimagecolors ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagecolors.php"}, {"name": "Gmagick::getimagecolorspace", "synopsis": "Gets the image colorspace.", "usage": "public int Gmagick::getimagecolorspace ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagecolorspace.php"}, {"name": "Gmagick::getimagecompose", "synopsis": "Returns the composite operator associated with the image.", "usage": "public int Gmagick::getimagecompose ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagecompose.php"}, {"name": "Gmagick::getimagedelay", "synopsis": "Gets the image delay", "usage": "public int Gmagick::getimagedelay ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagedelay.php"}, {"name": "Gmagick::getimagedepth", "synopsis": "Gets the depth of the image.", "usage": "public int Gmagick::getimagedepth ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagedepth.php"}, {"name": "Gmagick::getimagedispose", "synopsis": "Gets the image disposal method", "usage": "public int Gmagick::getimagedispose ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagedispose.php"}, {"name": "Gmagick::getimageextrema", "synopsis": "Returns an associative array with the keys \"min\" and \"max\". Throws an GmagickException on error.", "usage": "public array Gmagick::getimageextrema ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageextrema.php"}, {"name": "Gmagick::getimagefilename", "synopsis": "Returns the filename of a particular image in a sequence", "usage": "public string Gmagick::getimagefilename ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagefilename.php"}, {"name": "Gmagick::getimageformat", "synopsis": "Returns the format of a particular image in a sequence.", "usage": "public string Gmagick::getimageformat ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageformat.php"}, {"name": "Gmagick::getimagegamma", "synopsis": "Gets the image gamma", "usage": "public float Gmagick::getimagegamma ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagegamma.php"}, {"name": "Gmagick::getimagegreenprimary", "synopsis": "Returns the chromaticity green primary point. Returns an array with the keys \"x\" and \"y\".", "usage": "public array Gmagick::getimagegreenprimary ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagegreenprimary.php"}, {"name": "Gmagick::getimageheight", "synopsis": "Returns the image height", "usage": "public int Gmagick::getimageheight ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageheight.php"}, {"name": "Gmagick::getimagehistogram", "synopsis": "Returns the image histogram as an array of GmagickPixel objects. Throw an GmagickException on error.", "usage": "public array Gmagick::getimagehistogram ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagehistogram.php"}, {"name": "Gmagick::getimageindex", "synopsis": "Returns the index of the current active image within the Gmagick object.", "usage": "public int Gmagick::getimageindex ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageindex.php"}, {"name": "Gmagick::getimageinterlacescheme", "synopsis": "Gets the image interlace scheme.", "usage": "public int Gmagick::getimageinterlacescheme ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageinterlacescheme.php"}, {"name": "Gmagick::getimageiterations", "synopsis": "Gets the image iterations.", "usage": "public int Gmagick::getimageiterations ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageiterations.php"}, {"name": "Gmagick::getimagematte", "synopsis": "Returns TRUE if the image has a matte channel, otherwise FALSE.", "usage": "public int Gmagick::getimagematte ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagematte.php"}, {"name": "Gmagick::getimagemattecolor", "synopsis": "Returns GmagickPixel object on success. Throw an GmagickException on error.", "usage": "public GmagickPixel Gmagick::getimagemattecolor ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagemattecolor.php"}, {"name": "Gmagick::getimageprofile", "synopsis": "Returns the named image profile.", "usage": "public string Gmagick::getimageprofile ( string $name )", "url": "https://secure.php.net/manual/en/gmagick.getimageprofile.php"}, {"name": "Gmagick::getimageredprimary", "synopsis": "Returns the chromaticity red primary point as an array with the keys \"x\" and \"y\".", "usage": "public array Gmagick::getimageredprimary ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageredprimary.php"}, {"name": "Gmagick::getimagerenderingintent", "synopsis": "Gets the image rendering intent", "usage": "public int Gmagick::getimagerenderingintent ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagerenderingintent.php"}, {"name": "Gmagick::getimageresolution", "synopsis": "Returns the resolution as an array.", "usage": "public array Gmagick::getimageresolution ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageresolution.php"}, {"name": "Gmagick::getimagescene", "synopsis": "Gets the image scene.", "usage": "public int Gmagick::getimagescene ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagescene.php"}, {"name": "Gmagick::getimagesignature", "synopsis": "Generates an SHA-256 message digest for the image pixel stream.", "usage": "public string Gmagick::getimagesignature ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagesignature.php"}, {"name": "Gmagick::getimagetype", "synopsis": "Gets the potential image type.", "usage": "public int Gmagick::getimagetype ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagetype.php"}, {"name": "Gmagick::getimageunits", "synopsis": "Gets the image units of resolution.", "usage": "public int Gmagick::getimageunits ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimageunits.php"}, {"name": "Gmagick::getimagewhitepoint", "synopsis": "Returns the chromaticity white point as an associative array with the keys \"x\" and \"y\".", "usage": "public array Gmagick::getimagewhitepoint ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagewhitepoint.php"}, {"name": "Gmagick::getimagewidth", "synopsis": "Returns the width of the image.", "usage": "public int Gmagick::getimagewidth ( void )", "url": "https://secure.php.net/manual/en/gmagick.getimagewidth.php"}, {"name": "Gmagick::getpackagename", "synopsis": "Returns the GraphicsMagick package name.", "usage": "public string Gmagick::getpackagename ( void )", "url": "https://secure.php.net/manual/en/gmagick.getpackagename.php"}, {"name": "Gmagick::getquantumdepth", "synopsis": "Returns the Gmagick quantum depth as a string.", "usage": "public array Gmagick::getquantumdepth ( void )", "url": "https://secure.php.net/manual/en/gmagick.getquantumdepth.php"}, {"name": "Gmagick::getreleasedate", "synopsis": "Returns the GraphicsMagick release date as a string.", "usage": "public string Gmagick::getreleasedate ( void )", "url": "https://secure.php.net/manual/en/gmagick.getreleasedate.php"}, {"name": "Gmagick::getsamplingfactors", "synopsis": "Gets the horizontal and vertical sampling factor.", "usage": "public array Gmagick::getsamplingfactors ( void )", "url": "https://secure.php.net/manual/en/gmagick.getsamplingfactors.php"}, {"name": "Gmagick::getsize", "synopsis": "Returns the size associated with the Gmagick object as an array with the keys \"columns\" and \"rows\".", "usage": "public array Gmagick::getsize ( void )", "url": "https://secure.php.net/manual/en/gmagick.getsize.php"}, {"name": "Gmagick::getversion", "synopsis": "Returns the GraphicsMagick API version as a string and as a number.", "usage": "public array Gmagick::getversion ( void )", "url": "https://secure.php.net/manual/en/gmagick.getversion.php"}, {"name": "Gmagick::hasnextimage", "synopsis": "Returns TRUE if the object has more images when traversing the list in the forward direction.", "usage": "public mixed Gmagick::hasnextimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.hasnextimage.php"}, {"name": "Gmagick::haspreviousimage", "synopsis": "Returns TRUE if the object has more images when traversing the list in the reverse direction", "usage": "public mixed Gmagick::haspreviousimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.haspreviousimage.php"}, {"name": "Gmagick::implodeimage", "synopsis": "Creates a new image that is a copy of an existing one with the image pixels \"imploded\" by the specified percentage.", "usage": "public mixed Gmagick::implodeimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.implodeimage.php"}, {"name": "Gmagick::labelimage", "synopsis": "Adds a label to an image.", "usage": "public mixed Gmagick::labelimage ( string $label )", "url": "https://secure.php.net/manual/en/gmagick.labelimage.php"}, {"name": "Gmagick::levelimage", "synopsis": "Adjusts the levels of an image by scaling the colors falling between specified white and black points to the full available quantum range. The parameters provided represent the black, mid, and white points. The black point specifies the darkest color in the image. Colors darker than the black point are set to zero. Mid point specifies a gamma correction to apply to the image. White point specifies the lightest color in the image. Colors brighter than the white point are set to the maximum quantum value.", "usage": "public mixed Gmagick::levelimage ( float $blackPoint , float $gamma , float $whitePoint [, int $channel = Gmagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/gmagick.levelimage.php"}, {"name": "Gmagick::magnifyimage", "synopsis": "Conveniently scales an image proportionally to twice its original size.", "usage": "public mixed Gmagick::magnifyimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.magnifyimage.php"}, {"name": "Gmagick::mapimage", "synopsis": "Replaces the colors of an image with the closest color from a reference image.", "usage": "public Gmagick Gmagick::mapimage ( gmagick $gmagick , bool $dither )", "url": "https://secure.php.net/manual/en/gmagick.mapimage.php"}, {"name": "Gmagick::medianfilterimage", "synopsis": "Applies a digital filter that improves the quality of a noisy image. Each pixel is replaced by the median in a set of neighboring pixels as defined by radius.", "usage": "public void Gmagick::medianfilterimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.medianfilterimage.php"}, {"name": "Gmagick::minifyimage", "synopsis": "A convenient method that scales an image proportionally to one-half its original size", "usage": "public Gmagick Gmagick::minifyimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.minifyimage.php"}, {"name": "Gmagick::modulateimage", "synopsis": "Lets you control the brightness, saturation, and hue of an image. Hue is the percentage of absolute rotation from the current position. For example 50 results in a counter-clockwise rotation of 90 degrees, 150 results in a clockwise rotation of 90 degrees, with 0 and 200 both resulting in a rotation of 180 degrees.", "usage": "public Gmagick Gmagick::modulateimage ( float $brightness , float $saturation , float $hue )", "url": "https://secure.php.net/manual/en/gmagick.modulateimage.php"}, {"name": "Gmagick::motionblurimage", "synopsis": "Simulates motion blur. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and MotionBlurImage() selects a suitable radius for you. Angle gives the angle of the blurring motion.", "usage": "public Gmagick Gmagick::motionblurimage ( float $radius , float $sigma , float $angle )", "url": "https://secure.php.net/manual/en/gmagick.motionblurimage.php"}, {"name": "Gmagick::newimage", "synopsis": "Creates a new image with the specified background color", "usage": "public Gmagick Gmagick::newimage ( int $width , int $height , string $background [, string $format ] )", "url": "https://secure.php.net/manual/en/gmagick.newimage.php"}, {"name": "Gmagick::nextimage", "synopsis": "Associates the next image in the image list with an Gmagick object.", "usage": "public bool Gmagick::nextimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.nextimage.php"}, {"name": "Gmagick::normalizeimage", "synopsis": "Enhances the contrast of a color image by adjusting the pixels color to span the entire range of colors available.", "usage": "public Gmagick Gmagick::normalizeimage ([ int $channel ] )", "url": "https://secure.php.net/manual/en/gmagick.normalizeimage.php"}, {"name": "Gmagick::oilpaintimage", "synopsis": "Applies a special effect filter that simulates an oil painting. Each pixel is replaced by the most frequent color occurring in a circular region defined by radius.", "usage": "public Gmagick Gmagick::oilpaintimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.oilpaintimage.php"}, {"name": "Gmagick::previousimage", "synopsis": "Associates the previous image in an image list with the Gmagick object.", "usage": "public bool Gmagick::previousimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.previousimage.php"}, {"name": "Gmagick::profileimage", "synopsis": "Adds or removes a ICC, IPTC, or generic profile from an image. If the profile is NULL, it is removed from the image otherwise added. Use a name of '*' and a profile of NULL to remove all profiles from the image.", "usage": "public Gmagick Gmagick::profileimage ( string $name , string $profile )", "url": "https://secure.php.net/manual/en/gmagick.profileimage.php"}, {"name": "Gmagick::quantizeimage", "synopsis": "Analyzes the colors within a reference image and chooses a fixed number of colors to represent the image. The goal of the algorithm is to minimize the color difference between the input and output image while minimizing the processing time.", "usage": "public Gmagick Gmagick::quantizeimage ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )", "url": "https://secure.php.net/manual/en/gmagick.quantizeimage.php"}, {"name": "Gmagick::quantizeimages", "synopsis": "Analyzes the colors within a sequence of images and chooses a fixed number of colors to represent the image. The goal of the algorithm is to minimize the color difference between the input and output image while minimizing the processing time.", "usage": "public Gmagick Gmagick::quantizeimages ( int $numColors , int $colorspace , int $treeDepth , bool $dither , bool $measureError )", "url": "https://secure.php.net/manual/en/gmagick.quantizeimages.php"}, {"name": "Gmagick::queryfontmetrics", "synopsis": "MagickQueryFontMetrics() returns an array representing the font metrics.", "usage": "public array Gmagick::queryfontmetrics ( GmagickDraw $draw , string $text )", "url": "https://secure.php.net/manual/en/gmagick.queryfontmetrics.php"}, {"name": "Gmagick::queryfonts", "synopsis": "Returns fonts supported by Gmagick.", "usage": "public array Gmagick::queryfonts ([ string $pattern = \"*\" ] )", "url": "https://secure.php.net/manual/en/gmagick.queryfonts.php"}, {"name": "Gmagick::queryformats", "synopsis": "Returns formats supported by Gmagick.", "usage": "public array Gmagick::queryformats ([ string $pattern = \"*\" ] )", "url": "https://secure.php.net/manual/en/gmagick.queryformats.php"}, {"name": "Gmagick::radialblurimage", "synopsis": "Radial blurs an image.", "usage": "public Gmagick Gmagick::radialblurimage ( float $angle [, int $channel = Gmagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/gmagick.radialblurimage.php"}, {"name": "Gmagick::raiseimage", "synopsis": "Creates a simulated three-dimensional button-like effect by lightening and darkening the edges of the image. Members width and height of raise_info define the width of the vertical and horizontal edge of the effect.", "usage": "public Gmagick Gmagick::raiseimage ( int $width , int $height , int $x , int $y , bool $raise )", "url": "https://secure.php.net/manual/en/gmagick.raiseimage.php"}, {"name": "Gmagick::read", "synopsis": "Reads image from filename.", "usage": "public Gmagick Gmagick::read ( string $filename )", "url": "https://secure.php.net/manual/en/gmagick.read.php"}, {"name": "Gmagick::readimage", "synopsis": "Reads image from filename.", "usage": "public Gmagick Gmagick::readimage ( string $filename )", "url": "https://secure.php.net/manual/en/gmagick.readimage.php"}, {"name": "Gmagick::readimageblob", "synopsis": "Reads image from a binary string.", "usage": "public Gmagick Gmagick::readimageblob ( string $imageContents [, string $filename ] )", "url": "https://secure.php.net/manual/en/gmagick.readimageblob.php"}, {"name": "Gmagick::readimagefile", "synopsis": "Reads an image or image sequence from an open file descriptor.", "usage": "public Gmagick Gmagick::readimagefile ( resource $fp [, string $filename ] )", "url": "https://secure.php.net/manual/en/gmagick.readimagefile.php"}, {"name": "Gmagick::reducenoiseimage", "synopsis": "Smooths the contours of an image while still preserving edge information. The algorithm works by replacing each pixel with its neighbor closest in value. A neighbor is defined by radius. Use a radius of 0 and Gmagick::reduceNoiseImage() selects a suitable radius for you.", "usage": "public Gmagick Gmagick::reducenoiseimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.reducenoiseimage.php"}, {"name": "Gmagick::removeimage", "synopsis": "Removes an image from the image list.", "usage": "public Gmagick Gmagick::removeimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.removeimage.php"}, {"name": "Gmagick::removeimageprofile", "synopsis": "Removes the named image profile and returns it.", "usage": "public string Gmagick::removeimageprofile ( string $name )", "url": "https://secure.php.net/manual/en/gmagick.removeimageprofile.php"}, {"name": "Gmagick::resampleimage", "synopsis": "Resample image to desired resolution.", "usage": "public Gmagick Gmagick::resampleimage ( float $xResolution , float $yResolution , int $filter , float $blur )", "url": "https://secure.php.net/manual/en/gmagick.resampleimage.php"}, {"name": "Gmagick::resizeimage", "synopsis": "Scales an image to the desired dimensions with a filter.", "usage": "public Gmagick Gmagick::resizeimage ( int $width , int $height , int $filter , float $blur [, bool $fit = FALSE ] )", "url": "https://secure.php.net/manual/en/gmagick.resizeimage.php"}, {"name": "Gmagick::rollimage", "synopsis": "Offsets an image as defined by x and y.", "usage": "public Gmagick Gmagick::rollimage ( int $x , int $y )", "url": "https://secure.php.net/manual/en/gmagick.rollimage.php"}, {"name": "Gmagick::rotateimage", "synopsis": "Rotates an image the specified number of degrees. Empty triangles left over from rotating the image are filled with the background color.", "usage": "public Gmagick Gmagick::rotateimage ( mixed $color , float $degrees )", "url": "https://secure.php.net/manual/en/gmagick.rotateimage.php"}, {"name": "Gmagick::scaleimage", "synopsis": "Scales the size of an image to the given dimensions. The other parameter will be calculated if 0 is passed as either param.", "usage": "public Gmagick Gmagick::scaleimage ( int $width , int $height [, bool $fit = FALSE ] )", "url": "https://secure.php.net/manual/en/gmagick.scaleimage.php"}, {"name": "Gmagick::separateimagechannel", "synopsis": "Separates a channel from the image and returns a grayscale image. A channel is a particular color component of each pixel in the image.", "usage": "public Gmagick Gmagick::separateimagechannel ( int $channel )", "url": "https://secure.php.net/manual/en/gmagick.separateimagechannel.php"}, {"name": "Gmagick::setCompressionQuality", "synopsis": "Sets the object's default compression quality.", "usage": "Gmagick Gmagick::setCompressionQuality ( int $quality = 75 )", "url": "https://secure.php.net/manual/en/gmagick.setcompressionquality.php"}, {"name": "Gmagick::setfilename", "synopsis": "Sets the filename before you read or write an image file.", "usage": "public Gmagick Gmagick::setfilename ( string $filename )", "url": "https://secure.php.net/manual/en/gmagick.setfilename.php"}, {"name": "Gmagick::setimagebackgroundcolor", "synopsis": "Sets the image background color.", "usage": "public Gmagick Gmagick::setimagebackgroundcolor ( GmagickPixel $color )", "url": "https://secure.php.net/manual/en/gmagick.setimagebackgroundcolor.php"}, {"name": "Gmagick::setimageblueprimary", "synopsis": "Sets the image chromaticity blue primary point.", "usage": "public Gmagick Gmagick::setimageblueprimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagick.setimageblueprimary.php"}, {"name": "Gmagick::setimagebordercolor", "synopsis": "Sets the image border color.", "usage": "public Gmagick Gmagick::setimagebordercolor ( GmagickPixel $color )", "url": "https://secure.php.net/manual/en/gmagick.setimagebordercolor.php"}, {"name": "Gmagick::setimagechanneldepth", "synopsis": "Sets the depth of a particular image channel.", "usage": "public Gmagick Gmagick::setimagechanneldepth ( int $channel , int $depth )", "url": "https://secure.php.net/manual/en/gmagick.setimagechanneldepth.php"}, {"name": "Gmagick::setimagecolorspace", "synopsis": "Sets the image colorspace.", "usage": "public Gmagick Gmagick::setimagecolorspace ( int $colorspace )", "url": "https://secure.php.net/manual/en/gmagick.setimagecolorspace.php"}, {"name": "Gmagick::setimagecompose", "synopsis": "Sets the image composite operator.", "usage": "public Gmagick Gmagick::setimagecompose ( int $composite )", "url": "https://secure.php.net/manual/en/gmagick.setimagecompose.php"}, {"name": "Gmagick::setimagedelay", "synopsis": "Sets the image delay", "usage": "public Gmagick Gmagick::setimagedelay ( int $delay )", "url": "https://secure.php.net/manual/en/gmagick.setimagedelay.php"}, {"name": "Gmagick::setimagedepth", "synopsis": "Sets the image depth", "usage": "public Gmagick Gmagick::setimagedepth ( int $depth )", "url": "https://secure.php.net/manual/en/gmagick.setimagedepth.php"}, {"name": "Gmagick::setimagedispose", "synopsis": "Sets the image disposal method.", "usage": "public Gmagick Gmagick::setimagedispose ( int $disposeType )", "url": "https://secure.php.net/manual/en/gmagick.setimagedispose.php"}, {"name": "Gmagick::setimagefilename", "synopsis": "Sets the filename of a particular image in a sequence.", "usage": "public Gmagick Gmagick::setimagefilename ( string $filename )", "url": "https://secure.php.net/manual/en/gmagick.setimagefilename.php"}, {"name": "Gmagick::setimageformat", "synopsis": "Sets the format of a particular image in a sequence.", "usage": "public Gmagick Gmagick::setimageformat ( string $imageFormat )", "url": "https://secure.php.net/manual/en/gmagick.setimageformat.php"}, {"name": "Gmagick::setimagegamma", "synopsis": "Sets the image gamma.", "usage": "public Gmagick Gmagick::setimagegamma ( float $gamma )", "url": "https://secure.php.net/manual/en/gmagick.setimagegamma.php"}, {"name": "Gmagick::setimagegreenprimary", "synopsis": "Sets the image chromaticity green primary point.", "usage": "public Gmagick Gmagick::setimagegreenprimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagick.setimagegreenprimary.php"}, {"name": "Gmagick::setimageindex", "synopsis": "Set the iterator to the position in the image list specified with the index parameter.", "usage": "public Gmagick Gmagick::setimageindex ( int $index )", "url": "https://secure.php.net/manual/en/gmagick.setimageindex.php"}, {"name": "Gmagick::setimageinterlacescheme", "synopsis": "Sets the interlace scheme of the image.", "usage": "public Gmagick Gmagick::setimageinterlacescheme ( int $interlace )", "url": "https://secure.php.net/manual/en/gmagick.setimageinterlacescheme.php"}, {"name": "Gmagick::setimageiterations", "synopsis": "Sets the image iterations.", "usage": "public Gmagick Gmagick::setimageiterations ( int $iterations )", "url": "https://secure.php.net/manual/en/gmagick.setimageiterations.php"}, {"name": "Gmagick::setimageprofile", "synopsis": "Adds a named profile to the Gmagick object. If a profile with the same name already exists, it is replaced. This method differs from the Gmagick::profileimage() method in that it does not apply any CMS color profiles.", "usage": "public Gmagick Gmagick::setimageprofile ( string $name , string $profile )", "url": "https://secure.php.net/manual/en/gmagick.setimageprofile.php"}, {"name": "Gmagick::setimageredprimary", "synopsis": "Sets the image chromaticity red primary point.", "usage": "public Gmagick Gmagick::setimageredprimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagick.setimageredprimary.php"}, {"name": "Gmagick::setimagerenderingintent", "synopsis": "Sets the image rendering intent.", "usage": "public Gmagick Gmagick::setimagerenderingintent ( int $rendering_intent )", "url": "https://secure.php.net/manual/en/gmagick.setimagerenderingintent.php"}, {"name": "Gmagick::setimageresolution", "synopsis": "Sets the image resolution.", "usage": "public Gmagick Gmagick::setimageresolution ( float $xResolution , float $yResolution )", "url": "https://secure.php.net/manual/en/gmagick.setimageresolution.php"}, {"name": "Gmagick::setimagescene", "synopsis": "Sets the image scene.", "usage": "public Gmagick Gmagick::setimagescene ( int $scene )", "url": "https://secure.php.net/manual/en/gmagick.setimagescene.php"}, {"name": "Gmagick::setimagetype", "synopsis": "Sets the image type.", "usage": "public Gmagick Gmagick::setimagetype ( int $imgType )", "url": "https://secure.php.net/manual/en/gmagick.setimagetype.php"}, {"name": "Gmagick::setimageunits", "synopsis": "Sets the image units of resolution.", "usage": "public Gmagick Gmagick::setimageunits ( int $resolution )", "url": "https://secure.php.net/manual/en/gmagick.setimageunits.php"}, {"name": "Gmagick::setimagewhitepoint", "synopsis": "Sets the image chromaticity white point.", "usage": "public Gmagick Gmagick::setimagewhitepoint ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagick.setimagewhitepoint.php"}, {"name": "Gmagick::setsamplingfactors", "synopsis": "Sets the image sampling factors.", "usage": "public Gmagick Gmagick::setsamplingfactors ( array $factors )", "url": "https://secure.php.net/manual/en/gmagick.setsamplingfactors.php"}, {"name": "Gmagick::setsize", "synopsis": "Sets the size of the Gmagick object. Set it before you read a raw image format such as RGB, GRAY, or CMYK.", "usage": "public Gmagick Gmagick::setsize ( int $columns , int $rows )", "url": "https://secure.php.net/manual/en/gmagick.setsize.php"}, {"name": "Gmagick::shearimage", "synopsis": "Slides one edge of an image along the X or Y axis, creating a parallelogram. An X direction shear slides an edge along the X axis, while a Y direction shear slides an edge along the Y axis. The amount of the shear is controlled by a shear angle. For X direction shears, x_shear is measured relative to the Y axis, and similarly, for Y direction shears y_shear is measured relative to the X axis. Empty triangles left over from shearing the image are filled with the background color.", "usage": "public Gmagick Gmagick::shearimage ( mixed $color , float $xShear , float $yShear )", "url": "https://secure.php.net/manual/en/gmagick.shearimage.php"}, {"name": "Gmagick::solarizeimage", "synopsis": "Applies a special effect to the image, similar to the effect achieved in a photo darkroom by selectively exposing areas of photo sensitive paper to light. Threshold ranges from 0 to QuantumRange and is a measure of the extent of the solarization.", "usage": "public Gmagick Gmagick::solarizeimage ( int $threshold )", "url": "https://secure.php.net/manual/en/gmagick.solarizeimage.php"}, {"name": "Gmagick::spreadimage", "synopsis": "Special effects method that randomly displaces each pixel in a block defined by the radius parameter.", "usage": "public Gmagick Gmagick::spreadimage ( float $radius )", "url": "https://secure.php.net/manual/en/gmagick.spreadimage.php"}, {"name": "Gmagick::stripimage", "synopsis": "Strips an image of all profiles and comments.", "usage": "public Gmagick Gmagick::stripimage ( void )", "url": "https://secure.php.net/manual/en/gmagick.stripimage.php"}, {"name": "Gmagick::swirlimage", "synopsis": "Swirls the pixels about the center of the image, where degrees indicates the sweep of the arc through which each pixel is moved. You get a more dramatic effect as the degrees move from 1 to 360.", "usage": "public Gmagick Gmagick::swirlimage ( float $degrees )", "url": "https://secure.php.net/manual/en/gmagick.swirlimage.php"}, {"name": "Gmagick::thumbnailimage", "synopsis": "Changes the size of an image to the given dimensions and removes any associated profiles. The goal is to produce small low cost thumbnail images suited for display on the Web. If TRUE is given as a third parameter then columns and rows parameters are used as maximums for each side. Both sides will be scaled down until the match or are smaller than the parameter given for the side.", "usage": "public Gmagick Gmagick::thumbnailimage ( int $width , int $height [, bool $fit = FALSE ] )", "url": "https://secure.php.net/manual/en/gmagick.thumbnailimage.php"}, {"name": "Gmagick::trimimage", "synopsis": "Remove edges that are the background color from the image.", "usage": "public Gmagick Gmagick::trimimage ( float $fuzz )", "url": "https://secure.php.net/manual/en/gmagick.trimimage.php"}, {"name": "Gmagick::writeimage", "synopsis": "Writes an image to the specified filename. If the filename parameter is NULL, the image is written to the filename set by Gmagick::ReadImage() or Gmagick::SetImageFilename().", "usage": "public Gmagick Gmagick::writeimage ( string $filename [, bool $all_frames = FALSE ] )", "url": "https://secure.php.net/manual/en/gmagick.writeimage.php"}, {"name": "GmagickDraw::annotate", "synopsis": "Draws text on the image.", "usage": "public GmagickDraw GmagickDraw::annotate ( float $x , float $y , string $text )", "url": "https://secure.php.net/manual/en/gmagickdraw.annotate.php"}, {"name": "GmagickDraw::arc", "synopsis": "Draws an arc falling within a specified bounding rectangle on the image.", "usage": "public GmagickDraw GmagickDraw::arc ( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )", "url": "https://secure.php.net/manual/en/gmagickdraw.arc.php"}, {"name": "GmagickDraw::bezier", "synopsis": "Draws a bezier curve through a set of points on the image.", "usage": "public GmagickDraw GmagickDraw::bezier ( array $coordinate_array )", "url": "https://secure.php.net/manual/en/gmagickdraw.bezier.php"}, {"name": "GmagickDraw::ellipse", "synopsis": "Draws an ellipse on the image.", "usage": "public GmagickDraw GmagickDraw::ellipse ( float $ox , float $oy , float $rx , float $ry , float $start , float $end )", "url": "https://secure.php.net/manual/en/gmagickdraw.ellipse.php"}, {"name": "GmagickDraw::getfillcolor", "synopsis": "Returns the fill color used for drawing filled objects.", "usage": "public GmagickPixel GmagickDraw::getfillcolor ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfillcolor.php"}, {"name": "GmagickDraw::getfillopacity", "synopsis": "Returns the opacity used when drawing", "usage": "public float GmagickDraw::getfillopacity ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfillopacity.php"}, {"name": "GmagickDraw::getfont", "synopsis": "Returns a string specifying the font used when annotating with text.", "usage": "public mixed GmagickDraw::getfont ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfont.php"}, {"name": "GmagickDraw::getfontsize", "synopsis": "Returns the font pointsize used when annotating with text.", "usage": "public float GmagickDraw::getfontsize ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfontsize.php"}, {"name": "GmagickDraw::getfontstyle", "synopsis": "Returns the font style used when annotating with text.", "usage": "public int GmagickDraw::getfontstyle ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfontstyle.php"}, {"name": "GmagickDraw::getfontweight", "synopsis": "Returns the font weight used when annotating with text.", "usage": "public int GmagickDraw::getfontweight ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getfontweight.php"}, {"name": "GmagickDraw::getstrokecolor", "synopsis": "Returns the color used for stroking object outlines.", "usage": "public GmagickPixel GmagickDraw::getstrokecolor ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getstrokecolor.php"}, {"name": "GmagickDraw::getstrokeopacity", "synopsis": "Returns the opacity of stroked object outlines.", "usage": "public float GmagickDraw::getstrokeopacity ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getstrokeopacity.php"}, {"name": "GmagickDraw::getstrokewidth", "synopsis": "Returns the width of the stroke used to draw object outlines.", "usage": "public float GmagickDraw::getstrokewidth ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.getstrokewidth.php"}, {"name": "GmagickDraw::gettextdecoration", "synopsis": "Returns the decoration applied when annotating with text.", "usage": "public int GmagickDraw::gettextdecoration ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.gettextdecoration.php"}, {"name": "GmagickDraw::gettextencoding", "synopsis": "Returns a string which specifies the code set used for text annotations.", "usage": "public mixed GmagickDraw::gettextencoding ( void )", "url": "https://secure.php.net/manual/en/gmagickdraw.gettextencoding.php"}, {"name": "GmagickDraw::line", "synopsis": "Draws a line on the image using the current stroke color, stroke opacity, and stroke width.", "usage": "public GmagickDraw GmagickDraw::line ( float $sx , float $sy , float $ex , float $ey )", "url": "https://secure.php.net/manual/en/gmagickdraw.line.php"}, {"name": "GmagickDraw::point", "synopsis": "Draws a point using the current stroke color and stroke thickness at the specified coordinates.", "usage": "public GmagickDraw GmagickDraw::point ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagickdraw.point.php"}, {"name": "GmagickDraw::polygon", "synopsis": "Draws a polygon using the current stroke, stroke width, and fill color or texture, using the specified array of coordinates.", "usage": "public GmagickDraw GmagickDraw::polygon ( array $coordinates )", "url": "https://secure.php.net/manual/en/gmagickdraw.polygon.php"}, {"name": "GmagickDraw::polyline", "synopsis": "Draws a polyline using the current stroke, stroke width, and fill color or texture, using the specified array of coordinates.", "usage": "public GmagickDraw GmagickDraw::polyline ( array $coordinate_array )", "url": "https://secure.php.net/manual/en/gmagickdraw.polyline.php"}, {"name": "GmagickDraw::rectangle", "synopsis": "Draws a rectangle given two coordinates and using the current stroke, stroke width, and fill settings.", "usage": "public GmagickDraw GmagickDraw::rectangle ( float $x1 , float $y1 , float $x2 , float $y2 )", "url": "https://secure.php.net/manual/en/gmagickdraw.rectangle.php"}, {"name": "GmagickDraw::rotate", "synopsis": "Applies the specified rotation to the current coordinate space.", "usage": "public GmagickDraw GmagickDraw::rotate ( float $degrees )", "url": "https://secure.php.net/manual/en/gmagickdraw.rotate.php"}, {"name": "GmagickDraw::roundrectangle", "synopsis": "Draws a rounded rectangle given two coordinates, x and y corner radiuses and using the current stroke, stroke width, and fill settings.", "usage": "public GmagickDraw GmagickDraw::roundrectangle ( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )", "url": "https://secure.php.net/manual/en/gmagickdraw.roundrectangle.php"}, {"name": "GmagickDraw::scale", "synopsis": "Adjusts the scaling factor to apply in the horizontal and vertical directions to the current coordinate space.", "usage": "public GmagickDraw GmagickDraw::scale ( float $x , float $y )", "url": "https://secure.php.net/manual/en/gmagickdraw.scale.php"}, {"name": "GmagickDraw::setfillcolor", "synopsis": "Sets the fill color to be used for drawing filled objects.", "usage": "public GmagickDraw GmagickDraw::setfillcolor ( mixed $color )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfillcolor.php"}, {"name": "GmagickDraw::setfillopacity", "synopsis": "Sets the opacity to use when drawing using the fill color or fill texture. Setting it to 1.0 will make fill full opaque.", "usage": "public GmagickDraw GmagickDraw::setfillopacity ( float $fill_opacity )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfillopacity.php"}, {"name": "GmagickDraw::setfont", "synopsis": "Sets the fully-specified font to use when annotating with text", "usage": "public GmagickDraw GmagickDraw::setfont ( string $font )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfont.php"}, {"name": "GmagickDraw::setfontsize", "synopsis": "Sets the font pointsize to use when annotating with text.", "usage": "public GmagickDraw GmagickDraw::setfontsize ( float $pointsize )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfontsize.php"}, {"name": "GmagickDraw::setfontstyle", "synopsis": "Sets the font style to use when annotating with text. The AnyStyle enumeration acts as a wild-card \"don't care\" option.", "usage": "public GmagickDraw GmagickDraw::setfontstyle ( int $style )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfontstyle.php"}, {"name": "GmagickDraw::setfontweight", "synopsis": "Sets the font weight to use when annotating with text.", "usage": "public GmagickDraw GmagickDraw::setfontweight ( int $weight )", "url": "https://secure.php.net/manual/en/gmagickdraw.setfontweight.php"}, {"name": "GmagickDraw::setstrokecolor", "synopsis": "Sets the color used for stroking object outlines.", "usage": "public GmagickDraw GmagickDraw::setstrokecolor ( mixed $color )", "url": "https://secure.php.net/manual/en/gmagickdraw.setstrokecolor.php"}, {"name": "GmagickDraw::setstrokeopacity", "synopsis": "Specifies the opacity of stroked object outlines.", "usage": "public GmagickDraw GmagickDraw::setstrokeopacity ( float $stroke_opacity )", "url": "https://secure.php.net/manual/en/gmagickdraw.setstrokeopacity.php"}, {"name": "GmagickDraw::setstrokewidth", "synopsis": "Sets the width of the stroke used to draw object outlines", "usage": "public GmagickDraw GmagickDraw::setstrokewidth ( float $width )", "url": "https://secure.php.net/manual/en/gmagickdraw.setstrokewidth.php"}, {"name": "GmagickDraw::settextdecoration", "synopsis": "Specifies a decoration to be applied when annotating with text.", "usage": "public GmagickDraw GmagickDraw::settextdecoration ( int $decoration )", "url": "https://secure.php.net/manual/en/gmagickdraw.settextdecoration.php"}, {"name": "GmagickDraw::settextencoding", "synopsis": "Specifies the code set to use for text annotations. The only character encoding which may be specified at this time is \"UTF-8\" for representing Unicode as a sequence of bytes. Specify an empty string to set text encoding to the system's default. Successful text annotation using Unicode may require fonts designed to support Unicode.", "usage": "public GmagickDraw GmagickDraw::settextencoding ( string $encoding )", "url": "https://secure.php.net/manual/en/gmagickdraw.settextencoding.php"}, {"name": "GmagickPixel::__construct", "synopsis": "Constructs an GmagickPixel object. If a color is specified, the object is constructed and then initialised with that color before being returned.", "usage": "public GmagickPixel::__construct ([ string $color ] )", "url": "https://secure.php.net/manual/en/gmagickpixel.construct.php"}, {"name": "GmagickPixel::getcolor", "synopsis": "Returns the color described by the GmagickPixel object, as a string or an array. If the color has an opacity channel set, this is provided as a fourth value in the list.", "usage": "public mixed GmagickPixel::getcolor ([ bool $as_array = FALSE [, bool $normalize_array = FALSE ]] )", "url": "https://secure.php.net/manual/en/gmagickpixel.getcolor.php"}, {"name": "GmagickPixel::getcolorcount", "synopsis": "Returns the color count associated with this color", "usage": "public int GmagickPixel::getcolorcount ( void )", "url": "https://secure.php.net/manual/en/gmagickpixel.getcolorcount.php"}, {"name": "GmagickPixel::getcolorvalue", "synopsis": "Retrieves the value of the color channel specified, as a floating-point number between 0 and 1.", "usage": "public float GmagickPixel::getcolorvalue ( int $color )", "url": "https://secure.php.net/manual/en/gmagickpixel.getcolorvalue.php"}, {"name": "GmagickPixel::setcolor", "synopsis": "Sets the color described by the GmagickPixel object, with a string (e.g. \"blue\", \"#0000ff\", \"rgb(0,0,255)\", \"cmyk(100,100,100,10)\", etc.).", "usage": "public GmagickPixel GmagickPixel::setcolor ( string $color )", "url": "https://secure.php.net/manual/en/gmagickpixel.setcolor.php"}, {"name": "GmagickPixel::setcolorvalue", "synopsis": "Sets the value of the specified channel of this object to the provided value, which should be between 0 and 1. This function can be used to provide an opacity channel to a GmagickPixel object.", "usage": "public GmagickPixel GmagickPixel::setcolorvalue ( int $color , float $value )", "url": "https://secure.php.net/manual/en/gmagickpixel.setcolorvalue.php"}, {"name": "gupnp_service_proxy_send_action", "synopsis": "Send action with parameters in_params to the service exposed by proxy synchronously and return out_params with values or FALSE on error.", "usage": "array gupnp_service_proxy_send_action ( resource $proxy , string $action , array $in_params , array $out_params )", "url": "https://secure.php.net/manual/en/gupnp-service-proxy-send-action.php"}, {"name": "HaruAnnotation::setBorderStyle", "synopsis": "Defines the style of the border of the annotation. This function may be used with link annotations only.", "usage": "bool HaruAnnotation::setBorderStyle ( float $width , int $dash_on , int $dash_off )", "url": "https://secure.php.net/manual/en/haruannotation.setborderstyle.php"}, {"name": "HaruAnnotation::setHighlightMode", "synopsis": "Defines the appearance of the annotation when clicked. This function may be used with link annotations only.", "usage": "bool HaruAnnotation::setHighlightMode ( int $mode )", "url": "https://secure.php.net/manual/en/haruannotation.sethighlightmode.php"}, {"name": "HaruAnnotation::setIcon", "synopsis": "Defines the style of the annotation icon. This function may be used with text annotations only.", "usage": "bool HaruAnnotation::setIcon ( int $icon )", "url": "https://secure.php.net/manual/en/haruannotation.seticon.php"}, {"name": "HaruAnnotation::setOpened", "synopsis": "Defines whether the annotation is initially displayed open. This function may be used with text annotations only.", "usage": "bool HaruAnnotation::setOpened ( bool $opened )", "url": "https://secure.php.net/manual/en/haruannotation.setopened.php"}, {"name": "HaruDestination::setFit", "synopsis": "Defines the appearance of the page to fit the window.", "usage": "bool HaruDestination::setFit ( void )", "url": "https://secure.php.net/manual/en/harudestination.setfit.php"}, {"name": "HaruDestination::setFitB", "synopsis": "Defines the appearance of the page to fit the bounding box of the page within the window.", "usage": "bool HaruDestination::setFitB ( void )", "url": "https://secure.php.net/manual/en/harudestination.setfitb.php"}, {"name": "HaruDestination::setFitBH", "synopsis": "Defines the appearance of the page to magnifying to fit the width of the bounding box and setting the top position of the page to the value of top.", "usage": "bool HaruDestination::setFitBH ( float $top )", "url": "https://secure.php.net/manual/en/harudestination.setfitbh.php"}, {"name": "HaruDestination::setFitBV", "synopsis": "Defines the appearance of the page to magnifying to fit the height of the bounding box and setting the left position of the page to the value of left.", "usage": "bool HaruDestination::setFitBV ( float $left )", "url": "https://secure.php.net/manual/en/harudestination.setfitbv.php"}, {"name": "HaruDestination::setFitH", "synopsis": "Defines the appearance of the page to fit the window width and sets the top position of the page to the value of top.", "usage": "bool HaruDestination::setFitH ( float $top )", "url": "https://secure.php.net/manual/en/harudestination.setfith.php"}, {"name": "HaruDestination::setFitR", "synopsis": "Defines the appearance of the page to fit the rectangle by the parameters.", "usage": "bool HaruDestination::setFitR ( float $left , float $bottom , float $right , float $top )", "url": "https://secure.php.net/manual/en/harudestination.setfitr.php"}, {"name": "HaruDestination::setFitV", "synopsis": "Defines the appearance of the page to fit the window height.", "usage": "bool HaruDestination::setFitV ( float $left )", "url": "https://secure.php.net/manual/en/harudestination.setfitv.php"}, {"name": "HaruDestination::setXYZ", "synopsis": "Defines the appearance of the page using three parameters: left, top and zoom.", "usage": "bool HaruDestination::setXYZ ( float $left , float $top , float $zoom )", "url": "https://secure.php.net/manual/en/harudestination.setxyz.php"}, {"name": "HaruDoc::addPage", "synopsis": "Adds a new page to the document.", "usage": "object HaruDoc::addPage ( void )", "url": "https://secure.php.net/manual/en/harudoc.addpage.php"}, {"name": "HaruDoc::addPageLabel", "synopsis": "Set the numbering style for the specified range of pages.", "usage": "bool HaruDoc::addPageLabel ( int $first_page , int $style , int $first_num [, string $prefix = \"\" ] )", "url": "https://secure.php.net/manual/en/harudoc.addpagelabel.php"}, {"name": "HaruDoc::__construct", "synopsis": "Constructs new HaruDoc instance.", "usage": "HaruDoc::__construct ( void )", "url": "https://secure.php.net/manual/en/harudoc.construct.php"}, {"name": "HaruDoc::createOutline", "synopsis": "Create a HaruOutline instance.", "usage": "object HaruDoc::createOutline ( string $title [, object $parent_outline [, object $encoder ]] )", "url": "https://secure.php.net/manual/en/harudoc.createoutline.php"}, {"name": "HaruDoc::getCurrentEncoder", "synopsis": "Get the HaruEncoder currently used in the document.", "usage": "object HaruDoc::getCurrentEncoder ( void )", "url": "https://secure.php.net/manual/en/harudoc.getcurrentencoder.php"}, {"name": "HaruDoc::getCurrentPage", "synopsis": "Get current page of the document.", "usage": "object HaruDoc::getCurrentPage ( void )", "url": "https://secure.php.net/manual/en/harudoc.getcurrentpage.php"}, {"name": "HaruDoc::getEncoder", "synopsis": "Get the HaruEncoder instance for the specified encoding.", "usage": "object HaruDoc::getEncoder ( string $encoding )", "url": "https://secure.php.net/manual/en/harudoc.getencoder.php"}, {"name": "HaruDoc::getFont", "synopsis": "Get a HaruFont instance.", "usage": "object HaruDoc::getFont ( string $fontname [, string $encoding ] )", "url": "https://secure.php.net/manual/en/harudoc.getfont.php"}, {"name": "HaruDoc::getInfoAttr", "synopsis": "Get the current value of the specified document attribute.", "usage": "string HaruDoc::getInfoAttr ( int $type )", "url": "https://secure.php.net/manual/en/harudoc.getinfoattr.php"}, {"name": "HaruDoc::getPageLayout", "synopsis": "Get the current page layout. See HaruDoc::setPageLayout() for the list of possible values.", "usage": "int HaruDoc::getPageLayout ( void )", "url": "https://secure.php.net/manual/en/harudoc.getpagelayout.php"}, {"name": "HaruDoc::getPageMode", "synopsis": "Get the current page mode. See HaruDoc::setPageMode() for the list of possible values.", "usage": "int HaruDoc::getPageMode ( void )", "url": "https://secure.php.net/manual/en/harudoc.getpagemode.php"}, {"name": "HaruDoc::getStreamSize", "synopsis": "Get the size of the temporary stream.", "usage": "int HaruDoc::getStreamSize ( void )", "url": "https://secure.php.net/manual/en/harudoc.getstreamsize.php"}, {"name": "HaruDoc::insertPage", "synopsis": "Creates a new page and inserts just before the specified page.", "usage": "object HaruDoc::insertPage ( object $page )", "url": "https://secure.php.net/manual/en/harudoc.insertpage.php"}, {"name": "HaruDoc::loadJPEG", "synopsis": "Loads the specified JPEG image.", "usage": "object HaruDoc::loadJPEG ( string $filename )", "url": "https://secure.php.net/manual/en/harudoc.loadjpeg.php"}, {"name": "HaruDoc::loadPNG", "synopsis": "Loads a PNG image.", "usage": "object HaruDoc::loadPNG ( string $filename [, bool $deferred = FALSE ] )", "url": "https://secure.php.net/manual/en/harudoc.loadpng.php"}, {"name": "HaruDoc::loadRaw", "synopsis": "Loads a RAW image.", "usage": "object HaruDoc::loadRaw ( string $filename , int $width , int $height , int $color_space )", "url": "https://secure.php.net/manual/en/harudoc.loadraw.php"}, {"name": "HaruDoc::loadTTC", "synopsis": "Loads the TrueType font with the specified index from a TrueType collection file.", "usage": "string HaruDoc::loadTTC ( string $fontfile , int $index [, bool $embed = FALSE ] )", "url": "https://secure.php.net/manual/en/harudoc.loadttc.php"}, {"name": "HaruDoc::loadTTF", "synopsis": "Loads the given TTF file and (optionally) embed its data into the document.", "usage": "string HaruDoc::loadTTF ( string $fontfile [, bool $embed = FALSE ] )", "url": "https://secure.php.net/manual/en/harudoc.loadttf.php"}, {"name": "HaruDoc::loadType1", "synopsis": "Loads Type1 font from the given file and registers it in the PDF document.", "usage": "string HaruDoc::loadType1 ( string $afmfile [, string $pfmfile ] )", "url": "https://secure.php.net/manual/en/harudoc.loadtype1.php"}, {"name": "HaruDoc::output", "synopsis": "Writes the document data into standard output.", "usage": "bool HaruDoc::output ( void )", "url": "https://secure.php.net/manual/en/harudoc.output.php"}, {"name": "HaruDoc::readFromStream", "synopsis": "Read data from the temporary stream.", "usage": "string HaruDoc::readFromStream ( int $bytes )", "url": "https://secure.php.net/manual/en/harudoc.readfromstream.php"}, {"name": "HaruDoc::resetError", "synopsis": "Once an error code is set, most of the operations, including I/O processing functions cannot be performed. In case if you want to continue after the cause of the error has been fixed, you have to invoke this function in order to reset the document error state.", "usage": "bool HaruDoc::resetError ( void )", "url": "https://secure.php.net/manual/en/harudoc.reseterror.php"}, {"name": "HaruDoc::resetStream", "synopsis": "Rewinds the temporary stream of the document.", "usage": "bool HaruDoc::resetStream ( void )", "url": "https://secure.php.net/manual/en/harudoc.resetstream.php"}, {"name": "HaruDoc::save", "synopsis": "Saves the document into the specified file.", "usage": "bool HaruDoc::save ( string $file )", "url": "https://secure.php.net/manual/en/harudoc.save.php"}, {"name": "HaruDoc::saveToStream", "synopsis": "Saves the document data into a temporary stream.", "usage": "bool HaruDoc::saveToStream ( void )", "url": "https://secure.php.net/manual/en/harudoc.savetostream.php"}, {"name": "HaruDoc::setCompressionMode", "synopsis": "Defines compression mode for the document. In case when libharu was compiled without Zlib support this function will always throw HaruException.", "usage": "bool HaruDoc::setCompressionMode ( int $mode )", "url": "https://secure.php.net/manual/en/harudoc.setcompressionmode.php"}, {"name": "HaruDoc::setCurrentEncoder", "synopsis": "Defines the encoder currently used in the document.", "usage": "bool HaruDoc::setCurrentEncoder ( string $encoding )", "url": "https://secure.php.net/manual/en/harudoc.setcurrentencoder.php"}, {"name": "HaruDoc::setEncryptionMode", "synopsis": "Defines encryption mode for the document. The encryption mode cannot be set before setting the password.", "usage": "bool HaruDoc::setEncryptionMode ( int $mode [, int $key_len = 5 ] )", "url": "https://secure.php.net/manual/en/harudoc.setencryptionmode.php"}, {"name": "HaruDoc::setInfoAttr", "synopsis": "Defines an info attribute. Uses the current encoding of the document.", "usage": "bool HaruDoc::setInfoAttr ( int $type , string $info )", "url": "https://secure.php.net/manual/en/harudoc.setinfoattr.php"}, {"name": "HaruDoc::setInfoDateAttr", "synopsis": "Sets the datetime info attributes of the document.", "usage": "bool HaruDoc::setInfoDateAttr ( int $type , int $year , int $month , int $day , int $hour , int $min , int $sec , string $ind , int $off_hour , int $off_min )", "url": "https://secure.php.net/manual/en/harudoc.setinfodateattr.php"}, {"name": "HaruDoc::setOpenAction", "synopsis": "Defines which page should be shown when the document is opened.", "usage": "bool HaruDoc::setOpenAction ( object $destination )", "url": "https://secure.php.net/manual/en/harudoc.setopenaction.php"}, {"name": "HaruDoc::setPageLayout", "synopsis": "Defines how pages should be displayed.", "usage": "bool HaruDoc::setPageLayout ( int $layout )", "url": "https://secure.php.net/manual/en/harudoc.setpagelayout.php"}, {"name": "HaruDoc::setPageMode", "synopsis": "Defines how the document should be displayed.", "usage": "bool HaruDoc::setPageMode ( int $mode )", "url": "https://secure.php.net/manual/en/harudoc.setpagemode.php"}, {"name": "HaruDoc::setPagesConfiguration", "synopsis": "By default the document has one pages object as a root for all pages. All page objects are create as branches of this object. One pages object can contain only 8191, therefore the maximum number of pages per document is 8191. But you can change that fact by setting page_per_pages parameter, so that the root pages object contains 8191 more pages (not page) objects, which in turn contain 8191 pages each. So the maximum number of pages in the document becomes 8191*page_per_pages.", "usage": "bool HaruDoc::setPagesConfiguration ( int $page_per_pages )", "url": "https://secure.php.net/manual/en/harudoc.setpagesconfiguration.php"}, {"name": "HaruDoc::setPassword", "synopsis": "Defines owner and user passwords for the document. Setting the passwords makes the document contents encrypted.", "usage": "bool HaruDoc::setPassword ( string $owner_password , string $user_password )", "url": "https://secure.php.net/manual/en/harudoc.setpassword.php"}, {"name": "HaruDoc::setPermission", "synopsis": "Defines permissions for the document.", "usage": "bool HaruDoc::setPermission ( int $permission )", "url": "https://secure.php.net/manual/en/harudoc.setpermission.php"}, {"name": "HaruDoc::useCNSEncodings", "synopsis": "Enables Chinese simplified encodings.", "usage": "bool HaruDoc::useCNSEncodings ( void )", "url": "https://secure.php.net/manual/en/harudoc.usecnsencodings.php"}, {"name": "HaruDoc::useCNSFonts", "synopsis": "Enables builtin Chinese simplified fonts.", "usage": "bool HaruDoc::useCNSFonts ( void )", "url": "https://secure.php.net/manual/en/harudoc.usecnsfonts.php"}, {"name": "HaruDoc::useCNTEncodings", "synopsis": "Enables Chinese traditional encodings.", "usage": "bool HaruDoc::useCNTEncodings ( void )", "url": "https://secure.php.net/manual/en/harudoc.usecntencodings.php"}, {"name": "HaruDoc::useCNTFonts", "synopsis": "Enables builtin Chinese traditional fonts.", "usage": "bool HaruDoc::useCNTFonts ( void )", "url": "https://secure.php.net/manual/en/harudoc.usecntfonts.php"}, {"name": "HaruDoc::useJPEncodings", "synopsis": "Enables Japanese encodings.", "usage": "bool HaruDoc::useJPEncodings ( void )", "url": "https://secure.php.net/manual/en/harudoc.usejpencodings.php"}, {"name": "HaruDoc::useJPFonts", "synopsis": "Enables builtin Japanese fonts.", "usage": "bool HaruDoc::useJPFonts ( void )", "url": "https://secure.php.net/manual/en/harudoc.usejpfonts.php"}, {"name": "HaruDoc::useKREncodings", "synopsis": "Enables Korean encodings.", "usage": "bool HaruDoc::useKREncodings ( void )", "url": "https://secure.php.net/manual/en/harudoc.usekrencodings.php"}, {"name": "HaruDoc::useKRFonts", "synopsis": "Enables builtin Korean fonts.", "usage": "bool HaruDoc::useKRFonts ( void )", "url": "https://secure.php.net/manual/en/harudoc.usekrfonts.php"}, {"name": "HaruEncoder::getByteType", "synopsis": "Get the type of the byte in the text.", "usage": "int HaruEncoder::getByteType ( string $text , int $index )", "url": "https://secure.php.net/manual/en/haruencoder.getbytetype.php"}, {"name": "HaruEncoder::getType", "synopsis": "Get the type of the encoder.", "usage": "int HaruEncoder::getType ( void )", "url": "https://secure.php.net/manual/en/haruencoder.gettype.php"}, {"name": "HaruEncoder::getUnicode", "synopsis": "Converts the specified character to unicode.", "usage": "int HaruEncoder::getUnicode ( int $character )", "url": "https://secure.php.net/manual/en/haruencoder.getunicode.php"}, {"name": "HaruEncoder::getWritingMode", "synopsis": "Get the writing mode of the encoder.", "usage": "int HaruEncoder::getWritingMode ( void )", "url": "https://secure.php.net/manual/en/haruencoder.getwritingmode.php"}, {"name": "HaruFont::getAscent", "synopsis": "Get the vertical ascent of the font.", "usage": "int HaruFont::getAscent ( void )", "url": "https://secure.php.net/manual/en/harufont.getascent.php"}, {"name": "HaruFont::getCapHeight", "synopsis": "Get the distance from the baseline of uppercase letters.", "usage": "int HaruFont::getCapHeight ( void )", "url": "https://secure.php.net/manual/en/harufont.getcapheight.php"}, {"name": "HaruFont::getDescent", "synopsis": "Get the vertical descent of the font.", "usage": "int HaruFont::getDescent ( void )", "url": "https://secure.php.net/manual/en/harufont.getdescent.php"}, {"name": "HaruFont::getEncodingName", "synopsis": "Get the name of the font encoding.", "usage": "string HaruFont::getEncodingName ( void )", "url": "https://secure.php.net/manual/en/harufont.getencodingname.php"}, {"name": "HaruFont::getFontName", "synopsis": "Get the name of the font.", "usage": "string HaruFont::getFontName ( void )", "url": "https://secure.php.net/manual/en/harufont.getfontname.php"}, {"name": "HaruFont::getTextWidth", "synopsis": "Get the total width of the text, number of characters, number of words and number of spaces.", "usage": "array HaruFont::getTextWidth ( string $text )", "url": "https://secure.php.net/manual/en/harufont.gettextwidth.php"}, {"name": "HaruFont::getUnicodeWidth", "synopsis": "Get the width of the character in the font.", "usage": "int HaruFont::getUnicodeWidth ( int $character )", "url": "https://secure.php.net/manual/en/harufont.getunicodewidth.php"}, {"name": "HaruFont::getXHeight", "synopsis": "Gets the distance from the baseline of lowercase letters.", "usage": "int HaruFont::getXHeight ( void )", "url": "https://secure.php.net/manual/en/harufont.getxheight.php"}, {"name": "HaruFont::measureText", "synopsis": "Calculate the number of characters which can be included within the specified width.", "usage": "int HaruFont::measureText ( string $text , float $width , float $font_size , float $char_space , float $word_space [, bool $word_wrap = FALSE ] )", "url": "https://secure.php.net/manual/en/harufont.measuretext.php"}, {"name": "HaruImage::getBitsPerComponent", "synopsis": "Gets the number of bits used to describe each color component of the image.", "usage": "int HaruImage::getBitsPerComponent ( void )", "url": "https://secure.php.net/manual/en/haruimage.getbitspercomponent.php"}, {"name": "HaruImage::getColorSpace", "synopsis": "Get the name of the color space.", "usage": "string HaruImage::getColorSpace ( void )", "url": "https://secure.php.net/manual/en/haruimage.getcolorspace.php"}, {"name": "HaruImage::getHeight", "synopsis": "Get the height of the image.", "usage": "int HaruImage::getHeight ( void )", "url": "https://secure.php.net/manual/en/haruimage.getheight.php"}, {"name": "HaruImage::getSize", "synopsis": "Get the size of the image.", "usage": "array HaruImage::getSize ( void )", "url": "https://secure.php.net/manual/en/haruimage.getsize.php"}, {"name": "HaruImage::getWidth", "synopsis": "Get the width of the image.", "usage": "int HaruImage::getWidth ( void )", "url": "https://secure.php.net/manual/en/haruimage.getwidth.php"}, {"name": "HaruImage::setColorMask", "synopsis": "Defines the transparent color of the image using the RGB range values. The color within the range is displayed as a transparent color. The color space of the image must be RGB.", "usage": "bool HaruImage::setColorMask ( int $rmin , int $rmax , int $gmin , int $gmax , int $bmin , int $bmax )", "url": "https://secure.php.net/manual/en/haruimage.setcolormask.php"}, {"name": "HaruImage::setMaskImage", "synopsis": "Sets the image used as image-mask. It must be 1bit gray-scale color image.", "usage": "bool HaruImage::setMaskImage ( object $mask_image )", "url": "https://secure.php.net/manual/en/haruimage.setmaskimage.php"}, {"name": "HaruOutline::setDestination", "synopsis": "Sets a destination object which becomes a target to jump to when the outline is clicked.", "usage": "bool HaruOutline::setDestination ( object $destination )", "url": "https://secure.php.net/manual/en/haruoutline.setdestination.php"}, {"name": "HaruOutline::setOpened", "synopsis": "Defines whether this node is opened or not when the outline is displayed for the first time.", "usage": "bool HaruOutline::setOpened ( bool $opened )", "url": "https://secure.php.net/manual/en/haruoutline.setopened.php"}, {"name": "HaruPage::arc", "synopsis": "Appends an arc to the current path.", "usage": "bool HaruPage::arc ( float $x , float $y , float $ray , float $ang1 , float $ang2 )", "url": "https://secure.php.net/manual/en/harupage.arc.php"}, {"name": "HaruPage::beginText", "synopsis": "Begins new text object and sets the current text position to (0,0).", "usage": "bool HaruPage::beginText ( void )", "url": "https://secure.php.net/manual/en/harupage.begintext.php"}, {"name": "HaruPage::circle", "synopsis": "Appends a circle to the current path.", "usage": "bool HaruPage::circle ( float $x , float $y , float $ray )", "url": "https://secure.php.net/manual/en/harupage.circle.php"}, {"name": "HaruPage::closePath", "synopsis": "Appends a straight line from the current point to the start point of the path.", "usage": "bool HaruPage::closePath ( void )", "url": "https://secure.php.net/manual/en/harupage.closepath.php"}, {"name": "HaruPage::concat", "synopsis": "Concatenates current transformation matrix of the page and the specified matrix.", "usage": "bool HaruPage::concat ( float $a , float $b , float $c , float $d , float $x , float $y )", "url": "https://secure.php.net/manual/en/harupage.concat.php"}, {"name": "HaruPage::createDestination", "synopsis": "Create a new HaruDestination instance.", "usage": "object HaruPage::createDestination ( void )", "url": "https://secure.php.net/manual/en/harupage.createdestination.php"}, {"name": "HaruPage::createLinkAnnotation", "synopsis": "Creates a new HaruAnnotation instance.", "usage": "object HaruPage::createLinkAnnotation ( array $rectangle , object $destination )", "url": "https://secure.php.net/manual/en/harupage.createlinkannotation.php"}, {"name": "HaruPage::createTextAnnotation", "synopsis": "Creates a new HaruAnnotation instance.", "usage": "object HaruPage::createTextAnnotation ( array $rectangle , string $text [, object $encoder ] )", "url": "https://secure.php.net/manual/en/harupage.createtextannotation.php"}, {"name": "HaruPage::createURLAnnotation", "synopsis": "Creates a new HaruAnnotation instance.", "usage": "object HaruPage::createURLAnnotation ( array $rectangle , string $url )", "url": "https://secure.php.net/manual/en/harupage.createurlannotation.php"}, {"name": "HaruPage::curveTo", "synopsis": "Append a Bezier curve to the current path. The point (x1, y1) and the point (x2, y2) are used as the control points for a Bezier curve and current point is moved to the point (x3, y3).", "usage": "bool HaruPage::curveTo ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/harupage.curveto.php"}, {"name": "HaruPage::curveTo2", "synopsis": "Appends a Bezier curve to the current path. The current point and the point (x2, y2) are used as the control points for the Bezier curve and current point is moved to the point (x3, y3).", "usage": "bool HaruPage::curveTo2 ( float $x2 , float $y2 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/harupage.curveto2.php"}, {"name": "HaruPage::curveTo3", "synopsis": "Appends a Bezier curve to the current path. The point (x1, y1) and the point (x3, y3) are used as the control points for a Bezier curve and current point is moved to the point (x3, y3).", "usage": "bool HaruPage::curveTo3 ( float $x1 , float $y1 , float $x3 , float $y3 )", "url": "https://secure.php.net/manual/en/harupage.curveto3.php"}, {"name": "HaruPage::drawImage", "synopsis": "Show image at the page.", "usage": "bool HaruPage::drawImage ( object $image , float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/harupage.drawimage.php"}, {"name": "HaruPage::ellipse", "synopsis": "Appends an ellipse to the current path.", "usage": "bool HaruPage::ellipse ( float $x , float $y , float $xray , float $yray )", "url": "https://secure.php.net/manual/en/harupage.ellipse.php"}, {"name": "HaruPage::endPath", "synopsis": "Ends current path object without performing filling and painting operations.", "usage": "bool HaruPage::endPath ( void )", "url": "https://secure.php.net/manual/en/harupage.endpath.php"}, {"name": "HaruPage::endText", "synopsis": "Finalizes current text object.", "usage": "bool HaruPage::endText ( void )", "url": "https://secure.php.net/manual/en/harupage.endtext.php"}, {"name": "HaruPage::eofill", "synopsis": "Fills current path using even-odd rule.", "usage": "bool HaruPage::eofill ( void )", "url": "https://secure.php.net/manual/en/harupage.eofill.php"}, {"name": "HaruPage::eoFillStroke", "synopsis": "Fills current path using even-odd rule, then paints the path.", "usage": "bool HaruPage::eoFillStroke ([ bool $close_path = FALSE ] )", "url": "https://secure.php.net/manual/en/harupage.eofillstroke.php"}, {"name": "HaruPage::fill", "synopsis": "Fills current path using nonzero winding number rule.", "usage": "bool HaruPage::fill ( void )", "url": "https://secure.php.net/manual/en/harupage.fill.php"}, {"name": "HaruPage::fillStroke", "synopsis": "Fills current path using nonzero winding number rule, then paints the path.", "usage": "bool HaruPage::fillStroke ([ bool $close_path = FALSE ] )", "url": "https://secure.php.net/manual/en/harupage.fillstroke.php"}, {"name": "HaruPage::getCharSpace", "synopsis": "Get the current value of character spacing.", "usage": "float HaruPage::getCharSpace ( void )", "url": "https://secure.php.net/manual/en/harupage.getcharspace.php"}, {"name": "HaruPage::getCMYKFill", "synopsis": "Returns the current filling color.", "usage": "array HaruPage::getCMYKFill ( void )", "url": "https://secure.php.net/manual/en/harupage.getcmykfill.php"}, {"name": "HaruPage::getCMYKStroke", "synopsis": "Get the current stroking color.", "usage": "array HaruPage::getCMYKStroke ( void )", "url": "https://secure.php.net/manual/en/harupage.getcmykstroke.php"}, {"name": "HaruPage::getCurrentFont", "synopsis": "Get the currently used font.", "usage": "object HaruPage::getCurrentFont ( void )", "url": "https://secure.php.net/manual/en/harupage.getcurrentfont.php"}, {"name": "HaruPage::getCurrentFontSize", "synopsis": "Get the current font size.", "usage": "float HaruPage::getCurrentFontSize ( void )", "url": "https://secure.php.net/manual/en/harupage.getcurrentfontsize.php"}, {"name": "HaruPage::getCurrentPos", "synopsis": "Get the current position for path painting.", "usage": "array HaruPage::getCurrentPos ( void )", "url": "https://secure.php.net/manual/en/harupage.getcurrentpos.php"}, {"name": "HaruPage::getCurrentTextPos", "synopsis": "Get the current position for text printing.", "usage": "array HaruPage::getCurrentTextPos ( void )", "url": "https://secure.php.net/manual/en/harupage.getcurrenttextpos.php"}, {"name": "HaruPage::getDash", "synopsis": "Get the current dash pattern. See HaruPage::setDash() for more information on dash patterns.", "usage": "array HaruPage::getDash ( void )", "url": "https://secure.php.net/manual/en/harupage.getdash.php"}, {"name": "HaruPage::getFillingColorSpace", "synopsis": "Get the current filling color space.", "usage": "int HaruPage::getFillingColorSpace ( void )", "url": "https://secure.php.net/manual/en/harupage.getfillingcolorspace.php"}, {"name": "HaruPage::getFlatness", "synopsis": "Get the flatness of the page.", "usage": "float HaruPage::getFlatness ( void )", "url": "https://secure.php.net/manual/en/harupage.getflatness.php"}, {"name": "HaruPage::getGMode", "synopsis": "Get the current graphics mode.", "usage": "int HaruPage::getGMode ( void )", "url": "https://secure.php.net/manual/en/harupage.getgmode.php"}, {"name": "HaruPage::getGrayFill", "synopsis": "Get the current filling color.", "usage": "float HaruPage::getGrayFill ( void )", "url": "https://secure.php.net/manual/en/harupage.getgrayfill.php"}, {"name": "HaruPage::getGrayStroke", "synopsis": "Get the current stroking color.", "usage": "float HaruPage::getGrayStroke ( void )", "url": "https://secure.php.net/manual/en/harupage.getgraystroke.php"}, {"name": "HaruPage::getHeight", "synopsis": "Get the height of the page.", "usage": "float HaruPage::getHeight ( void )", "url": "https://secure.php.net/manual/en/harupage.getheight.php"}, {"name": "HaruPage::getHorizontalScaling", "synopsis": "Get the current value of the horizontal scaling.", "usage": "float HaruPage::getHorizontalScaling ( void )", "url": "https://secure.php.net/manual/en/harupage.gethorizontalscaling.php"}, {"name": "HaruPage::getLineCap", "synopsis": "Get the current line cap style.", "usage": "int HaruPage::getLineCap ( void )", "url": "https://secure.php.net/manual/en/harupage.getlinecap.php"}, {"name": "HaruPage::getLineJoin", "synopsis": "Get the current line join style.", "usage": "int HaruPage::getLineJoin ( void )", "url": "https://secure.php.net/manual/en/harupage.getlinejoin.php"}, {"name": "HaruPage::getLineWidth", "synopsis": "Get the current line width.", "usage": "float HaruPage::getLineWidth ( void )", "url": "https://secure.php.net/manual/en/harupage.getlinewidth.php"}, {"name": "HaruPage::getMiterLimit", "synopsis": "Get the value of the miter limit.", "usage": "float HaruPage::getMiterLimit ( void )", "url": "https://secure.php.net/manual/en/harupage.getmiterlimit.php"}, {"name": "HaruPage::getRGBFill", "synopsis": "Get the current filling color.", "usage": "array HaruPage::getRGBFill ( void )", "url": "https://secure.php.net/manual/en/harupage.getrgbfill.php"}, {"name": "HaruPage::getRGBStroke", "synopsis": "Get the current stroking color.", "usage": "array HaruPage::getRGBStroke ( void )", "url": "https://secure.php.net/manual/en/harupage.getrgbstroke.php"}, {"name": "HaruPage::getStrokingColorSpace", "synopsis": "Get the current stroking color space.", "usage": "int HaruPage::getStrokingColorSpace ( void )", "url": "https://secure.php.net/manual/en/harupage.getstrokingcolorspace.php"}, {"name": "HaruPage::getTextLeading", "synopsis": "Get the current value of line spacing.", "usage": "float HaruPage::getTextLeading ( void )", "url": "https://secure.php.net/manual/en/harupage.gettextleading.php"}, {"name": "HaruPage::getTextMatrix", "synopsis": "Get the current text transformation matrix of the page.", "usage": "array HaruPage::getTextMatrix ( void )", "url": "https://secure.php.net/manual/en/harupage.gettextmatrix.php"}, {"name": "HaruPage::getTextRenderingMode", "synopsis": "Get the current text rendering mode.", "usage": "int HaruPage::getTextRenderingMode ( void )", "url": "https://secure.php.net/manual/en/harupage.gettextrenderingmode.php"}, {"name": "HaruPage::getTextRise", "synopsis": "Get the current value of text rising.", "usage": "float HaruPage::getTextRise ( void )", "url": "https://secure.php.net/manual/en/harupage.gettextrise.php"}, {"name": "HaruPage::getTextWidth", "synopsis": "Get the width of the text using current fontsize, character spacing and word spacing", "usage": "float HaruPage::getTextWidth ( string $text )", "url": "https://secure.php.net/manual/en/harupage.gettextwidth.php"}, {"name": "HaruPage::getTransMatrix", "synopsis": "Get the current transformation matrix of the page.", "usage": "array HaruPage::getTransMatrix ( void )", "url": "https://secure.php.net/manual/en/harupage.gettransmatrix.php"}, {"name": "HaruPage::getWidth", "synopsis": "Get the width of the page.", "usage": "float HaruPage::getWidth ( void )", "url": "https://secure.php.net/manual/en/harupage.getwidth.php"}, {"name": "HaruPage::getWordSpace", "synopsis": "Get the current value of word spacing.", "usage": "float HaruPage::getWordSpace ( void )", "url": "https://secure.php.net/manual/en/harupage.getwordspace.php"}, {"name": "HaruPage::lineTo", "synopsis": "Draws a line from the current point to the specified point.", "usage": "bool HaruPage::lineTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/harupage.lineto.php"}, {"name": "HaruPage::measureText", "synopsis": "Get the byte length of characters which can be included on one line of the specified width.", "usage": "int HaruPage::measureText ( string $text , float $width [, bool $wordwrap = FALSE ] )", "url": "https://secure.php.net/manual/en/harupage.measuretext.php"}, {"name": "HaruPage::moveTextPos", "synopsis": "Moves text position to the specified offset. If the start position of the current line is (x1, y1), the start of the next line is (x1 + x, y1 + y).", "usage": "bool HaruPage::moveTextPos ( float $x , float $y [, bool $set_leading = FALSE ] )", "url": "https://secure.php.net/manual/en/harupage.movetextpos.php"}, {"name": "HaruPage::moveTo", "synopsis": "Defines starting point for new drawing path.", "usage": "bool HaruPage::moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/harupage.moveto.php"}, {"name": "HaruPage::moveToNextLine", "synopsis": "Moves text position to the start of the next line.", "usage": "bool HaruPage::moveToNextLine ( void )", "url": "https://secure.php.net/manual/en/harupage.movetonextline.php"}, {"name": "HaruPage::rectangle", "synopsis": "Appends a rectangle to the current drawing path.", "usage": "bool HaruPage::rectangle ( float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/harupage.rectangle.php"}, {"name": "HaruPage::setCharSpace", "synopsis": "Defines character spacing for the page.", "usage": "bool HaruPage::setCharSpace ( float $char_space )", "url": "https://secure.php.net/manual/en/harupage.setcharspace.php"}, {"name": "HaruPage::setCMYKFill", "synopsis": "Defines filling color for the page.", "usage": "bool HaruPage::setCMYKFill ( float $c , float $m , float $y , float $k )", "url": "https://secure.php.net/manual/en/harupage.setcmykfill.php"}, {"name": "HaruPage::setCMYKStroke", "synopsis": "Defines stroking color for the page.", "usage": "bool HaruPage::setCMYKStroke ( float $c , float $m , float $y , float $k )", "url": "https://secure.php.net/manual/en/harupage.setcmykstroke.php"}, {"name": "HaruPage::setDash", "synopsis": "Defines the dash pattern for the page.", "usage": "bool HaruPage::setDash ( array $pattern , int $phase )", "url": "https://secure.php.net/manual/en/harupage.setdash.php"}, {"name": "HaruPage::setFlatness", "synopsis": "Defines flatness for the page.", "usage": "bool HaruPage::setFlatness ( float $flatness )", "url": "https://secure.php.net/manual/en/harupage.setflatness.php"}, {"name": "HaruPage::setFontAndSize", "synopsis": "Defines current font and its size for the page.", "usage": "bool HaruPage::setFontAndSize ( object $font , float $size )", "url": "https://secure.php.net/manual/en/harupage.setfontandsize.php"}, {"name": "HaruPage::setGrayFill", "synopsis": "Defines filling color for the page.", "usage": "bool HaruPage::setGrayFill ( float $value )", "url": "https://secure.php.net/manual/en/harupage.setgrayfill.php"}, {"name": "HaruPage::setGrayStroke", "synopsis": "Defines stroking color for the page.", "usage": "bool HaruPage::setGrayStroke ( float $value )", "url": "https://secure.php.net/manual/en/harupage.setgraystroke.php"}, {"name": "HaruPage::setHeight", "synopsis": "Defines height of the page.", "usage": "bool HaruPage::setHeight ( float $height )", "url": "https://secure.php.net/manual/en/harupage.setheight.php"}, {"name": "HaruPage::setHorizontalScaling", "synopsis": "Set the horizontal scaling for the page.", "usage": "bool HaruPage::setHorizontalScaling ( float $scaling )", "url": "https://secure.php.net/manual/en/harupage.sethorizontalscaling.php"}, {"name": "HaruPage::setLineCap", "synopsis": "Defines the shape to be used at the ends of lines.", "usage": "bool HaruPage::setLineCap ( int $cap )", "url": "https://secure.php.net/manual/en/harupage.setlinecap.php"}, {"name": "HaruPage::setLineJoin", "synopsis": "Defines line join style for the page.", "usage": "bool HaruPage::setLineJoin ( int $join )", "url": "https://secure.php.net/manual/en/harupage.setlinejoin.php"}, {"name": "HaruPage::setLineWidth", "synopsis": "Defines line width for the page.", "usage": "bool HaruPage::setLineWidth ( float $width )", "url": "https://secure.php.net/manual/en/harupage.setlinewidth.php"}, {"name": "HaruPage::setMiterLimit", "synopsis": "Set the current value of the miter limit of the page.", "usage": "bool HaruPage::setMiterLimit ( float $limit )", "url": "https://secure.php.net/manual/en/harupage.setmiterlimit.php"}, {"name": "HaruPage::setRGBFill", "synopsis": "Defines filling color for the page. All values must be between 0 and 1.", "usage": "bool HaruPage::setRGBFill ( float $r , float $g , float $b )", "url": "https://secure.php.net/manual/en/harupage.setrgbfill.php"}, {"name": "HaruPage::setRGBStroke", "synopsis": "Defines stroking color for the page. All values must be between 0 and 1.", "usage": "bool HaruPage::setRGBStroke ( float $r , float $g , float $b )", "url": "https://secure.php.net/manual/en/harupage.setrgbstroke.php"}, {"name": "HaruPage::setRotate", "synopsis": "Defines rotation angle of the page.", "usage": "bool HaruPage::setRotate ( int $angle )", "url": "https://secure.php.net/manual/en/harupage.setrotate.php"}, {"name": "HaruPage::setSize", "synopsis": "Changes size and direction of the page to a predefined format.", "usage": "bool HaruPage::setSize ( int $size , int $direction )", "url": "https://secure.php.net/manual/en/harupage.setsize.php"}, {"name": "HaruPage::setSlideShow", "synopsis": "Defines transition style for the page.", "usage": "bool HaruPage::setSlideShow ( int $type , float $disp_time , float $trans_time )", "url": "https://secure.php.net/manual/en/harupage.setslideshow.php"}, {"name": "HaruPage::setTextLeading", "synopsis": "Set the text leading (line spacing) for the page.", "usage": "bool HaruPage::setTextLeading ( float $text_leading )", "url": "https://secure.php.net/manual/en/harupage.settextleading.php"}, {"name": "HaruPage::setTextMatrix", "synopsis": "Defines the text transformation matrix of the page.", "usage": "bool HaruPage::setTextMatrix ( float $a , float $b , float $c , float $d , float $x , float $y )", "url": "https://secure.php.net/manual/en/harupage.settextmatrix.php"}, {"name": "HaruPage::setTextRenderingMode", "synopsis": "Defines text rendering mode for the page.", "usage": "bool HaruPage::setTextRenderingMode ( int $mode )", "url": "https://secure.php.net/manual/en/harupage.settextrenderingmode.php"}, {"name": "HaruPage::setTextRise", "synopsis": "Set the current value of text rising.", "usage": "bool HaruPage::setTextRise ( float $rise )", "url": "https://secure.php.net/manual/en/harupage.settextrise.php"}, {"name": "HaruPage::setWidth", "synopsis": "Set the width of the page.", "usage": "bool HaruPage::setWidth ( float $width )", "url": "https://secure.php.net/manual/en/harupage.setwidth.php"}, {"name": "HaruPage::setWordSpace", "synopsis": "Set the word spacing for the page.", "usage": "bool HaruPage::setWordSpace ( float $word_space )", "url": "https://secure.php.net/manual/en/harupage.setwordspace.php"}, {"name": "HaruPage::showText", "synopsis": "Prints out the text at the current position of the page.", "usage": "bool HaruPage::showText ( string $text )", "url": "https://secure.php.net/manual/en/harupage.showtext.php"}, {"name": "HaruPage::showTextNextLine", "synopsis": "Moves the current position to the start of the next line and print out the text.", "usage": "bool HaruPage::showTextNextLine ( string $text [, float $word_space = 0 [, float $char_space = 0 ]] )", "url": "https://secure.php.net/manual/en/harupage.showtextnextline.php"}, {"name": "HaruPage::stroke", "synopsis": "Paints the current path.", "usage": "bool HaruPage::stroke ([ bool $close_path = FALSE ] )", "url": "https://secure.php.net/manual/en/harupage.stroke.php"}, {"name": "HaruPage::textOut", "synopsis": "Prints the text on the specified position.", "usage": "bool HaruPage::textOut ( float $x , float $y , string $text )", "url": "https://secure.php.net/manual/en/harupage.textout.php"}, {"name": "HaruPage::textRect", "synopsis": "Prints the text inside the specified region.", "usage": "bool HaruPage::textRect ( float $left , float $top , float $right , float $bottom , string $text [, int $align = HaruPage::TALIGN_LEFT ] )", "url": "https://secure.php.net/manual/en/harupage.textrect.php"}, {"name": "HRTime\\PerformanceCounter::getFrequency", "synopsis": "Returns the timer frequency in ticks per second. This value is constant after the system start on almost any operating system.", "usage": "public static int HRTime\\PerformanceCounter::getFrequency ( void )", "url": "https://secure.php.net/manual/en/hrtime-performancecounter.getfrequency.php"}, {"name": "HRTime\\PerformanceCounter::getTicks", "synopsis": "Returns the ticks count.", "usage": "public static int HRTime\\PerformanceCounter::getTicks ( void )", "url": "https://secure.php.net/manual/en/hrtime-performancecounter.getticks.php"}, {"name": "HRTime\\PerformanceCounter::getTicksSince", "synopsis": "Returns the ticks count elapsed since the given start value.", "usage": "public static int HRTime\\PerformanceCounter::getTicksSince ( int $start )", "url": "https://secure.php.net/manual/en/hrtime-performancecounter.gettickssince.php"}, {"name": "HRTime\\StopWatch::getElapsedTicks", "synopsis": "Get elapsed ticks for all the previously closed intervals.", "usage": "public int HRTime\\StopWatch::getElapsedTicks ( void )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.getelapsedticks.php"}, {"name": "HRTime\\StopWatch::getElapsedTime", "synopsis": "Get elapsed time for all the previously closed intervals.", "usage": "public float HRTime\\StopWatch::getElapsedTime ([ int $unit ] )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.getelapsedtime.php"}, {"name": "HRTime\\StopWatch::getLastElapsedTicks", "synopsis": "Get elapsed ticks for the previously closed interval.", "usage": "public int HRTime\\StopWatch::getLastElapsedTicks ( void )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.getlastelapsedticks.php"}, {"name": "HRTime\\StopWatch::getLastElapsedTime", "synopsis": "Get elapsed time for the previously closed interval.", "usage": "public float HRTime\\StopWatch::getLastElapsedTime ([ int $unit ] )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.getlastelapsedtime.php"}, {"name": "HRTime\\StopWatch::isRunning", "synopsis": "Reveals whether the measurement was started.", "usage": "public bool HRTime\\StopWatch::isRunning ( void )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.isrunning.php"}, {"name": "HRTime\\StopWatch::start", "synopsis": "Starts the time measurement. It has no effect if the measurement was already started. The measurement will be continued if it was previously stopped.", "usage": "public void HRTime\\StopWatch::start ( void )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.start.php"}, {"name": "HRTime\\StopWatch::stop", "synopsis": "Stop the time measurement for the previously started interval.", "usage": "public void HRTime\\StopWatch::stop ( void )", "url": "https://secure.php.net/manual/en/hrtime-stopwatch.stop.php"}, {"name": "hw_api_attribute::key", "synopsis": "Returns the name of the attribute.", "usage": "string hw_api_attribute::key ( void )", "url": "https://secure.php.net/manual/en/hwapi.attribute-key.php"}, {"name": "hw_api_attribute::langdepvalue", "synopsis": "Returns the value in the given language of the attribute.", "usage": "string hw_api_attribute::langdepvalue ( string $language )", "url": "https://secure.php.net/manual/en/hwapi.attribute-langdepvalue.php"}, {"name": "hw_api_attribute::value", "synopsis": "Gets the value of the attribute.", "usage": "string hw_api_attribute::value ( void )", "url": "https://secure.php.net/manual/en/hwapi.attribute-value.php"}, {"name": "hw_api_attribute::values", "synopsis": "Gets all values of the attribute.", "usage": "array hw_api_attribute::values ( void )", "url": "https://secure.php.net/manual/en/hwapi.attribute-values.php"}, {"name": "hw_api::checkin", "synopsis": "This function checks in an object or a whole hierarchy of objects. The parameters array contains the required element 'objectIdentifier' and the optional element 'version', 'comment', 'mode' and 'objectQuery'. 'version' sets the version of the object. It consists of the major and minor version separated by a period. If the version is not set, the minor version is incremented. 'mode' can be one of the following values:", "usage": "bool hw_api::checkin ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.checkin.php"}, {"name": "hw_api::checkout", "synopsis": "This function checks out an object or a whole hierarchy of objects.", "usage": "bool hw_api::checkout ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.checkout.php"}, {"name": "hw_api::children", "synopsis": "Retrieves the children of a collection or the attributes of a document. The children can be further filtered by specifying an object query.", "usage": "array hw_api::children ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.children.php"}, {"name": "hw_api_content::mimetype", "synopsis": "Returns the mimetype of the content.", "usage": "string hw_api_content::mimetype ( void )", "url": "https://secure.php.net/manual/en/hwapi.content-mimetype.php"}, {"name": "hw_api_content::read", "synopsis": "Reads len bytes from the content into the given buffer.", "usage": "string hw_api_content::read ( string $buffer , int $len )", "url": "https://secure.php.net/manual/en/hwapi.content-read.php"}, {"name": "hw_api::content", "synopsis": "This function returns the content of a document as an object of type hw_api_content.", "usage": "HW_API_Content hw_api::content ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.content.php"}, {"name": "hw_api::copy", "synopsis": "This function will make a physical copy including the content if it exists and returns the new object or an error object.", "usage": "hw_api_content hw_api::copy ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.copy.php"}, {"name": "hw_api::dbstat", "synopsis": "Returns statistics about database server.", "usage": "hw_api_object hw_api::dbstat ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.dbstat.php"}, {"name": "hw_api::dcstat", "synopsis": "Returns statistics about document cache server.", "usage": "hw_api_object hw_api::dcstat ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.dcstat.php"}, {"name": "hw_api::dstanchors", "synopsis": "Retrieves all destination anchors of an object.", "usage": "array hw_api::dstanchors ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.dstanchors.php"}, {"name": "hw_api::dstofsrcanchor", "synopsis": "Retrieves the destination object pointed by the specified source anchors. The destination object can either be a destination anchor or a whole document.", "usage": "hw_api_object hw_api::dstofsrcanchor ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.dstofsrcanchor.php"}, {"name": "hw_api_error::count", "synopsis": "Returns the number of error reasons.", "usage": "int hw_api_error::count ( void )", "url": "https://secure.php.net/manual/en/hwapi.error-count.php"}, {"name": "hw_api_error::reason", "synopsis": "Returns the first error reason.", "usage": "HW_API_Reason hw_api_error::reason ( void )", "url": "https://secure.php.net/manual/en/hwapi.error-reason.php"}, {"name": "hw_api::find", "synopsis": "This functions searches for objects either by executing a key or/and full text query. The found objects can further be filtered by an optional object query. They are sorted by their importance. The second search operation is relatively slow and its result can be limited to a certain number of hits. This allows to perform an incremental search, each returning just a subset of all found documents, starting at a given index.", "usage": "array hw_api::find ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.find.php"}, {"name": "hw_api::ftstat", "synopsis": "Returns statistics about fulltext server.", "usage": "hw_api_object hw_api::ftstat ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.ftstat.php"}, {"name": "hw_api::hwstat", "synopsis": "Returns statistics about Hyperwave server.", "usage": "hw_api_object hw_api::hwstat ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.hwstat.php"}, {"name": "hw_api::identify", "synopsis": "Logs into the Hyperwave Server.", "usage": "bool hw_api::identify ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.identify.php"}, {"name": "hw_api::info", "synopsis": "Returns information about server configuration.", "usage": "array hw_api::info ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.info.php"}, {"name": "hw_api::insert", "synopsis": "Insert a new object. The object type can be user, group, document or anchor. Depending on the type other object attributes has to be set.", "usage": "hw_api_object hw_api::insert ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.insert.php"}, {"name": "hw_api::insertanchor", "synopsis": "This function is a shortcut for hwapi_insert(). It inserts an object of type anchor and sets some of the attributes required for an anchor.", "usage": "hw_api_object hw_api::insertanchor ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.insertanchor.php"}, {"name": "hw_api::insertcollection", "synopsis": "This function is a shortcut for hwapi_insert(). It inserts an object of type collection and sets some of the attributes required for a collection.", "usage": "hw_api_object hw_api::insertcollection ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.insertcollection.php"}, {"name": "hw_api::insertdocument", "synopsis": "This function is a shortcut for hwapi_insert(). It inserts an object with content and sets some of the attributes required for a document.", "usage": "hw_api_object hw_api::insertdocument ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.insertdocument.php"}, {"name": "hw_api::link", "synopsis": "Creates a link to an object. Accessing this link is like accessing the object to links points to.", "usage": "bool hw_api::link ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.link.php"}, {"name": "hw_api::lock", "synopsis": "Locks an object for exclusive editing by the user calling this function. The object can be only unlocked by this user or the system user.", "usage": "bool hw_api::lock ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.lock.php"}, {"name": "hw_api::move", "synopsis": "Moves object between collections.", "usage": "bool hw_api::move ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.move.php"}, {"name": "hw_api_object::assign", "synopsis": "Clones the attributes of an object.", "usage": "bool hw_api_object::assign ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.object-assign.php"}, {"name": "hw_api_object::attreditable", "synopsis": "Checks whether an attribute is editable.", "usage": "bool hw_api_object::attreditable ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.object-attreditable.php"}, {"name": "hw_api_object::count", "synopsis": "Returns the number of attributes.", "usage": "int hw_api_object::count ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.object-count.php"}, {"name": "hw_api_object::insert", "synopsis": "Adds an attribute to the object.", "usage": "bool hw_api_object::insert ( HW_API_Attribute $attribute )", "url": "https://secure.php.net/manual/en/hwapi.object-insert.php"}, {"name": "hw_api_object::remove", "synopsis": "Removes the attribute with the given name.", "usage": "bool hw_api_object::remove ( string $name )", "url": "https://secure.php.net/manual/en/hwapi.object-remove.php"}, {"name": "hw_api_object::title", "synopsis": "Returns the title attribute.", "usage": "string hw_api_object::title ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.object-title.php"}, {"name": "hw_api_object::value", "synopsis": "Returns value of an attribute.", "usage": "string hw_api_object::value ( string $name )", "url": "https://secure.php.net/manual/en/hwapi.object-value.php"}, {"name": "hw_api::object", "synopsis": "This function retrieves the attribute information of an object of any version. It will not return the document content.", "usage": "hw_api_object hw_api::object ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.object.php"}, {"name": "hw_api::objectbyanchor", "synopsis": "This function retrieves an object the specified anchor belongs to.", "usage": "hw_api_object hw_api::objectbyanchor ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.objectbyanchor.php"}, {"name": "hw_api::parents", "synopsis": "Retrieves the parents of an object. The parents can be further filtered by specifying an object query.", "usage": "array hw_api::parents ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.parents.php"}, {"name": "hw_api_reason::description", "synopsis": "Returns the description of a reason", "usage": "string hw_api_reason::description ( void )", "url": "https://secure.php.net/manual/en/hwapi.reason-description.php"}, {"name": "hw_api_reason::type", "synopsis": "Returns the type of a reason.", "usage": "HW_API_Reason hw_api_reason::type ( void )", "url": "https://secure.php.net/manual/en/hwapi.reason-type.php"}, {"name": "hw_api::remove", "synopsis": "Removes an object from the specified parent. Collections will be removed recursively.", "usage": "bool hw_api::remove ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.remove.php"}, {"name": "hw_api::replace", "synopsis": "Replaces the attributes and the content of an object.", "usage": "hw_api_object hw_api::replace ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.replace.php"}, {"name": "hw_api::setcommittedversion", "synopsis": "Commits a version of a document. The committed version is the one which is visible to users with read access. By default the last version is the committed version.", "usage": "hw_api_object hw_api::setcommittedversion ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.setcommittedversion.php"}, {"name": "hw_api::srcanchors", "synopsis": "Retrieves all source anchors of an object.", "usage": "array hw_api::srcanchors ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.srcanchors.php"}, {"name": "hw_api::srcsofdst", "synopsis": "Retrieves all the source anchors pointing to the specified destination. The destination object can either be a destination anchor or a whole document.", "usage": "array hw_api::srcsofdst ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.srcsofdst.php"}, {"name": "hw_api::unlock", "synopsis": "Unlocks a locked object. Only the user who has locked the object and the system user may unlock an object.", "usage": "bool hw_api::unlock ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.unlock.php"}, {"name": "hw_api::user", "synopsis": "Returns the own user object.", "usage": "hw_api_object hw_api::user ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.user.php"}, {"name": "hw_api::userlist", "synopsis": "Returns a list of all logged in users.", "usage": "array hw_api::userlist ( array $parameter )", "url": "https://secure.php.net/manual/en/hwapi.userlist.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::getDescription", "synopsis": "Returns the attached description for a picture frame in an ID3v2.x frame.", "usage": "public string KTaglib_ID3v2_AttachedPictureFrame::getDescription ( void )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.getdescription.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::getMimeType", "synopsis": "Returns the mime type of the image represented by the attached picture frame.", "usage": "public string KTaglib_ID3v2_AttachedPictureFrame::getMimeType ( void )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.getmimetype.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::getType", "synopsis": "Returns the type of the image.", "usage": "public int KTaglib_ID3v2_AttachedPictureFrame::getType ( void )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.gettype.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::savePicture", "synopsis": "Saves the attached picture to the given filename.", "usage": "public bool KTaglib_ID3v2_AttachedPictureFrame::savePicture ( string $filename )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.savepicture.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::getMimeType", "synopsis": "Sets the mime type of the image. This should in most cases be \"image/png\" or \"image/jpeg\".", "usage": "public string KTaglib_ID3v2_AttachedPictureFrame::getMimeType ( string $type )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.setmimetype.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::setPicture", "synopsis": "Sets the picture to the give image. The image is loaded from the given filename. Please note that the picture is not saved unless you call the save method of the corresponding file object.", "usage": "public void KTaglib_ID3v2_AttachedPictureFrame::setPicture ( string $filename )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.setpicture.php"}, {"name": "KTaglib_ID3v2_AttachedPictureFrame::setType", "synopsis": "Sets the type of the image. This can be e.g. FrontCover or FileIcon. Please refer to the KTaglib_ID3v2_AttachedPictureFrame class description for a list of available types and their constant mappings.", "usage": "public void KTaglib_ID3v2_AttachedPictureFrame::setType ( int $type )", "url": "https://secure.php.net/manual/en/id3v2attachedpictureframe.settype.php"}, {"name": "KTaglib_ID3v2_Frame::getSize", "synopsis": "Returns the size of the frame in bytes. Please refer to id3.org to see what ID3v2 frames are and how they are defined.", "usage": "public int KTaglib_ID3v2_Frame::getSize ( void )", "url": "https://secure.php.net/manual/en/id3v2frame.getsize.php"}, {"name": "KTaglib_ID3v2_Frame::__toString", "synopsis": "Returns a string representation of the frame. This might be just the frame id, but might contain more information. Please see the ktaglib documentation for more information", "usage": "public string KTaglib_ID3v2_Frame::__toString ( void )", "url": "https://secure.php.net/manual/en/id3v2frame.tostring.php"}, {"name": "KTaglib_ID3v2_Tag::addFrame", "synopsis": "Adds a frame to the ID3v2 tag. The frame must be a valid KTaglib_ID3v2_Frame object. To save the tag, the save function needs to be invoked.", "usage": "public bool KTaglib_ID3v2_Tag::addFrame ( KTaglib_ID3v2_Frame $frame )", "url": "https://secure.php.net/manual/en/id3v2tag.addframe.php"}, {"name": "KTaglib_ID3v2_Tag::getFrameList", "synopsis": "Returns an array of ID3v2 frames, associated with the ID3v2 tag.", "usage": "public array KTaglib_ID3v2_Tag::getFrameList ( void )", "url": "https://secure.php.net/manual/en/id3v2tag.getframelist.php"}, {"name": "Imagick::adaptiveBlurImage", "synopsis": "Adds an adaptive blur filter to image. The intensity of an adaptive blur depends is dramatically decreased at edge of the image, whereas a standard blur is uniform across the image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::adaptiveBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.adaptiveblurimage.php"}, {"name": "Imagick::adaptiveResizeImage", "synopsis": "Adaptively resize image with data-dependent triangulation. Avoids blurring across sharp color changes. Most useful when used to shrink images slightly to a slightly smaller \"web size\"; may not look good when a full-sized image is adaptively resized to a thumbnail. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::adaptiveResizeImage ( int $columns , int $rows [, bool $bestfit = FALSE [, bool $legacy = FALSE ]] )", "url": "https://secure.php.net/manual/en/imagick.adaptiveresizeimage.php"}, {"name": "Imagick::adaptiveSharpenImage", "synopsis": "Adaptively sharpen the image by sharpening more intensely near image edges and less intensely far from edges. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::adaptiveSharpenImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.adaptivesharpenimage.php"}, {"name": "Imagick::adaptiveThresholdImage", "synopsis": "Selects an individual threshold for each pixel based on the range of intensity values in its local neighborhood. This allows for thresholding of an image whose global intensity histogram doesn't contain distinctive peaks.", "usage": "bool Imagick::adaptiveThresholdImage ( int $width , int $height , int $offset )", "url": "https://secure.php.net/manual/en/imagick.adaptivethresholdimage.php"}, {"name": "Imagick::addImage", "synopsis": "Adds new image to Imagick object from the current position of the source object. After the operation iterator position is moved at the end of the list.", "usage": "bool Imagick::addImage ( Imagick $source )", "url": "https://secure.php.net/manual/en/imagick.addimage.php"}, {"name": "Imagick::addNoiseImage", "synopsis": "Adds random noise to the image.", "usage": "bool Imagick::addNoiseImage ( int $noise_type [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.addnoiseimage.php"}, {"name": "Imagick::affineTransformImage", "synopsis": "Transforms an image as dictated by the affine matrix.", "usage": "bool Imagick::affineTransformImage ( ImagickDraw $matrix )", "url": "https://secure.php.net/manual/en/imagick.affinetransformimage.php"}, {"name": "Imagick::animateImages", "synopsis": "This method animates the image onto a local or remote X server. This method is not available on Windows. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::animateImages ( string $x_server )", "url": "https://secure.php.net/manual/en/imagick.animateimages.php"}, {"name": "Imagick::annotateImage", "synopsis": "Annotates an image with text.", "usage": "bool Imagick::annotateImage ( ImagickDraw $draw_settings , float $x , float $y , float $angle , string $text )", "url": "https://secure.php.net/manual/en/imagick.annotateimage.php"}, {"name": "Imagick::appendImages", "synopsis": "Append a set of images into one larger image.", "usage": "Imagick Imagick::appendImages ( bool $stack = FALSE )", "url": "https://secure.php.net/manual/en/imagick.appendimages.php"}, {"name": "Imagick::autoLevelImage", "synopsis": "Adjusts the levels of a particular image channel by scaling the minimum and maximum values to the full quantum range.", "usage": "public bool Imagick::autoLevelImage ([ int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.autolevelimage.php"}, {"name": "Imagick::averageImages", "synopsis": "Average a set of images.", "usage": "Imagick Imagick::averageImages ( void )", "url": "https://secure.php.net/manual/en/imagick.averageimages.php"}, {"name": "Imagick::blackThresholdImage", "synopsis": "Is like Imagick::thresholdImage() but forces all pixels below the threshold into black while leaving all pixels above the threshold unchanged.", "usage": "bool Imagick::blackThresholdImage ( mixed $threshold )", "url": "https://secure.php.net/manual/en/imagick.blackthresholdimage.php"}, {"name": "Imagick::blueShiftImage", "synopsis": "Mutes the colors of the image to simulate a scene at nighttime in the moonlight.", "usage": "public bool Imagick::blueShiftImage ([ float $factor = 1.5 ] )", "url": "https://secure.php.net/manual/en/imagick.blueshiftimage.php"}, {"name": "Imagick::blurImage", "synopsis": "Adds blur filter to image. Optional third parameter to blur a specific channel.", "usage": "bool Imagick::blurImage ( float $radius , float $sigma [, int $channel ] )", "url": "https://secure.php.net/manual/en/imagick.blurimage.php"}, {"name": "Imagick::borderImage", "synopsis": "Surrounds the image with a border of the color defined by the bordercolor ImagickPixel object.", "usage": "bool Imagick::borderImage ( mixed $bordercolor , int $width , int $height )", "url": "https://secure.php.net/manual/en/imagick.borderimage.php"}, {"name": "Imagick::brightnessContrastImage", "synopsis": "Change the brightness and/or contrast of an image. It converts the brightness and contrast parameters into slope and intercept and calls a polynomical function to apply to the image.", "usage": "public bool Imagick::brightnessContrastImage ( float $brightness , float $contrast [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.brightnesscontrastimage.php"}, {"name": "Imagick::charcoalImage", "synopsis": "Simulates a charcoal drawing.", "usage": "bool Imagick::charcoalImage ( float $radius , float $sigma )", "url": "https://secure.php.net/manual/en/imagick.charcoalimage.php"}, {"name": "Imagick::chopImage", "synopsis": "Removes a region of an image and collapses the image to occupy the removed portion.", "usage": "bool Imagick::chopImage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.chopimage.php"}, {"name": "Imagick::clampImage", "synopsis": "Restricts the color range from 0 to the quantum depth.", "usage": "public bool Imagick::clampImage ([ int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.clampimage.php"}, {"name": "Imagick::clear", "synopsis": "Clears all resources associated to Imagick object", "usage": "bool Imagick::clear ( void )", "url": "https://secure.php.net/manual/en/imagick.clear.php"}, {"name": "Imagick::clipImage", "synopsis": "Clips along the first path from the 8BIM profile, if present.", "usage": "bool Imagick::clipImage ( void )", "url": "https://secure.php.net/manual/en/imagick.clipimage.php"}, {"name": "Imagick::clipImagePath", "synopsis": "Clips along the named paths from the 8BIM profile, if present. Later operations take effect inside the path. Id may be a number if preceded with #, to work on a numbered path, e.g., \"#1\" to use the first path.", "usage": "public void Imagick::clipImagePath ( string $pathname , string $inside )", "url": "https://secure.php.net/manual/en/imagick.clipimagepath.php"}, {"name": "Imagick::clipPathImage", "synopsis": "Clips along the named paths from the 8BIM profile, if present. Later operations take effect inside the path. It may be a number if preceded with #, to work on a numbered path, e.g., \"#1\" to use the first path.", "usage": "bool Imagick::clipPathImage ( string $pathname , bool $inside )", "url": "https://secure.php.net/manual/en/imagick.clippathimage.php"}, {"name": "Imagick::clone", "synopsis": "Makes an exact copy of the Imagick object.", "usage": "Imagick Imagick::clone ( void )", "url": "https://secure.php.net/manual/en/imagick.clone.php"}, {"name": "Imagick::clutImage", "synopsis": "Replaces colors in the image from a color lookup table. Optional second parameter to replace colors in a specific channel. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::clutImage ( Imagick $lookup_table [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.clutimage.php"}, {"name": "Imagick::coalesceImages", "synopsis": "Composites a set of images while respecting any page offsets and disposal methods. GIF, MIFF, and MNG animation sequences typically start with an image background and each subsequent image varies in size and offset. Returns a new Imagick object where each image in the sequence is the same size as the first and composited with the next image in the sequence.", "usage": "Imagick Imagick::coalesceImages ( void )", "url": "https://secure.php.net/manual/en/imagick.coalesceimages.php"}, {"name": "Imagick::colorFloodfillImage", "synopsis": "Changes the color value of any pixel that matches target and is an immediate neighbor.", "usage": "bool Imagick::colorFloodfillImage ( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.colorfloodfillimage.php"}, {"name": "Imagick::colorizeImage", "synopsis": "Blends the fill color with each pixel in the image.", "usage": "bool Imagick::colorizeImage ( mixed $colorize , mixed $opacity [, bool $legacy = FALSE ] )", "url": "https://secure.php.net/manual/en/imagick.colorizeimage.php"}, {"name": "Imagick::colorMatrixImage", "synopsis": "Apply color transformation to an image. The method permits saturation changes, hue rotation, luminance to alpha, and various other effects. Although variable-sized transformation matrices can be used, typically one uses a 5x5 matrix for an RGBA image and a 6x6 for CMYKA (or RGBA with offsets). The matrix is similar to those used by Adobe Flash except offsets are in column 6 rather than 5 (in support of CMYKA images) and offsets are normalized (divide Flash offset by 255)", "usage": "public bool Imagick::colorMatrixImage ( array $color_matrix = Imagick::CHANNEL_DEFAULT )", "url": "https://secure.php.net/manual/en/imagick.colormatriximage.php"}, {"name": "Imagick::combineImages", "synopsis": "Combines one or more images into a single image. The grayscale value of the pixels of each image in the sequence is assigned in order to the specified channels of the combined image. The typical ordering would be image 1 => Red, 2 => Green, 3 => Blue, etc.", "usage": "Imagick Imagick::combineImages ( int $channelType )", "url": "https://secure.php.net/manual/en/imagick.combineimages.php"}, {"name": "Imagick::commentImage", "synopsis": "Adds a comment to your image.", "usage": "bool Imagick::commentImage ( string $comment )", "url": "https://secure.php.net/manual/en/imagick.commentimage.php"}, {"name": "Imagick::compareImageChannels", "synopsis": "Compares one or more images and returns the difference image.", "usage": "array Imagick::compareImageChannels ( Imagick $image , int $channelType , int $metricType )", "url": "https://secure.php.net/manual/en/imagick.compareimagechannels.php"}, {"name": "Imagick::compareImageLayers", "synopsis": "Compares each image with the next in a sequence and returns the maximum bounding region of any pixel differences it discovers. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "Imagick Imagick::compareImageLayers ( int $method )", "url": "https://secure.php.net/manual/en/imagick.compareimagelayers.php"}, {"name": "Imagick::compareImages", "synopsis": "Returns an array containing a reconstructed image and the difference between images.", "usage": "array Imagick::compareImages ( Imagick $compare , int $metric )", "url": "https://secure.php.net/manual/en/imagick.compareimages.php"}, {"name": "Imagick::compositeImage", "synopsis": "Composite one image onto another at the specified offset. Any extra arguments needed for the compose algorithm should passed to setImageArtifact with 'compose:args' as the first parameter and the data as the second parameter.", "usage": "bool Imagick::compositeImage ( Imagick $composite_object , int $composite , int $x , int $y [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.compositeimage.php"}, {"name": "Imagick::__construct", "synopsis": "Creates an Imagick instance for a specified image or set of images.", "usage": "Imagick::__construct ([ mixed $files ] )", "url": "https://secure.php.net/manual/en/imagick.construct.php"}, {"name": "Imagick::contrastImage", "synopsis": "Enhances the intensity differences between the lighter and darker elements of the image. Set sharpen to a value other than 0 to increase the image contrast otherwise the contrast is reduced.", "usage": "bool Imagick::contrastImage ( bool $sharpen )", "url": "https://secure.php.net/manual/en/imagick.contrastimage.php"}, {"name": "Imagick::contrastStretchImage", "synopsis": "Enhances the contrast of a color image by adjusting the pixels color to span the entire range of colors available. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::contrastStretchImage ( float $black_point , float $white_point [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.contraststretchimage.php"}, {"name": "Imagick::convolveImage", "synopsis": "Applies a custom convolution kernel to the image.", "usage": "bool Imagick::convolveImage ( array $kernel [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.convolveimage.php"}, {"name": "Imagick::count", "synopsis": "Returns the number of images.", "usage": "public int Imagick::count ([ int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/imagick.count.php"}, {"name": "Imagick::cropImage", "synopsis": "Extracts a region of the image.", "usage": "bool Imagick::cropImage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.cropimage.php"}, {"name": "Imagick::cropThumbnailImage", "synopsis": "Creates a fixed size thumbnail by first scaling the image up or down and cropping a specified area from the center.", "usage": "bool Imagick::cropThumbnailImage ( int $width , int $height [, bool $legacy = FALSE ] )", "url": "https://secure.php.net/manual/en/imagick.cropthumbnailimage.php"}, {"name": "Imagick::current", "synopsis": "Returns reference to the current imagick object with image pointer at the correct sequence.", "usage": "Imagick Imagick::current ( void )", "url": "https://secure.php.net/manual/en/imagick.current.php"}, {"name": "Imagick::cycleColormapImage", "synopsis": "Displaces an image's colormap by a given number of positions. If you cycle the colormap a number of times you can produce a psychedelic effect.", "usage": "bool Imagick::cycleColormapImage ( int $displace )", "url": "https://secure.php.net/manual/en/imagick.cyclecolormapimage.php"}, {"name": "Imagick::decipherImage", "synopsis": "Deciphers image that has been enciphered before. The image must be enciphered using Imagick::encipherImage(). This method is available if Imagick has been compiled against ImageMagick version 6.3.9 or newer.", "usage": "bool Imagick::decipherImage ( string $passphrase )", "url": "https://secure.php.net/manual/en/imagick.decipherimage.php"}, {"name": "Imagick::deconstructImages", "synopsis": "Compares each image with the next in a sequence and returns the maximum bounding region of any pixel differences it discovers.", "usage": "Imagick Imagick::deconstructImages ( void )", "url": "https://secure.php.net/manual/en/imagick.deconstructimages.php"}, {"name": "Imagick::deleteImageArtifact", "synopsis": "Deletes an artifact associated with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.", "usage": "bool Imagick::deleteImageArtifact ( string $artifact )", "url": "https://secure.php.net/manual/en/imagick.deleteimageartifact.php"}, {"name": "Imagick::deleteImageProperty", "synopsis": "Deletes an image property.", "usage": "public bool Imagick::deleteImageProperty ( string $name )", "url": "https://secure.php.net/manual/en/imagick.deleteimageproperty.php"}, {"name": "Imagick::deskewImage", "synopsis": "This method can be used to remove skew from for example scanned images where the paper was not properly placed on the scanning surface. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.", "usage": "public bool Imagick::deskewImage ( float $threshold )", "url": "https://secure.php.net/manual/en/imagick.deskewimage.php"}, {"name": "Imagick::despeckleImage", "synopsis": "Reduces the speckle noise in an image while preserving the edges of the original image.", "usage": "bool Imagick::despeckleImage ( void )", "url": "https://secure.php.net/manual/en/imagick.despeckleimage.php"}, {"name": "Imagick::destroy", "synopsis": "Destroys the Imagick object and frees all resources associated with it. This method is deprecated in favour of Imagick::clear.", "usage": "bool Imagick::destroy ( void )", "url": "https://secure.php.net/manual/en/imagick.destroy.php"}, {"name": "Imagick::displayImage", "synopsis": "This method displays an image on a X server.", "usage": "bool Imagick::displayImage ( string $servername )", "url": "https://secure.php.net/manual/en/imagick.displayimage.php"}, {"name": "Imagick::displayImages", "synopsis": "Displays an image or image sequence on a X server.", "usage": "bool Imagick::displayImages ( string $servername )", "url": "https://secure.php.net/manual/en/imagick.displayimages.php"}, {"name": "Imagick::distortImage", "synopsis": "Distorts an image using various distortion methods, by mapping color lookups of the source image to a new destination image usually of the same size as the source image, unless 'bestfit' is set to TRUE.", "usage": "bool Imagick::distortImage ( int $method , array $arguments , bool $bestfit )", "url": "https://secure.php.net/manual/en/imagick.distortimage.php"}, {"name": "Imagick::drawImage", "synopsis": "Renders the ImagickDraw object on the current image.", "usage": "bool Imagick::drawImage ( ImagickDraw $draw )", "url": "https://secure.php.net/manual/en/imagick.drawimage.php"}, {"name": "Imagick::edgeImage", "synopsis": "Enhance edges within the image with a convolution filter of the given radius. Use radius 0 and it will be auto-selected.", "usage": "bool Imagick::edgeImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.edgeimage.php"}, {"name": "Imagick::embossImage", "synopsis": "Returns a grayscale image with a three-dimensional effect. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and it will choose a suitable radius for you.", "usage": "bool Imagick::embossImage ( float $radius , float $sigma )", "url": "https://secure.php.net/manual/en/imagick.embossimage.php"}, {"name": "Imagick::encipherImage", "synopsis": "Converts plain pixels to enciphered pixels. The image is not readable until it has been deciphered using Imagick::decipherImage() This method is available if Imagick has been compiled against ImageMagick version 6.3.9 or newer.", "usage": "bool Imagick::encipherImage ( string $passphrase )", "url": "https://secure.php.net/manual/en/imagick.encipherimage.php"}, {"name": "Imagick::enhanceImage", "synopsis": "Applies a digital filter that improves the quality of a noisy image.", "usage": "bool Imagick::enhanceImage ( void )", "url": "https://secure.php.net/manual/en/imagick.enhanceimage.php"}, {"name": "Imagick::equalizeImage", "synopsis": "Equalizes the image histogram.", "usage": "bool Imagick::equalizeImage ( void )", "url": "https://secure.php.net/manual/en/imagick.equalizeimage.php"}, {"name": "Imagick::evaluateImage", "synopsis": "Applys an arithmetic, relational, or logical expression to an image. Use these operators to lighten or darken an image, to increase or decrease contrast in an image, or to produce the \"negative\" of an image.", "usage": "bool Imagick::evaluateImage ( int $op , float $constant [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.evaluateimage.php"}, {"name": "Imagick::exportImagePixels", "synopsis": "Exports image pixels into an array. The map defines the ordering of the exported pixels. The size of the returned array is width * height * strlen(map). This method is available if Imagick has been compiled against ImageMagick version 6.4.7 or newer.", "usage": "public array Imagick::exportImagePixels ( int $x , int $y , int $width , int $height , string $map , int $STORAGE )", "url": "https://secure.php.net/manual/en/imagick.exportimagepixels.php"}, {"name": "Imagick::extentImage", "synopsis": "Comfortability method for setting image size. The method sets the image size and allows setting x,y coordinates where the new area begins. This method is available if Imagick has been compiled against ImageMagick version 6.3.1 or newer.", "usage": "bool Imagick::extentImage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.extentimage.php"}, {"name": "Imagick::filter", "synopsis": "Applies a custom convolution kernel to the image.", "usage": "public bool Imagick::filter ( ImagickKernel $ImagickKernel [, int $channel = Imagick::CHANNEL_UNDEFINED ] )", "url": "https://secure.php.net/manual/en/imagick.filter.php"}, {"name": "Imagick::flattenImages", "synopsis": "Merges a sequence of images. This is useful for combining Photoshop layers into a single image.", "usage": "Imagick Imagick::flattenImages ( void )", "url": "https://secure.php.net/manual/en/imagick.flattenimages.php"}, {"name": "Imagick::flipImage", "synopsis": "Creates a vertical mirror image by reflecting the pixels around the central x-axis.", "usage": "bool Imagick::flipImage ( void )", "url": "https://secure.php.net/manual/en/imagick.flipimage.php"}, {"name": "Imagick::floodFillPaintImage", "synopsis": "Changes the color value of any pixel that matches target and is an immediate neighbor. This method is a replacement for deprecated Imagick::paintFloodFillImage(). This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.", "usage": "bool Imagick::floodFillPaintImage ( mixed $fill , float $fuzz , mixed $target , int $x , int $y , bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.floodfillpaintimage.php"}, {"name": "Imagick::flopImage", "synopsis": "Creates a horizontal mirror image by reflecting the pixels around the central y-axis.", "usage": "bool Imagick::flopImage ( void )", "url": "https://secure.php.net/manual/en/imagick.flopimage.php"}, {"name": "Imagick::forwardFourierTransformimage", "synopsis": "Implements the discrete Fourier transform (DFT) of the image either as a magnitude / phase or real / imaginary image pair.", "usage": "public bool Imagick::forwardFourierTransformimage ( bool $magnitude )", "url": "https://secure.php.net/manual/en/imagick.forwardfouriertransformimage.php"}, {"name": "Imagick::frameImage", "synopsis": "Adds a simulated three-dimensional border around the image. The width and height specify the border width of the vertical and horizontal sides of the frame. The inner and outer bevels indicate the width of the inner and outer shadows of the frame.", "usage": "bool Imagick::frameImage ( mixed $matte_color , int $width , int $height , int $inner_bevel , int $outer_bevel )", "url": "https://secure.php.net/manual/en/imagick.frameimage.php"}, {"name": "Imagick::functionImage", "synopsis": "Applies an arithmetic, relational, or logical expression to a pseudo image.", "usage": "public bool Imagick::functionImage ( int $function , array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.functionimage.php"}, {"name": "Imagick::fxImage", "synopsis": "Evaluate expression for each pixel in the image. Consult \u00bb\u00a0The Fx Special Effects Image Operator for more information.", "usage": "Imagick Imagick::fxImage ( string $expression [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.fximage.php"}, {"name": "Imagick::gammaImage", "synopsis": "Gamma-corrects an image. The same image viewed on different devices will have perceptual differences in the way the image's intensities are represented on the screen. Specify individual gamma levels for the red, green, and blue channels, or adjust all three with the gamma parameter. Values typically range from 0.8 to 2.3.", "usage": "bool Imagick::gammaImage ( float $gamma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.gammaimage.php"}, {"name": "Imagick::gaussianBlurImage", "synopsis": "Blurs an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, the radius should be larger than sigma. Use a radius of 0 and selects a suitable radius for you.", "usage": "bool Imagick::gaussianBlurImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.gaussianblurimage.php"}, {"name": "Imagick::getColorspace", "synopsis": "Gets the global colorspace value. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.", "usage": "int Imagick::getColorspace ( void )", "url": "https://secure.php.net/manual/en/imagick.getcolorspace.php"}, {"name": "Imagick::getCompression", "synopsis": "Gets the object compression type.", "usage": "int Imagick::getCompression ( void )", "url": "https://secure.php.net/manual/en/imagick.getcompression.php"}, {"name": "Imagick::getCompressionQuality", "synopsis": "Gets the object compression quality.", "usage": "int Imagick::getCompressionQuality ( void )", "url": "https://secure.php.net/manual/en/imagick.getcompressionquality.php"}, {"name": "Imagick::getCopyright", "synopsis": "Returns the ImageMagick API copyright as a string.", "usage": "string Imagick::getCopyright ( void )", "url": "https://secure.php.net/manual/en/imagick.getcopyright.php"}, {"name": "Imagick::getFilename", "synopsis": "Returns the filename associated with an image sequence.", "usage": "string Imagick::getFilename ( void )", "url": "https://secure.php.net/manual/en/imagick.getfilename.php"}, {"name": "Imagick::getFont", "synopsis": "Returns the objects font property. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.", "usage": "string Imagick::getFont ( void )", "url": "https://secure.php.net/manual/en/imagick.getfont.php"}, {"name": "Imagick::getFormat", "synopsis": "Returns the format of the Imagick object.", "usage": "string Imagick::getFormat ( void )", "url": "https://secure.php.net/manual/en/imagick.getformat.php"}, {"name": "Imagick::getGravity", "synopsis": "Gets the global gravity property for the Imagick object. This method is available if Imagick has been compiled against ImageMagick version 6.4.0 or newer.", "usage": "int Imagick::getGravity ( void )", "url": "https://secure.php.net/manual/en/imagick.getgravity.php"}, {"name": "Imagick::getHomeURL", "synopsis": "Returns the ImageMagick home URL.", "usage": "string Imagick::getHomeURL ( void )", "url": "https://secure.php.net/manual/en/imagick.gethomeurl.php"}, {"name": "Imagick::getImage", "synopsis": "Returns a new Imagick object with the current image sequence.", "usage": "Imagick Imagick::getImage ( void )", "url": "https://secure.php.net/manual/en/imagick.getimage.php"}, {"name": "Imagick::getImageAlphaChannel", "synopsis": "Gets the image alpha channel value. The returned value is one of the alpha channel constants. This method is available if Imagick has been compiled against ImageMagick version 6.4.0 or newer.", "usage": "int Imagick::getImageAlphaChannel ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagealphachannel.php"}, {"name": "Imagick::getImageArtifact", "synopsis": "Gets an artifact associated with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.", "usage": "string Imagick::getImageArtifact ( string $artifact )", "url": "https://secure.php.net/manual/en/imagick.getimageartifact.php"}, {"name": "Imagick::getImageAttribute", "synopsis": "Returns a named attribute.", "usage": "public string Imagick::getImageAttribute ( string $key )", "url": "https://secure.php.net/manual/en/imagick.getimageattribute.php"}, {"name": "Imagick::getImageBackgroundColor", "synopsis": "Returns the image background color.", "usage": "ImagickPixel Imagick::getImageBackgroundColor ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagebackgroundcolor.php"}, {"name": "Imagick::getImageBlob", "synopsis": "Implements direct to memory image formats. It returns the image sequence as a string. The format of the image determines the format of the returned blob (GIF, JPEG, PNG, etc.). To return a different image format, use Imagick::setImageFormat().", "usage": "string Imagick::getImageBlob ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageblob.php"}, {"name": "Imagick::getImageBluePrimary", "synopsis": "Returns the chromaticity blue primary point for the image.", "usage": "array Imagick::getImageBluePrimary ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageblueprimary.php"}, {"name": "Imagick::getImageBorderColor", "synopsis": "Returns the image border color.", "usage": "ImagickPixel Imagick::getImageBorderColor ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagebordercolor.php"}, {"name": "Imagick::getImageChannelDepth", "synopsis": "Gets the depth for a particular image channel.", "usage": "int Imagick::getImageChannelDepth ( int $channel )", "url": "https://secure.php.net/manual/en/imagick.getimagechanneldepth.php"}, {"name": "Imagick::getImageChannelDistortion", "synopsis": "Compares one or more image channels of an image to a reconstructed image and returns the specified distortion metric.", "usage": "float Imagick::getImageChannelDistortion ( Imagick $reference , int $channel , int $metric )", "url": "https://secure.php.net/manual/en/imagick.getimagechanneldistortion.php"}, {"name": "Imagick::getImageChannelDistortions", "synopsis": "Compares one or more image channels of an image to a reconstructed image and returns the specified distortion metrics This method is available if Imagick has been compiled against ImageMagick version 6.4.4 or newer.", "usage": "float Imagick::getImageChannelDistortions ( Imagick $reference , int $metric [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.getimagechanneldistortions.php"}, {"name": "Imagick::getImageChannelExtrema", "synopsis": "Gets the extrema for one or more image channels. Return value is an associative array with the keys \"minima\" and \"maxima\".", "usage": "array Imagick::getImageChannelExtrema ( int $channel )", "url": "https://secure.php.net/manual/en/imagick.getimagechannelextrema.php"}, {"name": "Imagick::getImageChannelKurtosis", "synopsis": "Get the kurtosis and skewness of a specific channel. This method is available if Imagick has been compiled against ImageMagick version 6.4.9 or newer.", "usage": "public array Imagick::getImageChannelKurtosis ([ int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.getimagechannelkurtosis.php"}, {"name": "Imagick::getImageChannelMean", "synopsis": "Gets the mean and standard deviation of one or more image channels. Return value is an associative array with the keys \"mean\" and \"standardDeviation\".", "usage": "array Imagick::getImageChannelMean ( int $channel )", "url": "https://secure.php.net/manual/en/imagick.getimagechannelmean.php"}, {"name": "Imagick::getImageChannelRange", "synopsis": "Gets the range for one or more image channels. This method is available if Imagick has been compiled against ImageMagick version 6.4.0 or newer.", "usage": "array Imagick::getImageChannelRange ( int $channel )", "url": "https://secure.php.net/manual/en/imagick.getimagechannelrange.php"}, {"name": "Imagick::getImageChannelStatistics", "synopsis": "Returns statistics for each channel in the image. The statistics include the channel depth, its minima and maxima, the mean, and the standard deviation. You can access the red channel mean, for example, like this:", "usage": "array Imagick::getImageChannelStatistics ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagechannelstatistics.php"}, {"name": "Imagick::getImageClipMask", "synopsis": "Returns the image clip mask. The clip mask is an Imagick object containing the clip mask. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "Imagick Imagick::getImageClipMask ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageclipmask.php"}, {"name": "Imagick::getImageColormapColor", "synopsis": "Returns the color of the specified colormap index.", "usage": "ImagickPixel Imagick::getImageColormapColor ( int $index )", "url": "https://secure.php.net/manual/en/imagick.getimagecolormapcolor.php"}, {"name": "Imagick::getImageColors", "synopsis": "Gets the number of unique colors in the image.", "usage": "int Imagick::getImageColors ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagecolors.php"}, {"name": "Imagick::getImageColorspace", "synopsis": "Gets the image colorspace.", "usage": "int Imagick::getImageColorspace ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagecolorspace.php"}, {"name": "Imagick::getImageCompose", "synopsis": "Returns the composite operator associated with the image.", "usage": "int Imagick::getImageCompose ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagecompose.php"}, {"name": "Imagick::getImageCompression", "synopsis": "Gets the current image's compression type.", "usage": "int Imagick::getImageCompression ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagecompression.php"}, {"name": "Imagick::getImageCompressionQuality", "synopsis": "Gets the current image's compression quality", "usage": "int Imagick::getImageCompressionQuality ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagecompressionquality.php"}, {"name": "Imagick::getImageDelay", "synopsis": "Gets the image delay.", "usage": "int Imagick::getImageDelay ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagedelay.php"}, {"name": "Imagick::getImageDepth", "synopsis": "Gets the image depth.", "usage": "int Imagick::getImageDepth ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagedepth.php"}, {"name": "Imagick::getImageDispose", "synopsis": "Gets the image disposal method.", "usage": "int Imagick::getImageDispose ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagedispose.php"}, {"name": "Imagick::getImageDistortion", "synopsis": "Compares an image to a reconstructed image and returns the specified distortion metric.", "usage": "float Imagick::getImageDistortion ( MagickWand $reference , int $metric )", "url": "https://secure.php.net/manual/en/imagick.getimagedistortion.php"}, {"name": "Imagick::getImageExtrema", "synopsis": "Gets the extrema for the image. Returns an associative array with the keys \"min\" and \"max\".", "usage": "array Imagick::getImageExtrema ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageextrema.php"}, {"name": "Imagick::getImageFilename", "synopsis": "Returns the filename of a particular image in a sequence.", "usage": "string Imagick::getImageFilename ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagefilename.php"}, {"name": "Imagick::getImageFormat", "synopsis": "Returns the format of a particular image in a sequence.", "usage": "string Imagick::getImageFormat ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageformat.php"}, {"name": "Imagick::getImageGamma", "synopsis": "Gets the image gamma.", "usage": "float Imagick::getImageGamma ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagegamma.php"}, {"name": "Imagick::getImageGeometry", "synopsis": "Returns the width and height as an associative array.", "usage": "array Imagick::getImageGeometry ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagegeometry.php"}, {"name": "Imagick::getImageGravity", "synopsis": "Gets the current gravity value of the image. Unlike Imagick::getGravity(), this method returns the gravity defined for the current image sequence. This method is available if Imagick has been compiled against ImageMagick version 6.4.4 or newer.", "usage": "int Imagick::getImageGravity ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagegravity.php"}, {"name": "Imagick::getImageGreenPrimary", "synopsis": "Returns the chromaticity green primary point. Returns an array with the keys \"x\" and \"y\".", "usage": "array Imagick::getImageGreenPrimary ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagegreenprimary.php"}, {"name": "Imagick::getImageHeight", "synopsis": "Returns the image height.", "usage": "int Imagick::getImageHeight ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageheight.php"}, {"name": "Imagick::getImageHistogram", "synopsis": "Returns the image histogram as an array of ImagickPixel objects.", "usage": "array Imagick::getImageHistogram ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagehistogram.php"}, {"name": "Imagick::getImageIndex", "synopsis": "Returns the index of the current active image within the Imagick object. This method has been deprecated. See Imagick::getIteratorIndex().", "usage": "int Imagick::getImageIndex ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageindex.php"}, {"name": "Imagick::getImageInterlaceScheme", "synopsis": "Gets the image interlace scheme.", "usage": "int Imagick::getImageInterlaceScheme ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageinterlacescheme.php"}, {"name": "Imagick::getImageInterpolateMethod", "synopsis": "Returns the interpolation method for the specified image. The method is one of the Imagick::INTERPOLATE_* constants.", "usage": "int Imagick::getImageInterpolateMethod ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageinterpolatemethod.php"}, {"name": "Imagick::getImageIterations", "synopsis": "Gets the image iterations.", "usage": "int Imagick::getImageIterations ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageiterations.php"}, {"name": "Imagick::getImageLength", "synopsis": "Returns the image length in bytes", "usage": "int Imagick::getImageLength ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagelength.php"}, {"name": "Imagick::getImageMagickLicense", "synopsis": "Returns a string containing the ImageMagick license", "usage": "string Imagick::getImageMagickLicense ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagemagicklicense.php"}, {"name": "Imagick::getImageMatte", "synopsis": "Returns TRUE if the image has a matte channel otherwise false. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::getImageMatte ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagematte.php"}, {"name": "Imagick::getImageMatteColor", "synopsis": "Returns the image matte color.", "usage": "ImagickPixel Imagick::getImageMatteColor ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagemattecolor.php"}, {"name": "Imagick::getImageMimeType", "synopsis": "Returns the image mime-type.", "usage": "public string Imagick::getImageMimeType ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagemimetype.php"}, {"name": "Imagick::getImageOrientation", "synopsis": "Gets the image orientation. The return value is one of the orientation constants.", "usage": "int Imagick::getImageOrientation ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageorientation.php"}, {"name": "Imagick::getImagePage", "synopsis": "Returns the page geometry associated with the image in an array with the keys \"width\", \"height\", \"x\", and \"y\".", "usage": "array Imagick::getImagePage ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagepage.php"}, {"name": "Imagick::getImagePixelColor", "synopsis": "Returns the color of the specified pixel.", "usage": "ImagickPixel Imagick::getImagePixelColor ( int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.getimagepixelcolor.php"}, {"name": "Imagick::getImageProfile", "synopsis": "Returns the named image profile.", "usage": "string Imagick::getImageProfile ( string $name )", "url": "https://secure.php.net/manual/en/imagick.getimageprofile.php"}, {"name": "Imagick::getImageProfiles", "synopsis": "Returns all associated profiles that match the pattern. If FALSE is passed as second parameter only the profile names are returned. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "array Imagick::getImageProfiles ([ string $pattern = \"*\" [, bool $include_values = TRUE ]] )", "url": "https://secure.php.net/manual/en/imagick.getimageprofiles.php"}, {"name": "Imagick::getImageProperties", "synopsis": "Returns all associated properties that match the pattern. If FALSE is passed as second parameter only the property names are returned. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "array Imagick::getImageProperties ([ string $pattern = \"*\" [, bool $include_values = TRUE ]] )", "url": "https://secure.php.net/manual/en/imagick.getimageproperties.php"}, {"name": "Imagick::getImageProperty", "synopsis": "Returns the named image property. This method is available if Imagick has been compiled against ImageMagick version 6.3.2 or newer.", "usage": "string Imagick::getImageProperty ( string $name )", "url": "https://secure.php.net/manual/en/imagick.getimageproperty.php"}, {"name": "Imagick::getImageRedPrimary", "synopsis": "Returns the chromaticity red primary point as an array with the keys \"x\" and \"y\".", "usage": "array Imagick::getImageRedPrimary ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageredprimary.php"}, {"name": "Imagick::getImageRegion", "synopsis": "Extracts a region of the image and returns it as a new Imagick object.", "usage": "Imagick Imagick::getImageRegion ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.getimageregion.php"}, {"name": "Imagick::getImageRenderingIntent", "synopsis": "Gets the image rendering intent.", "usage": "int Imagick::getImageRenderingIntent ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagerenderingintent.php"}, {"name": "Imagick::getImageResolution", "synopsis": "Gets the image X and Y resolution.", "usage": "array Imagick::getImageResolution ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageresolution.php"}, {"name": "Imagick::getImagesBlob", "synopsis": "Implements direct to memory image formats. It returns all image sequences as a string. The format of the image determines the format of the returned blob (GIF, JPEG, PNG, etc.). To return a different image format, use Imagick::setImageFormat().", "usage": "string Imagick::getImagesBlob ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagesblob.php"}, {"name": "Imagick::getImageScene", "synopsis": "Gets the image scene.", "usage": "int Imagick::getImageScene ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagescene.php"}, {"name": "Imagick::getImageSignature", "synopsis": "Generates an SHA-256 message digest for the image pixel stream.", "usage": "string Imagick::getImageSignature ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagesignature.php"}, {"name": "Imagick::getImageSize", "synopsis": "Returns the image length in bytes. Deprecated in favour of Imagick::getImageLength()", "usage": "int Imagick::getImageSize ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagesize.php"}, {"name": "Imagick::getImageTicksPerSecond", "synopsis": "Gets the image ticks-per-second.", "usage": "int Imagick::getImageTicksPerSecond ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagetickspersecond.php"}, {"name": "Imagick::getImageTotalInkDensity", "synopsis": "Gets the image total ink density.", "usage": "float Imagick::getImageTotalInkDensity ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagetotalinkdensity.php"}, {"name": "Imagick::getImageType", "synopsis": "Gets the potential image type.", "usage": "int Imagick::getImageType ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagetype.php"}, {"name": "Imagick::getImageUnits", "synopsis": "Gets the image units of resolution.", "usage": "int Imagick::getImageUnits ( void )", "url": "https://secure.php.net/manual/en/imagick.getimageunits.php"}, {"name": "Imagick::getImageVirtualPixelMethod", "synopsis": "Returns the virtual pixel method for the specified image.", "usage": "int Imagick::getImageVirtualPixelMethod ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagevirtualpixelmethod.php"}, {"name": "Imagick::getImageWhitePoint", "synopsis": "Returns the chromaticity white point as an associative array with the keys \"x\" and \"y\".", "usage": "array Imagick::getImageWhitePoint ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagewhitepoint.php"}, {"name": "Imagick::getImageWidth", "synopsis": "Returns the image width.", "usage": "int Imagick::getImageWidth ( void )", "url": "https://secure.php.net/manual/en/imagick.getimagewidth.php"}, {"name": "Imagick::getInterlaceScheme", "synopsis": "Gets the object interlace scheme.", "usage": "int Imagick::getInterlaceScheme ( void )", "url": "https://secure.php.net/manual/en/imagick.getinterlacescheme.php"}, {"name": "Imagick::getIteratorIndex", "synopsis": "Returns the index of the current active image within the Imagick object. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "int Imagick::getIteratorIndex ( void )", "url": "https://secure.php.net/manual/en/imagick.getiteratorindex.php"}, {"name": "Imagick::getNumberImages", "synopsis": "Returns the number of images associated with Imagick object.", "usage": "int Imagick::getNumberImages ( void )", "url": "https://secure.php.net/manual/en/imagick.getnumberimages.php"}, {"name": "Imagick::getOption", "synopsis": "Returns a value associated within the object for the specified key.", "usage": "string Imagick::getOption ( string $key )", "url": "https://secure.php.net/manual/en/imagick.getoption.php"}, {"name": "Imagick::getPackageName", "synopsis": "Returns the ImageMagick package name.", "usage": "string Imagick::getPackageName ( void )", "url": "https://secure.php.net/manual/en/imagick.getpackagename.php"}, {"name": "Imagick::getPage", "synopsis": "Returns the page geometry associated with the Imagick object in an associative array with the keys \"width\", \"height\", \"x\", and \"y\".", "usage": "array Imagick::getPage ( void )", "url": "https://secure.php.net/manual/en/imagick.getpage.php"}, {"name": "Imagick::getPixelIterator", "synopsis": "Returns a MagickPixelIterator.", "usage": "ImagickPixelIterator Imagick::getPixelIterator ( void )", "url": "https://secure.php.net/manual/en/imagick.getpixeliterator.php"}, {"name": "Imagick::getPixelRegionIterator", "synopsis": "Get an ImagickPixelIterator for an image section.", "usage": "ImagickPixelIterator Imagick::getPixelRegionIterator ( int $x , int $y , int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagick.getpixelregioniterator.php"}, {"name": "Imagick::getPointSize", "synopsis": "Returns the objects point size property. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.", "usage": "float Imagick::getPointSize ( void )", "url": "https://secure.php.net/manual/en/imagick.getpointsize.php"}, {"name": "Imagick::getQuantum", "synopsis": "Returns the ImageMagick quantum range as an integer.", "usage": "public static int Imagick::getQuantum ( void )", "url": "https://secure.php.net/manual/en/imagick.getquantum.php"}, {"name": "Imagick::getQuantumDepth", "synopsis": "Returns the Imagick quantum depth as a string.", "usage": "array Imagick::getQuantumDepth ( void )", "url": "https://secure.php.net/manual/en/imagick.getquantumdepth.php"}, {"name": "Imagick::getQuantumRange", "synopsis": "Returns the quantum range for the Imagick instance.", "usage": "array Imagick::getQuantumRange ( void )", "url": "https://secure.php.net/manual/en/imagick.getquantumrange.php"}, {"name": "Imagick::getRegistry", "synopsis": "Get the StringRegistry entry for the named key or false if not set.", "usage": "public static string Imagick::getRegistry ( string $key )", "url": "https://secure.php.net/manual/en/imagick.getregistry.php"}, {"name": "Imagick::getReleaseDate", "synopsis": "Returns the ImageMagick release date as a string.", "usage": "string Imagick::getReleaseDate ( void )", "url": "https://secure.php.net/manual/en/imagick.getreleasedate.php"}, {"name": "Imagick::getResource", "synopsis": "Returns the specified resource's memory usage in megabytes.", "usage": "int Imagick::getResource ( int $type )", "url": "https://secure.php.net/manual/en/imagick.getresource.php"}, {"name": "Imagick::getResourceLimit", "synopsis": "Returns the specified resource limit.", "usage": "int Imagick::getResourceLimit ( int $type )", "url": "https://secure.php.net/manual/en/imagick.getresourcelimit.php"}, {"name": "Imagick::getSamplingFactors", "synopsis": "Gets the horizontal and vertical sampling factor.", "usage": "array Imagick::getSamplingFactors ( void )", "url": "https://secure.php.net/manual/en/imagick.getsamplingfactors.php"}, {"name": "Imagick::getSize", "synopsis": "Get the size in pixels associated with the Imagick object, previously set by Imagick::setSize().", "usage": "array Imagick::getSize ( void )", "url": "https://secure.php.net/manual/en/imagick.getsize.php"}, {"name": "Imagick::getSizeOffset", "synopsis": "Returns the size offset associated with the Imagick object. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "int Imagick::getSizeOffset ( void )", "url": "https://secure.php.net/manual/en/imagick.getsizeoffset.php"}, {"name": "Imagick::getVersion", "synopsis": "Returns the ImageMagick API version as a string and as a number.", "usage": "array Imagick::getVersion ( void )", "url": "https://secure.php.net/manual/en/imagick.getversion.php"}, {"name": "Imagick::haldClutImage", "synopsis": "Replaces colors in the image using a Hald lookup table. Hald images can be created using HALD color coder.", "usage": "public bool Imagick::haldClutImage ( Imagick $clut [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.haldclutimage.php"}, {"name": "Imagick::hasNextImage", "synopsis": "Returns TRUE if the object has more images when traversing the list in the forward direction.", "usage": "bool Imagick::hasNextImage ( void )", "url": "https://secure.php.net/manual/en/imagick.hasnextimage.php"}, {"name": "Imagick::hasPreviousImage", "synopsis": "Returns TRUE if the object has more images when traversing the list in the reverse direction", "usage": "bool Imagick::hasPreviousImage ( void )", "url": "https://secure.php.net/manual/en/imagick.haspreviousimage.php"}, {"name": "Imagick::identifyFormat", "synopsis": "Replaces any embedded formatting characters with the appropriate image property and returns the interpreted text. See http://www.imagemagick.org/script/escape.php for escape sequences.", "usage": "public string Imagick::identifyFormat ( string $embedText )", "url": "https://secure.php.net/manual/en/imagick.identifyformat.php"}, {"name": "Imagick::identifyImage", "synopsis": "Identifies an image and returns the attributes. Attributes include the image width, height, size, and others.", "usage": "array Imagick::identifyImage ([ bool $appendRawOutput = FALSE ] )", "url": "https://secure.php.net/manual/en/imagick.identifyimage.php"}, {"name": "Imagick::implodeImage", "synopsis": "Creates a new image that is a copy of an existing one with the image pixels \"imploded\" by the specified percentage.", "usage": "bool Imagick::implodeImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.implodeimage.php"}, {"name": "Imagick::importImagePixels", "synopsis": "Imports pixels from an array into an image. The map is usually 'RGB'. This method imposes the following constraints for the parameters: amount of pixels in the array must match width x height x length of the map. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.", "usage": "public bool Imagick::importImagePixels ( int $x , int $y , int $width , int $height , string $map , int $storage , array $pixels )", "url": "https://secure.php.net/manual/en/imagick.importimagepixels.php"}, {"name": "Imagick::inverseFourierTransformImage", "synopsis": "Implements the inverse discrete Fourier transform (DFT) of the image either as a magnitude / phase or real / imaginary image pair.", "usage": "public bool Imagick::inverseFourierTransformImage ( Imagick $complement , bool $magnitude )", "url": "https://secure.php.net/manual/en/imagick.inversefouriertransformimage.php"}, {"name": "Imagick::labelImage", "synopsis": "Adds a label to an image.", "usage": "bool Imagick::labelImage ( string $label )", "url": "https://secure.php.net/manual/en/imagick.labelimage.php"}, {"name": "Imagick::levelImage", "synopsis": "Adjusts the levels of an image by scaling the colors falling between specified white and black points to the full available quantum range. The parameters provided represent the black, mid, and white points. The black point specifies the darkest color in the image. Colors darker than the black point are set to zero. Mid point specifies a gamma correction to apply to the image. White point specifies the lightest color in the image. Colors brighter than the white point are set to the maximum quantum value.", "usage": "bool Imagick::levelImage ( float $blackPoint , float $gamma , float $whitePoint [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.levelimage.php"}, {"name": "Imagick::linearStretchImage", "synopsis": "Stretches with saturation the image intensity.", "usage": "bool Imagick::linearStretchImage ( float $blackPoint , float $whitePoint )", "url": "https://secure.php.net/manual/en/imagick.linearstretchimage.php"}, {"name": "Imagick::liquidRescaleImage", "synopsis": "This method scales the images using liquid rescaling method. This method is an implementation of a technique called seam carving. In order for this method to work as expected ImageMagick must be compiled with liblqr support. This method is available if Imagick has been compiled against ImageMagick version 6.3.9 or newer.", "usage": "bool Imagick::liquidRescaleImage ( int $width , int $height , float $delta_x , float $rigidity )", "url": "https://secure.php.net/manual/en/imagick.liquidrescaleimage.php"}, {"name": "Imagick::listRegistry", "synopsis": "List all the registry settings. Returns an array of all the key/value pairs in the registry", "usage": "public static array Imagick::listRegistry ( void )", "url": "https://secure.php.net/manual/en/imagick.listregistry.php"}, {"name": "Imagick::magnifyImage", "synopsis": "Is a convenience method that scales an image proportionally to twice its original size.", "usage": "bool Imagick::magnifyImage ( void )", "url": "https://secure.php.net/manual/en/imagick.magnifyimage.php"}, {"name": "Imagick::mapImage", "synopsis": null, "usage": "bool Imagick::mapImage ( Imagick $map , bool $dither )", "url": "https://secure.php.net/manual/en/imagick.mapimage.php"}, {"name": "Imagick::matteFloodfillImage", "synopsis": "Changes the transparency value of any pixel that matches target and is an immediate neighbor. If the method FillToBorderMethod is specified, the transparency value is changed for any neighbor pixel that does not match the bordercolor member of image.", "usage": "bool Imagick::matteFloodfillImage ( float $alpha , float $fuzz , mixed $bordercolor , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.mattefloodfillimage.php"}, {"name": "Imagick::medianFilterImage", "synopsis": "Applies a digital filter that improves the quality of a noisy image. Each pixel is replaced by the median in a set of neighboring pixels as defined by radius.", "usage": "bool Imagick::medianFilterImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.medianfilterimage.php"}, {"name": "Imagick::mergeImageLayers", "synopsis": "Merges image layers into one. This method is useful when working with image formats that use multiple layers such as PSD. The merging is controlled using the layer_method which defines how the layers are merged. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.", "usage": "Imagick Imagick::mergeImageLayers ( int $layer_method )", "url": "https://secure.php.net/manual/en/imagick.mergeimagelayers.php"}, {"name": "Imagick::minifyImage", "synopsis": "Is a convenience method that scales an image proportionally to one-half its original size", "usage": "bool Imagick::minifyImage ( void )", "url": "https://secure.php.net/manual/en/imagick.minifyimage.php"}, {"name": "Imagick::modulateImage", "synopsis": "Lets you control the brightness, saturation, and hue of an image. Hue is the percentage of absolute rotation from the current position. For example 50 results in a counter-clockwise rotation of 90 degrees, 150 results in a clockwise rotation of 90 degrees, with 0 and 200 both resulting in a rotation of 180 degrees.", "usage": "bool Imagick::modulateImage ( float $brightness , float $saturation , float $hue )", "url": "https://secure.php.net/manual/en/imagick.modulateimage.php"}, {"name": "Imagick::montageImage", "synopsis": "Creates a composite image by combining several separate images. The images are tiled on the composite image with the name of the image optionally appearing just below the individual tile.", "usage": "Imagick Imagick::montageImage ( ImagickDraw $draw , string $tile_geometry , string $thumbnail_geometry , int $mode , string $frame )", "url": "https://secure.php.net/manual/en/imagick.montageimage.php"}, {"name": "Imagick::morphImages", "synopsis": "Method morphs a set of images. Both the image pixels and size are linearly interpolated to give the appearance of a meta-morphosis from one image to the next.", "usage": "Imagick Imagick::morphImages ( int $number_frames )", "url": "https://secure.php.net/manual/en/imagick.morphimages.php"}, {"name": "Imagick::morphology", "synopsis": "Applies a user supplied kernel to the image according to the given morphology method.", "usage": "public bool Imagick::morphology ( int $morphologyMethod , int $iterations , ImagickKernel $ImagickKernel [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.morphology.php"}, {"name": "Imagick::mosaicImages", "synopsis": "Inlays an image sequence to form a single coherent picture. It returns a wand with each image in the sequence composited at the location defined by the page offset of the image.", "usage": "Imagick Imagick::mosaicImages ( void )", "url": "https://secure.php.net/manual/en/imagick.mosaicimages.php"}, {"name": "Imagick::motionBlurImage", "synopsis": "Simulates motion blur. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and MotionBlurImage() selects a suitable radius for you. Angle gives the angle of the blurring motion.", "usage": "bool Imagick::motionBlurImage ( float $radius , float $sigma , float $angle [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.motionblurimage.php"}, {"name": "Imagick::negateImage", "synopsis": "Negates the colors in the reference image. The Grayscale option means that only grayscale values within the image are negated.", "usage": "bool Imagick::negateImage ( bool $gray [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.negateimage.php"}, {"name": "Imagick::newImage", "synopsis": "Creates a new image and associates ImagickPixel value as background color", "usage": "bool Imagick::newImage ( int $cols , int $rows , mixed $background [, string $format ] )", "url": "https://secure.php.net/manual/en/imagick.newimage.php"}, {"name": "Imagick::newPseudoImage", "synopsis": "Creates a new image using ImageMagick pseudo-formats.", "usage": "bool Imagick::newPseudoImage ( int $columns , int $rows , string $pseudoString )", "url": "https://secure.php.net/manual/en/imagick.newpseudoimage.php"}, {"name": "Imagick::nextImage", "synopsis": "Associates the next image in the image list with an Imagick object.", "usage": "bool Imagick::nextImage ( void )", "url": "https://secure.php.net/manual/en/imagick.nextimage.php"}, {"name": "Imagick::normalizeImage", "synopsis": "Enhances the contrast of a color image by adjusting the pixels color to span the entire range of colors available.", "usage": "bool Imagick::normalizeImage ([ int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.normalizeimage.php"}, {"name": "Imagick::oilPaintImage", "synopsis": "Applies a special effect filter that simulates an oil painting. Each pixel is replaced by the most frequent color occurring in a circular region defined by radius.", "usage": "bool Imagick::oilPaintImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.oilpaintimage.php"}, {"name": "Imagick::opaquePaintImage", "synopsis": "Changes any pixel that matches color with the color defined by fill. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.", "usage": "bool Imagick::opaquePaintImage ( mixed $target , mixed $fill , float $fuzz , bool $invert [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.opaquepaintimage.php"}, {"name": "Imagick::optimizeImageLayers", "synopsis": "Compares each image the GIF disposed forms of the previous image in the sequence. From this it attempts to select the smallest cropped image to replace each frame, while preserving the results of the animation. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::optimizeImageLayers ( void )", "url": "https://secure.php.net/manual/en/imagick.optimizeimagelayers.php"}, {"name": "Imagick::orderedPosterizeImage", "synopsis": "Performs an ordered dither based on a number of pre-defined dithering threshold maps, but over multiple intensity levels, which can be different for different channels, according to the input arguments. This method is available if Imagick has been compiled against ImageMagick version 6.3.1 or newer.", "usage": "bool Imagick::orderedPosterizeImage ( string $threshold_map [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.orderedposterizeimage.php"}, {"name": "Imagick::paintFloodfillImage", "synopsis": "Changes the color value of any pixel that matches target and is an immediate neighbor. As of ImageMagick 6.3.8 this method has been deprecated and Imagick::floodfillPaintImage() should be used instead.", "usage": "bool Imagick::paintFloodfillImage ( mixed $fill , float $fuzz , mixed $bordercolor , int $x , int $y [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.paintfloodfillimage.php"}, {"name": "Imagick::paintOpaqueImage", "synopsis": "Changes any pixel that matches color with the color defined by fill.", "usage": "bool Imagick::paintOpaqueImage ( mixed $target , mixed $fill , float $fuzz [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.paintopaqueimage.php"}, {"name": "Imagick::paintTransparentImage", "synopsis": "Changes any pixel that matches color with the color defined by fill.", "usage": "bool Imagick::paintTransparentImage ( mixed $target , float $alpha , float $fuzz )", "url": "https://secure.php.net/manual/en/imagick.painttransparentimage.php"}, {"name": "Imagick::pingImage", "synopsis": "This method can be used to query image width, height, size, and format without reading the whole image in to memory.", "usage": "bool Imagick::pingImage ( string $filename )", "url": "https://secure.php.net/manual/en/imagick.pingimage.php"}, {"name": "Imagick::pingImageBlob", "synopsis": "This method can be used to query image width, height, size, and format without reading the whole image to memory. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::pingImageBlob ( string $image )", "url": "https://secure.php.net/manual/en/imagick.pingimageblob.php"}, {"name": "Imagick::pingImageFile", "synopsis": "This method can be used to query image width, height, size, and format without reading the whole image to memory. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::pingImageFile ( resource $filehandle [, string $fileName ] )", "url": "https://secure.php.net/manual/en/imagick.pingimagefile.php"}, {"name": "Imagick::polaroidImage", "synopsis": "Simulates a Polaroid picture. This method is available if Imagick has been compiled against ImageMagick version 6.3.2 or newer.", "usage": "bool Imagick::polaroidImage ( ImagickDraw $properties , float $angle )", "url": "https://secure.php.net/manual/en/imagick.polaroidimage.php"}, {"name": "Imagick::posterizeImage", "synopsis": "Reduces the image to a limited number of color level.", "usage": "bool Imagick::posterizeImage ( int $levels , bool $dither )", "url": "https://secure.php.net/manual/en/imagick.posterizeimage.php"}, {"name": "Imagick::previewImages", "synopsis": "Tiles 9 thumbnails of the specified image with an image processing operation applied at varying strengths. This is helpful to quickly pin-point an appropriate parameter for an image processing operation.", "usage": "bool Imagick::previewImages ( int $preview )", "url": "https://secure.php.net/manual/en/imagick.previewimages.php"}, {"name": "Imagick::previousImage", "synopsis": "Assocates the previous image in an image list with the Imagick object.", "usage": "bool Imagick::previousImage ( void )", "url": "https://secure.php.net/manual/en/imagick.previousimage.php"}, {"name": "Imagick::profileImage", "synopsis": "Adds or removes a ICC, IPTC, or generic profile from an image. If the profile is NULL, it is removed from the image otherwise added. Use a name of '*' and a profile of NULL to remove all profiles from the image.", "usage": "bool Imagick::profileImage ( string $name , string $profile )", "url": "https://secure.php.net/manual/en/imagick.profileimage.php"}, {"name": "Imagick::quantizeImage", "synopsis": null, "usage": "bool Imagick::quantizeImage ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )", "url": "https://secure.php.net/manual/en/imagick.quantizeimage.php"}, {"name": "Imagick::quantizeImages", "synopsis": null, "usage": "bool Imagick::quantizeImages ( int $numberColors , int $colorspace , int $treedepth , bool $dither , bool $measureError )", "url": "https://secure.php.net/manual/en/imagick.quantizeimages.php"}, {"name": "Imagick::queryFontMetrics", "synopsis": "Returns a multi-dimensional array representing the font metrics.", "usage": "array Imagick::queryFontMetrics ( ImagickDraw $properties , string $text [, bool $multiline ] )", "url": "https://secure.php.net/manual/en/imagick.queryfontmetrics.php"}, {"name": "Imagick::queryFonts", "synopsis": "Returns the configured fonts.", "usage": "array Imagick::queryFonts ([ string $pattern = \"*\" ] )", "url": "https://secure.php.net/manual/en/imagick.queryfonts.php"}, {"name": "Imagick::queryFormats", "synopsis": "Returns formats supported by Imagick.", "usage": "array Imagick::queryFormats ([ string $pattern = \"*\" ] )", "url": "https://secure.php.net/manual/en/imagick.queryformats.php"}, {"name": "Imagick::radialBlurImage", "synopsis": "Radial blurs an image.", "usage": "bool Imagick::radialBlurImage ( float $angle [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.radialblurimage.php"}, {"name": "Imagick::raiseImage", "synopsis": "Creates a simulated three-dimensional button-like effect by lightening and darkening the edges of the image. Members width and height of raise_info define the width of the vertical and horizontal edge of the effect.", "usage": "bool Imagick::raiseImage ( int $width , int $height , int $x , int $y , bool $raise )", "url": "https://secure.php.net/manual/en/imagick.raiseimage.php"}, {"name": "Imagick::randomThresholdImage", "synopsis": "Changes the value of individual pixels based on the intensity of each pixel compared to threshold. The result is a high-contrast, two color image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::randomThresholdImage ( float $low , float $high [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.randomthresholdimage.php"}, {"name": "Imagick::readImage", "synopsis": "Reads image from filename", "usage": "bool Imagick::readImage ( string $filename )", "url": "https://secure.php.net/manual/en/imagick.readimage.php"}, {"name": "Imagick::readImageBlob", "synopsis": "Reads image from a binary string", "usage": "bool Imagick::readImageBlob ( string $image [, string $filename ] )", "url": "https://secure.php.net/manual/en/imagick.readimageblob.php"}, {"name": "Imagick::readImageFile", "synopsis": "Reads image from open filehandle", "usage": "bool Imagick::readImageFile ( resource $filehandle [, string $fileName = NULL ] )", "url": "https://secure.php.net/manual/en/imagick.readimagefile.php"}, {"name": "Imagick::readImages", "synopsis": "Reads image from an array of filenames. All the images are held in a single Imagick object.", "usage": "public bool Imagick::readImages ( array $filenames )", "url": "https://secure.php.net/manual/en/imagick.readimages.php"}, {"name": "Imagick::recolorImage", "synopsis": "Translate, scale, shear, or rotate image colors. This method supports variable sized matrices but normally 5x5 matrix is used for RGBA and 6x6 is used for CMYK. The last row should contain the normalized values. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::recolorImage ( array $matrix )", "url": "https://secure.php.net/manual/en/imagick.recolorimage.php"}, {"name": "Imagick::reduceNoiseImage", "synopsis": "Smooths the contours of an image while still preserving edge information. The algorithm works by replacing each pixel with its neighbor closest in value. A neighbor is defined by radius. Use a radius of 0 and Imagick::reduceNoiseImage() selects a suitable radius for you.", "usage": "bool Imagick::reduceNoiseImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.reducenoiseimage.php"}, {"name": "Imagick::remapImage", "synopsis": "Replaces colors an image with those defined by replacement. The colors are replaced with the closest possible color. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.", "usage": "public bool Imagick::remapImage ( Imagick $replacement , int $DITHER )", "url": "https://secure.php.net/manual/en/imagick.remapimage.php"}, {"name": "Imagick::removeImage", "synopsis": "Removes an image from the image list.", "usage": "bool Imagick::removeImage ( void )", "url": "https://secure.php.net/manual/en/imagick.removeimage.php"}, {"name": "Imagick::removeImageProfile", "synopsis": "Removes the named image profile and returns it.", "usage": "string Imagick::removeImageProfile ( string $name )", "url": "https://secure.php.net/manual/en/imagick.removeimageprofile.php"}, {"name": "Imagick::render", "synopsis": "Renders all preceding drawing commands.", "usage": "bool Imagick::render ( void )", "url": "https://secure.php.net/manual/en/imagick.render.php"}, {"name": "Imagick::resampleImage", "synopsis": "Resample image to desired resolution.", "usage": "bool Imagick::resampleImage ( float $x_resolution , float $y_resolution , int $filter , float $blur )", "url": "https://secure.php.net/manual/en/imagick.resampleimage.php"}, {"name": "Imagick::resetImagePage", "synopsis": "The page definition as a string. The string is in format WxH+x+y. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::resetImagePage ( string $page )", "url": "https://secure.php.net/manual/en/imagick.resetimagepage.php"}, {"name": "Imagick::resizeImage", "synopsis": "Scales an image to the desired dimensions with a filter.", "usage": "bool Imagick::resizeImage ( int $columns , int $rows , int $filter , float $blur [, bool $bestfit = FALSE [, bool $legacy = FALSE ]] )", "url": "https://secure.php.net/manual/en/imagick.resizeimage.php"}, {"name": "Imagick::rollImage", "synopsis": "Offsets an image as defined by x and y.", "usage": "bool Imagick::rollImage ( int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.rollimage.php"}, {"name": "Imagick::rotateImage", "synopsis": "Rotates an image the specified number of degrees. Empty triangles left over from rotating the image are filled with the background color.", "usage": "bool Imagick::rotateImage ( mixed $background , float $degrees )", "url": "https://secure.php.net/manual/en/imagick.rotateimage.php"}, {"name": "Imagick::rotationalBlurImage", "synopsis": "Rotational blurs an image.", "usage": "public bool Imagick::rotationalBlurImage ( float $angle [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.rotationalblurimage.php"}, {"name": "Imagick::roundCorners", "synopsis": "Rounds image corners. The first two parameters control the amount of rounding and the three last parameters can be used to fine-tune the rounding process. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::roundCorners ( float $x_rounding , float $y_rounding [, float $stroke_width = 10 [, float $displace = 5 [, float $size_correction = -6 ]]] )", "url": "https://secure.php.net/manual/en/imagick.roundcorners.php"}, {"name": "Imagick::sampleImage", "synopsis": "Scales an image to the desired dimensions with pixel sampling. Unlike other scaling methods, this method does not introduce any additional color into the scaled image.", "usage": "bool Imagick::sampleImage ( int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagick.sampleimage.php"}, {"name": "Imagick::scaleImage", "synopsis": "Scales the size of an image to the given dimensions. The other parameter will be calculated if 0 is passed as either param.", "usage": "bool Imagick::scaleImage ( int $cols , int $rows [, bool $bestfit = FALSE [, bool $legacy = FALSE ]] )", "url": "https://secure.php.net/manual/en/imagick.scaleimage.php"}, {"name": "Imagick::segmentImage", "synopsis": "Analyses the image and identifies units that are similar. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.", "usage": "public bool Imagick::segmentImage ( int $COLORSPACE , float $cluster_threshold , float $smooth_threshold [, bool $verbose = FALSE ] )", "url": "https://secure.php.net/manual/en/imagick.segmentimage.php"}, {"name": "Imagick::selectiveBlurImage", "synopsis": "Selectively blur an image within a contrast threshold. It is similar to the unsharpen mask that sharpens everything with contrast above a certain threshold.", "usage": "public bool Imagick::selectiveBlurImage ( float $radius , float $sigma , float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.selectiveblurimage.php"}, {"name": "Imagick::separateImageChannel", "synopsis": "Separates a channel from the image and returns a grayscale image. A channel is a particular color component of each pixel in the image.", "usage": "bool Imagick::separateImageChannel ( int $channel )", "url": "https://secure.php.net/manual/en/imagick.separateimagechannel.php"}, {"name": "Imagick::sepiaToneImage", "synopsis": "Applies a special effect to the image, similar to the effect achieved in a photo darkroom by sepia toning. Threshold ranges from 0 to QuantumRange and is a measure of the extent of the sepia toning. A threshold of 80 is a good starting point for a reasonable tone.", "usage": "bool Imagick::sepiaToneImage ( float $threshold )", "url": "https://secure.php.net/manual/en/imagick.sepiatoneimage.php"}, {"name": "Imagick::setBackgroundColor", "synopsis": "Sets the object's default background color.", "usage": "bool Imagick::setBackgroundColor ( mixed $background )", "url": "https://secure.php.net/manual/en/imagick.setbackgroundcolor.php"}, {"name": "Imagick::setColorspace", "synopsis": "Sets the global colorspace value for the object. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.", "usage": "bool Imagick::setColorspace ( int $COLORSPACE )", "url": "https://secure.php.net/manual/en/imagick.setcolorspace.php"}, {"name": "Imagick::setCompression", "synopsis": "Sets the object's default compression type", "usage": "bool Imagick::setCompression ( int $compression )", "url": "https://secure.php.net/manual/en/imagick.setcompression.php"}, {"name": "Imagick::setCompressionQuality", "synopsis": "Sets the object's default compression quality.", "usage": "bool Imagick::setCompressionQuality ( int $quality )", "url": "https://secure.php.net/manual/en/imagick.setcompressionquality.php"}, {"name": "Imagick::setFilename", "synopsis": "Sets the filename before you read or write an image file.", "usage": "bool Imagick::setFilename ( string $filename )", "url": "https://secure.php.net/manual/en/imagick.setfilename.php"}, {"name": "Imagick::setFirstIterator", "synopsis": "Sets the Imagick iterator to the first image.", "usage": "bool Imagick::setFirstIterator ( void )", "url": "https://secure.php.net/manual/en/imagick.setfirstiterator.php"}, {"name": "Imagick::setFont", "synopsis": "Sets object's font property. This method can be used for example to set font for caption: pseudo-format. The font needs to be configured in ImageMagick configuration or a file by the name of font must exist. This method should not be confused with ImagickDraw::setFont() which sets the font for a specific ImagickDraw object. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.", "usage": "bool Imagick::setFont ( string $font )", "url": "https://secure.php.net/manual/en/imagick.setfont.php"}, {"name": "Imagick::setFormat", "synopsis": "Sets the format of the Imagick object.", "usage": "bool Imagick::setFormat ( string $format )", "url": "https://secure.php.net/manual/en/imagick.setformat.php"}, {"name": "Imagick::setGravity", "synopsis": "Sets the global gravity property for the Imagick object. This method is available if Imagick has been compiled against ImageMagick version 6.4.0 or newer.", "usage": "bool Imagick::setGravity ( int $gravity )", "url": "https://secure.php.net/manual/en/imagick.setgravity.php"}, {"name": "Imagick::setImage", "synopsis": "Replaces the current image sequence with the image from replace object.", "usage": "bool Imagick::setImage ( Imagick $replace )", "url": "https://secure.php.net/manual/en/imagick.setimage.php"}, {"name": "Imagick::setImageAlphaChannel", "synopsis": "Activate or deactivate image alpha channel. The mode is one of the Imagick::ALPHACHANNEL_* constants. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.", "usage": "bool Imagick::setImageAlphaChannel ( int $mode )", "url": "https://secure.php.net/manual/en/imagick.setimagealphachannel.php"}, {"name": "Imagick::setImageArtifact", "synopsis": "Associates an artifact with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.", "usage": "bool Imagick::setImageArtifact ( string $artifact , string $value )", "url": "https://secure.php.net/manual/en/imagick.setimageartifact.php"}, {"name": "Imagick::setImageAttribute", "synopsis": "", "usage": "public bool Imagick::setImageAttribute ( string $key , string $value )", "url": "https://secure.php.net/manual/en/imagick.setimageattribute.php"}, {"name": "Imagick::setImageBackgroundColor", "synopsis": "Sets the image background color.", "usage": "bool Imagick::setImageBackgroundColor ( mixed $background )", "url": "https://secure.php.net/manual/en/imagick.setimagebackgroundcolor.php"}, {"name": "Imagick::setImageBias", "synopsis": "Sets the image bias for any method that convolves an image (e.g. Imagick::ConvolveImage()).", "usage": "bool Imagick::setImageBias ( float $bias )", "url": "https://secure.php.net/manual/en/imagick.setimagebias.php"}, {"name": "Imagick::setImageBiasQuantum", "synopsis": "", "usage": "public void Imagick::setImageBiasQuantum ( string $bias )", "url": "https://secure.php.net/manual/en/imagick.setimagebiasquantum.php"}, {"name": "Imagick::setImageBluePrimary", "synopsis": "Sets the image chromaticity blue primary point.", "usage": "bool Imagick::setImageBluePrimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagick.setimageblueprimary.php"}, {"name": "Imagick::setImageBorderColor", "synopsis": "Sets the image border color.", "usage": "bool Imagick::setImageBorderColor ( mixed $border )", "url": "https://secure.php.net/manual/en/imagick.setimagebordercolor.php"}, {"name": "Imagick::setImageChannelDepth", "synopsis": "Sets the depth of a particular image channel.", "usage": "bool Imagick::setImageChannelDepth ( int $channel , int $depth )", "url": "https://secure.php.net/manual/en/imagick.setimagechanneldepth.php"}, {"name": "Imagick::setImageClipMask", "synopsis": "Sets image clip mask from another Imagick object. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::setImageClipMask ( Imagick $clip_mask )", "url": "https://secure.php.net/manual/en/imagick.setimageclipmask.php"}, {"name": "Imagick::setImageColormapColor", "synopsis": "Sets the color of the specified colormap index.", "usage": "bool Imagick::setImageColormapColor ( int $index , ImagickPixel $color )", "url": "https://secure.php.net/manual/en/imagick.setimagecolormapcolor.php"}, {"name": "Imagick::setImageColorspace", "synopsis": "Sets the image colorspace. This method should be used when creating new images. To change the colorspace of an existing image, you should use Imagick::transformImageColorspace().", "usage": "bool Imagick::setImageColorspace ( int $colorspace )", "url": "https://secure.php.net/manual/en/imagick.setimagecolorspace.php"}, {"name": "Imagick::setImageCompose", "synopsis": "Sets the image composite operator, useful for specifying how to composite the image thumbnail when using the Imagick::montageImage() method.", "usage": "bool Imagick::setImageCompose ( int $compose )", "url": "https://secure.php.net/manual/en/imagick.setimagecompose.php"}, {"name": "Imagick::setImageCompression", "synopsis": "", "usage": "bool Imagick::setImageCompression ( int $compression )", "url": "https://secure.php.net/manual/en/imagick.setimagecompression.php"}, {"name": "Imagick::setImageCompressionQuality", "synopsis": "Sets the image compression quality.", "usage": "bool Imagick::setImageCompressionQuality ( int $quality )", "url": "https://secure.php.net/manual/en/imagick.setimagecompressionquality.php"}, {"name": "Imagick::setImageDelay", "synopsis": "Sets the image delay. For an animated image this is the amount of time that this frame of the image should be displayed for, before displaying the next frame.", "usage": "bool Imagick::setImageDelay ( int $delay )", "url": "https://secure.php.net/manual/en/imagick.setimagedelay.php"}, {"name": "Imagick::setImageDepth", "synopsis": "Sets the image depth.", "usage": "bool Imagick::setImageDepth ( int $depth )", "url": "https://secure.php.net/manual/en/imagick.setimagedepth.php"}, {"name": "Imagick::setImageDispose", "synopsis": "Sets the image disposal method.", "usage": "bool Imagick::setImageDispose ( int $dispose )", "url": "https://secure.php.net/manual/en/imagick.setimagedispose.php"}, {"name": "Imagick::setImageExtent", "synopsis": "Sets the image size (i.e. columns & rows).", "usage": "bool Imagick::setImageExtent ( int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagick.setimageextent.php"}, {"name": "Imagick::setImageFilename", "synopsis": "Sets the filename of a particular image in a sequence.", "usage": "bool Imagick::setImageFilename ( string $filename )", "url": "https://secure.php.net/manual/en/imagick.setimagefilename.php"}, {"name": "Imagick::setImageFormat", "synopsis": "Sets the format of a particular image in a sequence.", "usage": "bool Imagick::setImageFormat ( string $format )", "url": "https://secure.php.net/manual/en/imagick.setimageformat.php"}, {"name": "Imagick::setImageGamma", "synopsis": "Sets the image gamma.", "usage": "bool Imagick::setImageGamma ( float $gamma )", "url": "https://secure.php.net/manual/en/imagick.setimagegamma.php"}, {"name": "Imagick::setImageGravity", "synopsis": "Sets the gravity property for the current image. This method can be used to set the gravity property for a single image sequence. This method is available if Imagick has been compiled against ImageMagick version 6.4.4 or newer.", "usage": "bool Imagick::setImageGravity ( int $gravity )", "url": "https://secure.php.net/manual/en/imagick.setimagegravity.php"}, {"name": "Imagick::setImageGreenPrimary", "synopsis": "Sets the image chromaticity green primary point.", "usage": "bool Imagick::setImageGreenPrimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagick.setimagegreenprimary.php"}, {"name": "Imagick::setImageIndex", "synopsis": "Set the iterator to the position in the image list specified with the index parameter.", "usage": "bool Imagick::setImageIndex ( int $index )", "url": "https://secure.php.net/manual/en/imagick.setimageindex.php"}, {"name": "Imagick::setImageInterlaceScheme", "synopsis": "Sets the image compression.", "usage": "bool Imagick::setImageInterlaceScheme ( int $interlace_scheme )", "url": "https://secure.php.net/manual/en/imagick.setimageinterlacescheme.php"}, {"name": "Imagick::setImageInterpolateMethod", "synopsis": "Sets the image interpolate pixel method.", "usage": "bool Imagick::setImageInterpolateMethod ( int $method )", "url": "https://secure.php.net/manual/en/imagick.setimageinterpolatemethod.php"}, {"name": "Imagick::setImageIterations", "synopsis": "Sets the number of iterations an animated image is repeated.", "usage": "bool Imagick::setImageIterations ( int $iterations )", "url": "https://secure.php.net/manual/en/imagick.setimageiterations.php"}, {"name": "Imagick::setImageMatte", "synopsis": "Sets the image matte channel. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::setImageMatte ( bool $matte )", "url": "https://secure.php.net/manual/en/imagick.setimagematte.php"}, {"name": "Imagick::setImageMatteColor", "synopsis": "Sets the image matte color.", "usage": "bool Imagick::setImageMatteColor ( mixed $matte )", "url": "https://secure.php.net/manual/en/imagick.setimagemattecolor.php"}, {"name": "Imagick::setImageOpacity", "synopsis": "Sets the image to the specified opacity level. This method is available if Imagick has been compiled against ImageMagick version 6.3.1 or newer. This method operates on all channels, which means that for example opacity value of 0.5 will set all transparent areas to partially opaque. To add transparency to areas that are not already transparent use Imagick::evaluateImage()", "usage": "bool Imagick::setImageOpacity ( float $opacity )", "url": "https://secure.php.net/manual/en/imagick.setimageopacity.php"}, {"name": "Imagick::setImageOrientation", "synopsis": "Sets the image orientation.", "usage": "bool Imagick::setImageOrientation ( int $orientation )", "url": "https://secure.php.net/manual/en/imagick.setimageorientation.php"}, {"name": "Imagick::setImagePage", "synopsis": "Sets the page geometry of the image.", "usage": "bool Imagick::setImagePage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.setimagepage.php"}, {"name": "Imagick::setImageProfile", "synopsis": "Adds a named profile to the Imagick object. If a profile with the same name already exists, it is replaced. This method differs from the Imagick::ProfileImage() method in that it does not apply any CMS color profiles.", "usage": "bool Imagick::setImageProfile ( string $name , string $profile )", "url": "https://secure.php.net/manual/en/imagick.setimageprofile.php"}, {"name": "Imagick::setImageProperty", "synopsis": "Sets a named property to the image. This method is available if Imagick has been compiled against ImageMagick version 6.3.2 or newer.", "usage": "bool Imagick::setImageProperty ( string $name , string $value )", "url": "https://secure.php.net/manual/en/imagick.setimageproperty.php"}, {"name": "Imagick::setImageRedPrimary", "synopsis": "Sets the image chromaticity red primary point.", "usage": "bool Imagick::setImageRedPrimary ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagick.setimageredprimary.php"}, {"name": "Imagick::setImageRenderingIntent", "synopsis": "Sets the image rendering intent.", "usage": "bool Imagick::setImageRenderingIntent ( int $rendering_intent )", "url": "https://secure.php.net/manual/en/imagick.setimagerenderingintent.php"}, {"name": "Imagick::setImageResolution", "synopsis": "Sets the image resolution.", "usage": "bool Imagick::setImageResolution ( float $x_resolution , float $y_resolution )", "url": "https://secure.php.net/manual/en/imagick.setimageresolution.php"}, {"name": "Imagick::setImageScene", "synopsis": "Sets the image scene.", "usage": "bool Imagick::setImageScene ( int $scene )", "url": "https://secure.php.net/manual/en/imagick.setimagescene.php"}, {"name": "Imagick::setImageTicksPerSecond", "synopsis": "Adjust the amount of time that a frame of an animated image is displayed for.", "usage": "bool Imagick::setImageTicksPerSecond ( int $ticks_per_second )", "url": "https://secure.php.net/manual/en/imagick.setimagetickspersecond.php"}, {"name": "Imagick::setImageType", "synopsis": "Sets the image type.", "usage": "bool Imagick::setImageType ( int $image_type )", "url": "https://secure.php.net/manual/en/imagick.setimagetype.php"}, {"name": "Imagick::setImageUnits", "synopsis": "Sets the image units of resolution.", "usage": "bool Imagick::setImageUnits ( int $units )", "url": "https://secure.php.net/manual/en/imagick.setimageunits.php"}, {"name": "Imagick::setImageVirtualPixelMethod", "synopsis": "Sets the image virtual pixel method.", "usage": "bool Imagick::setImageVirtualPixelMethod ( int $method )", "url": "https://secure.php.net/manual/en/imagick.setimagevirtualpixelmethod.php"}, {"name": "Imagick::setImageWhitePoint", "synopsis": "Sets the image chromaticity white point.", "usage": "bool Imagick::setImageWhitePoint ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagick.setimagewhitepoint.php"}, {"name": "Imagick::setInterlaceScheme", "synopsis": "Sets the image compression.", "usage": "bool Imagick::setInterlaceScheme ( int $interlace_scheme )", "url": "https://secure.php.net/manual/en/imagick.setinterlacescheme.php"}, {"name": "Imagick::setIteratorIndex", "synopsis": "Set the iterator to the position in the image list specified with the index parameter. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::setIteratorIndex ( int $index )", "url": "https://secure.php.net/manual/en/imagick.setiteratorindex.php"}, {"name": "Imagick::setLastIterator", "synopsis": "Sets the Imagick iterator to the last image.", "usage": "bool Imagick::setLastIterator ( void )", "url": "https://secure.php.net/manual/en/imagick.setlastiterator.php"}, {"name": "Imagick::setOption", "synopsis": "Associates one or more options with the wand.", "usage": "bool Imagick::setOption ( string $key , string $value )", "url": "https://secure.php.net/manual/en/imagick.setoption.php"}, {"name": "Imagick::setPage", "synopsis": "Sets the page geometry of the Imagick object.", "usage": "bool Imagick::setPage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.setpage.php"}, {"name": "Imagick::setPointSize", "synopsis": "Sets object's point size property. This method can be used for example to set font size for caption: pseudo-format. This method is available if Imagick has been compiled against ImageMagick version 6.3.7 or newer.", "usage": "bool Imagick::setPointSize ( float $point_size )", "url": "https://secure.php.net/manual/en/imagick.setpointsize.php"}, {"name": "Imagick::setProgressMonitor", "synopsis": "Set a callback that will be called during the processing of the Imagick image.", "usage": "public bool Imagick::setProgressMonitor ( callable $callback )", "url": "https://secure.php.net/manual/en/imagick.setprogressmonitor.php"}, {"name": "Imagick::setRegistry", "synopsis": "Sets the ImageMagick registry entry named key to value. This is most useful for setting \"temporary-path\" which controls where ImageMagick creates temporary images e.g. while processing PDFs.", "usage": "public static bool Imagick::setRegistry ( string $key , string $value )", "url": "https://secure.php.net/manual/en/imagick.setregistry.php"}, {"name": "Imagick::setResolution", "synopsis": "Sets the image resolution.", "usage": "bool Imagick::setResolution ( float $x_resolution , float $y_resolution )", "url": "https://secure.php.net/manual/en/imagick.setresolution.php"}, {"name": "Imagick::setResourceLimit", "synopsis": "This method is used to modify the resource limits of the underlying ImageMagick library.", "usage": "bool Imagick::setResourceLimit ( int $type , int $limit )", "url": "https://secure.php.net/manual/en/imagick.setresourcelimit.php"}, {"name": "Imagick::setSamplingFactors", "synopsis": "Sets the image sampling factors.", "usage": "bool Imagick::setSamplingFactors ( array $factors )", "url": "https://secure.php.net/manual/en/imagick.setsamplingfactors.php"}, {"name": "Imagick::setSize", "synopsis": "Sets the size of the Imagick object. Set it before you read a raw image format such as RGB, GRAY, or CMYK.", "usage": "bool Imagick::setSize ( int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagick.setsize.php"}, {"name": "Imagick::setSizeOffset", "synopsis": "Sets the size and offset of the Imagick object. Set it before you read a raw image format such as RGB, GRAY, or CMYK. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::setSizeOffset ( int $columns , int $rows , int $offset )", "url": "https://secure.php.net/manual/en/imagick.setsizeoffset.php"}, {"name": "Imagick::setType", "synopsis": "Sets the image type attribute.", "usage": "bool Imagick::setType ( int $image_type )", "url": "https://secure.php.net/manual/en/imagick.settype.php"}, {"name": "Imagick::shadeImage", "synopsis": "Shines a distant light on an image to create a three-dimensional effect. You control the positioning of the light with azimuth and elevation; azimuth is measured in degrees off the x axis and elevation is measured in pixels above the Z axis. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::shadeImage ( bool $gray , float $azimuth , float $elevation )", "url": "https://secure.php.net/manual/en/imagick.shadeimage.php"}, {"name": "Imagick::shadowImage", "synopsis": "Simulates an image shadow.", "usage": "bool Imagick::shadowImage ( float $opacity , float $sigma , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.shadowimage.php"}, {"name": "Imagick::sharpenImage", "synopsis": "Sharpens an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, the radius should be larger than sigma. Use a radius of 0 and Imagick::sharpenImage() selects a suitable radius for you.", "usage": "bool Imagick::sharpenImage ( float $radius , float $sigma [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.sharpenimage.php"}, {"name": "Imagick::shaveImage", "synopsis": "Shaves pixels from the image edges. It allocates the memory necessary for the new Image structure and returns a pointer to the new image.", "usage": "bool Imagick::shaveImage ( int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagick.shaveimage.php"}, {"name": "Imagick::shearImage", "synopsis": "Slides one edge of an image along the X or Y axis, creating a parallelogram. An X direction shear slides an edge along the X axis, while a Y direction shear slides an edge along the Y axis. The amount of the shear is controlled by a shear angle. For X direction shears, x_shear is measured relative to the Y axis, and similarly, for Y direction shears y_shear is measured relative to the X axis. Empty triangles left over from shearing the image are filled with the background color.", "usage": "bool Imagick::shearImage ( mixed $background , float $x_shear , float $y_shear )", "url": "https://secure.php.net/manual/en/imagick.shearimage.php"}, {"name": "Imagick::sigmoidalContrastImage", "synopsis": "Adjusts the contrast of an image with a non-linear sigmoidal contrast algorithm. Increase the contrast of the image using a sigmoidal transfer function without saturating highlights or shadows. Contrast indicates how much to increase the contrast (0 is none; 3 is typical; 20 is pushing it); mid-point indicates where midtones fall in the resultant image (0 is white; 50 is middle-gray; 100 is black). Set sharpen to TRUE to increase the image contrast otherwise the contrast is reduced.", "usage": "bool Imagick::sigmoidalContrastImage ( bool $sharpen , float $alpha , float $beta [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.sigmoidalcontrastimage.php"}, {"name": "Imagick::sketchImage", "synopsis": "Simulates a pencil sketch. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and Imagick::sketchImage() selects a suitable radius for you. Angle gives the angle of the blurring motion. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::sketchImage ( float $radius , float $sigma , float $angle )", "url": "https://secure.php.net/manual/en/imagick.sketchimage.php"}, {"name": "Imagick::smushImages", "synopsis": "Takes all images from the current image pointer to the end of the image list and smushs them to each other top-to-bottom if the stack parameter is true, otherwise left-to-right.", "usage": "public Imagick Imagick::smushImages ( bool $stack , int $offset )", "url": "https://secure.php.net/manual/en/imagick.smushimages.php"}, {"name": "Imagick::solarizeImage", "synopsis": "Applies a special effect to the image, similar to the effect achieved in a photo darkroom by selectively exposing areas of photo sensitive paper to light. Threshold ranges from 0 to QuantumRange and is a measure of the extent of the solarization.", "usage": "bool Imagick::solarizeImage ( int $threshold )", "url": "https://secure.php.net/manual/en/imagick.solarizeimage.php"}, {"name": "Imagick::sparseColorImage", "synopsis": "Given the arguments array containing numeric values this method interpolates the colors found at those coordinates across the whole image using sparse_method. This method is available if Imagick has been compiled against ImageMagick version 6.4.5 or newer.", "usage": "public bool Imagick::sparseColorImage ( int $SPARSE_METHOD , array $arguments [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.sparsecolorimage.php"}, {"name": "Imagick::spliceImage", "synopsis": "Splices a solid color into the image.", "usage": "bool Imagick::spliceImage ( int $width , int $height , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.spliceimage.php"}, {"name": "Imagick::spreadImage", "synopsis": "Special effects method that randomly displaces each pixel in a block defined by the radius parameter.", "usage": "bool Imagick::spreadImage ( float $radius )", "url": "https://secure.php.net/manual/en/imagick.spreadimage.php"}, {"name": "Imagick::statisticImage", "synopsis": "Replace each pixel with corresponding statistic from the neighborhood of the specified width and height.", "usage": "public bool Imagick::statisticImage ( int $type , int $width , int $height [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.statisticimage.php"}, {"name": "Imagick::steganoImage", "synopsis": "Hides a digital watermark within the image. Recover the hidden watermark later to prove that the authenticity of an image. Offset defines the start position within the image to hide the watermark.", "usage": "Imagick Imagick::steganoImage ( Imagick $watermark_wand , int $offset )", "url": "https://secure.php.net/manual/en/imagick.steganoimage.php"}, {"name": "Imagick::stereoImage", "synopsis": "Composites two images and produces a single image that is the composite of a left and right image of a stereo pair.", "usage": "bool Imagick::stereoImage ( Imagick $offset_wand )", "url": "https://secure.php.net/manual/en/imagick.stereoimage.php"}, {"name": "Imagick::stripImage", "synopsis": "Strips an image of all profiles and comments.", "usage": "bool Imagick::stripImage ( void )", "url": "https://secure.php.net/manual/en/imagick.stripimage.php"}, {"name": "Imagick::subImageMatch", "synopsis": "Searches for a subimage in the current image and returns a similarity image such that an exact match location is completely white and if none of the pixels match, black, otherwise some gray level in-between. You can also pass in the optional parameters bestMatch and similarity. After calling the function similarity will be set to the 'score' of the similarity between the subimage and the matching position in the larger image, bestMatch will contain an associative array with elements x, y, width, height that describe the matching region.", "usage": "public Imagick Imagick::subImageMatch ( Imagick $Imagick [, array &$offset [, float &$similarity ]] )", "url": "https://secure.php.net/manual/en/imagick.subimagematch.php"}, {"name": "Imagick::swirlImage", "synopsis": "Swirls the pixels about the center of the image, where degrees indicates the sweep of the arc through which each pixel is moved. You get a more dramatic effect as the degrees move from 1 to 360.", "usage": "bool Imagick::swirlImage ( float $degrees )", "url": "https://secure.php.net/manual/en/imagick.swirlimage.php"}, {"name": "Imagick::textureImage", "synopsis": "Repeatedly tiles the texture image across and down the image canvas.", "usage": "Imagick Imagick::textureImage ( Imagick $texture_wand )", "url": "https://secure.php.net/manual/en/imagick.textureimage.php"}, {"name": "Imagick::thresholdImage", "synopsis": "Changes the value of individual pixels based on the intensity of each pixel compared to threshold. The result is a high-contrast, two color image.", "usage": "bool Imagick::thresholdImage ( float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.thresholdimage.php"}, {"name": "Imagick::thumbnailImage", "synopsis": "Changes the size of an image to the given dimensions and removes any associated profiles. The goal is to produce small, low cost thumbnail images suited for display on the Web. If TRUE is given as a third parameter then columns and rows parameters are used as maximums for each side. Both sides will be scaled down until they match or are smaller than the parameter given for the side.", "usage": "bool Imagick::thumbnailImage ( int $columns , int $rows [, bool $bestfit = FALSE [, bool $fill = FALSE [, bool $legacy = FALSE ]]] )", "url": "https://secure.php.net/manual/en/imagick.thumbnailimage.php"}, {"name": "Imagick::tintImage", "synopsis": "Applies a color vector to each pixel in the image. The length of the vector is 0 for black and white and at its maximum for the midtones. The vector weighing function is f(x)=(1-(4.0*((x-0.5)*(x-0.5)))).", "usage": "bool Imagick::tintImage ( mixed $tint , mixed $opacity [, bool $legacy = FALSE ] )", "url": "https://secure.php.net/manual/en/imagick.tintimage.php"}, {"name": "Imagick::__toString", "synopsis": "Returns the current image as string. This will only return a single image; it should not be used for Imagick objects that contain multiple images e.g. an animated GIF or PDF with multiple pages.", "usage": "string Imagick::__toString ( void )", "url": "https://secure.php.net/manual/en/imagick.tostring.php"}, {"name": "Imagick::transformImage", "synopsis": "A convenience method for setting crop size and the image geometry from strings. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "Imagick Imagick::transformImage ( string $crop , string $geometry )", "url": "https://secure.php.net/manual/en/imagick.transformimage.php"}, {"name": "Imagick::transformImageColorspace", "synopsis": "Transforms an image to a new colorspace.", "usage": "bool Imagick::transformImageColorspace ( int $colorspace )", "url": "https://secure.php.net/manual/en/imagick.transformimagecolorspace.php"}, {"name": "Imagick::transparentPaintImage", "synopsis": "Paints pixels matching the target color transparent. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.", "usage": "bool Imagick::transparentPaintImage ( mixed $target , float $alpha , float $fuzz , bool $invert )", "url": "https://secure.php.net/manual/en/imagick.transparentpaintimage.php"}, {"name": "Imagick::transposeImage", "synopsis": "Creates a vertical mirror image by reflecting the pixels around the central x-axis while rotating them 90-degrees. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::transposeImage ( void )", "url": "https://secure.php.net/manual/en/imagick.transposeimage.php"}, {"name": "Imagick::transverseImage", "synopsis": "Creates a horizontal mirror image by reflecting the pixels around the central y-axis while rotating them 270-degrees. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::transverseImage ( void )", "url": "https://secure.php.net/manual/en/imagick.transverseimage.php"}, {"name": "Imagick::trimImage", "synopsis": "Remove edges that are the background color from the image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::trimImage ( float $fuzz )", "url": "https://secure.php.net/manual/en/imagick.trimimage.php"}, {"name": "Imagick::uniqueImageColors", "synopsis": "Discards all but one of any pixel color. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::uniqueImageColors ( void )", "url": "https://secure.php.net/manual/en/imagick.uniqueimagecolors.php"}, {"name": "Imagick::unsharpMaskImage", "synopsis": "Sharpens an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, radius should be larger than sigma. Use a radius of 0 and Imagick::UnsharpMaskImage() selects a suitable radius for you.", "usage": "bool Imagick::unsharpMaskImage ( float $radius , float $sigma , float $amount , float $threshold [, int $channel = Imagick::CHANNEL_DEFAULT ] )", "url": "https://secure.php.net/manual/en/imagick.unsharpmaskimage.php"}, {"name": "Imagick::valid", "synopsis": "Checks if the current item is valid.", "usage": "bool Imagick::valid ( void )", "url": "https://secure.php.net/manual/en/imagick.valid.php"}, {"name": "Imagick::vignetteImage", "synopsis": "Softens the edges of the image in vignette style. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::vignetteImage ( float $blackPoint , float $whitePoint , int $x , int $y )", "url": "https://secure.php.net/manual/en/imagick.vignetteimage.php"}, {"name": "Imagick::waveImage", "synopsis": "Applies a wave filter to the image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.", "usage": "bool Imagick::waveImage ( float $amplitude , float $length )", "url": "https://secure.php.net/manual/en/imagick.waveimage.php"}, {"name": "Imagick::whiteThresholdImage", "synopsis": "Is like Imagick::ThresholdImage() but force all pixels above the threshold into white while leaving all pixels below the threshold unchanged.", "usage": "bool Imagick::whiteThresholdImage ( mixed $threshold )", "url": "https://secure.php.net/manual/en/imagick.whitethresholdimage.php"}, {"name": "Imagick::writeImage", "synopsis": "Writes an image to the specified filename. If the filename parameter is NULL, the image is written to the filename set by Imagick::readImage() or Imagick::setImageFilename().", "usage": "bool Imagick::writeImage ([ string $filename = NULL ] )", "url": "https://secure.php.net/manual/en/imagick.writeimage.php"}, {"name": "Imagick::writeImageFile", "synopsis": "Writes the image sequence to an open filehandle. The handle must be opened with for example fopen. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::writeImageFile ( resource $filehandle [, string $format ] )", "url": "https://secure.php.net/manual/en/imagick.writeimagefile.php"}, {"name": "Imagick::writeImages", "synopsis": "Writes an image or image sequence.", "usage": "bool Imagick::writeImages ( string $filename , bool $adjoin )", "url": "https://secure.php.net/manual/en/imagick.writeimages.php"}, {"name": "Imagick::writeImagesFile", "synopsis": "Writes all image frames into an open filehandle. This method can be used to write animated gifs or other multiframe images into open filehandle. This method is available if Imagick has been compiled against ImageMagick version 6.3.6 or newer.", "usage": "bool Imagick::writeImagesFile ( resource $filehandle [, string $format ] )", "url": "https://secure.php.net/manual/en/imagick.writeimagesfile.php"}, {"name": "ImagickDraw::affine", "synopsis": null, "usage": "bool ImagickDraw::affine ( array $affine )", "url": "https://secure.php.net/manual/en/imagickdraw.affine.php"}, {"name": "ImagickDraw::annotation", "synopsis": null, "usage": "bool ImagickDraw::annotation ( float $x , float $y , string $text )", "url": "https://secure.php.net/manual/en/imagickdraw.annotation.php"}, {"name": "ImagickDraw::arc", "synopsis": null, "usage": "bool ImagickDraw::arc ( float $sx , float $sy , float $ex , float $ey , float $sd , float $ed )", "url": "https://secure.php.net/manual/en/imagickdraw.arc.php"}, {"name": "ImagickDraw::bezier", "synopsis": null, "usage": "bool ImagickDraw::bezier ( array $coordinates )", "url": "https://secure.php.net/manual/en/imagickdraw.bezier.php"}, {"name": "ImagickDraw::circle", "synopsis": null, "usage": "bool ImagickDraw::circle ( float $ox , float $oy , float $px , float $py )", "url": "https://secure.php.net/manual/en/imagickdraw.circle.php"}, {"name": "ImagickDraw::clear", "synopsis": null, "usage": "bool ImagickDraw::clear ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.clear.php"}, {"name": "ImagickDraw::clone", "synopsis": null, "usage": "ImagickDraw ImagickDraw::clone ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.clone.php"}, {"name": "ImagickDraw::color", "synopsis": null, "usage": "bool ImagickDraw::color ( float $x , float $y , int $paintMethod )", "url": "https://secure.php.net/manual/en/imagickdraw.color.php"}, {"name": "ImagickDraw::comment", "synopsis": null, "usage": "bool ImagickDraw::comment ( string $comment )", "url": "https://secure.php.net/manual/en/imagickdraw.comment.php"}, {"name": "ImagickDraw::composite", "synopsis": null, "usage": "bool ImagickDraw::composite ( int $compose , float $x , float $y , float $width , float $height , Imagick $compositeWand )", "url": "https://secure.php.net/manual/en/imagickdraw.composite.php"}, {"name": "ImagickDraw::__construct", "synopsis": null, "usage": "ImagickDraw::__construct ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.construct.php"}, {"name": "ImagickDraw::destroy", "synopsis": null, "usage": "bool ImagickDraw::destroy ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.destroy.php"}, {"name": "ImagickDraw::ellipse", "synopsis": null, "usage": "bool ImagickDraw::ellipse ( float $ox , float $oy , float $rx , float $ry , float $start , float $end )", "url": "https://secure.php.net/manual/en/imagickdraw.ellipse.php"}, {"name": "ImagickDraw::getClipPath", "synopsis": null, "usage": "string ImagickDraw::getClipPath ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getclippath.php"}, {"name": "ImagickDraw::getClipRule", "synopsis": null, "usage": "int ImagickDraw::getClipRule ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getcliprule.php"}, {"name": "ImagickDraw::getClipUnits", "synopsis": null, "usage": "int ImagickDraw::getClipUnits ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getclipunits.php"}, {"name": "ImagickDraw::getFillColor", "synopsis": null, "usage": "ImagickPixel ImagickDraw::getFillColor ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfillcolor.php"}, {"name": "ImagickDraw::getFillOpacity", "synopsis": null, "usage": "float ImagickDraw::getFillOpacity ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfillopacity.php"}, {"name": "ImagickDraw::getFillRule", "synopsis": null, "usage": "int ImagickDraw::getFillRule ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfillrule.php"}, {"name": "ImagickDraw::getFont", "synopsis": null, "usage": "string ImagickDraw::getFont ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfont.php"}, {"name": "ImagickDraw::getFontFamily", "synopsis": null, "usage": "string ImagickDraw::getFontFamily ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfontfamily.php"}, {"name": "ImagickDraw::getFontSize", "synopsis": null, "usage": "float ImagickDraw::getFontSize ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfontsize.php"}, {"name": "ImagickDraw::getFontStretch", "synopsis": "Gets the font stretch to use when annotating with text. Returns a StretchType.", "usage": "public int ImagickDraw::getFontStretch ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfontstretch.php"}, {"name": "ImagickDraw::getFontStyle", "synopsis": null, "usage": "int ImagickDraw::getFontStyle ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfontstyle.php"}, {"name": "ImagickDraw::getFontWeight", "synopsis": null, "usage": "int ImagickDraw::getFontWeight ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getfontweight.php"}, {"name": "ImagickDraw::getGravity", "synopsis": null, "usage": "int ImagickDraw::getGravity ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getgravity.php"}, {"name": "ImagickDraw::getStrokeAntialias", "synopsis": null, "usage": "bool ImagickDraw::getStrokeAntialias ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokeantialias.php"}, {"name": "ImagickDraw::getStrokeColor", "synopsis": null, "usage": "ImagickPixel ImagickDraw::getStrokeColor ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokecolor.php"}, {"name": "ImagickDraw::getStrokeDashArray", "synopsis": null, "usage": "array ImagickDraw::getStrokeDashArray ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokedasharray.php"}, {"name": "ImagickDraw::getStrokeDashOffset", "synopsis": null, "usage": "float ImagickDraw::getStrokeDashOffset ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokedashoffset.php"}, {"name": "ImagickDraw::getStrokeLineCap", "synopsis": null, "usage": "int ImagickDraw::getStrokeLineCap ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokelinecap.php"}, {"name": "ImagickDraw::getStrokeLineJoin", "synopsis": null, "usage": "int ImagickDraw::getStrokeLineJoin ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokelinejoin.php"}, {"name": "ImagickDraw::getStrokeMiterLimit", "synopsis": null, "usage": "int ImagickDraw::getStrokeMiterLimit ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokemiterlimit.php"}, {"name": "ImagickDraw::getStrokeOpacity", "synopsis": null, "usage": "float ImagickDraw::getStrokeOpacity ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokeopacity.php"}, {"name": "ImagickDraw::getStrokeWidth", "synopsis": null, "usage": "float ImagickDraw::getStrokeWidth ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getstrokewidth.php"}, {"name": "ImagickDraw::getTextAlignment", "synopsis": null, "usage": "int ImagickDraw::getTextAlignment ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextalignment.php"}, {"name": "ImagickDraw::getTextAntialias", "synopsis": null, "usage": "bool ImagickDraw::getTextAntialias ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextantialias.php"}, {"name": "ImagickDraw::getTextDecoration", "synopsis": null, "usage": "int ImagickDraw::getTextDecoration ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextdecoration.php"}, {"name": "ImagickDraw::getTextEncoding", "synopsis": null, "usage": "string ImagickDraw::getTextEncoding ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextencoding.php"}, {"name": "ImagickDraw::getTextInterlineSpacing", "synopsis": "Gets the text interword spacing.", "usage": "public float ImagickDraw::getTextInterlineSpacing ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextinterlinespacing.php"}, {"name": "ImagickDraw::getTextInterwordSpacing", "synopsis": "Gets the text interword spacing.", "usage": "public float ImagickDraw::getTextInterwordSpacing ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextinterwordspacing.php"}, {"name": "ImagickDraw::getTextKerning", "synopsis": "Gets the text kerning.", "usage": "public float ImagickDraw::getTextKerning ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextkerning.php"}, {"name": "ImagickDraw::getTextUnderColor", "synopsis": null, "usage": "ImagickPixel ImagickDraw::getTextUnderColor ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.gettextundercolor.php"}, {"name": "ImagickDraw::getVectorGraphics", "synopsis": null, "usage": "string ImagickDraw::getVectorGraphics ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.getvectorgraphics.php"}, {"name": "ImagickDraw::line", "synopsis": null, "usage": "bool ImagickDraw::line ( float $sx , float $sy , float $ex , float $ey )", "url": "https://secure.php.net/manual/en/imagickdraw.line.php"}, {"name": "ImagickDraw::matte", "synopsis": null, "usage": "bool ImagickDraw::matte ( float $x , float $y , int $paintMethod )", "url": "https://secure.php.net/manual/en/imagickdraw.matte.php"}, {"name": "ImagickDraw::pathClose", "synopsis": null, "usage": "bool ImagickDraw::pathClose ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.pathclose.php"}, {"name": "ImagickDraw::pathCurveToAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToAbsolute ( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetoabsolute.php"}, {"name": "ImagickDraw::pathCurveToQuadraticBezierAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToQuadraticBezierAbsolute ( float $x1 , float $y1 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetoquadraticbezierabsolute.php"}, {"name": "ImagickDraw::pathCurveToQuadraticBezierRelative", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToQuadraticBezierRelative ( float $x1 , float $y1 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetoquadraticbezierrelative.php"}, {"name": "ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute", "synopsis": "Draws a quadratic Bezier curve (using absolute coordinates) from the current point to (x,y). The control point is assumed to be the reflection of the control point on the previous command relative to the current point. (If there is no previous command or if the previous command was not a DrawPathCurveToQuadraticBezierAbsolute, DrawPathCurveToQuadraticBezierRelative, DrawPathCurveToQuadraticBezierSmoothAbsolut or DrawPathCurveToQuadraticBezierSmoothRelative, assume the control point is coincident with the current point.). At the end of the command, the new current point becomes the final (x,y) coordinate pair used in the polybezier.", "usage": "bool ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetoquadraticbeziersmoothabsolute.php"}, {"name": "ImagickDraw::pathCurveToQuadraticBezierSmoothRelative", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToQuadraticBezierSmoothRelative ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetoquadraticbeziersmoothrelative.php"}, {"name": "ImagickDraw::pathCurveToRelative", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToRelative ( float $x1 , float $y1 , float $x2 , float $y2 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetorelative.php"}, {"name": "ImagickDraw::pathCurveToSmoothAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToSmoothAbsolute ( float $x2 , float $y2 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetosmoothabsolute.php"}, {"name": "ImagickDraw::pathCurveToSmoothRelative", "synopsis": null, "usage": "bool ImagickDraw::pathCurveToSmoothRelative ( float $x2 , float $y2 , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathcurvetosmoothrelative.php"}, {"name": "ImagickDraw::pathEllipticArcAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathEllipticArcAbsolute ( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathellipticarcabsolute.php"}, {"name": "ImagickDraw::pathEllipticArcRelative", "synopsis": null, "usage": "bool ImagickDraw::pathEllipticArcRelative ( float $rx , float $ry , float $x_axis_rotation , bool $large_arc_flag , bool $sweep_flag , float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathellipticarcrelative.php"}, {"name": "ImagickDraw::pathFinish", "synopsis": null, "usage": "bool ImagickDraw::pathFinish ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.pathfinish.php"}, {"name": "ImagickDraw::pathLineToAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathLineToAbsolute ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetoabsolute.php"}, {"name": "ImagickDraw::pathLineToHorizontalAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathLineToHorizontalAbsolute ( float $x )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetohorizontalabsolute.php"}, {"name": "ImagickDraw::pathLineToHorizontalRelative", "synopsis": null, "usage": "bool ImagickDraw::pathLineToHorizontalRelative ( float $x )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetohorizontalrelative.php"}, {"name": "ImagickDraw::pathLineToRelative", "synopsis": null, "usage": "bool ImagickDraw::pathLineToRelative ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetorelative.php"}, {"name": "ImagickDraw::pathLineToVerticalAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathLineToVerticalAbsolute ( float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetoverticalabsolute.php"}, {"name": "ImagickDraw::pathLineToVerticalRelative", "synopsis": null, "usage": "bool ImagickDraw::pathLineToVerticalRelative ( float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathlinetoverticalrelative.php"}, {"name": "ImagickDraw::pathMoveToAbsolute", "synopsis": null, "usage": "bool ImagickDraw::pathMoveToAbsolute ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathmovetoabsolute.php"}, {"name": "ImagickDraw::pathMoveToRelative", "synopsis": null, "usage": "bool ImagickDraw::pathMoveToRelative ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.pathmovetorelative.php"}, {"name": "ImagickDraw::pathStart", "synopsis": null, "usage": "bool ImagickDraw::pathStart ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.pathstart.php"}, {"name": "ImagickDraw::point", "synopsis": null, "usage": "bool ImagickDraw::point ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.point.php"}, {"name": "ImagickDraw::polygon", "synopsis": null, "usage": "bool ImagickDraw::polygon ( array $coordinates )", "url": "https://secure.php.net/manual/en/imagickdraw.polygon.php"}, {"name": "ImagickDraw::polyline", "synopsis": null, "usage": "bool ImagickDraw::polyline ( array $coordinates )", "url": "https://secure.php.net/manual/en/imagickdraw.polyline.php"}, {"name": "ImagickDraw::pop", "synopsis": null, "usage": "bool ImagickDraw::pop ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.pop.php"}, {"name": "ImagickDraw::popClipPath", "synopsis": null, "usage": "bool ImagickDraw::popClipPath ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.popclippath.php"}, {"name": "ImagickDraw::popDefs", "synopsis": null, "usage": "bool ImagickDraw::popDefs ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.popdefs.php"}, {"name": "ImagickDraw::popPattern", "synopsis": null, "usage": "bool ImagickDraw::popPattern ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.poppattern.php"}, {"name": "ImagickDraw::push", "synopsis": null, "usage": "bool ImagickDraw::push ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.push.php"}, {"name": "ImagickDraw::pushClipPath", "synopsis": null, "usage": "bool ImagickDraw::pushClipPath ( string $clip_mask_id )", "url": "https://secure.php.net/manual/en/imagickdraw.pushclippath.php"}, {"name": "ImagickDraw::pushDefs", "synopsis": null, "usage": "bool ImagickDraw::pushDefs ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.pushdefs.php"}, {"name": "ImagickDraw::pushPattern", "synopsis": null, "usage": "bool ImagickDraw::pushPattern ( string $pattern_id , float $x , float $y , float $width , float $height )", "url": "https://secure.php.net/manual/en/imagickdraw.pushpattern.php"}, {"name": "ImagickDraw::rectangle", "synopsis": null, "usage": "bool ImagickDraw::rectangle ( float $x1 , float $y1 , float $x2 , float $y2 )", "url": "https://secure.php.net/manual/en/imagickdraw.rectangle.php"}, {"name": "ImagickDraw::render", "synopsis": null, "usage": "bool ImagickDraw::render ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.render.php"}, {"name": "ImagickDraw::resetVectorGraphics", "synopsis": "Resets the vector graphics.", "usage": "public bool ImagickDraw::resetVectorGraphics ( void )", "url": "https://secure.php.net/manual/en/imagickdraw.resetvectorgraphics.php"}, {"name": "ImagickDraw::rotate", "synopsis": null, "usage": "bool ImagickDraw::rotate ( float $degrees )", "url": "https://secure.php.net/manual/en/imagickdraw.rotate.php"}, {"name": "ImagickDraw::roundRectangle", "synopsis": null, "usage": "bool ImagickDraw::roundRectangle ( float $x1 , float $y1 , float $x2 , float $y2 , float $rx , float $ry )", "url": "https://secure.php.net/manual/en/imagickdraw.roundrectangle.php"}, {"name": "ImagickDraw::scale", "synopsis": null, "usage": "bool ImagickDraw::scale ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.scale.php"}, {"name": "ImagickDraw::setClipPath", "synopsis": null, "usage": "bool ImagickDraw::setClipPath ( string $clip_mask )", "url": "https://secure.php.net/manual/en/imagickdraw.setclippath.php"}, {"name": "ImagickDraw::setClipRule", "synopsis": null, "usage": "bool ImagickDraw::setClipRule ( int $fill_rule )", "url": "https://secure.php.net/manual/en/imagickdraw.setcliprule.php"}, {"name": "ImagickDraw::setClipUnits", "synopsis": null, "usage": "bool ImagickDraw::setClipUnits ( int $clip_units )", "url": "https://secure.php.net/manual/en/imagickdraw.setclipunits.php"}, {"name": "ImagickDraw::setFillAlpha", "synopsis": null, "usage": "bool ImagickDraw::setFillAlpha ( float $opacity )", "url": "https://secure.php.net/manual/en/imagickdraw.setfillalpha.php"}, {"name": "ImagickDraw::setFillColor", "synopsis": null, "usage": "bool ImagickDraw::setFillColor ( ImagickPixel $fill_pixel )", "url": "https://secure.php.net/manual/en/imagickdraw.setfillcolor.php"}, {"name": "ImagickDraw::setFillOpacity", "synopsis": null, "usage": "bool ImagickDraw::setFillOpacity ( float $fillOpacity )", "url": "https://secure.php.net/manual/en/imagickdraw.setfillopacity.php"}, {"name": "ImagickDraw::setFillPatternURL", "synopsis": null, "usage": "bool ImagickDraw::setFillPatternURL ( string $fill_url )", "url": "https://secure.php.net/manual/en/imagickdraw.setfillpatternurl.php"}, {"name": "ImagickDraw::setFillRule", "synopsis": null, "usage": "bool ImagickDraw::setFillRule ( int $fill_rule )", "url": "https://secure.php.net/manual/en/imagickdraw.setfillrule.php"}, {"name": "ImagickDraw::setFont", "synopsis": null, "usage": "bool ImagickDraw::setFont ( string $font_name )", "url": "https://secure.php.net/manual/en/imagickdraw.setfont.php"}, {"name": "ImagickDraw::setFontFamily", "synopsis": null, "usage": "bool ImagickDraw::setFontFamily ( string $font_family )", "url": "https://secure.php.net/manual/en/imagickdraw.setfontfamily.php"}, {"name": "ImagickDraw::setFontSize", "synopsis": null, "usage": "bool ImagickDraw::setFontSize ( float $pointsize )", "url": "https://secure.php.net/manual/en/imagickdraw.setfontsize.php"}, {"name": "ImagickDraw::setFontStretch", "synopsis": null, "usage": "bool ImagickDraw::setFontStretch ( int $fontStretch )", "url": "https://secure.php.net/manual/en/imagickdraw.setfontstretch.php"}, {"name": "ImagickDraw::setFontStyle", "synopsis": null, "usage": "bool ImagickDraw::setFontStyle ( int $style )", "url": "https://secure.php.net/manual/en/imagickdraw.setfontstyle.php"}, {"name": "ImagickDraw::setFontWeight", "synopsis": null, "usage": "bool ImagickDraw::setFontWeight ( int $font_weight )", "url": "https://secure.php.net/manual/en/imagickdraw.setfontweight.php"}, {"name": "ImagickDraw::setGravity", "synopsis": null, "usage": "bool ImagickDraw::setGravity ( int $gravity )", "url": "https://secure.php.net/manual/en/imagickdraw.setgravity.php"}, {"name": "ImagickDraw::setResolution", "synopsis": "Sets the resolution.", "usage": "public bool ImagickDraw::setResolution ( float $x_resolution , float $y_resolution )", "url": "https://secure.php.net/manual/en/imagickdraw.setresolution.php"}, {"name": "ImagickDraw::setStrokeAlpha", "synopsis": null, "usage": "bool ImagickDraw::setStrokeAlpha ( float $opacity )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokealpha.php"}, {"name": "ImagickDraw::setStrokeAntialias", "synopsis": null, "usage": "bool ImagickDraw::setStrokeAntialias ( bool $stroke_antialias )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokeantialias.php"}, {"name": "ImagickDraw::setStrokeColor", "synopsis": null, "usage": "bool ImagickDraw::setStrokeColor ( ImagickPixel $stroke_pixel )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokecolor.php"}, {"name": "ImagickDraw::setStrokeDashArray", "synopsis": null, "usage": "bool ImagickDraw::setStrokeDashArray ( array $dashArray )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokedasharray.php"}, {"name": "ImagickDraw::setStrokeDashOffset", "synopsis": null, "usage": "bool ImagickDraw::setStrokeDashOffset ( float $dash_offset )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokedashoffset.php"}, {"name": "ImagickDraw::setStrokeLineCap", "synopsis": null, "usage": "bool ImagickDraw::setStrokeLineCap ( int $linecap )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokelinecap.php"}, {"name": "ImagickDraw::setStrokeLineJoin", "synopsis": null, "usage": "bool ImagickDraw::setStrokeLineJoin ( int $linejoin )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokelinejoin.php"}, {"name": "ImagickDraw::setStrokeMiterLimit", "synopsis": null, "usage": "bool ImagickDraw::setStrokeMiterLimit ( int $miterlimit )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokemiterlimit.php"}, {"name": "ImagickDraw::setStrokeOpacity", "synopsis": null, "usage": "bool ImagickDraw::setStrokeOpacity ( float $stroke_opacity )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokeopacity.php"}, {"name": "ImagickDraw::setStrokePatternURL", "synopsis": null, "usage": "bool ImagickDraw::setStrokePatternURL ( string $stroke_url )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokepatternurl.php"}, {"name": "ImagickDraw::setStrokeWidth", "synopsis": null, "usage": "bool ImagickDraw::setStrokeWidth ( float $stroke_width )", "url": "https://secure.php.net/manual/en/imagickdraw.setstrokewidth.php"}, {"name": "ImagickDraw::setTextAlignment", "synopsis": null, "usage": "bool ImagickDraw::setTextAlignment ( int $alignment )", "url": "https://secure.php.net/manual/en/imagickdraw.settextalignment.php"}, {"name": "ImagickDraw::setTextAntialias", "synopsis": null, "usage": "bool ImagickDraw::setTextAntialias ( bool $antiAlias )", "url": "https://secure.php.net/manual/en/imagickdraw.settextantialias.php"}, {"name": "ImagickDraw::setTextDecoration", "synopsis": null, "usage": "bool ImagickDraw::setTextDecoration ( int $decoration )", "url": "https://secure.php.net/manual/en/imagickdraw.settextdecoration.php"}, {"name": "ImagickDraw::setTextEncoding", "synopsis": null, "usage": "bool ImagickDraw::setTextEncoding ( string $encoding )", "url": "https://secure.php.net/manual/en/imagickdraw.settextencoding.php"}, {"name": "ImagickDraw::setTextInterlineSpacing", "synopsis": "Sets the text interline spacing.", "usage": "public bool ImagickDraw::setTextInterlineSpacing ( float $spacing )", "url": "https://secure.php.net/manual/en/imagickdraw.settextinterlinespacing.php"}, {"name": "ImagickDraw::setTextInterwordSpacing", "synopsis": "Sets the text interword spacing.", "usage": "public bool ImagickDraw::setTextInterwordSpacing ( float $spacing )", "url": "https://secure.php.net/manual/en/imagickdraw.settextinterwordspacing.php"}, {"name": "ImagickDraw::setTextKerning", "synopsis": "Sets the text kerning", "usage": "public bool ImagickDraw::setTextKerning ( float $kerning )", "url": "https://secure.php.net/manual/en/imagickdraw.settextkerning.php"}, {"name": "ImagickDraw::setTextUnderColor", "synopsis": null, "usage": "bool ImagickDraw::setTextUnderColor ( ImagickPixel $under_color )", "url": "https://secure.php.net/manual/en/imagickdraw.settextundercolor.php"}, {"name": "ImagickDraw::setVectorGraphics", "synopsis": null, "usage": "bool ImagickDraw::setVectorGraphics ( string $xml )", "url": "https://secure.php.net/manual/en/imagickdraw.setvectorgraphics.php"}, {"name": "ImagickDraw::setViewbox", "synopsis": null, "usage": "bool ImagickDraw::setViewbox ( int $x1 , int $y1 , int $x2 , int $y2 )", "url": "https://secure.php.net/manual/en/imagickdraw.setviewbox.php"}, {"name": "ImagickDraw::skewX", "synopsis": null, "usage": "bool ImagickDraw::skewX ( float $degrees )", "url": "https://secure.php.net/manual/en/imagickdraw.skewx.php"}, {"name": "ImagickDraw::skewY", "synopsis": null, "usage": "bool ImagickDraw::skewY ( float $degrees )", "url": "https://secure.php.net/manual/en/imagickdraw.skewy.php"}, {"name": "ImagickDraw::translate", "synopsis": null, "usage": "bool ImagickDraw::translate ( float $x , float $y )", "url": "https://secure.php.net/manual/en/imagickdraw.translate.php"}, {"name": "ImagickKernel::addKernel", "synopsis": "Attach another kernel to this kernel to allow them to both be applied in a single morphology or filter function. Returns the new combined kernel.", "usage": "public void ImagickKernel::addKernel ( ImagickKernel $ImagickKernel )", "url": "https://secure.php.net/manual/en/imagickkernel.addkernel.php"}, {"name": "ImagickKernel::addUnityKernel", "synopsis": "Adds a given amount of the 'Unity' Convolution Kernel to the given pre-scaled and normalized Kernel. This in effect adds that amount of the original image into the resulting convolution kernel. The resulting effect is to convert the defined kernels into blended soft-blurs, unsharp kernels or into sharpening kernels.", "usage": "public void ImagickKernel::addUnityKernel ( float $scale )", "url": "https://secure.php.net/manual/en/imagickkernel.addunitykernel.php"}, {"name": "ImagickKernel::fromBuiltin", "synopsis": "Create a kernel from a builtin in kernel. See http://www.imagemagick.org/Usage/morphology/#kernel for examples. Currently the 'rotation' symbols are not supported. Example: $diamondKernel = ImagickKernel::fromBuiltIn(\\Imagick::KERNEL_DIAMOND, \"2\");", "usage": "public static ImagickKernel ImagickKernel::fromBuiltin ( int $kernelType , string $kernelString )", "url": "https://secure.php.net/manual/en/imagickkernel.frombuiltin.php"}, {"name": "ImagickKernel::fromMatrix", "synopsis": "Create a kernel from an 2d matrix of values. Each value should either be a float (if the element should be used) or 'false' if the element should be skipped. For matrices that are odd sizes in both dimensions the the origin pixel will default to the centre of the kernel. For all other kernel sizes the origin pixel must be specified.", "usage": "public static ImagickKernel ImagickKernel::fromMatrix ( array $matrix [, array $origin ] )", "url": "https://secure.php.net/manual/en/imagickkernel.frommatrix.php"}, {"name": "ImagickKernel::getMatrix", "synopsis": "Get the 2d matrix of values used in this kernel. The elements are either float for elements that are used or 'false' if the element should be skipped.", "usage": "public array ImagickKernel::getMatrix ( void )", "url": "https://secure.php.net/manual/en/imagickkernel.getmatrix.php"}, {"name": "ImagickKernel::scale", "synopsis": "ScaleKernelInfo() scales the given kernel list by the given amount, with or without normalization of the sum of the kernel values (as per given flags). The exact behaviour of this function depends on the normalization type being used please see http://www.imagemagick.org/api/morphology.php#ScaleKernelInfo for details. Flag should be one of Imagick::NORMALIZE_KERNEL_VALUE, Imagick::NORMALIZE_KERNEL_CORRELATE, Imagick::NORMALIZE_KERNEL_PERCENT or not set.", "usage": "public void ImagickKernel::scale ( float $scale [, int $normalizeFlag ] )", "url": "https://secure.php.net/manual/en/imagickkernel.scale.php"}, {"name": "ImagickKernel::separate", "synopsis": "Separates a linked set of kernels and returns an array of ImagickKernels.", "usage": "public array ImagickKernel::separate ( void )", "url": "https://secure.php.net/manual/en/imagickkernel.separate.php"}, {"name": "ImagickPixel::clear", "synopsis": null, "usage": "bool ImagickPixel::clear ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.clear.php"}, {"name": "ImagickPixel::__construct", "synopsis": null, "usage": "ImagickPixel::__construct ([ string $color ] )", "url": "https://secure.php.net/manual/en/imagickpixel.construct.php"}, {"name": "ImagickPixel::destroy", "synopsis": null, "usage": "bool ImagickPixel::destroy ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.destroy.php"}, {"name": "ImagickPixel::getColor", "synopsis": "Returns the color described by the ImagickPixel object, as an array. If the color has an opacity channel set, this is provided as a fourth value in the list.", "usage": "array ImagickPixel::getColor ([ int $normalized = 0 ] )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolor.php"}, {"name": "ImagickPixel::getColorAsString", "synopsis": "Returns the color of the ImagickPixel object as a string.", "usage": "string ImagickPixel::getColorAsString ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolorasstring.php"}, {"name": "ImagickPixel::getColorCount", "synopsis": "Returns the color count associated with this color.", "usage": "int ImagickPixel::getColorCount ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolorcount.php"}, {"name": "ImagickPixel::getColorQuantum", "synopsis": "Returns the color of the pixel in an array as Quantum values. If ImageMagick was compiled as HDRI these will be floats, otherwise they will be integers.", "usage": "public array ImagickPixel::getColorQuantum ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolorquantum.php"}, {"name": "ImagickPixel::getColorValue", "synopsis": "Retrieves the value of the color channel specified, as a floating-point number between 0 and 1.", "usage": "float ImagickPixel::getColorValue ( int $color )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolorvalue.php"}, {"name": "ImagickPixel::getColorValueQuantum", "synopsis": "Gets the quantum value of a color in the ImagickPixel. Return value is a float if ImageMagick was compiled with HDRI, otherwise an integer.", "usage": "public number ImagickPixel::getColorValueQuantum ( int $color )", "url": "https://secure.php.net/manual/en/imagickpixel.getcolorvaluequantum.php"}, {"name": "ImagickPixel::getHSL", "synopsis": "Returns the normalized HSL color described by the ImagickPixel object, with each of the three values as floating point numbers between 0.0 and 1.0.", "usage": "array ImagickPixel::getHSL ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.gethsl.php"}, {"name": "ImagickPixel::getIndex", "synopsis": "Gets the colormap index of the pixel wand.", "usage": "public int ImagickPixel::getIndex ( void )", "url": "https://secure.php.net/manual/en/imagickpixel.getindex.php"}, {"name": "ImagickPixel::isPixelSimilar", "synopsis": "Checks the distance between the color described by this ImagickPixel object and that of the provided object, by plotting their RGB values on the color cube. If the distance between the two points is less than the fuzz value given, the colors are similar. This method replaces ImagickPixel::isSimilar() and correctly normalises the fuzz value to ImageMagick QuantumRange.", "usage": "bool ImagickPixel::isPixelSimilar ( ImagickPixel $color , float $fuzz )", "url": "https://secure.php.net/manual/en/imagickpixel.ispixelsimilar.php"}, {"name": "ImagickPixel::isPixelSimilarQuantum", "synopsis": "Returns true if the distance between two colors is less than the specified distance. The fuzz value should be in the range 0-QuantumRange. The maximum value represents the longest possible distance in the colorspace. e.g. from RGB(0, 0, 0) to RGB(255, 255, 255) for the RGB colorspace", "usage": "public bool ImagickPixel::isPixelSimilarQuantum ( string $color [, string $fuzz ] )", "url": "https://secure.php.net/manual/en/imagickpixel.ispixelsimilarquantum.php"}, {"name": "ImagickPixel::isSimilar", "synopsis": null, "usage": "bool ImagickPixel::isSimilar ( ImagickPixel $color , float $fuzz )", "url": "https://secure.php.net/manual/en/imagickpixel.issimilar.php"}, {"name": "ImagickPixel::setColor", "synopsis": null, "usage": "bool ImagickPixel::setColor ( string $color )", "url": "https://secure.php.net/manual/en/imagickpixel.setcolor.php"}, {"name": "ImagickPixel::setcolorcount", "synopsis": "Sets the color count associated with this color.", "usage": "public bool ImagickPixel::setcolorcount ( int $colorCount )", "url": "https://secure.php.net/manual/en/imagickpixel.setcolorcount.php"}, {"name": "ImagickPixel::setColorValue", "synopsis": "Sets the value of the specified channel of this object to the provided value, which should be between 0 and 1. This function can be used to provide an opacity channel to an ImagickPixel object.", "usage": "bool ImagickPixel::setColorValue ( int $color , float $value )", "url": "https://secure.php.net/manual/en/imagickpixel.setcolorvalue.php"}, {"name": "ImagickPixel::setColorValueQuantum", "synopsis": "Sets the quantum value of a color element of the ImagickPixel.", "usage": "public bool ImagickPixel::setColorValueQuantum ( int $color , number $value )", "url": "https://secure.php.net/manual/en/imagickpixel.setcolorvaluequantum.php"}, {"name": "ImagickPixel::setHSL", "synopsis": "Sets the color described by the ImagickPixel object using normalized values for hue, saturation and luminosity.", "usage": "bool ImagickPixel::setHSL ( float $hue , float $saturation , float $luminosity )", "url": "https://secure.php.net/manual/en/imagickpixel.sethsl.php"}, {"name": "ImagickPixel::setIndex", "synopsis": "Sets the colormap index of the pixel wand.", "usage": "public bool ImagickPixel::setIndex ( int $index )", "url": "https://secure.php.net/manual/en/imagickpixel.setindex.php"}, {"name": "ImagickPixelIterator::clear", "synopsis": null, "usage": "bool ImagickPixelIterator::clear ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.clear.php"}, {"name": "ImagickPixelIterator::__construct", "synopsis": null, "usage": "ImagickPixelIterator::__construct ( Imagick $wand )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.construct.php"}, {"name": "ImagickPixelIterator::destroy", "synopsis": null, "usage": "bool ImagickPixelIterator::destroy ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.destroy.php"}, {"name": "ImagickPixelIterator::getCurrentIteratorRow", "synopsis": null, "usage": "array ImagickPixelIterator::getCurrentIteratorRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.getcurrentiteratorrow.php"}, {"name": "ImagickPixelIterator::getIteratorRow", "synopsis": null, "usage": "int ImagickPixelIterator::getIteratorRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.getiteratorrow.php"}, {"name": "ImagickPixelIterator::getNextIteratorRow", "synopsis": null, "usage": "array ImagickPixelIterator::getNextIteratorRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.getnextiteratorrow.php"}, {"name": "ImagickPixelIterator::getPreviousIteratorRow", "synopsis": null, "usage": "array ImagickPixelIterator::getPreviousIteratorRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.getpreviousiteratorrow.php"}, {"name": "ImagickPixelIterator::newPixelIterator", "synopsis": null, "usage": "bool ImagickPixelIterator::newPixelIterator ( Imagick $wand )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.newpixeliterator.php"}, {"name": "ImagickPixelIterator::newPixelRegionIterator", "synopsis": null, "usage": "bool ImagickPixelIterator::newPixelRegionIterator ( Imagick $wand , int $x , int $y , int $columns , int $rows )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.newpixelregioniterator.php"}, {"name": "ImagickPixelIterator::resetIterator", "synopsis": null, "usage": "bool ImagickPixelIterator::resetIterator ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.resetiterator.php"}, {"name": "ImagickPixelIterator::setIteratorFirstRow", "synopsis": null, "usage": "bool ImagickPixelIterator::setIteratorFirstRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.setiteratorfirstrow.php"}, {"name": "ImagickPixelIterator::setIteratorLastRow", "synopsis": null, "usage": "bool ImagickPixelIterator::setIteratorLastRow ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.setiteratorlastrow.php"}, {"name": "ImagickPixelIterator::setIteratorRow", "synopsis": null, "usage": "bool ImagickPixelIterator::setIteratorRow ( int $row )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.setiteratorrow.php"}, {"name": "ImagickPixelIterator::syncIterator", "synopsis": null, "usage": "bool ImagickPixelIterator::syncIterator ( void )", "url": "https://secure.php.net/manual/en/imagickpixeliterator.synciterator.php"}, {"name": "InfiniteIterator::__construct", "synopsis": "Constructs an InfiniteIterator from an Iterator.", "usage": "public InfiniteIterator::__construct ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/infiniteiterator.construct.php"}, {"name": "InfiniteIterator::next", "synopsis": "Moves the inner Iterator forward to its next element if there is one, otherwise rewinds the inner Iterator back to the beginning.", "usage": "public void InfiniteIterator::next ( void )", "url": "https://secure.php.net/manual/en/infiniteiterator.next.php"}, {"name": "Counter::bumpValue", "synopsis": null, "usage": "Counter::bumpValue ( int $offset )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.bumpvalue.php"}, {"name": "Counter::getMeta", "synopsis": null, "usage": "mixed Counter::getMeta ( int $attribute )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.getmeta.php"}, {"name": "Counter::getNamed", "synopsis": null, "usage": "static Counter Counter::getNamed ( string $name )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.getnamed.php"}, {"name": "Counter::getValue", "synopsis": null, "usage": "int Counter::getValue ( void )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.getvalue.php"}, {"name": "__construct", "synopsis": null, "usage": "int getValue ( void )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.php"}, {"name": "Counter::resetValue", "synopsis": null, "usage": "void Counter::resetValue ( void )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.resetvalue.php"}, {"name": "Counter::getNamed()", "synopsis": null, "usage": "static void Counter::setCounterClass ( string $name )", "url": "https://secure.php.net/manual/en/internals2.counter.counter-class.setcounterclass.php"}, {"name": "counter_bump_value", "synopsis": null, "usage": "void counter_bump_value ( resource $counter , int $offset )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-bump-value.php"}, {"name": "counter_bump", "synopsis": null, "usage": "void counter_bump ( int $offset )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-bump.php"}, {"name": "counter_create", "synopsis": null, "usage": "resource counter_create ( string $name [, int $initial_value [, int $flags ]] )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-create.php"}, {"name": "counter_get_meta", "synopsis": null, "usage": "mixed counter_get_meta ( resource $counter , int $attribute )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-get-meta.php"}, {"name": "Counter::getNamed", "synopsis": null, "usage": "resource Counter::getNamed ( string $name )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-get-named.php"}, {"name": "counter_get_value", "synopsis": null, "usage": "int counter_get_value ( resource $counter )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-get-value.php"}, {"name": "counter_get", "synopsis": null, "usage": "int counter_get ( void )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-get.php"}, {"name": "counter_reset_value", "synopsis": null, "usage": "void counter_reset_value ( resource $counter )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-reset-value.php"}, {"name": "counter_reset", "synopsis": null, "usage": "void counter_reset ( void )", "url": "https://secure.php.net/manual/en/internals2.counter.function.counter-reset.php"}, {"name": "IntlBreakIterator::__construct", "synopsis": "", "usage": "private IntlBreakIterator::__construct ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.construct.php"}, {"name": "IntlBreakIterator::createCharacterInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createCharacterInstance ([ string $locale ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createcharacterinstance.php"}, {"name": "IntlBreakIterator::createCodePointInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createCodePointInstance ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createcodepointinstance.php"}, {"name": "IntlBreakIterator::createLineInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createLineInstance ([ string $locale ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createlineinstance.php"}, {"name": "IntlBreakIterator::createSentenceInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createSentenceInstance ([ string $locale ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createsentenceinstance.php"}, {"name": "IntlBreakIterator::createTitleInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createTitleInstance ([ string $locale ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createtitleinstance.php"}, {"name": "IntlBreakIterator::createWordInstance", "synopsis": "", "usage": "public static IntlBreakIterator IntlBreakIterator::createWordInstance ([ string $locale ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.createwordinstance.php"}, {"name": "IntlBreakIterator::current", "synopsis": "", "usage": "public int IntlBreakIterator::current ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.current.php"}, {"name": "IntlBreakIterator::first", "synopsis": "", "usage": "public int IntlBreakIterator::first ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.first.php"}, {"name": "IntlBreakIterator::following", "synopsis": "", "usage": "public int IntlBreakIterator::following ( int $offset )", "url": "https://secure.php.net/manual/en/intlbreakiterator.following.php"}, {"name": "IntlBreakIterator::getErrorCode", "synopsis": "Procedural style:", "usage": "public int IntlBreakIterator::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.geterrorcode.php"}, {"name": "IntlBreakIterator::getErrorMessage", "synopsis": "Procedural style:", "usage": "public string IntlBreakIterator::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.geterrormessage.php"}, {"name": "IntlBreakIterator::getLocale", "synopsis": "", "usage": "public string IntlBreakIterator::getLocale ( string $locale_type )", "url": "https://secure.php.net/manual/en/intlbreakiterator.getlocale.php"}, {"name": "IntlBreakIterator::getPartsIterator", "synopsis": "", "usage": "public IntlPartsIterator IntlBreakIterator::getPartsIterator ([ string $key_type ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.getpartsiterator.php"}, {"name": "IntlBreakIterator::getText", "synopsis": "", "usage": "public string IntlBreakIterator::getText ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.gettext.php"}, {"name": "IntlBreakIterator::isBoundary", "synopsis": "", "usage": "public bool IntlBreakIterator::isBoundary ( int $offset )", "url": "https://secure.php.net/manual/en/intlbreakiterator.isboundary.php"}, {"name": "IntlBreakIterator::last", "synopsis": "", "usage": "public int IntlBreakIterator::last ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.last.php"}, {"name": "IntlBreakIterator::next", "synopsis": "", "usage": "public int IntlBreakIterator::next ([ int $offset ] )", "url": "https://secure.php.net/manual/en/intlbreakiterator.next.php"}, {"name": "IntlBreakIterator::preceding", "synopsis": "", "usage": "public int IntlBreakIterator::preceding ( int $offset )", "url": "https://secure.php.net/manual/en/intlbreakiterator.preceding.php"}, {"name": "IntlBreakIterator::previous", "synopsis": "", "usage": "public int IntlBreakIterator::previous ( void )", "url": "https://secure.php.net/manual/en/intlbreakiterator.previous.php"}, {"name": "IntlBreakIterator::setText", "synopsis": "", "usage": "public bool IntlBreakIterator::setText ( string $text )", "url": "https://secure.php.net/manual/en/intlbreakiterator.settext.php"}, {"name": "IntlCalendar::add", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::add ( int $field , int $amount )", "url": "https://secure.php.net/manual/en/intlcalendar.add.php"}, {"name": "IntlCalendar::after", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::after ( IntlCalendar $other )", "url": "https://secure.php.net/manual/en/intlcalendar.after.php"}, {"name": "IntlCalendar::before", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::before ( IntlCalendar $other )", "url": "https://secure.php.net/manual/en/intlcalendar.before.php"}, {"name": "IntlCalendar::clear", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::clear ([ int $field = NULL ] )", "url": "https://secure.php.net/manual/en/intlcalendar.clear.php"}, {"name": "IntlCalendar::__construct", "synopsis": "A private constructor for disallowing instantiation with the new operator.", "usage": "private IntlCalendar::__construct ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.construct.php"}, {"name": "IntlCalendar::createInstance", "synopsis": "Procedural style", "usage": "public static IntlCalendar IntlCalendar::createInstance ([ mixed $timeZone = NULL [, string $locale = \"\" ]] )", "url": "https://secure.php.net/manual/en/intlcalendar.createinstance.php"}, {"name": "IntlCalendar::equals", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::equals ( IntlCalendar $other )", "url": "https://secure.php.net/manual/en/intlcalendar.equals.php"}, {"name": "IntlCalendar::fieldDifference", "synopsis": "Procedural style", "usage": "public int IntlCalendar::fieldDifference ( float $when , int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.fielddifference.php"}, {"name": "IntlCalendar::fromDateTime", "synopsis": "Procedural style", "usage": "public static IntlCalendar IntlCalendar::fromDateTime ( mixed $dateTime )", "url": "https://secure.php.net/manual/en/intlcalendar.fromdatetime.php"}, {"name": "IntlCalendar::get", "synopsis": "Procedural style", "usage": "public int IntlCalendar::get ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.get.php"}, {"name": "IntlCalendar::getActualMaximum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getActualMaximum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getactualmaximum.php"}, {"name": "IntlCalendar::getActualMinimum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getActualMinimum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getactualminimum.php"}, {"name": "IntlCalendar::getAvailableLocales", "synopsis": "Procedural style", "usage": "public static array IntlCalendar::getAvailableLocales ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getavailablelocales.php"}, {"name": "IntlCalendar::getDayOfWeekType", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getDayOfWeekType ( int $dayOfWeek )", "url": "https://secure.php.net/manual/en/intlcalendar.getdayofweektype.php"}, {"name": "IntlCalendar::getErrorCode", "synopsis": "Procedural style:", "usage": "public int IntlCalendar::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.geterrorcode.php"}, {"name": "IntlCalendar::getErrorMessage", "synopsis": "Procedural style:", "usage": "public string IntlCalendar::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.geterrormessage.php"}, {"name": "IntlCalendar::getFirstDayOfWeek", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getFirstDayOfWeek ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getfirstdayofweek.php"}, {"name": "IntlCalendar::getGreatestMinimum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getGreatestMinimum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getgreatestminimum.php"}, {"name": "IntlCalendar::getKeywordValuesForLocale", "synopsis": "Procedural style", "usage": "public static Iterator IntlCalendar::getKeywordValuesForLocale ( string $key , string $locale , bool $commonlyUsed )", "url": "https://secure.php.net/manual/en/intlcalendar.getkeywordvaluesforlocale.php"}, {"name": "IntlCalendar::getLeastMaximum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getLeastMaximum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getleastmaximum.php"}, {"name": "IntlCalendar::getLocale", "synopsis": "Procedural style", "usage": "public string IntlCalendar::getLocale ( int $localeType )", "url": "https://secure.php.net/manual/en/intlcalendar.getlocale.php"}, {"name": "IntlCalendar::getMaximum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getMaximum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getmaximum.php"}, {"name": "IntlCalendar::getMinimalDaysInFirstWeek", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getMinimalDaysInFirstWeek ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getminimaldaysinfirstweek.php"}, {"name": "IntlCalendar::getMinimum", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getMinimum ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.getminimum.php"}, {"name": "IntlCalendar::getNow", "synopsis": "Procedural style", "usage": "public static float IntlCalendar::getNow ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getnow.php"}, {"name": "IntlCalendar::getRepeatedWallTimeOption", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getRepeatedWallTimeOption ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getrepeatedwalltimeoption.php"}, {"name": "IntlCalendar::getSkippedWallTimeOption", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getSkippedWallTimeOption ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.getskippedwalltimeoption.php"}, {"name": "IntlCalendar::getTime", "synopsis": "Procedural style", "usage": "public float IntlCalendar::getTime ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.gettime.php"}, {"name": "IntlCalendar::getTimeZone", "synopsis": "Procedural style", "usage": "public IntlTimeZone IntlCalendar::getTimeZone ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.gettimezone.php"}, {"name": "IntlCalendar::getType", "synopsis": "Procedural style", "usage": "public string IntlCalendar::getType ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.gettype.php"}, {"name": "IntlCalendar::getWeekendTransition", "synopsis": "Procedural style", "usage": "public int IntlCalendar::getWeekendTransition ( string $dayOfWeek )", "url": "https://secure.php.net/manual/en/intlcalendar.getweekendtransition.php"}, {"name": "IntlCalendar::inDaylightTime", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::inDaylightTime ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.indaylighttime.php"}, {"name": "IntlCalendar::isEquivalentTo", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::isEquivalentTo ( IntlCalendar $other )", "url": "https://secure.php.net/manual/en/intlcalendar.isequivalentto.php"}, {"name": "IntlCalendar::isLenient", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::isLenient ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.islenient.php"}, {"name": "IntlCalendar::isSet", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::isSet ( int $field )", "url": "https://secure.php.net/manual/en/intlcalendar.isset.php"}, {"name": "IntlCalendar::isWeekend", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::isWeekend ([ float $date = NULL ] )", "url": "https://secure.php.net/manual/en/intlcalendar.isweekend.php"}, {"name": "IntlCalendar::roll", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::roll ( int $field , mixed $amountOrUpOrDown )", "url": "https://secure.php.net/manual/en/intlcalendar.roll.php"}, {"name": "IntlCalendar::set", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::set ( int $field , int $value )", "url": "https://secure.php.net/manual/en/intlcalendar.set.php"}, {"name": "IntlCalendar::setFirstDayOfWeek", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setFirstDayOfWeek ( int $dayOfWeek )", "url": "https://secure.php.net/manual/en/intlcalendar.setfirstdayofweek.php"}, {"name": "IntlCalendar::setLenient", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setLenient ( bool $isLenient )", "url": "https://secure.php.net/manual/en/intlcalendar.setlenient.php"}, {"name": "IntlCalendar::setMinimalDaysInFirstWeek", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setMinimalDaysInFirstWeek ( int $minimalDays )", "url": "https://secure.php.net/manual/en/intlcalendar.setminimaldaysinfirstweek.php"}, {"name": "IntlCalendar::setRepeatedWallTimeOption", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setRepeatedWallTimeOption ( int $wallTimeOption )", "url": "https://secure.php.net/manual/en/intlcalendar.setrepeatedwalltimeoption.php"}, {"name": "IntlCalendar::setSkippedWallTimeOption", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setSkippedWallTimeOption ( int $wallTimeOption )", "url": "https://secure.php.net/manual/en/intlcalendar.setskippedwalltimeoption.php"}, {"name": "IntlCalendar::setTime", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setTime ( float $date )", "url": "https://secure.php.net/manual/en/intlcalendar.settime.php"}, {"name": "IntlCalendar::setTimeZone", "synopsis": "Procedural style", "usage": "public bool IntlCalendar::setTimeZone ( mixed $timeZone )", "url": "https://secure.php.net/manual/en/intlcalendar.settimezone.php"}, {"name": "IntlCalendar::toDateTime", "synopsis": "Procedural style", "usage": "public DateTime IntlCalendar::toDateTime ( void )", "url": "https://secure.php.net/manual/en/intlcalendar.todatetime.php"}, {"name": "IntlChar::charAge", "synopsis": "Gets the \"age\" of the code point.", "usage": "public static array IntlChar::charAge ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.charage.php"}, {"name": "IntlChar::charDigitValue", "synopsis": "Returns the decimal digit value of a decimal digit character.", "usage": "public static int IntlChar::charDigitValue ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.chardigitvalue.php"}, {"name": "IntlChar::charDirection", "synopsis": "Returns the bidirectional category value for the code point, which is used in the \u00bb\u00a0Unicode bidirectional algorithm (UAX #9).", "usage": "public static int IntlChar::charDirection ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.chardirection.php"}, {"name": "IntlChar::charFromName", "synopsis": "Finds a Unicode character by its name and returns its code point value.", "usage": "public static int IntlChar::charFromName ( string $characterName [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ] )", "url": "https://secure.php.net/manual/en/intlchar.charfromname.php"}, {"name": "IntlChar::charMirror", "synopsis": "Maps the specified character to a \"mirror-image\" character.", "usage": "public static mixed IntlChar::charMirror ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.charmirror.php"}, {"name": "IntlChar::charName", "synopsis": "Retrieves the name of a Unicode character.", "usage": "public static string IntlChar::charName ( mixed $codepoint [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ] )", "url": "https://secure.php.net/manual/en/intlchar.charname.php"}, {"name": "IntlChar::charType", "synopsis": "Returns the general category value for the code point.", "usage": "public static int IntlChar::charType ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.chartype.php"}, {"name": "IntlChar::chr", "synopsis": "Returns a string containing the character specified by the Unicode code point value.", "usage": "public static string IntlChar::chr ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.chr.php"}, {"name": "IntlChar::digit", "synopsis": "Returns the decimal digit value of the code point in the specified radix.", "usage": "public static int IntlChar::digit ( string $codepoint [, int $radix = 10 ] )", "url": "https://secure.php.net/manual/en/intlchar.digit.php"}, {"name": "IntlChar::enumCharNames", "synopsis": "Enumerate all assigned Unicode characters between the start and limit code points (start inclusive, limit exclusive) and call a function for each, passing the code point value and the character name.", "usage": "public static void IntlChar::enumCharNames ( mixed $start , mixed $limit , callable $callback [, int $nameChoice = IntlChar::UNICODE_CHAR_NAME ] )", "url": "https://secure.php.net/manual/en/intlchar.enumcharnames.php"}, {"name": "IntlChar::enumCharTypes", "synopsis": "Enumerates efficiently all code points with their Unicode general categories. This is useful for building data structures, for enumerating all assigned code points, etc.", "usage": "public static void IntlChar::enumCharTypes ( callable $callback )", "url": "https://secure.php.net/manual/en/intlchar.enumchartypes.php"}, {"name": "IntlChar::foldCase", "synopsis": "The given character is mapped to its case folding equivalent; if the character has no case folding equivalent, the character itself is returned.", "usage": "public static mixed IntlChar::foldCase ( mixed $codepoint [, int $options = IntlChar::FOLD_CASE_DEFAULT ] )", "url": "https://secure.php.net/manual/en/intlchar.foldcase.php"}, {"name": "IntlChar::forDigit", "synopsis": "Determines the character representation for a specific digit in the specified radix.", "usage": "public static int IntlChar::forDigit ( int $digit [, int $radix = 10 ] )", "url": "https://secure.php.net/manual/en/intlchar.fordigit.php"}, {"name": "IntlChar::getBidiPairedBracket", "synopsis": "Maps the specified character to its paired bracket character.", "usage": "public static mixed IntlChar::getBidiPairedBracket ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.getbidipairedbracket.php"}, {"name": "IntlChar::getBlockCode", "synopsis": "Returns the Unicode allocation block that contains the character.", "usage": "public static int IntlChar::getBlockCode ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.getblockcode.php"}, {"name": "IntlChar::getCombiningClass", "synopsis": "Returns the combining class of the code point.", "usage": "public static int IntlChar::getCombiningClass ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.getcombiningclass.php"}, {"name": "IntlChar::getFC_NFKC_Closure", "synopsis": "Gets the FC_NFKC_Closure property string for a character.", "usage": "public static string IntlChar::getFC_NFKC_Closure ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.getfc-nfkc-closure.php"}, {"name": "IntlChar::getIntPropertyMaxValue", "synopsis": "Gets the maximum value for an enumerated/integer/binary Unicode property.", "usage": "public static int IntlChar::getIntPropertyMaxValue ( int $property )", "url": "https://secure.php.net/manual/en/intlchar.getintpropertymaxvalue.php"}, {"name": "IntlChar::getIntPropertyMinValue", "synopsis": "Gets the minimum value for an enumerated/integer/binary Unicode property.", "usage": "public static int IntlChar::getIntPropertyMinValue ( int $property )", "url": "https://secure.php.net/manual/en/intlchar.getintpropertyminvalue.php"}, {"name": "IntlChar::getIntPropertyValue", "synopsis": "Gets the property value for an enumerated or integer Unicode property for a code point. Also returns binary and mask property values.", "usage": "public static int IntlChar::getIntPropertyValue ( mixed $codepoint , int $property )", "url": "https://secure.php.net/manual/en/intlchar.getintpropertyvalue.php"}, {"name": "IntlChar::getNumericValue", "synopsis": "Gets the numeric value for a Unicode code point as defined in the Unicode Character Database.", "usage": "public static float IntlChar::getNumericValue ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.getnumericvalue.php"}, {"name": "IntlChar::getPropertyEnum", "synopsis": "Returns the property constant value for a given property name, as specified in the Unicode database file PropertyAliases.txt. Short, long, and any other variants are recognized.", "usage": "public static int IntlChar::getPropertyEnum ( string $alias )", "url": "https://secure.php.net/manual/en/intlchar.getpropertyenum.php"}, {"name": "IntlChar::getPropertyName", "synopsis": "Returns the Unicode name for a given property, as given in the Unicode database file PropertyAliases.txt.", "usage": "public static string IntlChar::getPropertyName ( int $property [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME ] )", "url": "https://secure.php.net/manual/en/intlchar.getpropertyname.php"}, {"name": "IntlChar::getPropertyValueEnum", "synopsis": "Returns the property value integer for a given value name, as specified in the Unicode database file PropertyValueAliases.txt. Short, long, and any other variants are recognized.", "usage": "public static int IntlChar::getPropertyValueEnum ( int $property , string $name )", "url": "https://secure.php.net/manual/en/intlchar.getpropertyvalueenum.php"}, {"name": "IntlChar::getPropertyValueName", "synopsis": "Returns the Unicode name for a given property value, as given in the Unicode database file PropertyValueAliases.txt.", "usage": "public static string IntlChar::getPropertyValueName ( int $property , int $value [, int $nameChoice = IntlChar::LONG_PROPERTY_NAME ] )", "url": "https://secure.php.net/manual/en/intlchar.getpropertyvaluename.php"}, {"name": "IntlChar::getUnicodeVersion", "synopsis": "Gets the Unicode version information.", "usage": "public static array IntlChar::getUnicodeVersion ( void )", "url": "https://secure.php.net/manual/en/intlchar.getunicodeversion.php"}, {"name": "IntlChar::hasBinaryProperty", "synopsis": "Checks a binary Unicode property for a code point.", "usage": "public static bool IntlChar::hasBinaryProperty ( mixed $codepoint , int $property )", "url": "https://secure.php.net/manual/en/intlchar.hasbinaryproperty.php"}, {"name": "IntlChar::isalnum", "synopsis": "Determines whether the specified code point is an alphanumeric character (letter or digit). TRUE for characters with general categories \"L\" (letters) and \"Nd\" (decimal digit numbers).", "usage": "public static bool IntlChar::isalnum ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isalnum.php"}, {"name": "IntlChar::isalpha", "synopsis": "Determines whether the specified code point is a letter character. TRUE for general categories \"L\" (letters).", "usage": "public static bool IntlChar::isalpha ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isalpha.php"}, {"name": "IntlChar::isbase", "synopsis": "Determines whether the specified code point is a base character. TRUE for general categories \"L\" (letters), \"N\" (numbers), \"Mc\" (spacing combining marks), and \"Me\" (enclosing marks).", "usage": "public static bool IntlChar::isbase ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isbase.php"}, {"name": "IntlChar::isblank", "synopsis": "Determines whether the specified code point is a \"blank\" or \"horizontal space\", a character that visibly separates words on a line.", "usage": "public static bool IntlChar::isblank ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isblank.php"}, {"name": "IntlChar::iscntrl", "synopsis": "Determines whether the specified code point is a control character.", "usage": "public static bool IntlChar::iscntrl ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.iscntrl.php"}, {"name": "IntlChar::isdefined", "synopsis": "Determines whether the specified code point is \"defined\", which usually means that it is assigned a character.", "usage": "public static bool IntlChar::isdefined ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isdefined.php"}, {"name": "IntlChar::isdigit", "synopsis": "Determines whether the specified code point is a digit character.", "usage": "public static bool IntlChar::isdigit ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isdigit.php"}, {"name": "IntlChar::isgraph", "synopsis": "Determines whether the specified code point is a \"graphic\" character (printable, excluding spaces).", "usage": "public static bool IntlChar::isgraph ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isgraph.php"}, {"name": "IntlChar::isIDIgnorable", "synopsis": "Determines if the specified character should be regarded as an ignorable character in an identifier.", "usage": "public static bool IntlChar::isIDIgnorable ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isidignorable.php"}, {"name": "IntlChar::isIDPart", "synopsis": "Determines if the specified character is permissible in an identifier.", "usage": "public static bool IntlChar::isIDPart ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isidpart.php"}, {"name": "IntlChar::isIDStart", "synopsis": "Determines if the specified character is permissible as the first character in an identifier according to Unicode (The Unicode Standard, Version 3.0, chapter 5.16 Identifiers).", "usage": "public static bool IntlChar::isIDStart ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isidstart.php"}, {"name": "IntlChar::isISOControl", "synopsis": "Determines whether the specified code point is an ISO control code.", "usage": "public static bool IntlChar::isISOControl ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isisocontrol.php"}, {"name": "IntlChar::isJavaIDPart", "synopsis": "Determines if the specified character is permissible in a Java identifier.", "usage": "public static bool IntlChar::isJavaIDPart ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isjavaidpart.php"}, {"name": "IntlChar::isJavaIDStart", "synopsis": "Determines if the specified character is permissible as the start of a Java identifier.", "usage": "public static bool IntlChar::isJavaIDStart ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isjavaidstart.php"}, {"name": "IntlChar::isJavaSpaceChar", "synopsis": "Determine if the specified code point is a space character according to Java.", "usage": "public static bool IntlChar::isJavaSpaceChar ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isjavaspacechar.php"}, {"name": "IntlChar::islower", "synopsis": "Determines whether the specified code point has the general category \"Ll\" (lowercase letter).", "usage": "public static bool IntlChar::islower ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.islower.php"}, {"name": "IntlChar::isMirrored", "synopsis": "Determines whether the code point has the Bidi_Mirrored property.", "usage": "public static bool IntlChar::isMirrored ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.ismirrored.php"}, {"name": "IntlChar::isprint", "synopsis": "Determines whether the specified code point is a printable character.", "usage": "public static bool IntlChar::isprint ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isprint.php"}, {"name": "IntlChar::ispunct", "synopsis": "Determines whether the specified code point is a punctuation character.", "usage": "public static bool IntlChar::ispunct ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.ispunct.php"}, {"name": "IntlChar::isspace", "synopsis": "Determines if the specified character is a space character or not.", "usage": "public static bool IntlChar::isspace ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isspace.php"}, {"name": "IntlChar::istitle", "synopsis": "Determines whether the specified code point is a titlecase letter.", "usage": "public static bool IntlChar::istitle ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.istitle.php"}, {"name": "IntlChar::isUAlphabetic", "synopsis": "Check if a code point has the Alphabetic Unicode property.", "usage": "public static bool IntlChar::isUAlphabetic ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isualphabetic.php"}, {"name": "IntlChar::isULowercase", "synopsis": "Check if a code point has the Lowercase Unicode property.", "usage": "public static bool IntlChar::isULowercase ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isulowercase.php"}, {"name": "IntlChar::isupper", "synopsis": "Determines whether the specified code point has the general category \"Lu\" (uppercase letter).", "usage": "public static bool IntlChar::isupper ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isupper.php"}, {"name": "IntlChar::isUUppercase", "synopsis": "Check if a code point has the Uppercase Unicode property.", "usage": "public static bool IntlChar::isUUppercase ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isuuppercase.php"}, {"name": "IntlChar::isUWhiteSpace", "synopsis": "Check if a code point has the White_Space Unicode property.", "usage": "public static bool IntlChar::isUWhiteSpace ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isuwhitespace.php"}, {"name": "IntlChar::isWhitespace", "synopsis": "Determines if the specified code point is a whitespace character according to ICU.", "usage": "public static bool IntlChar::isWhitespace ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.iswhitespace.php"}, {"name": "IntlChar::isxdigit", "synopsis": "Determines whether the specified code point is a hexadecimal digit.", "usage": "public static bool IntlChar::isxdigit ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.isxdigit.php"}, {"name": "IntlChar::ord", "synopsis": "Returns the Unicode code point value of the given character.", "usage": "public static int IntlChar::ord ( mixed $character )", "url": "https://secure.php.net/manual/en/intlchar.ord.php"}, {"name": "IntlChar::tolower", "synopsis": "The given character is mapped to its lowercase equivalent. If the character has no lowercase equivalent, the original character itself is returned.", "usage": "public static mixed IntlChar::tolower ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.tolower.php"}, {"name": "IntlChar::totitle", "synopsis": "The given character is mapped to its titlecase equivalent. If the character has no titlecase equivalent, the original character itself is returned.", "usage": "public static mixed IntlChar::totitle ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.totitle.php"}, {"name": "IntlChar::toupper", "synopsis": "The given character is mapped to its uppercase equivalent. If the character has no uppercase equivalent, the character itself is returned.", "usage": "public static mixed IntlChar::toupper ( mixed $codepoint )", "url": "https://secure.php.net/manual/en/intlchar.toupper.php"}, {"name": "IntlCodePointBreakIterator::getLastCodePoint", "synopsis": "", "usage": "public int IntlCodePointBreakIterator::getLastCodePoint ( void )", "url": "https://secure.php.net/manual/en/intlcodepointbreakiterator.getlastcodepoint.php"}, {"name": "IntlDateFormatter::create", "synopsis": "Object oriented style (constructor)", "usage": "public static IntlDateFormatter IntlDateFormatter::create ( string $locale , int $datetype , int $timetype [, mixed $timezone = NULL [, mixed $calendar = NULL [, string $pattern = \"\" ]]] )", "url": "https://secure.php.net/manual/en/intldateformatter.create.php"}, {"name": "IntlDateFormatter::format", "synopsis": "Procedural style", "usage": "public string IntlDateFormatter::format ( mixed $value )", "url": "https://secure.php.net/manual/en/intldateformatter.format.php"}, {"name": "IntlDateFormatter::formatObject", "synopsis": "Procedural style", "usage": "public static string IntlDateFormatter::formatObject ( object $object [, mixed $format = NULL [, string $locale = NULL ]] )", "url": "https://secure.php.net/manual/en/intldateformatter.formatobject.php"}, {"name": "IntlDateFormatter::getCalendar", "synopsis": "Procedural style", "usage": "int IntlDateFormatter::getCalendar ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.getcalendar.php"}, {"name": "IntlDateFormatter::getCalendarObject", "synopsis": "Procedural style", "usage": "public IntlCalendar IntlDateFormatter::getCalendarObject ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.getcalendarobject.php"}, {"name": "IntlDateFormatter::getDateType", "synopsis": "Procedural style", "usage": "public int IntlDateFormatter::getDateType ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.getdatetype.php"}, {"name": "IntlDateFormatter::getErrorCode", "synopsis": "Procedural style", "usage": "public int IntlDateFormatter::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.geterrorcode.php"}, {"name": "IntlDateFormatter::getErrorMessage", "synopsis": "Procedural style", "usage": "public string IntlDateFormatter::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.geterrormessage.php"}, {"name": "IntlDateFormatter::getLocale", "synopsis": "Procedural style", "usage": "public string IntlDateFormatter::getLocale ([ int $which ] )", "url": "https://secure.php.net/manual/en/intldateformatter.getlocale.php"}, {"name": "IntlDateFormatter::getPattern", "synopsis": "Procedural style", "usage": "public string IntlDateFormatter::getPattern ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.getpattern.php"}, {"name": "IntlDateFormatter::getTimeType", "synopsis": "Procedural style", "usage": "public int IntlDateFormatter::getTimeType ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.gettimetype.php"}, {"name": "IntlDateFormatter::getTimeZone", "synopsis": "Procedural style", "usage": "public IntlTimeZone IntlDateFormatter::getTimeZone ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.gettimezone.php"}, {"name": "IntlDateFormatter::getTimeZoneId", "synopsis": "Procedural style", "usage": "public string IntlDateFormatter::getTimeZoneId ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.gettimezoneid.php"}, {"name": "IntlDateFormatter::isLenient", "synopsis": "Procedural style", "usage": "public bool IntlDateFormatter::isLenient ( void )", "url": "https://secure.php.net/manual/en/intldateformatter.islenient.php"}, {"name": "IntlDateFormatter::localtime", "synopsis": "Procedural style", "usage": "public array IntlDateFormatter::localtime ( string $value [, int &$position ] )", "url": "https://secure.php.net/manual/en/intldateformatter.localtime.php"}, {"name": "IntlDateFormatter::parse", "synopsis": "Procedural style", "usage": "public int IntlDateFormatter::parse ( string $value [, int &$position ] )", "url": "https://secure.php.net/manual/en/intldateformatter.parse.php"}, {"name": "IntlDateFormatter::setCalendar", "synopsis": "Procedural style", "usage": "bool IntlDateFormatter::setCalendar ( mixed $which )", "url": "https://secure.php.net/manual/en/intldateformatter.setcalendar.php"}, {"name": "IntlDateFormatter::setLenient", "synopsis": "Procedural style", "usage": "public bool IntlDateFormatter::setLenient ( bool $lenient )", "url": "https://secure.php.net/manual/en/intldateformatter.setlenient.php"}, {"name": "IntlDateFormatter::setPattern", "synopsis": "Procedural style", "usage": "public bool IntlDateFormatter::setPattern ( string $pattern )", "url": "https://secure.php.net/manual/en/intldateformatter.setpattern.php"}, {"name": "IntlDateFormatter::setTimeZone", "synopsis": "Procedural style", "usage": "public bool IntlDateFormatter::setTimeZone ( mixed $zone )", "url": "https://secure.php.net/manual/en/intldateformatter.settimezone.php"}, {"name": "IntlDateFormatter::setTimeZoneId", "synopsis": "Procedural style", "usage": "public bool IntlDateFormatter::setTimeZoneId ( string $zone )", "url": "https://secure.php.net/manual/en/intldateformatter.settimezoneid.php"}, {"name": "IntlGregorianCalendar::getGregorianChange", "synopsis": "", "usage": "public float IntlGregorianCalendar::getGregorianChange ( void )", "url": "https://secure.php.net/manual/en/intlgregoriancalendar.getgregorianchange.php"}, {"name": "IntlGregorianCalendar::isLeapYear", "synopsis": "", "usage": "public bool IntlGregorianCalendar::isLeapYear ( int $year )", "url": "https://secure.php.net/manual/en/intlgregoriancalendar.isleapyear.php"}, {"name": "IntlGregorianCalendar::setGregorianChange", "synopsis": "", "usage": "public bool IntlGregorianCalendar::setGregorianChange ( float $date )", "url": "https://secure.php.net/manual/en/intlgregoriancalendar.setgregorianchange.php"}, {"name": "IntlIterator::current", "synopsis": "", "usage": "public mixed IntlIterator::current ( void )", "url": "https://secure.php.net/manual/en/intliterator.current.php"}, {"name": "IntlIterator::key", "synopsis": "", "usage": "public string IntlIterator::key ( void )", "url": "https://secure.php.net/manual/en/intliterator.key.php"}, {"name": "IntlIterator::next", "synopsis": "", "usage": "public void IntlIterator::next ( void )", "url": "https://secure.php.net/manual/en/intliterator.next.php"}, {"name": "IntlIterator::rewind", "synopsis": "", "usage": "public void IntlIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/intliterator.rewind.php"}, {"name": "IntlIterator::valid", "synopsis": "", "usage": "public bool IntlIterator::valid ( void )", "url": "https://secure.php.net/manual/en/intliterator.valid.php"}, {"name": "IntlPartsIterator::getBreakIterator", "synopsis": "", "usage": "public IntlBreakIterator IntlPartsIterator::getBreakIterator ( void )", "url": "https://secure.php.net/manual/en/intlpartsiterator.getbreakiterator.php"}, {"name": "IntlRuleBasedBreakIterator::__construct", "synopsis": "", "usage": "public IntlRuleBasedBreakIterator::__construct ( string $rules [, string $areCompiled ] )", "url": "https://secure.php.net/manual/en/intlrulebasedbreakiterator.construct.php"}, {"name": "IntlRuleBasedBreakIterator::getBinaryRules", "synopsis": "", "usage": "public string IntlRuleBasedBreakIterator::getBinaryRules ( void )", "url": "https://secure.php.net/manual/en/intlrulebasedbreakiterator.getbinaryrules.php"}, {"name": "IntlRuleBasedBreakIterator::getRules", "synopsis": "", "usage": "public string IntlRuleBasedBreakIterator::getRules ( void )", "url": "https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrules.php"}, {"name": "IntlRuleBasedBreakIterator::getRuleStatus", "synopsis": "", "usage": "public int IntlRuleBasedBreakIterator::getRuleStatus ( void )", "url": "https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrulestatus.php"}, {"name": "IntlRuleBasedBreakIterator::getRuleStatusVec", "synopsis": "", "usage": "public array IntlRuleBasedBreakIterator::getRuleStatusVec ( void )", "url": "https://secure.php.net/manual/en/intlrulebasedbreakiterator.getrulestatusvec.php"}, {"name": "IntlTimeZone::countEquivalentIDs", "synopsis": "", "usage": "public static int IntlTimeZone::countEquivalentIDs ( string $zoneId )", "url": "https://secure.php.net/manual/en/intltimezone.countequivalentids.php"}, {"name": "IntlTimeZone::createDefault", "synopsis": "", "usage": "public static IntlTimeZone IntlTimeZone::createDefault ( void )", "url": "https://secure.php.net/manual/en/intltimezone.createdefault.php"}, {"name": "IntlTimeZone::createEnumeration", "synopsis": "", "usage": "public static IntlIterator IntlTimeZone::createEnumeration ([ mixed $countryOrRawOffset ] )", "url": "https://secure.php.net/manual/en/intltimezone.createenumeration.php"}, {"name": "IntlTimeZone::createTimeZone", "synopsis": "", "usage": "public static IntlTimeZone IntlTimeZone::createTimeZone ( string $zoneId )", "url": "https://secure.php.net/manual/en/intltimezone.createtimezone.php"}, {"name": "IntlTimeZone::createTimeZoneIDEnumeration", "synopsis": "", "usage": "public static IntlIterator IntlTimeZone::createTimeZoneIDEnumeration ( int $zoneType [, string $region [, int $rawOffset ]] )", "url": "https://secure.php.net/manual/en/intltimezone.createtimezoneidenumeration.php"}, {"name": "IntlTimeZone::fromDateTimeZone", "synopsis": "", "usage": "public static IntlTimeZone IntlTimeZone::fromDateTimeZone ( DateTimeZone $zoneId )", "url": "https://secure.php.net/manual/en/intltimezone.fromdatetimezone.php"}, {"name": "IntlTimeZone::getCanonicalID", "synopsis": "", "usage": "public static string IntlTimeZone::getCanonicalID ( string $zoneId [, bool &$isSystemID ] )", "url": "https://secure.php.net/manual/en/intltimezone.getcanonicalid.php"}, {"name": "IntlTimeZone::getDisplayName", "synopsis": "", "usage": "public string IntlTimeZone::getDisplayName ([ bool $isDaylight [, int $style [, string $locale ]]] )", "url": "https://secure.php.net/manual/en/intltimezone.getdisplayname.php"}, {"name": "IntlTimeZone::getDSTSavings", "synopsis": "", "usage": "public int IntlTimeZone::getDSTSavings ( void )", "url": "https://secure.php.net/manual/en/intltimezone.getdstsavings.php"}, {"name": "IntlTimeZone::getEquivalentID", "synopsis": "", "usage": "public static string IntlTimeZone::getEquivalentID ( string $zoneId , int $index )", "url": "https://secure.php.net/manual/en/intltimezone.getequivalentid.php"}, {"name": "IntlTimeZone::getErrorCode", "synopsis": "Procedural style:", "usage": "public int IntlTimeZone::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/intltimezone.geterrorcode.php"}, {"name": "IntlTimeZone::getErrorMessage", "synopsis": "Procedural style:", "usage": "public string IntlTimeZone::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/intltimezone.geterrormessage.php"}, {"name": "IntlTimeZone::getGMT", "synopsis": "", "usage": "public static IntlTimeZone IntlTimeZone::getGMT ( void )", "url": "https://secure.php.net/manual/en/intltimezone.getgmt.php"}, {"name": "IntlTimeZone::getID", "synopsis": "", "usage": "public string IntlTimeZone::getID ( void )", "url": "https://secure.php.net/manual/en/intltimezone.getid.php"}, {"name": "IntlTimeZone::getIDForWindowsID", "synopsis": "Translates a Windows timezone (e.g. \"Pacific Standard Time\") into a system timezone (e.g. \"America/Los_Angeles\").", "usage": "public static string IntlTimeZone::getIDForWindowsID ( string $timezone [, string $region ] )", "url": "https://secure.php.net/manual/en/intltimezone.getidforwindowsid.php"}, {"name": "IntlTimeZone::getOffset", "synopsis": "", "usage": "public int IntlTimeZone::getOffset ( float $date , bool $local , int &$rawOffset , int &$dstOffset )", "url": "https://secure.php.net/manual/en/intltimezone.getoffset.php"}, {"name": "IntlTimeZone::getRawOffset", "synopsis": "", "usage": "public int IntlTimeZone::getRawOffset ( void )", "url": "https://secure.php.net/manual/en/intltimezone.getrawoffset.php"}, {"name": "IntlTimeZone::getRegion", "synopsis": "", "usage": "public static string IntlTimeZone::getRegion ( string $zoneId )", "url": "https://secure.php.net/manual/en/intltimezone.getregion.php"}, {"name": "IntlTimeZone::getTZDataVersion", "synopsis": "", "usage": "public static string IntlTimeZone::getTZDataVersion ( void )", "url": "https://secure.php.net/manual/en/intltimezone.gettzdataversion.php"}, {"name": "IntlTimeZone::getUnknown", "synopsis": "", "usage": "public static IntlTimeZone IntlTimeZone::getUnknown ( void )", "url": "https://secure.php.net/manual/en/intltimezone.getunknown.php"}, {"name": "IntlTimeZone::getWindowsID", "synopsis": "Translates a system timezone (e.g. \"America/Los_Angeles\") into a Windows timezone (e.g. \"Pacific Standard Time\").", "usage": "public static string IntlTimeZone::getWindowsID ( string $timezone )", "url": "https://secure.php.net/manual/en/intltimezone.getwindowsid.php"}, {"name": "IntlTimeZone::hasSameRules", "synopsis": "", "usage": "public bool IntlTimeZone::hasSameRules ( IntlTimeZone $otherTimeZone )", "url": "https://secure.php.net/manual/en/intltimezone.hassamerules.php"}, {"name": "IntlTimeZone::toDateTimeZone", "synopsis": "", "usage": "public DateTimeZone IntlTimeZone::toDateTimeZone ( void )", "url": "https://secure.php.net/manual/en/intltimezone.todatetimezone.php"}, {"name": "IntlTimeZone::useDaylightTime", "synopsis": "", "usage": "public bool IntlTimeZone::useDaylightTime ( void )", "url": "https://secure.php.net/manual/en/intltimezone.usedaylighttime.php"}, {"name": "CommonMark\\Parse", "synopsis": null, "usage": "CommonMark\\Node CommonMark\\Parse ( string $content [, int $options ] )", "url": "https://secure.php.net/manual/en/intro.cmark.php"}, {"name": "Componere\\Definition::__construct", "synopsis": null, "usage": "Type Componere\\cast ( Type , $object )", "url": "https://secure.php.net/manual/en/intro.componere.php"}, {"name": "Iterator::current", "synopsis": "Returns the current element.", "usage": "abstract public mixed Iterator::current ( void )", "url": "https://secure.php.net/manual/en/iterator.current.php"}, {"name": "Iterator::key", "synopsis": "Returns the key of the current element.", "usage": "abstract public scalar Iterator::key ( void )", "url": "https://secure.php.net/manual/en/iterator.key.php"}, {"name": "Iterator::next", "synopsis": "Moves the current position to the next element.", "usage": "abstract public void Iterator::next ( void )", "url": "https://secure.php.net/manual/en/iterator.next.php"}, {"name": "Iterator::rewind", "synopsis": "Rewinds back to the first element of the Iterator.", "usage": "abstract public void Iterator::rewind ( void )", "url": "https://secure.php.net/manual/en/iterator.rewind.php"}, {"name": "Iterator::valid", "synopsis": "This method is called after Iterator::rewind() and Iterator::next() to check if the current position is valid.", "usage": "abstract public bool Iterator::valid ( void )", "url": "https://secure.php.net/manual/en/iterator.valid.php"}, {"name": "IteratorAggregate::getIterator", "synopsis": "Returns an external iterator.", "usage": "abstract public Traversable IteratorAggregate::getIterator ( void )", "url": "https://secure.php.net/manual/en/iteratoraggregate.getiterator.php"}, {"name": "IteratorIterator::__construct", "synopsis": "Creates an iterator from anything that is traversable.", "usage": "public IteratorIterator::__construct ( Traversable $iterator )", "url": "https://secure.php.net/manual/en/iteratoriterator.construct.php"}, {"name": "IteratorIterator::current", "synopsis": "Get the value of the current element.", "usage": "public mixed IteratorIterator::current ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.current.php"}, {"name": "IteratorIterator::getInnerIterator", "synopsis": "Get the inner iterator.", "usage": "public Traversable IteratorIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.getinneriterator.php"}, {"name": "IteratorIterator::key", "synopsis": "Get the key of the current element.", "usage": "public scalar IteratorIterator::key ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.key.php"}, {"name": "IteratorIterator::next", "synopsis": "Forward to the next element.", "usage": "public void IteratorIterator::next ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.next.php"}, {"name": "IteratorIterator::rewind", "synopsis": "Rewinds to the first element.", "usage": "public void IteratorIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.rewind.php"}, {"name": "IteratorIterator::valid", "synopsis": "Checks if the iterator is valid.", "usage": "public bool IteratorIterator::valid ( void )", "url": "https://secure.php.net/manual/en/iteratoriterator.valid.php"}, {"name": "JsonSerializable::jsonSerialize", "synopsis": "Serializes the object to a value that can be serialized natively by json_encode().", "usage": "abstract public mixed JsonSerializable::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/jsonserializable.jsonserialize.php"}, {"name": "Judy::byCount", "synopsis": "Locate the Nth index present in the Judy array.", "usage": "public int Judy::byCount ( int $nth_index )", "url": "https://secure.php.net/manual/en/judy.bycount.php"}, {"name": "Judy::__construct", "synopsis": "Construct a new Judy object. A Judy object can be accessed like a PHP Array.", "usage": "public Judy::__construct ( int $judy_type )", "url": "https://secure.php.net/manual/en/judy.construct.php"}, {"name": "Judy::count", "synopsis": "Count the number of elements in the Judy array.", "usage": "public int Judy::count ([ int $index_start = 0 [, int $index_end = -1 ]] )", "url": "https://secure.php.net/manual/en/judy.count.php"}, {"name": "Judy::__destruct", "synopsis": "Destruct a Judy object.", "usage": "public void Judy::__destruct ( void )", "url": "https://secure.php.net/manual/en/judy.destruct.php"}, {"name": "Judy::first", "synopsis": "Search (inclusive) for the first index present that is equal to or greater than the passed Index.", "usage": "public mixed Judy::first ([ mixed $index ] )", "url": "https://secure.php.net/manual/en/judy.first.php"}, {"name": "Judy::firstEmpty", "synopsis": "Search (inclusive) for the first absent index that is equal to or greater than the passed Index.", "usage": "public int Judy::firstEmpty ([ mixed $index = 0 ] )", "url": "https://secure.php.net/manual/en/judy.firstempty.php"}, {"name": "Judy::free", "synopsis": "Free the entire Judy array.", "usage": "public int Judy::free ( void )", "url": "https://secure.php.net/manual/en/judy.free.php"}, {"name": "Judy::getType", "synopsis": "Return an integer corresponding to the Judy type of the current object.", "usage": "public int Judy::getType ( void )", "url": "https://secure.php.net/manual/en/judy.gettype.php"}, {"name": "Judy::last", "synopsis": "Search (inclusive) for the last index present that is equal to or less than the passed Index.", "usage": "public void Judy::last ([ string $index ] )", "url": "https://secure.php.net/manual/en/judy.last.php"}, {"name": "Judy::lastEmpty", "synopsis": "Search (inclusive) for the last absent index that is equal to or less than the passed Index.", "usage": "public int Judy::lastEmpty ([ int $index = -1 ] )", "url": "https://secure.php.net/manual/en/judy.lastempty.php"}, {"name": "Judy::memoryUsage", "synopsis": "Return the memory used by the Judy array.", "usage": "public int Judy::memoryUsage ( void )", "url": "https://secure.php.net/manual/en/judy.memoryusage.php"}, {"name": "Judy::next", "synopsis": "Search (exclusive) for the next index present that is greater than the passed Index.", "usage": "public mixed Judy::next ( mixed $index )", "url": "https://secure.php.net/manual/en/judy.next.php"}, {"name": "Judy::nextEmpty", "synopsis": "Search (exclusive) for the next absent index that is greater than the passed Index.", "usage": "public int Judy::nextEmpty ( int $index )", "url": "https://secure.php.net/manual/en/judy.nextempty.php"}, {"name": "Judy::offsetExists", "synopsis": "Whether or not an offset exists.", "usage": "public bool Judy::offsetExists ( mixed $offset )", "url": "https://secure.php.net/manual/en/judy.offsetexists.php"}, {"name": "Judy::offsetGet", "synopsis": "Returns the value at specified offset.", "usage": "public mixed Judy::offsetGet ( mixed $offset )", "url": "https://secure.php.net/manual/en/judy.offsetget.php"}, {"name": "Judy::offsetSet", "synopsis": "Assigns a value to the specified offset.", "usage": "public bool Judy::offsetSet ( mixed $offset , mixed $value )", "url": "https://secure.php.net/manual/en/judy.offsetset.php"}, {"name": "Judy::offsetUnset", "synopsis": "Unsets an offset.", "usage": "public bool Judy::offsetUnset ( mixed $offset )", "url": "https://secure.php.net/manual/en/judy.offsetunset.php"}, {"name": "Judy::prev", "synopsis": "Search (exclusive) for the previous index present that is less than the passed Index.", "usage": "public mixed Judy::prev ( mixed $index )", "url": "https://secure.php.net/manual/en/judy.prev.php"}, {"name": "Judy::prevEmpty", "synopsis": "Search (exclusive) for the previous index absent that is less than the passed Index.", "usage": "public int Judy::prevEmpty ( mixed $index )", "url": "https://secure.php.net/manual/en/judy.prevempty.php"}, {"name": "Judy::size", "synopsis": "This method is an alias of Judy::count.", "usage": "public void Judy::size ( void )", "url": "https://secure.php.net/manual/en/judy.size.php"}, {"name": "__clone", "synopsis": null, "usage": "void __clone ( void )", "url": "https://secure.php.net/manual/en/language.oop5.cloning.php"}, {"name": "__construct", "synopsis": null, "usage": "void __construct ([ mixed $args = \"\" [, $... ]] )", "url": "https://secure.php.net/manual/en/language.oop5.decon.php"}, {"name": "__sleep", "synopsis": null, "usage": "public array __sleep ( void )", "url": "https://secure.php.net/manual/en/language.oop5.magic.php"}, {"name": "__set", "synopsis": null, "usage": "public void __set ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/language.oop5.overloading.php"}, {"name": "Lapack::eigenValues", "synopsis": "Calculate the eigenvalues for a square matrix, and optionally calculate the left and right eigenvectors.", "usage": "public static array Lapack::eigenValues ( array $a [, array $left [, array $right ]] )", "url": "https://secure.php.net/manual/en/lapack.eigenvalues.php"}, {"name": "Lapack::identity", "synopsis": "Return a size n identity matrix", "usage": "public static array Lapack::identity ( int $n )", "url": "https://secure.php.net/manual/en/lapack.identity.php"}, {"name": "Lapack::leastSquaresByFactorisation", "synopsis": "Solve the linear least squares problem, find min x in || B - Ax || Returns an array representing x. Expects arrays of arrays, and will return an array of arrays in the dimension B num cols x A num cols. Uses QR or LQ factorisation on matrix A.", "usage": "public static array Lapack::leastSquaresByFactorisation ( array $a , array $b )", "url": "https://secure.php.net/manual/en/lapack.leastsquaresbyfactorisation.php"}, {"name": "Lapack::leastSquaresBySVD", "synopsis": "Solve the linear least squares problem, find min x in || B - Ax || Returns an array representing x. Expects arrays of arrays, and will return an array of arrays in the dimension B num cols x A num cols. Uses SVD with a divide and conquer algorithm.", "usage": "public static array Lapack::leastSquaresBySVD ( array $a , array $b )", "url": "https://secure.php.net/manual/en/lapack.leastsquaresbysvd.php"}, {"name": "Lapack::pseudoInverse", "synopsis": "Find the pseudoinverse of a matrix A.", "usage": "public static array Lapack::pseudoInverse ( array $a )", "url": "https://secure.php.net/manual/en/lapack.pseudoinverse.php"}, {"name": "Lapack::singularValues", "synopsis": "Calculate the singular values of the matrix A.", "usage": "public static array Lapack::singularValues ( array $a )", "url": "https://secure.php.net/manual/en/lapack.singularvalues.php"}, {"name": "Lapack::solveLinearEquation", "synopsis": "This function computes the solution to the system of linear equations with a square matrix A and multiple right-hand sides B. Solves A * X = B for multiple B.", "usage": "public static array Lapack::solveLinearEquation ( array $a , array $b )", "url": "https://secure.php.net/manual/en/lapack.solvelinearequation.php"}, {"name": "LimitIterator::__construct", "synopsis": "Constructs a new LimitIterator from an iterator with a given starting offset and maximum count.", "usage": "public LimitIterator::__construct ( Iterator $iterator [, int $offset = 0 [, int $count = -1 ]] )", "url": "https://secure.php.net/manual/en/limititerator.construct.php"}, {"name": "LimitIterator::current", "synopsis": "Gets the current element of the inner Iterator.", "usage": "public mixed LimitIterator::current ( void )", "url": "https://secure.php.net/manual/en/limititerator.current.php"}, {"name": "LimitIterator::getInnerIterator", "synopsis": "Gets the inner Iterator.", "usage": "public Iterator LimitIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/limititerator.getinneriterator.php"}, {"name": "LimitIterator::getPosition", "synopsis": "Gets the current zero-based position of the inner Iterator.", "usage": "public int LimitIterator::getPosition ( void )", "url": "https://secure.php.net/manual/en/limititerator.getposition.php"}, {"name": "LimitIterator::key", "synopsis": "Gets the key for the current item in the inner Iterator.", "usage": "public mixed LimitIterator::key ( void )", "url": "https://secure.php.net/manual/en/limititerator.key.php"}, {"name": "LimitIterator::next", "synopsis": "Moves the iterator forward.", "usage": "public void LimitIterator::next ( void )", "url": "https://secure.php.net/manual/en/limititerator.next.php"}, {"name": "LimitIterator::rewind", "synopsis": "Rewinds the iterator to the starting offset specified in LimitIterator::__construct().", "usage": "public void LimitIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/limititerator.rewind.php"}, {"name": "LimitIterator::seek", "synopsis": "Moves the iterator to the offset specified by position.", "usage": "public int LimitIterator::seek ( int $position )", "url": "https://secure.php.net/manual/en/limititerator.seek.php"}, {"name": "LimitIterator::valid", "synopsis": "Checks whether the current element is valid.", "usage": "public bool LimitIterator::valid ( void )", "url": "https://secure.php.net/manual/en/limititerator.valid.php"}, {"name": "Locale::acceptFromHttp", "synopsis": "Procedural style", "usage": "public static string Locale::acceptFromHttp ( string $header )", "url": "https://secure.php.net/manual/en/locale.acceptfromhttp.php"}, {"name": "Locale::canonicalize", "synopsis": "", "usage": "public static string Locale::canonicalize ( string $locale )", "url": "https://secure.php.net/manual/en/locale.canonicalize.php"}, {"name": "Locale::composeLocale", "synopsis": "Procedural style", "usage": "public static string Locale::composeLocale ( array $subtags )", "url": "https://secure.php.net/manual/en/locale.composelocale.php"}, {"name": "Locale::filterMatches", "synopsis": "Procedural style", "usage": "public static bool Locale::filterMatches ( string $langtag , string $locale [, bool $canonicalize = FALSE ] )", "url": "https://secure.php.net/manual/en/locale.filtermatches.php"}, {"name": "Locale::getAllVariants", "synopsis": "Procedural style", "usage": "public static array Locale::getAllVariants ( string $locale )", "url": "https://secure.php.net/manual/en/locale.getallvariants.php"}, {"name": "Locale::getDefault", "synopsis": "Procedural style", "usage": "public static string Locale::getDefault ( void )", "url": "https://secure.php.net/manual/en/locale.getdefault.php"}, {"name": "Locale::getDisplayLanguage", "synopsis": "Procedural style", "usage": "public static string Locale::getDisplayLanguage ( string $locale [, string $in_locale ] )", "url": "https://secure.php.net/manual/en/locale.getdisplaylanguage.php"}, {"name": "Locale::getDisplayName", "synopsis": "Procedural style", "usage": "public static string Locale::getDisplayName ( string $locale [, string $in_locale ] )", "url": "https://secure.php.net/manual/en/locale.getdisplayname.php"}, {"name": "Locale::getDisplayRegion", "synopsis": "Procedural style", "usage": "public static string Locale::getDisplayRegion ( string $locale [, string $in_locale ] )", "url": "https://secure.php.net/manual/en/locale.getdisplayregion.php"}, {"name": "Locale::getDisplayScript", "synopsis": "Procedural style", "usage": "public static string Locale::getDisplayScript ( string $locale [, string $in_locale ] )", "url": "https://secure.php.net/manual/en/locale.getdisplayscript.php"}, {"name": "Locale::getDisplayVariant", "synopsis": "Procedural style", "usage": "public static string Locale::getDisplayVariant ( string $locale [, string $in_locale ] )", "url": "https://secure.php.net/manual/en/locale.getdisplayvariant.php"}, {"name": "Locale::getKeywords", "synopsis": "Procedural style", "usage": "public static array Locale::getKeywords ( string $locale )", "url": "https://secure.php.net/manual/en/locale.getkeywords.php"}, {"name": "Locale::getPrimaryLanguage", "synopsis": "Procedural style", "usage": "public static string Locale::getPrimaryLanguage ( string $locale )", "url": "https://secure.php.net/manual/en/locale.getprimarylanguage.php"}, {"name": "Locale::getRegion", "synopsis": "Procedural style", "usage": "public static string Locale::getRegion ( string $locale )", "url": "https://secure.php.net/manual/en/locale.getregion.php"}, {"name": "Locale::getScript", "synopsis": "Procedural style", "usage": "public static string Locale::getScript ( string $locale )", "url": "https://secure.php.net/manual/en/locale.getscript.php"}, {"name": "Locale::lookup", "synopsis": "Procedural style", "usage": "public static string Locale::lookup ( array $langtag , string $locale [, bool $canonicalize = FALSE [, string $default ]] )", "url": "https://secure.php.net/manual/en/locale.lookup.php"}, {"name": "Locale::parseLocale", "synopsis": "Procedural style", "usage": "public static array Locale::parseLocale ( string $locale )", "url": "https://secure.php.net/manual/en/locale.parselocale.php"}, {"name": "Locale::setDefault", "synopsis": "Procedural style", "usage": "public static bool Locale::setDefault ( string $locale )", "url": "https://secure.php.net/manual/en/locale.setdefault.php"}, {"name": "Lua::assign", "synopsis": "", "usage": "public mixed Lua::assign ( string $name , string $value )", "url": "https://secure.php.net/manual/en/lua.assign.php"}, {"name": "Lua::call", "synopsis": "", "usage": "public mixed Lua::call ( callable $lua_func [, array $args [, int $use_self = 0 ]] )", "url": "https://secure.php.net/manual/en/lua.call.php"}, {"name": "Lua::__construct", "synopsis": "", "usage": "public Lua::__construct ( string $lua_script_file = NULL )", "url": "https://secure.php.net/manual/en/lua.construct.php"}, {"name": "Lua::eval", "synopsis": "", "usage": "public mixed Lua::eval ( string $statements )", "url": "https://secure.php.net/manual/en/lua.eval.php"}, {"name": "Lua::getVersion", "synopsis": "", "usage": "public string Lua::getVersion ( void )", "url": "https://secure.php.net/manual/en/lua.getversion.php"}, {"name": "Lua::include", "synopsis": "", "usage": "public mixed Lua::include ( string $file )", "url": "https://secure.php.net/manual/en/lua.include.php"}, {"name": "Lua::registerCallback", "synopsis": "Register a PHP function to Lua as a function named \"$name\"", "usage": "public mixed Lua::registerCallback ( string $name , callable $function )", "url": "https://secure.php.net/manual/en/lua.registercallback.php"}, {"name": "LuaClosure::__invoke", "synopsis": "", "usage": "public void LuaClosure::__invoke ( mixed $arg [, mixed $... ] )", "url": "https://secure.php.net/manual/en/luaclosure.invoke.php"}, {"name": "Memcache::add", "synopsis": "Memcache::add() stores variable var with key only if such key doesn't exist at the server yet. Also you can use memcache_add() function.", "usage": "bool Memcache::add ( string $key , mixed $var [, int $flag [, int $expire ]] )", "url": "https://secure.php.net/manual/en/memcache.add.php"}, {"name": "Memcache::addServer", "synopsis": "Memcache::addServer() adds a server to the connection pool. You can also use the memcache_add_server() function.", "usage": "bool Memcache::addServer ( string $host [, int $port = 11211 [, bool $persistent [, int $weight [, int $timeout [, int $retry_interval [, bool $status [, callable $failure_callback [, int $timeoutms ]]]]]]]] )", "url": "https://secure.php.net/manual/en/memcache.addserver.php"}, {"name": "Memcache::close", "synopsis": "Memcache::close() closes connection to memcached server. This function doesn't close persistent connections, which are closed only during web-server shutdown/restart. Also you can use memcache_close() function.", "usage": "bool Memcache::close ( void )", "url": "https://secure.php.net/manual/en/memcache.close.php"}, {"name": "Memcache::connect", "synopsis": "Memcache::connect() establishes a connection to the memcached server. The connection, which was opened using Memcache::connect() will be automatically closed at the end of script execution. Also you can close it with Memcache::close(). Also you can use memcache_connect() function.", "usage": "bool Memcache::connect ( string $host [, int $port [, int $timeout ]] )", "url": "https://secure.php.net/manual/en/memcache.connect.php"}, {"name": "Memcache::decrement", "synopsis": "Memcache::decrement() decrements value of the item by value. Similarly to Memcache::increment(), current value of the item is being converted to numerical and after that value is subtracted.", "usage": "int Memcache::decrement ( string $key [, int $value = 1 ] )", "url": "https://secure.php.net/manual/en/memcache.decrement.php"}, {"name": "Memcache::delete", "synopsis": "Memcache::delete() deletes an item with the key.", "usage": "bool Memcache::delete ( string $key [, int $timeout = 0 ] )", "url": "https://secure.php.net/manual/en/memcache.delete.php"}, {"name": "Memcache::flush", "synopsis": "Memcache::flush() immediately invalidates all existing items. Memcache::flush() doesn't actually free any resources, it only marks all the items as expired, so occupied memory will be overwritten by new items. Also you can use memcache_flush() function.", "usage": "bool Memcache::flush ( void )", "url": "https://secure.php.net/manual/en/memcache.flush.php"}, {"name": "Memcache::get", "synopsis": "Memcache::get() returns previously stored data of an item, if such key exists on the server at this moment.", "usage": "string Memcache::get ( string $key [, int &$flags ] )", "url": "https://secure.php.net/manual/en/memcache.get.php"}, {"name": "Memcache::getExtendedStats", "synopsis": "Memcache::getExtendedStats() returns a two-dimensional associative array with server statistics. Array keys correspond to host:port of server and values contain the individual server statistics. A failed server will have its corresponding entry set to FALSE. You can also use the memcache_get_extended_stats() function.", "usage": "array Memcache::getExtendedStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )", "url": "https://secure.php.net/manual/en/memcache.getextendedstats.php"}, {"name": "Memcache::getServerStatus", "synopsis": "Memcache::getServerStatus() returns a the servers online/offline status. You can also use memcache_get_server_status() function.", "usage": "int Memcache::getServerStatus ( string $host [, int $port = 11211 ] )", "url": "https://secure.php.net/manual/en/memcache.getserverstatus.php"}, {"name": "Memcache::getStats", "synopsis": "Memcache::getStats() returns an associative array with server's statistics. Array keys correspond to stats parameters and values to parameter's values. Also you can use memcache_get_stats() function.", "usage": "array Memcache::getStats ([ string $type [, int $slabid [, int $limit = 100 ]]] )", "url": "https://secure.php.net/manual/en/memcache.getstats.php"}, {"name": "Memcache::getVersion", "synopsis": "Memcache::getVersion() returns a string with server's version number. Also you can use memcache_get_version() function.", "usage": "string Memcache::getVersion ( void )", "url": "https://secure.php.net/manual/en/memcache.getversion.php"}, {"name": "Memcache::increment", "synopsis": "Memcache::increment() increments value of an item by the specified value. If item specified by key was not numeric and cannot be converted to a number, it will change its value to value. Memcache::increment() does not create an item if it doesn't already exist.", "usage": "int Memcache::increment ( string $key [, int $value = 1 ] )", "url": "https://secure.php.net/manual/en/memcache.increment.php"}, {"name": "Memcache::pconnect", "synopsis": "Memcache::pconnect() is similar to Memcache::connect() with the difference, that the connection it establishes is persistent. This connection is not closed after the end of script execution and by Memcache::close() function. Also you can use memcache_pconnect() function.", "usage": "mixed Memcache::pconnect ( string $host [, int $port [, int $timeout ]] )", "url": "https://secure.php.net/manual/en/memcache.pconnect.php"}, {"name": "Memcache::replace", "synopsis": "Memcache::replace() should be used to replace value of existing item with key. In case if item with such key doesn't exists, Memcache::replace() returns FALSE. For the rest Memcache::replace() behaves similarly to Memcache::set(). Also you can use memcache_replace() function.", "usage": "bool Memcache::replace ( string $key , mixed $var [, int $flag [, int $expire ]] )", "url": "https://secure.php.net/manual/en/memcache.replace.php"}, {"name": "Memcache::set", "synopsis": "Memcache::set() stores an item var with key on the memcached server. Parameter expire is expiration time in seconds. If it's 0, the item never expires (but memcached server doesn't guarantee this item to be stored all the time, it could be deleted from the cache to make place for other items). You can use MEMCACHE_COMPRESSED constant as flag value if you want to use on-the-fly compression (uses zlib).", "usage": "bool Memcache::set ( string $key , mixed $var [, int $flag [, int $expire ]] )", "url": "https://secure.php.net/manual/en/memcache.set.php"}, {"name": "Memcache::setCompressThreshold", "synopsis": "Memcache::setCompressThreshold() enables automatic compression of large values. You can also use the memcache_set_compress_threshold() function.", "usage": "bool Memcache::setCompressThreshold ( int $threshold [, float $min_savings ] )", "url": "https://secure.php.net/manual/en/memcache.setcompressthreshold.php"}, {"name": "Memcache::setServerParams", "synopsis": "Memcache::setServerParams() changes server parameters at runtime. You can also use the memcache_set_server_params() function.", "usage": "bool Memcache::setServerParams ( string $host [, int $port = 11211 [, int $timeout [, int $retry_interval = FALSE [, bool $status [, callable $failure_callback ]]]]] )", "url": "https://secure.php.net/manual/en/memcache.setserverparams.php"}, {"name": "Memcached::add", "synopsis": "Memcached::add() is similar to Memcached::set(), but the operation fails if the key already exists on the server.", "usage": "public bool Memcached::add ( string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.add.php"}, {"name": "Memcached::addByKey", "synopsis": "Memcached::addByKey() is functionally equivalent to Memcached::add(), except that the free-form server_key can be used to map the key to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.", "usage": "public bool Memcached::addByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.addbykey.php"}, {"name": "Memcached::addServer", "synopsis": "Memcached::addServer() adds the specified server to the server pool. No connection is established to the server at this time, but if you are using consistent key distribution option (via Memcached::DISTRIBUTION_CONSISTENT or Memcached::OPT_LIBKETAMA_COMPATIBLE), some of the internal data structures will have to be updated. Thus, if you need to add multiple servers, it is better to use Memcached::addServers() as the update then happens only once.", "usage": "public bool Memcached::addServer ( string $host , int $port [, int $weight = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.addserver.php"}, {"name": "Memcached::addServers", "synopsis": "Memcached::addServers() adds servers to the server pool. Each entry in servers is supposed to be an array containing hostname, port, and, optionally, weight of the server. No connection is established to the servers at this time.", "usage": "public bool Memcached::addServers ( array $servers )", "url": "https://secure.php.net/manual/en/memcached.addservers.php"}, {"name": "Memcached::append", "synopsis": "Memcached::append() appends the given value string to the value of an existing item. The reason that value is forced to be a string is that appending mixed types is not well-defined.", "usage": "public bool Memcached::append ( string $key , string $value )", "url": "https://secure.php.net/manual/en/memcached.append.php"}, {"name": "Memcached::appendByKey", "synopsis": "Memcached::appendByKey() is functionally equivalent to Memcached::append(), except that the free-form server_key can be used to map the key to a specific server.", "usage": "public bool Memcached::appendByKey ( string $server_key , string $key , string $value )", "url": "https://secure.php.net/manual/en/memcached.appendbykey.php"}, {"name": "Memcached::cas", "synopsis": "Memcached::cas() performs a \"check and set\" operation, so that the item will be stored only if no other client has updated it since it was last fetched by this client. The check is done via the cas_token parameter which is a unique 64-bit value assigned to the existing item by memcache. See the documentation for Memcached::get*() methods for how to obtain this token. Note that the token is represented as a double due to the limitations of PHP's integer space.", "usage": "public bool Memcached::cas ( float $cas_token , string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.cas.php"}, {"name": "Memcached::casByKey", "synopsis": "Memcached::casByKey() is functionally equivalent to Memcached::cas(), except that the free-form server_key can be used to map the key to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.", "usage": "public bool Memcached::casByKey ( float $cas_token , string $server_key , string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.casbykey.php"}, {"name": "Memcached::decrement", "synopsis": "Memcached::decrement() decrements a numeric item's value by the specified offset. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. Memcached::decrement() will set the item to the initial_value parameter if the key doesn't exist.", "usage": "public int Memcached::decrement ( string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )", "url": "https://secure.php.net/manual/en/memcached.decrement.php"}, {"name": "Memcached::decrementByKey", "synopsis": "Memcached::decrementByKey() decrements a numeric item's value by the specified offset. If the item's value is not numeric, an error will result. If the operation would decrease the value below 0, the new value will be 0. Memcached::decrementByKey() will set the item to the initial_value parameter if the key doesn't exist.", "usage": "public int Memcached::decrementByKey ( string $server_key , string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )", "url": "https://secure.php.net/manual/en/memcached.decrementbykey.php"}, {"name": "Memcached::delete", "synopsis": "Memcached::delete() deletes the key from the server. The time parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse add and replace commands for this key. For this amount of time, the item is put into a delete queue, which means that it won't possible to retrieve it by the get command, but add and replace command with this key will also fail (the set command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter time defaults to 0 (which means that the item will be deleted immediately and further storage commands with this key will succeed).", "usage": "public bool Memcached::delete ( string $key [, int $time = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.delete.php"}, {"name": "Memcached::deleteByKey", "synopsis": "Memcached::deleteByKey() is functionally equivalent to Memcached::delete(), except that the free-form server_key can be used to map the key to a specific server.", "usage": "public bool Memcached::deleteByKey ( string $server_key , string $key [, int $time = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.deletebykey.php"}, {"name": "Memcached::deleteMulti", "synopsis": "Memcached::deleteMulti() deletes the array of keys from the server. The time parameter is the amount of time in seconds (or Unix time until which) the client wishes the server to refuse add and replace commands for these keys. For this amount of time, the item is put into a delete queue, which means that it won't be possible to retrieve it by the get command, but add and replace command with these keys will also fail (the set command will succeed, however). After the time passes, the item is finally deleted from server memory. The parameter time defaults to 0 (which means that the item will be deleted immediately and further storage commands with these keys will succeed).", "usage": "public array Memcached::deleteMulti ( array $keys [, int $time = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.deletemulti.php"}, {"name": "Memcached::deleteMultiByKey", "synopsis": "Memcached::deleteMultiByKey() is functionally equivalent to Memcached::deleteMulti(), except that the free-form server_key can be used to map the keys to a specific server.", "usage": "public bool Memcached::deleteMultiByKey ( string $server_key , array $keys [, int $time = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.deletemultibykey.php"}, {"name": "Memcached::fetch", "synopsis": "Memcached::fetch() retrieves the next result from the last request.", "usage": "public array Memcached::fetch ( void )", "url": "https://secure.php.net/manual/en/memcached.fetch.php"}, {"name": "Memcached::fetchAll", "synopsis": "Memcached::fetchAll() retrieves all the remaining results from the last request.", "usage": "public array Memcached::fetchAll ( void )", "url": "https://secure.php.net/manual/en/memcached.fetchall.php"}, {"name": "Memcached::flush", "synopsis": "Memcached::flush() invalidates all existing cache items immediately (by default) or after the delay specified. After invalidation none of the items will be returned in response to a retrieval command (unless it's stored again under the same key after Memcached::flush() has invalidated the items). The flush does not actually free all the memory taken up by the existing items; that will happen gradually as new items are stored.", "usage": "public bool Memcached::flush ([ int $delay = 0 ] )", "url": "https://secure.php.net/manual/en/memcached.flush.php"}, {"name": "Memcached::get", "synopsis": "Memcached::get() returns the item that was previously stored under the key. If the item is found and for flags is given Memcached::GET_EXTENDED, it will return the CAS token value for the item. See Memcached::cas() for how to use CAS tokens. Read-through caching callback may be specified via cache_cb parameter.", "usage": "public mixed Memcached::get ( string $key [, callable $cache_cb [, int $$flags ]] )", "url": "https://secure.php.net/manual/en/memcached.get.php"}, {"name": "Memcached::getAllKeys", "synopsis": "Memcached::getAllKeys() queries each memcache server and retrieves an array of all keys stored on them at that point in time. This is not an atomic operation, so it isn't a truly consistent snapshot of the keys at point in time. As memcache doesn't guarantee to return all keys you also cannot assume that all keys have been returned.", "usage": "public array Memcached::getAllKeys ( void )", "url": "https://secure.php.net/manual/en/memcached.getallkeys.php"}, {"name": "Memcached::getByKey", "synopsis": "Memcached::getByKey() is functionally equivalent to Memcached::get(), except that the free-form server_key can be used to map the key to a specific server.", "usage": "public mixed Memcached::getByKey ( string $server_key , string $key [, callable $cache_cb [, int $flags ]] )", "url": "https://secure.php.net/manual/en/memcached.getbykey.php"}, {"name": "Memcached::getDelayed", "synopsis": "Memcached::getDelayed() issues a request to memcache for multiple items the keys of which are specified in the keys array. The method does not wait for response and returns right away. When you are ready to collect the items, call either Memcached::fetch() or Memcached::fetchAll(). If with_cas is true, the CAS token values will also be requested.", "usage": "public bool Memcached::getDelayed ( array $keys [, bool $with_cas [, callable $value_cb ]] )", "url": "https://secure.php.net/manual/en/memcached.getdelayed.php"}, {"name": "Memcached::getDelayedByKey", "synopsis": "Memcached::getDelayedByKey() is functionally equivalent to Memcached::getDelayed(), except that the free-form server_key can be used to map the keys to a specific server.", "usage": "public bool Memcached::getDelayedByKey ( string $server_key , array $keys [, bool $with_cas [, callable $value_cb ]] )", "url": "https://secure.php.net/manual/en/memcached.getdelayedbykey.php"}, {"name": "Memcached::getMulti", "synopsis": "Memcached::getMulti() is similar to Memcached::get(), but instead of a single key item, it retrieves multiple items the keys of which are specified in the keys array.", "usage": "public mixed Memcached::getMulti ( array $keys [, int $flags ] )", "url": "https://secure.php.net/manual/en/memcached.getmulti.php"}, {"name": "Memcached::getMultiByKey", "synopsis": "Memcached::getMultiByKey() is functionally equivalent to Memcached::getMulti(), except that the free-form server_key can be used to map the keys to a specific server.", "usage": "public array Memcached::getMultiByKey ( string $server_key , array $keys [, int $flags ] )", "url": "https://secure.php.net/manual/en/memcached.getmultibykey.php"}, {"name": "Memcached::getOption", "synopsis": "This method returns the value of a Memcached option. Some options correspond to the ones defined by libmemcached, and some are specific to the extension. See Memcached Constants for more information.", "usage": "public mixed Memcached::getOption ( int $option )", "url": "https://secure.php.net/manual/en/memcached.getoption.php"}, {"name": "Memcached::getResultCode", "synopsis": "Memcached::getResultCode() returns one of the Memcached::RES_* constants that is the result of the last executed Memcached method.", "usage": "public int Memcached::getResultCode ( void )", "url": "https://secure.php.net/manual/en/memcached.getresultcode.php"}, {"name": "Memcached::getResultMessage", "synopsis": "Memcached::getResultMessage() returns a string that describes the result code of the last executed Memcached method.", "usage": "public string Memcached::getResultMessage ( void )", "url": "https://secure.php.net/manual/en/memcached.getresultmessage.php"}, {"name": "Memcached::getServerByKey", "synopsis": "Memcached::getServerByKey() returns the server that would be selected by a particular server_key in all the Memcached::*ByKey() operations.", "usage": "public array Memcached::getServerByKey ( string $server_key )", "url": "https://secure.php.net/manual/en/memcached.getserverbykey.php"}, {"name": "Memcached::getServerList", "synopsis": "Memcached::getServerList() returns the list of all servers that are in its server pool.", "usage": "public array Memcached::getServerList ( void )", "url": "https://secure.php.net/manual/en/memcached.getserverlist.php"}, {"name": "Memcached::getStats", "synopsis": "Memcached::getStats() returns an array containing the state of all available memcache servers. See \u00bb\u00a0memcache protocol specification for details on these statistics.", "usage": "public array Memcached::getStats ( void )", "url": "https://secure.php.net/manual/en/memcached.getstats.php"}, {"name": "Memcached::getVersion", "synopsis": "Memcached::getVersion() returns an array containing the version info for all available memcache servers.", "usage": "public array Memcached::getVersion ( void )", "url": "https://secure.php.net/manual/en/memcached.getversion.php"}, {"name": "Memcached::increment", "synopsis": "Memcached::increment() increments a numeric item's value by the specified offset. If the item's value is not numeric, an error will result. Memcached::increment() will set the item to the initial_value parameter if the key doesn't exist.", "usage": "public int Memcached::increment ( string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )", "url": "https://secure.php.net/manual/en/memcached.increment.php"}, {"name": "Memcached::incrementByKey", "synopsis": "Memcached::incrementByKey() increments a numeric item's value by the specified offset. If the item's value is not numeric, an error will result. Memcached::incrementByKey() will set the item to the initial_value parameter if the key doesn't exist.", "usage": "public int Memcached::incrementByKey ( string $server_key , string $key [, int $offset = 1 [, int $initial_value = 0 [, int $expiry = 0 ]]] )", "url": "https://secure.php.net/manual/en/memcached.incrementbykey.php"}, {"name": "Memcached::isPersistent", "synopsis": "Memcached::isPersistent() checks if the connections to the memcache servers are persistent connections.", "usage": "public bool Memcached::isPersistent ( void )", "url": "https://secure.php.net/manual/en/memcached.ispersistent.php"}, {"name": "Memcached::isPristine", "synopsis": "Memcached::isPristine() checks if the Memcache instance was recently created.", "usage": "public bool Memcached::isPristine ( void )", "url": "https://secure.php.net/manual/en/memcached.ispristine.php"}, {"name": "Memcached::prepend", "synopsis": "Memcached::prepend() prepends the given value string to the value of an existing item. The reason that value is forced to be a string is that prepending mixed types is not well-defined.", "usage": "public bool Memcached::prepend ( string $key , string $value )", "url": "https://secure.php.net/manual/en/memcached.prepend.php"}, {"name": "Memcached::prependByKey", "synopsis": "Memcached::prependByKey() is functionally equivalent to Memcached::prepend(), except that the free-form server_key can be used to map the key to a specific server.", "usage": "public bool Memcached::prependByKey ( string $server_key , string $key , string $value )", "url": "https://secure.php.net/manual/en/memcached.prependbykey.php"}, {"name": "Memcached::quit", "synopsis": "Memcached::quit() closes any open connections to the memcache servers.", "usage": "public bool Memcached::quit ( void )", "url": "https://secure.php.net/manual/en/memcached.quit.php"}, {"name": "Memcached::replace", "synopsis": "Memcached::replace() is similar to Memcached::set(), but the operation fails if the key does not exist on the server.", "usage": "public bool Memcached::replace ( string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.replace.php"}, {"name": "Memcached::replaceByKey", "synopsis": "Memcached::replaceByKey() is functionally equivalent to Memcached::replace(), except that the free-form server_key can be used to map the key to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.", "usage": "public bool Memcached::replaceByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.replacebykey.php"}, {"name": "Memcached::resetServerList", "synopsis": "Memcached::resetserverlist() removes all memcache servers from the known server list, reseting it back to empty.", "usage": "public bool Memcached::resetServerList ( void )", "url": "https://secure.php.net/manual/en/memcached.resetserverlist.php"}, {"name": "Memcached::set", "synopsis": "Memcached::set() stores the value on a memcache server under the specified key. The expiration parameter can be used to control when the value is considered expired.", "usage": "public bool Memcached::set ( string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.set.php"}, {"name": "Memcached::setByKey", "synopsis": "Memcached::setByKey() is functionally equivalent to Memcached::set(), except that the free-form server_key can be used to map the key to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.", "usage": "public bool Memcached::setByKey ( string $server_key , string $key , mixed $value [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.setbykey.php"}, {"name": "Memcached::setMulti", "synopsis": "Memcached::setMulti() is similar to Memcached::set(), but instead of a single key/value item, it works on multiple items specified in items. The expiration time applies to all the items at once.", "usage": "public bool Memcached::setMulti ( array $items [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.setmulti.php"}, {"name": "Memcached::setMultiByKey", "synopsis": "Memcached::setMultiByKey() is functionally equivalent to Memcached::setMulti(), except that the free-form server_key can be used to map the keys from items to a specific server. This is useful if you need to keep a bunch of related keys on a certain server.", "usage": "public bool Memcached::setMultiByKey ( string $server_key , array $items [, int $expiration ] )", "url": "https://secure.php.net/manual/en/memcached.setmultibykey.php"}, {"name": "Memcached::setOption", "synopsis": "This method sets the value of a Memcached option. Some options correspond to the ones defined by libmemcached, and some are specific to the extension. See Memcached Constants for more information.", "usage": "public bool Memcached::setOption ( int $option , mixed $value )", "url": "https://secure.php.net/manual/en/memcached.setoption.php"}, {"name": "Memcached::setOptions", "synopsis": "Memcached::setOptions() is a variation of the Memcached::setOption() that takes an array of options to be set.", "usage": "public bool Memcached::setOptions ( array $options )", "url": "https://secure.php.net/manual/en/memcached.setoptions.php"}, {"name": "Memcached::setSaslAuthData", "synopsis": "Memcached::setSaslAuthData() sets the username and password that should be used for SASL authentication with the memcache servers.", "usage": "public void Memcached::setSaslAuthData ( string $username , string $password )", "url": "https://secure.php.net/manual/en/memcached.setsaslauthdata.php"}, {"name": "Memcached::touch", "synopsis": "Memcached::touch() sets a new expiration value on the given key.", "usage": "public bool Memcached::touch ( string $key , int $expiration )", "url": "https://secure.php.net/manual/en/memcached.touch.php"}, {"name": "Memcached::touchByKey", "synopsis": "Memcached::touchByKey() is functionally equivalent to Memcached::touch(), except that the free-form server_key can be used to map the key to a specific server.", "usage": "public bool Memcached::touchByKey ( string $server_key , string $key , int $expiration )", "url": "https://secure.php.net/manual/en/memcached.touchbykey.php"}, {"name": "MessageFormatter::create", "synopsis": "Object oriented style (constructor):", "usage": "public static MessageFormatter MessageFormatter::create ( string $locale , string $pattern )", "url": "https://secure.php.net/manual/en/messageformatter.create.php"}, {"name": "MessageFormatter::format", "synopsis": "Procedural style", "usage": "public string MessageFormatter::format ( array $args )", "url": "https://secure.php.net/manual/en/messageformatter.format.php"}, {"name": "MessageFormatter::formatMessage", "synopsis": "Procedural style", "usage": "public static string MessageFormatter::formatMessage ( string $locale , string $pattern , array $args )", "url": "https://secure.php.net/manual/en/messageformatter.formatmessage.php"}, {"name": "MessageFormatter::getErrorCode", "synopsis": "Procedural style", "usage": "public int MessageFormatter::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/messageformatter.geterrorcode.php"}, {"name": "MessageFormatter::getErrorMessage", "synopsis": "Procedural style", "usage": "public string MessageFormatter::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/messageformatter.geterrormessage.php"}, {"name": "MessageFormatter::getLocale", "synopsis": "Procedural style", "usage": "public string MessageFormatter::getLocale ( void )", "url": "https://secure.php.net/manual/en/messageformatter.getlocale.php"}, {"name": "MessageFormatter::getPattern", "synopsis": "Procedural style", "usage": "public string MessageFormatter::getPattern ( void )", "url": "https://secure.php.net/manual/en/messageformatter.getpattern.php"}, {"name": "MessageFormatter::parse", "synopsis": "Procedural style", "usage": "public array MessageFormatter::parse ( string $value )", "url": "https://secure.php.net/manual/en/messageformatter.parse.php"}, {"name": "MessageFormatter::parseMessage", "synopsis": "Procedural style", "usage": "public static array MessageFormatter::parseMessage ( string $locale , string $pattern , string $source )", "url": "https://secure.php.net/manual/en/messageformatter.parsemessage.php"}, {"name": "MessageFormatter::setPattern", "synopsis": "Procedural style", "usage": "public bool MessageFormatter::setPattern ( string $pattern )", "url": "https://secure.php.net/manual/en/messageformatter.setpattern.php"}, {"name": "Mongo::connectUtil", "synopsis": null, "usage": "protected bool Mongo::connectUtil ( void )", "url": "https://secure.php.net/manual/en/mongo.connectutil.php"}, {"name": "Mongo::getPoolSize", "synopsis": null, "usage": "public static int Mongo::getPoolSize ( void )", "url": "https://secure.php.net/manual/en/mongo.getpoolsize.php"}, {"name": "Mongo::getSlave", "synopsis": "This finds the address of the secondary currently being used for reads. It is a read-only method: it does not change anything about the internal state of the object.", "usage": "public string Mongo::getSlave ( void )", "url": "https://secure.php.net/manual/en/mongo.getslave.php"}, {"name": "Mongo::getSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool Mongo::getSlaveOkay ( void )", "url": "https://secure.php.net/manual/en/mongo.getslaveokay.php"}, {"name": "Mongo::poolDebug", "synopsis": null, "usage": "public array Mongo::poolDebug ( void )", "url": "https://secure.php.net/manual/en/mongo.pooldebug.php"}, {"name": "Mongo::setPoolSize", "synopsis": null, "usage": "public static bool Mongo::setPoolSize ( int $size )", "url": "https://secure.php.net/manual/en/mongo.setpoolsize.php"}, {"name": "Mongo::setSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool Mongo::setSlaveOkay ([ bool $ok = TRUE ] )", "url": "https://secure.php.net/manual/en/mongo.setslaveokay.php"}, {"name": "Mongo::switchSlave", "synopsis": "This choses a random secondary for a connection to read from. It is called automatically by the driver and should not need to be used. It calls MongoClient::getHosts() (to refresh the status of hosts) and Mongo::getSlave() (to get the return value).", "usage": "public string Mongo::switchSlave ( void )", "url": "https://secure.php.net/manual/en/mongo.switchslave.php"}, {"name": "MongoDB\\BSON\\Binary::__construct()", "synopsis": "Creates a new binary data object.", "usage": "public MongoBinData::__construct ( string $data [, int $type = 0 ] )", "url": "https://secure.php.net/manual/en/mongobindata.construct.php"}, {"name": "MongoDB\\BSON\\Binary::getData()", "synopsis": null, "usage": "public string MongoBinData::__toString ( void )", "url": "https://secure.php.net/manual/en/mongobindata.tostring.php"}, {"name": "MongoClient::close", "synopsis": "The MongoClient::close() method forcefully closes a connection to the database, even if persistent connections are being used. You should never have to do this under normal circumstances.", "usage": "public bool MongoClient::close ([ boolean|string $connection ] )", "url": "https://secure.php.net/manual/en/mongoclient.close.php"}, {"name": "MongoClient::connect", "synopsis": null, "usage": "public bool MongoClient::connect ( void )", "url": "https://secure.php.net/manual/en/mongoclient.connect.php"}, {"name": "MongoClient::dropDB", "synopsis": null, "usage": "public array MongoClient::dropDB ( mixed $db )", "url": "https://secure.php.net/manual/en/mongoclient.dropdb.php"}, {"name": "MongoClient::__get", "synopsis": "This is the cleanest way of getting a database. If the database name has any special characters, MongoClient::selectDB() will need to be used; however, this should be sufficient for most cases.", "usage": "public MongoDB MongoClient::__get ( string $dbname )", "url": "https://secure.php.net/manual/en/mongoclient.get.php"}, {"name": "MongoClient::getConnections", "synopsis": "Returns an array of all open connections, and information about each of the servers", "usage": "public static array MongoClient::getConnections ( void )", "url": "https://secure.php.net/manual/en/mongoclient.getconnections.php"}, {"name": "MongoDB\\Driver\\Manager::getServers()", "synopsis": "This method is only useful with a connection to a replica set. It returns the status of all of the hosts in the set. Without a replica set, it will just return an array with one element containing the host that you are connected to.", "usage": "public array MongoClient::getHosts ( void )", "url": "https://secure.php.net/manual/en/mongoclient.gethosts.php"}, {"name": "MongoClient::getReadPreference", "synopsis": null, "usage": "public array MongoClient::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongoclient.getreadpreference.php"}, {"name": "MongoClient::getWriteConcern", "synopsis": null, "usage": "public array MongoClient::getWriteConcern ( void )", "url": "https://secure.php.net/manual/en/mongoclient.getwriteconcern.php"}, {"name": "MongoClient::killCursor", "synopsis": "In certain situations it might be needed to kill a cursor on the server. Usually cursors time out after 10 minutes of inactivity, but it is possible to create an immortal cursor with MongoCursor::immortal() that never times out. In order to be able to kill such an immortal cursor, you can call this method with the information supplied by MongoCursor::info().", "usage": "public bool MongoClient::killCursor ( string $server_hash , int|MongoInt64 $id )", "url": "https://secure.php.net/manual/en/mongoclient.killcursor.php"}, {"name": "MongoClient::listDBs", "synopsis": null, "usage": "public array MongoClient::listDBs ( void )", "url": "https://secure.php.net/manual/en/mongoclient.listdbs.php"}, {"name": "MongoClient::selectCollection", "synopsis": null, "usage": "public MongoCollection MongoClient::selectCollection ( string $db , string $collection )", "url": "https://secure.php.net/manual/en/mongoclient.selectcollection.php"}, {"name": "MongoClient::selectDB", "synopsis": null, "usage": "public MongoDB MongoClient::selectDB ( string $name )", "url": "https://secure.php.net/manual/en/mongoclient.selectdb.php"}, {"name": "MongoClient::setReadPreference", "synopsis": null, "usage": "public bool MongoClient::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongoclient.setreadpreference.php"}, {"name": "MongoClient::setWriteConcern", "synopsis": null, "usage": "public bool MongoClient::setWriteConcern ( mixed $w [, int $wtimeout ] )", "url": "https://secure.php.net/manual/en/mongoclient.setwriteconcern.php"}, {"name": "MongoClient::__toString", "synopsis": null, "usage": "public string MongoClient::__toString ( void )", "url": "https://secure.php.net/manual/en/mongoclient.tostring.php"}, {"name": "MongoDB\\BSON\\JavaScript::__construct()", "synopsis": null, "usage": "public MongoCode::__construct ( string $code [, array $scope = array() ] )", "url": "https://secure.php.net/manual/en/mongocode.construct.php"}, {"name": "MongoCode::__toString", "synopsis": null, "usage": "public string MongoCode::__toString ( void )", "url": "https://secure.php.net/manual/en/mongocode.tostring.php"}, {"name": "MongoCollection::__toString", "synopsis": null, "usage": "public string MongoCollection::__toString ( void )", "url": "https://secure.php.net/manual/en/mongocollection.--tostring.php"}, {"name": "MongoCollection::aggregate", "synopsis": "The MongoDB \u00bb\u00a0aggregation framework provides a means to calculate aggregated values without having to use MapReduce. While MapReduce is powerful, it is often more difficult than necessary for many simple aggregation tasks, such as totaling or averaging field values.", "usage": "public array MongoCollection::aggregate ( array $pipeline [, array $options ] )", "url": "https://secure.php.net/manual/en/mongocollection.aggregate.php"}, {"name": "MongoCollection::aggregateCursor", "synopsis": "With this method you can execute Aggregation Framework pipelines and retrieve the results through a cursor, instead of getting just one document back as you would with MongoCollection::aggregate(). This method returns a MongoCommandCursor object. This cursor object implements the Iterator interface just like the MongoCursor objects that are returned by the MongoCollection::find() method.", "usage": "public MongoCommandCursor MongoCollection::aggregateCursor ( array $command [, array $options ] )", "url": "https://secure.php.net/manual/en/mongocollection.aggregatecursor.php"}, {"name": "MongoCollection::batchInsert", "synopsis": null, "usage": "public mixed MongoCollection::batchInsert ( array $a [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.batchinsert.php"}, {"name": "MongoCollection::__construct", "synopsis": null, "usage": "public MongoCollection::__construct ( MongoDB $db , string $name )", "url": "https://secure.php.net/manual/en/mongocollection.construct.php"}, {"name": "MongoCollection::count", "synopsis": null, "usage": "public int MongoCollection::count ([ array $query = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongocollection.count.php"}, {"name": "MongoCollection::createDBRef", "synopsis": null, "usage": "public array MongoCollection::createDBRef ( mixed $document_or_id )", "url": "https://secure.php.net/manual/en/mongocollection.createdbref.php"}, {"name": "MongoCollection::createIndex", "synopsis": "Creates an index on the specified field(s) if it does not already exist. Fields may be indexed with a direction (e.g. ascending or descending) or a special type (e.g. text, geospatial, hashed).", "usage": "public bool MongoCollection::createIndex ( array $keys [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.createindex.php"}, {"name": "MongoCollection::deleteIndex", "synopsis": "This method is identical to:", "usage": "public array MongoCollection::deleteIndex ( string|array $keys )", "url": "https://secure.php.net/manual/en/mongocollection.deleteindex.php"}, {"name": "MongoCollection::deleteIndexes", "synopsis": null, "usage": "public array MongoCollection::deleteIndexes ( void )", "url": "https://secure.php.net/manual/en/mongocollection.deleteindexes.php"}, {"name": "MongoCollection::distinct", "synopsis": "The distinct command returns a list of distinct values for the given key across a collection.", "usage": "public array MongoCollection::distinct ( string $key [, array $query ] )", "url": "https://secure.php.net/manual/en/mongocollection.distinct.php"}, {"name": "MongoCollection::drop", "synopsis": "Drops this collection and deletes its indices.", "usage": "public array MongoCollection::drop ( void )", "url": "https://secure.php.net/manual/en/mongocollection.drop.php"}, {"name": "MongoCollection::ensureIndex", "synopsis": null, "usage": "public bool MongoCollection::ensureIndex ( string|array $key|keys [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.ensureindex.php"}, {"name": "MongoCollection::find", "synopsis": null, "usage": "public MongoCursor MongoCollection::find ([ array $query = array() [, array $fields = array() ]] )", "url": "https://secure.php.net/manual/en/mongocollection.find.php"}, {"name": "MongoCollection::findAndModify", "synopsis": "The findAndModify command atomically modifies and returns a single document. By default, the returned document does not include the modifications made on the update. To return the document with the modifications made on the update, use the new option.", "usage": "public array MongoCollection::findAndModify ( array $query [, array $update [, array $fields [, array $options ]]] )", "url": "https://secure.php.net/manual/en/mongocollection.findandmodify.php"}, {"name": "MongoCollection::findOne", "synopsis": "As opposed to MongoCollection::find(), this method will return only the first result from the result set, and not a MongoCursor that can be iterated over.", "usage": "public array MongoCollection::findOne ([ array $query = array() [, array $fields = array() [, array $options = array() ]]] )", "url": "https://secure.php.net/manual/en/mongocollection.findone.php"}, {"name": "MongoCollection::__get", "synopsis": "A concise syntax for getting a collection with a dot-separated name. If a collection name contains strange characters, you may have to use MongoDB::selectCollection() instead.", "usage": "public MongoCollection MongoCollection::__get ( string $name )", "url": "https://secure.php.net/manual/en/mongocollection.get.php"}, {"name": "MongoCollection::getDBRef", "synopsis": null, "usage": "public array MongoCollection::getDBRef ( array $ref )", "url": "https://secure.php.net/manual/en/mongocollection.getdbref.php"}, {"name": "MongoCollection::getIndexInfo", "synopsis": null, "usage": "public array MongoCollection::getIndexInfo ( void )", "url": "https://secure.php.net/manual/en/mongocollection.getindexinfo.php"}, {"name": "MongoCollection::getName", "synopsis": null, "usage": "public string MongoCollection::getName ( void )", "url": "https://secure.php.net/manual/en/mongocollection.getname.php"}, {"name": "MongoCollection::getReadPreference", "synopsis": null, "usage": "public array MongoCollection::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongocollection.getreadpreference.php"}, {"name": "MongoCollection::getSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool MongoCollection::getSlaveOkay ( void )", "url": "https://secure.php.net/manual/en/mongocollection.getslaveokay.php"}, {"name": "MongoCollection::getWriteConcern", "synopsis": null, "usage": "public array MongoCollection::getWriteConcern ( void )", "url": "https://secure.php.net/manual/en/mongocollection.getwriteconcern.php"}, {"name": "MongoCollection::group", "synopsis": null, "usage": "public array MongoCollection::group ( mixed $keys , array $initial , MongoCode $reduce [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.group.php"}, {"name": "MongoCollection::insert", "synopsis": "All strings sent to the database must be UTF-8. If a string is not UTF-8, a MongoException will be thrown. To insert (or query for) a non-UTF-8 string, use MongoBinData.", "usage": "public bool|array MongoCollection::insert ( array|object $document [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.insert.php"}, {"name": "MongoCollection::parallelCollectionScan", "synopsis": "This method returns an array of a maximum of num_cursors cursors. An iteration over one of the returned cursors results in a partial set of documents for a collection. Iteration over all the returned cursors results in getting every document back from the collection.", "usage": "public array[MongoCommandCursor] MongoCollection::parallelCollectionScan ( int $num_cursors )", "url": "https://secure.php.net/manual/en/mongocollection.parallelcollectionscan.php"}, {"name": "MongoCollection::remove", "synopsis": null, "usage": "public bool|array MongoCollection::remove ([ array $criteria = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongocollection.remove.php"}, {"name": "MongoCollection::save", "synopsis": "If the object is from the database, update the existing database object, otherwise insert this object.", "usage": "public mixed MongoCollection::save ( array|object $document [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.save.php"}, {"name": "MongoCollection::setReadPreference", "synopsis": null, "usage": "public bool MongoCollection::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongocollection.setreadpreference.php"}, {"name": "MongoCollection::setSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool MongoCollection::setSlaveOkay ([ bool $ok = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocollection.setslaveokay.php"}, {"name": "MongoCollection::setWriteConcern", "synopsis": null, "usage": "public bool MongoCollection::setWriteConcern ( mixed $w [, int $wtimeout ] )", "url": "https://secure.php.net/manual/en/mongocollection.setwriteconcern.php"}, {"name": "MongoCollection::toIndexString", "synopsis": null, "usage": "static protected string MongoCollection::toIndexString ( mixed $keys )", "url": "https://secure.php.net/manual/en/mongocollection.toindexstring.php"}, {"name": "MongoCollection::update", "synopsis": null, "usage": "public bool|array MongoCollection::update ( array $criteria , array $new_object [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongocollection.update.php"}, {"name": "MongoCollection::validate", "synopsis": null, "usage": "public array MongoCollection::validate ([ bool $scan_data = FALSE ] )", "url": "https://secure.php.net/manual/en/mongocollection.validate.php"}, {"name": "MongoCommandCursor::batchSize", "synopsis": "A cursor typically fetches a batch of result objects and store them locally. This method sets the batchSize value to configure the amount of documents retrieved from the server in one round trip.", "usage": "public MongoCommandCursor MongoCommandCursor::batchSize ( int $batchSize )", "url": "https://secure.php.net/manual/en/mongocommandcursor.batchsize.php"}, {"name": "MongoCommandCursor::__construct", "synopsis": "Generally, you should not have to construct a MongoCommandCursor manually, as there are helper functions such as MongoCollection::aggregateCursor() and MongoCollection::parallelCollectionScan(); however, if the server introduces new commands that can return cursors, this constructor will be useful in the absence of specific helper methods. You may also consider using MongoCommandCursor::createFromDocument().", "usage": "public MongoCommandCursor::__construct ( MongoClient $connection , string $ns , array $command = array() )", "url": "https://secure.php.net/manual/en/mongocommandcursor.construct.php"}, {"name": "MongoCommandCursor::createFromDocument", "synopsis": "Use this method if you have a raw command result with cursor information in it. Note that cursors created with this method cannot be iterated multiple times, as they will lack the original command necessary for re-execution.", "usage": "public static MongoCommandCursor MongoCommandCursor::createFromDocument ( MongoClient $connection , string $hash , array $document )", "url": "https://secure.php.net/manual/en/mongocommandcursor.createfromdocument.php"}, {"name": "MongoCommandCursor::current", "synopsis": "This returns NULL until MongoCommandCursor::rewind() is called.", "usage": "public array MongoCommandCursor::current ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.current.php"}, {"name": "MongoCommandCursor::dead", "synopsis": "This method checks whether the MongoCommandCursor cursor has been exhausted and the database has no more results to send to the client. A cursor being \"dead\" does not necessarily mean that there are no more results available for iteration.", "usage": "public bool MongoCommandCursor::dead ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.dead.php"}, {"name": "MongoCommandCursor::getReadPreference", "synopsis": null, "usage": "public array MongoCommandCursor::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.getreadpreference.php"}, {"name": "MongoCommandCursor::info", "synopsis": "This can be called before or after the cursor has started iterating.", "usage": "public array MongoCommandCursor::info ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.info.php"}, {"name": "MongoCommandCursor::key", "synopsis": null, "usage": "public int MongoCommandCursor::key ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.key.php"}, {"name": "MongoCommandCursor::next", "synopsis": null, "usage": "public void MongoCommandCursor::next ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.next.php"}, {"name": "MongoCommandCursor::rewind", "synopsis": "If the cursor has already started iteration, the command will be re-executed.", "usage": "public array MongoCommandCursor::rewind ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.rewind.php"}, {"name": "MongoCommandCursor::setReadPreference", "synopsis": null, "usage": "public MongoCommandCursor MongoCommandCursor::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongocommandcursor.setreadpreference.php"}, {"name": "MongoCommandCursor::timeout", "synopsis": "A timeout can be set at any time and will affect subsequent data retrieval associated with this cursor, including fetching more results from the database.", "usage": "public MongoCommandCursor MongoCommandCursor::timeout ( int $ms )", "url": "https://secure.php.net/manual/en/mongocommandcursor.timeout.php"}, {"name": "MongoCommandCursor::valid", "synopsis": null, "usage": "public bool MongoCommandCursor::valid ( void )", "url": "https://secure.php.net/manual/en/mongocommandcursor.valid.php"}, {"name": "MongoCursor::addOption", "synopsis": "This is an advanced function and should not be used unless you know what you're doing.", "usage": "public MongoCursor MongoCursor::addOption ( string $key , mixed $value )", "url": "https://secure.php.net/manual/en/mongocursor.addoption.php"}, {"name": "MongoCursor::awaitData", "synopsis": "This method is to be used with tailable cursors. If we are at the end of the data, block for a while rather than returning no data. After a timeout period, we do return as normal.", "usage": "public MongoCursor MongoCursor::awaitData ([ bool $wait = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.awaitdata.php"}, {"name": "MongoCursor::batchSize", "synopsis": "A cursor typically fetches a batch of result objects and store them locally. This method sets the batchSize value to configure the amount of documents retrieved from the server in one round trip. However, it will never return more documents than fit in the max batch size limit (usually 4MB).", "usage": "public MongoCursor MongoCursor::batchSize ( int $batchSize )", "url": "https://secure.php.net/manual/en/mongocursor.batchsize.php"}, {"name": "MongoCursor::__construct", "synopsis": null, "usage": "public MongoCursor::__construct ( MongoClient $connection , string $ns [, array $query = array() [, array $fields = array() ]] )", "url": "https://secure.php.net/manual/en/mongocursor.construct.php"}, {"name": "MongoCursor::count", "synopsis": "This method does not affect the state of the cursor: if you haven't queried yet, you can still apply limits, skips, etc. If you have started iterating through results, it will not move the current position of the cursor. If you have exhausted the cursor, it will not reset it.", "usage": "public int MongoCursor::count ([ bool $foundOnly = FALSE ] )", "url": "https://secure.php.net/manual/en/mongocursor.count.php"}, {"name": "MongoCursor::current", "synopsis": "This returns NULL until MongoCursor::next() is called.", "usage": "public array MongoCursor::current ( void )", "url": "https://secure.php.net/manual/en/mongocursor.current.php"}, {"name": "MongoCursor::dead", "synopsis": "The database sends responses in batches of documents, up to 4MB of documents per response. This method checks if the database has more batches or if the result set has been exhausted.", "usage": "public bool MongoCursor::dead ( void )", "url": "https://secure.php.net/manual/en/mongocursor.dead.php"}, {"name": "MongoCursor::doQuery", "synopsis": null, "usage": "protected void MongoCursor::doQuery ( void )", "url": "https://secure.php.net/manual/en/mongocursor.doquery.php"}, {"name": "MongoCursor::explain", "synopsis": null, "usage": "public array MongoCursor::explain ( void )", "url": "https://secure.php.net/manual/en/mongocursor.explain.php"}, {"name": "MongoCursor::fields", "synopsis": "Fields are specified by \"fieldname\" : bool. TRUE indicates that a field should be returned, FALSE indicates that it should not be returned. You can also use 1 and 0 instead of TRUE and FALSE.", "usage": "public MongoCursor MongoCursor::fields ( array $f )", "url": "https://secure.php.net/manual/en/mongocursor.fields.php"}, {"name": "MongoCursor::getNext", "synopsis": null, "usage": "public array MongoCursor::getNext ( void )", "url": "https://secure.php.net/manual/en/mongocursor.getnext.php"}, {"name": "MongoCursor::getReadPreference", "synopsis": null, "usage": "public array MongoCursor::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongocursor.getreadpreference.php"}, {"name": "MongoCursor::hasNext", "synopsis": null, "usage": "public bool MongoCursor::hasNext ( void )", "url": "https://secure.php.net/manual/en/mongocursor.hasnext.php"}, {"name": "MongoCursor::hint", "synopsis": null, "usage": "public MongoCursor MongoCursor::hint ( mixed $index )", "url": "https://secure.php.net/manual/en/mongocursor.hint.php"}, {"name": "MongoCursor::immortal", "synopsis": "After remaining idle on the server for some amount of time, cursors, by default, \"die.\" This is generally the behavior one wants. The database cleans up a cursor once all of its results have been sent to the client, but if the client doesn't request all of the results, the cursor will languish there, taking up resources. Thus, after a few minutes, the cursor \"times out\" and the database assumes the client has gotten everything it needs and cleans up its the cursor's resources.", "usage": "public MongoCursor MongoCursor::immortal ([ bool $liveForever = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.immortal.php"}, {"name": "MongoCursor::info", "synopsis": "This can be called before or after the cursor has started iterating.", "usage": "public array MongoCursor::info ( void )", "url": "https://secure.php.net/manual/en/mongocursor.info.php"}, {"name": "MongoCursor::key", "synopsis": null, "usage": "public string|int MongoCursor::key ( void )", "url": "https://secure.php.net/manual/en/mongocursor.key.php"}, {"name": "MongoCursor::limit", "synopsis": null, "usage": "public MongoCursor MongoCursor::limit ( int $num )", "url": "https://secure.php.net/manual/en/mongocursor.limit.php"}, {"name": "MongoCursor::maxTimeMS", "synopsis": "Specifies a cumulative time limit in milliseconds to be allowed by the server for processing operations on the cursor.", "usage": "public MongoCursor MongoCursor::maxTimeMS ( int $ms )", "url": "https://secure.php.net/manual/en/mongocursor.maxtimems.php"}, {"name": "MongoCursor::next", "synopsis": null, "usage": "public array MongoCursor::next ( void )", "url": "https://secure.php.net/manual/en/mongocursor.next.php"}, {"name": "MongoCursor::partial", "synopsis": "This option allows mongos to send partial query results if a shard is unreachable. This is only applicable when running a sharded MongoDB cluster and connecting to a mongos.", "usage": "public MongoCursor MongoCursor::partial ([ bool $okay = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.partial.php"}, {"name": "MongoCursor::reset", "synopsis": null, "usage": "public void MongoCursor::reset ( void )", "url": "https://secure.php.net/manual/en/mongocursor.reset.php"}, {"name": "MongoCursor::rewind", "synopsis": "This is identical to the function:", "usage": "public void MongoCursor::rewind ( void )", "url": "https://secure.php.net/manual/en/mongocursor.rewind.php"}, {"name": "MongoCursor::setFlag", "synopsis": "The MongoCursor class has several methods for setting flags on the query object. This method is available in case the MongoDB wire protocol has acquired a new flag, and the driver has not been updated with a method for this new flag. In all other cases, the method should be used. See the \"See also\" section for available methods.", "usage": "public MongoCursor MongoCursor::setFlag ( int $flag [, bool $set = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.setflag.php"}, {"name": "MongoCursor::setReadPreference", "synopsis": null, "usage": "public MongoCursor MongoCursor::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongocursor.setreadpreference.php"}, {"name": "MongoCursor::skip", "synopsis": null, "usage": "public MongoCursor MongoCursor::skip ( int $num )", "url": "https://secure.php.net/manual/en/mongocursor.skip.php"}, {"name": "MongoCursor::slaveOkay", "synopsis": null, "usage": "public MongoCursor MongoCursor::slaveOkay ([ bool $okay = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.slaveokay.php"}, {"name": "MongoCursor::snapshot", "synopsis": "Use snapshot mode for the query. Snapshot mode ensures that a document will not be returned more than once because an intervening write operation results in a move of the document. Documents inserted or deleted during the lifetime of the cursor may or may not be returned, irrespective of snapshot mode.", "usage": "public MongoCursor MongoCursor::snapshot ( void )", "url": "https://secure.php.net/manual/en/mongocursor.snapshot.php"}, {"name": "MongoCursor::sort", "synopsis": null, "usage": "public MongoCursor MongoCursor::sort ( array $fields )", "url": "https://secure.php.net/manual/en/mongocursor.sort.php"}, {"name": "MongoCursor::tailable", "synopsis": "Mongo has a feature known as tailable cursors which are similar to the Unix \"tail -f\" command.", "usage": "public MongoCursor MongoCursor::tailable ([ bool $tail = TRUE ] )", "url": "https://secure.php.net/manual/en/mongocursor.tailable.php"}, {"name": "MongoCursor::timeout", "synopsis": "A timeout can be set at any time and will affect subsequent queries on the cursor, including fetching more results from the database.", "usage": "public MongoCursor MongoCursor::timeout ( int $ms )", "url": "https://secure.php.net/manual/en/mongocursor.timeout.php"}, {"name": "MongoCursor::valid", "synopsis": null, "usage": "public bool MongoCursor::valid ( void )", "url": "https://secure.php.net/manual/en/mongocursor.valid.php"}, {"name": "MongoCursorException::getHost", "synopsis": "Returns the hostname of the server the query was sent too.", "usage": "public string MongoCursorException::getHost ( void )", "url": "https://secure.php.net/manual/en/mongocursorexception.gethost.php"}, {"name": "MongoCursorInterface::batchSize", "synopsis": "A cursor typically fetches a batch of result objects and stores them locally. This method sets the batch size value to configure the amount of documents retrieved from the server in one round trip.", "usage": "abstract public MongoCursorInterface MongoCursorInterface::batchSize ( int $batchSize )", "url": "https://secure.php.net/manual/en/mongocursorinterface.batchsize.php"}, {"name": "MongoCursorInterface::dead", "synopsis": "This method checks whether the cursor has been exhausted and the database has no more results to send to the client. A cursor being \"dead\" does not necessarily mean that there are no more results available for iteration.", "usage": "abstract public bool MongoCursorInterface::dead ( void )", "url": "https://secure.php.net/manual/en/mongocursorinterface.dead.php"}, {"name": "MongoCursorInterface::getReadPreference", "synopsis": null, "usage": "abstract public array MongoCursorInterface::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongocursorinterface.getreadpreference.php"}, {"name": "MongoCursorInterface::info", "synopsis": "Returns information about the cursor's creation and iteration. This can be called before or after the cursor has started iterating.", "usage": "abstract public array MongoCursorInterface::info ( void )", "url": "https://secure.php.net/manual/en/mongocursorinterface.info.php"}, {"name": "MongoCursorInterface::setReadPreference", "synopsis": null, "usage": "abstract public MongoCursorInterface MongoCursorInterface::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongocursorinterface.setreadpreference.php"}, {"name": "MongoCursorInterface::timeout", "synopsis": "A timeout can be set at any time and will affect subsequent data retrieval associated with this cursor, including fetching more results from the database.", "usage": "abstract public MongoCursorInterface MongoCursorInterface::timeout ( int $ms )", "url": "https://secure.php.net/manual/en/mongocursorinterface.timeout.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::__construct()", "synopsis": "Creates a new date. If no parameters are given, the current time is used.", "usage": "public MongoDate::__construct ([ int $sec = time() [, int $usec = 0 ]] )", "url": "https://secure.php.net/manual/en/mongodate.construct.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::toDateTime()", "synopsis": "Returns a DateTime object representation of this date.", "usage": "public DateTime MongoDate::toDateTime ( void )", "url": "https://secure.php.net/manual/en/mongodate.todatetime.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::__toString()", "synopsis": "Returns a string representation of this date, similar to the representation returned by microtime().", "usage": "public string MongoDate::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodate.tostring.php"}, {"name": "MongoDB\\BSON\\Binary::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\Binary::__construct ( string $data , int $type )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.construct.php"}, {"name": "MongoDB\\BSON\\Binary::getData", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Binary::getData ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.getdata.php"}, {"name": "MongoDB\\BSON\\Binary::getType", "synopsis": null, "usage": "final public int MongoDB\\BSON\\Binary::getType ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.gettype.php"}, {"name": "MongoDB\\BSON\\Binary::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Binary::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Binary::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Binary::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.serialize.php"}, {"name": "MongoDB\\BSON\\Binary::__toString", "synopsis": "This method is an alias of: MongoDB\\BSON\\Binary::getData().", "usage": "final public string MongoDB\\BSON\\Binary::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.tostring.php"}, {"name": "MongoDB\\BSON\\Binary::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Binary::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-binary.unserialize.php"}, {"name": "MongoDB\\BSON\\BinaryInterface::getData", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\BinaryInterface::getData ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binaryinterface.getdata.php"}, {"name": "MongoDB\\BSON\\BinaryInterface::getType", "synopsis": null, "usage": "abstract public int MongoDB\\BSON\\BinaryInterface::getType ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binaryinterface.gettype.php"}, {"name": "MongoDB\\BSON\\BinaryInterface::__toString", "synopsis": "This method is an alias of: MongoDB\\BSON\\BinaryInterface::getData().", "usage": "abstract public string MongoDB\\BSON\\BinaryInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-binaryinterface.tostring.php"}, {"name": "MongoDB\\BSON\\DBPointer::__construct", "synopsis": "MongoDB\\BSON\\DBPointer objects are created through conversion from a deprecated BSON type and cannot be constructed directly.", "usage": "final private MongoDB\\BSON\\DBPointer::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-dbpointer.construct.php"}, {"name": "MongoDB\\BSON\\DBPointer::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\DBPointer::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-dbpointer.jsonserialize.php"}, {"name": "MongoDB\\BSON\\DBPointer::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\DBPointer::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-dbpointer.serialize.php"}, {"name": "MongoDB\\BSON\\DBPointer::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\DBPointer::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-dbpointer.tostring.php"}, {"name": "MongoDB\\BSON\\DBPointer::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\DBPointer::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-dbpointer.unserialize.php"}, {"name": "MongoDB\\BSON\\Decimal128::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\Decimal128::__construct ([ string $value ] )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128.construct.php"}, {"name": "MongoDB\\BSON\\Decimal128::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Decimal128::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Decimal128::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Decimal128::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128.serialize.php"}, {"name": "MongoDB\\BSON\\Decimal128::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Decimal128::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128.tostring.php"}, {"name": "MongoDB\\BSON\\Decimal128::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Decimal128::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128.unserialize.php"}, {"name": "MongoDB\\BSON\\Decimal128Interface::__toString", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\Decimal128Interface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-decimal128interface.tostring.php"}, {"name": "MongoDB\\BSON\\Javascript::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\Javascript::__construct ( string $code [, array|object $scope ] )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.construct.php"}, {"name": "MongoDB\\BSON\\Javascript::getCode", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Javascript::getCode ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.getcode.php"}, {"name": "MongoDB\\BSON\\Javascript::getScope", "synopsis": null, "usage": "final public object|null MongoDB\\BSON\\Javascript::getScope ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.getscope.php"}, {"name": "MongoDB\\BSON\\Javascript::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Javascript::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Javascript::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Javascript::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.serialize.php"}, {"name": "MongoDB\\BSON\\Javascript::__toString", "synopsis": "This method is an alias of: MongoDB\\BSON\\Javascript::getCode().", "usage": "final public string MongoDB\\BSON\\Javascript::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.tostring.php"}, {"name": "MongoDB\\BSON\\Javascript::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Javascript::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascript.unserialize.php"}, {"name": "MongoDB\\BSON\\JavascriptInterface::getCode", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\JavascriptInterface::getCode ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascriptinterface.getcode.php"}, {"name": "MongoDB\\BSON\\JavascriptInterface::getScope", "synopsis": null, "usage": "abstract public object|null MongoDB\\BSON\\JavascriptInterface::getScope ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascriptinterface.getscope.php"}, {"name": "MongoDB\\BSON\\JavascriptInterface::__toString", "synopsis": "This method is an alias of: MongoDB\\BSON\\JavascriptInterface::getCode().", "usage": "abstract public string MongoDB\\BSON\\JavascriptInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-javascriptinterface.tostring.php"}, {"name": "MongoDB\\BSON\\MaxKey::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\MaxKey::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-maxkey.construct.php"}, {"name": "MongoDB\\BSON\\MaxKey::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\MaxKey::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-maxkey.jsonserialize.php"}, {"name": "MongoDB\\BSON\\MaxKey::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\MaxKey::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-maxkey.serialize.php"}, {"name": "MongoDB\\BSON\\MaxKey::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\MaxKey::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-maxkey.unserialize.php"}, {"name": "MongoDB\\BSON\\MinKey::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\MinKey::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-minkey.construct.php"}, {"name": "MongoDB\\BSON\\MinKey::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\MinKey::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-minkey.jsonserialize.php"}, {"name": "MongoDB\\BSON\\MinKey::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\MinKey::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-minkey.serialize.php"}, {"name": "MongoDB\\BSON\\MinKey::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\MinKey::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-minkey.unserialize.php"}, {"name": "MongoDB\\BSON\\ObjectId::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\ObjectId::__construct ([ string $id ] )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.construct.php"}, {"name": "MongoDB\\BSON\\ObjectId::getTimestamp", "synopsis": "The timestamp component of an ObjectId is its most significant 32 bits, which denotes the number of seconds since the Unix epoch. This value is read as an unsigned 32-bit integer with big-endian byte order.", "usage": "final public int MongoDB\\BSON\\ObjectId::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.gettimestamp.php"}, {"name": "MongoDB\\BSON\\ObjectId::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\ObjectId::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.jsonserialize.php"}, {"name": "MongoDB\\BSON\\ObjectId::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\ObjectId::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.serialize.php"}, {"name": "MongoDB\\BSON\\ObjectId::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\ObjectId::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.tostring.php"}, {"name": "MongoDB\\BSON\\ObjectId::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\ObjectId::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectid.unserialize.php"}, {"name": "MongoDB\\BSON\\ObjectIdInterface::getTimestamp", "synopsis": null, "usage": "abstract public int MongoDB\\BSON\\ObjectIdInterface::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectidinterface.gettimestamp.php"}, {"name": "MongoDB\\BSON\\ObjectIdInterface::__toString", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\ObjectIdInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-objectidinterface.tostring.php"}, {"name": "MongoDB\\BSON\\Regex::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\Regex::__construct ( string $pattern [, string $flags = \"\" ] )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.construct.php"}, {"name": "MongoDB\\BSON\\Regex::getFlags", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Regex::getFlags ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.getflags.php"}, {"name": "MongoDB\\BSON\\Regex::getPattern", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Regex::getPattern ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.getpattern.php"}, {"name": "MongoDB\\BSON\\Regex::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Regex::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Regex::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Regex::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.serialize.php"}, {"name": "MongoDB\\BSON\\Regex::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Regex::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.tostring.php"}, {"name": "MongoDB\\BSON\\Regex::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Regex::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-regex.unserialize.php"}, {"name": "MongoDB\\BSON\\RegexInterface::getFlags", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\RegexInterface::getFlags ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regexinterface.getflags.php"}, {"name": "MongoDB\\BSON\\RegexInterface::getPattern", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\RegexInterface::getPattern ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regexinterface.getpattern.php"}, {"name": "MongoDB\\BSON\\RegexInterface::__toString", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\RegexInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-regexinterface.tostring.php"}, {"name": "MongoDB\\BSON\\Serializable::bsonSerialize", "synopsis": "Called during serialization of the object to BSON. The method must return an array or stdClass.", "usage": "abstract public array|object MongoDB\\BSON\\Serializable::bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-serializable.bsonserialize.php"}, {"name": "MongoDB\\BSON\\Symbol::__construct", "synopsis": "MongoDB\\BSON\\Symbol objects are created through conversion from a deprecated BSON type and cannot be constructed directly.", "usage": "final private MongoDB\\BSON\\Symbol::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-symbol.construct.php"}, {"name": "MongoDB\\BSON\\Symbol::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Symbol::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-symbol.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Symbol::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Symbol::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-symbol.serialize.php"}, {"name": "MongoDB\\BSON\\Symbol::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Symbol::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-symbol.tostring.php"}, {"name": "MongoDB\\BSON\\Symbol::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Symbol::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-symbol.unserialize.php"}, {"name": "MongoDB\\BSON\\Timestamp::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\Timestamp::__construct ( int $increment , int $timestamp )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.construct.php"}, {"name": "MongoDB\\BSON\\Timestamp::getIncrement", "synopsis": "The increment component of a Timestamp is its least significant 32 bits, whichs denotes the incrementing ordinal for operations within a given second. This value is read as an unsigned 32-bit integer with big-endian byte order.", "usage": "final public int MongoDB\\BSON\\Timestamp::getIncrement ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.getincrement.php"}, {"name": "MongoDB\\BSON\\Timestamp::getTimestamp", "synopsis": "The timestamp component of a Timestamp is its most significant 32 bits, which denotes the number of seconds since the Unix epoch. This value is read as an unsigned 32-bit integer with big-endian byte order.", "usage": "final public int MongoDB\\BSON\\Timestamp::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.gettimestamp.php"}, {"name": "MongoDB\\BSON\\Timestamp::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Timestamp::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Timestamp::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Timestamp::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.serialize.php"}, {"name": "MongoDB\\BSON\\Timestamp::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Timestamp::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.tostring.php"}, {"name": "MongoDB\\BSON\\Timestamp::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Timestamp::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestamp.unserialize.php"}, {"name": "MongoDB\\BSON\\TimestampInterface::getIncrement", "synopsis": null, "usage": "abstract public int MongoDB\\BSON\\TimestampInterface::getIncrement ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestampinterface.getincrement.php"}, {"name": "MongoDB\\BSON\\TimestampInterface::getTimestamp", "synopsis": null, "usage": "abstract public int MongoDB\\BSON\\TimestampInterface::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestampinterface.gettimestamp.php"}, {"name": "MongoDB\\BSON\\TimestampInterface::__toString", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\TimestampInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-timestampinterface.tostring.php"}, {"name": "MongoDB\\BSON\\Undefined::__construct", "synopsis": "MongoDB\\BSON\\Undefined objects are created through conversion from a deprecated BSON type and cannot be constructed directly.", "usage": "final private MongoDB\\BSON\\Undefined::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-undefined.construct.php"}, {"name": "MongoDB\\BSON\\Undefined::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\Undefined::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-undefined.jsonserialize.php"}, {"name": "MongoDB\\BSON\\Undefined::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Undefined::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-undefined.serialize.php"}, {"name": "MongoDB\\BSON\\Undefined::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\Undefined::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-undefined.tostring.php"}, {"name": "MongoDB\\BSON\\Undefined::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\Undefined::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-undefined.unserialize.php"}, {"name": "MongoDB\\BSON\\Unserializable::bsonUnserialize", "synopsis": "Called during unserialization of the object from BSON. The properties of the BSON array or document will be passed to the method as an array.", "usage": "abstract public void MongoDB\\BSON\\Unserializable::bsonUnserialize ( array $data )", "url": "https://secure.php.net/manual/en/mongodb-bson-unserializable.bsonunserialize.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::__construct", "synopsis": null, "usage": "final public MongoDB\\BSON\\UTCDateTime::__construct ([ integer|float|string|DateTimeInterface $milliseconds = NULL ] )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.construct.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::jsonSerialize", "synopsis": null, "usage": "final public mixed MongoDB\\BSON\\UTCDateTime::jsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.jsonserialize.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::serialize", "synopsis": null, "usage": "final public string MongoDB\\BSON\\UTCDateTime::serialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.serialize.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::toDateTime", "synopsis": null, "usage": "final public DateTime MongoDB\\BSON\\UTCDateTime::toDateTime ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.todatetime.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::__toString", "synopsis": null, "usage": "final public string MongoDB\\BSON\\UTCDateTime::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.tostring.php"}, {"name": "MongoDB\\BSON\\UTCDateTime::unserialize", "synopsis": null, "usage": "final public void MongoDB\\BSON\\UTCDateTime::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetime.unserialize.php"}, {"name": "MongoDB\\BSON\\UTCDateTimeInterface::toDateTime", "synopsis": null, "usage": "abstract public DateTime MongoDB\\BSON\\UTCDateTimeInterface::toDateTime ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetimeinterface.todatetime.php"}, {"name": "MongoDB\\BSON\\UTCDateTimeInterface::__toString", "synopsis": null, "usage": "abstract public string MongoDB\\BSON\\UTCDateTimeInterface::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-bson-utcdatetimeinterface.tostring.php"}, {"name": "MongoDB\\Driver\\BulkWrite::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\BulkWrite, which is a mutable object to which one or more write operations may be added. The write(s) may then be executed with MongoDB\\Driver\\Manager::executeBulkWrite().", "usage": "public MongoDB\\Driver\\BulkWrite::__construct ([ array $options ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-bulkwrite.construct.php"}, {"name": "MongoDB\\Driver\\BulkWrite::count", "synopsis": "Returns the number of write operations added to the MongoDB\\Driver\\BulkWrite object.", "usage": "public int MongoDB\\Driver\\BulkWrite::count ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-bulkwrite.count.php"}, {"name": "MongoDB\\Driver\\BulkWrite::delete", "synopsis": "Adds a delete operation to the MongoDB\\Driver\\BulkWrite.", "usage": "public void MongoDB\\Driver\\BulkWrite::delete ( array|object $filter [, array $deleteOptions ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-bulkwrite.delete.php"}, {"name": "MongoDB\\Driver\\BulkWrite::insert", "synopsis": "Adds an insert operation to the MongoDB\\Driver\\BulkWrite.", "usage": "public mixed MongoDB\\Driver\\BulkWrite::insert ( array|object $document )", "url": "https://secure.php.net/manual/en/mongodb-driver-bulkwrite.insert.php"}, {"name": "MongoDB\\Driver\\BulkWrite::update", "synopsis": "Adds an update operation to the MongoDB\\Driver\\BulkWrite.", "usage": "public void MongoDB\\Driver\\BulkWrite::update ( array|object $filter , array|object $newObj [, array $updateOptions ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-bulkwrite.update.php"}, {"name": "MongoDB\\Driver\\Command::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\Command, which is an immutable value object that represents a database command. The command may then be executed with MongoDB\\Driver\\Manager::executeCommand().", "usage": "final public MongoDB\\Driver\\Command::__construct ( array|object $document [, array $commandOptions ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-command.construct.php"}, {"name": "MongoDB\\Driver\\Exception\\CommandException::getResultDocument", "synopsis": "Returns the result document for the failed command.", "usage": "final public object MongoDB\\Driver\\Exception\\CommandException::getResultDocument ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-commandexception.getresultdocument.php"}, {"name": "MongoDB\\Driver\\Cursor::__construct", "synopsis": "MongoDB\\Driver\\Cursor objects are returned as the result of an executed command or query and cannot be constructed directly.", "usage": "final private MongoDB\\Driver\\Cursor::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.construct.php"}, {"name": "MongoDB\\Driver\\Cursor::getId", "synopsis": "Returns the MongoDB\\Driver\\CursorId associated with this cursor. A cursor ID uniquely identifies the cursor on the server.", "usage": "final public MongoDB\\Driver\\CursorId MongoDB\\Driver\\Cursor::getId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.getid.php"}, {"name": "MongoDB\\Driver\\Cursor::getServer", "synopsis": "Returns the MongoDB\\Driver\\Server associated with this cursor. This is the server that executed the MongoDB\\Driver\\Query or MongoDB\\Driver\\Command.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\Cursor::getServer ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.getserver.php"}, {"name": "MongoDB\\Driver\\Cursor::isDead", "synopsis": "Checks whether the cursor may have additional results available to read. A cursor is initially \"alive\" but may become \"dead\" for any of the following reasons:", "usage": "final public bool MongoDB\\Driver\\Cursor::isDead ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.isdead.php"}, {"name": "MongoDB\\Driver\\Cursor::setTypeMap", "synopsis": "Sets the type map configuration to use when unserializing the BSON results into PHP values.", "usage": "final public void MongoDB\\Driver\\Cursor::setTypeMap ( array $typemap )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.settypemap.php"}, {"name": "MongoDB\\Driver\\Cursor::toArray", "synopsis": "Iterates the cursor and returns its results in an array. MongoDB\\Driver\\Cursor::setTypeMap() may be used to control how documents are unserialized into PHP values.", "usage": "final public array MongoDB\\Driver\\Cursor::toArray ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursor.toarray.php"}, {"name": "MongoDB\\Driver\\CursorId::__construct", "synopsis": "MongoDB\\Driver\\CursorId objects are returned from MongoDB\\Driver\\Cursor::getId() and cannot be constructed directly.", "usage": "final private MongoDB\\Driver\\CursorId::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursorid.construct.php"}, {"name": "MongoDB\\Driver\\CursorId::__toString", "synopsis": "Returns the string representation of the cursor ID.", "usage": "final public string MongoDB\\Driver\\CursorId::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-cursorid.tostring.php"}, {"name": "MongoDB\\Driver\\Manager::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\Manager object with the specified options.", "usage": "final public MongoDB\\Driver\\Manager::__construct ([ string $uri = \"mongodb://127.0.0.1/ [, array $uriOptions = array() [, array $driverOptions = array() ]]] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.construct.php"}, {"name": "MongoDB\\Driver\\Manager::executeBulkWrite", "synopsis": "Executes one or more write operations on the primary server.", "usage": "final public MongoDB\\Driver\\WriteResult MongoDB\\Driver\\Manager::executeBulkWrite ( string $namespace , MongoDB\\Driver\\BulkWrite $bulk [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executebulkwrite.php"}, {"name": "MongoDB\\Driver\\Manager::executeCommand", "synopsis": "Selects a server according to the \"readPreference\" option and executes the command on that server. By default, the read preference from the MongoDB Connection URI will be used.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Manager::executeCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executecommand.php"}, {"name": "MongoDB\\Driver\\Manager::executeQuery", "synopsis": "Selects a server according to the \"readPreference\" option and executes the query on that server. By default, the read preference from the MongoDB Connection URI will be used.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Manager::executeQuery ( string $namespace , MongoDB\\Driver\\Query $query [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executequery.php"}, {"name": "MongoDB\\Driver\\Manager::executeReadCommand", "synopsis": "Selects a server according to the \"readPreference\" option and executes the command on that server. By default, the read preference from the MongoDB Connection URI will be used.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Manager::executeReadCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executereadcommand.php"}, {"name": "MongoDB\\Driver\\Manager::executeReadWriteCommand", "synopsis": "Executes the command on the primary server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Manager::executeReadWriteCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executereadwritecommand.php"}, {"name": "MongoDB\\Driver\\Manager::executeWriteCommand", "synopsis": "Executes the command on the primary server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Manager::executeWriteCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.executewritecommand.php"}, {"name": "MongoDB\\Driver\\Manager::getReadConcern", "synopsis": "Returns the MongoDB\\Driver\\ReadConcern for the Manager, which is derived from its URI options. This is the default read concern for queries and commands executed on the Manager.", "usage": "final public MongoDB\\Driver\\ReadConcern MongoDB\\Driver\\Manager::getReadConcern ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.getreadconcern.php"}, {"name": "MongoDB\\Driver\\Manager::getReadPreference", "synopsis": "Returns the MongoDB\\Driver\\ReadPreference for the Manager, which is derived from its URI options. This is the default read preference for queries and commands executed on the Manager.", "usage": "final public MongoDB\\Driver\\ReadPreference MongoDB\\Driver\\Manager::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.getreadpreference.php"}, {"name": "MongoDB\\Driver\\Manager::getServers", "synopsis": "Returns an array of MongoDB\\Driver\\Server instances to which this manager is connected.", "usage": "final public array MongoDB\\Driver\\Manager::getServers ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.getservers.php"}, {"name": "MongoDB\\Driver\\Manager::getWriteConcern", "synopsis": "Returns the MongoDB\\Driver\\WriteConcern for the Manager, which is derived from its URI options. This is the default write concern for writes and commands executed on the Manager.", "usage": "final public MongoDB\\Driver\\WriteConcern MongoDB\\Driver\\Manager::getWriteConcern ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.getwriteconcern.php"}, {"name": "MongoDB\\Driver\\Manager::selectServer", "synopsis": "Selects a MongoDB\\Driver\\Server matching readPreference. This may be used to preselect a server in order to perform version checking before executing an operation.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\Manager::selectServer ( MongoDB\\Driver\\ReadPreference $readPreference )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.selectserver.php"}, {"name": "MongoDB\\Driver\\Manager::startSession", "synopsis": "Creates a MongoDB\\Driver\\Session for the given options. The session may then be specified when executing commands, queries, and write operations.", "usage": "final public MongoDB\\Driver\\Session MongoDB\\Driver\\Manager::startSession ([ array $options ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-manager.startsession.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getCommandName", "synopsis": "Returns the command name (e.g. \"find\", \"aggregate\").", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getCommandName ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.getcommandname.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getDurationMicros", "synopsis": "The command's duration is a calculated value that includes the time to send the message and receive the reply from the server.", "usage": "final public int MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getDurationMicros ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.getdurationmicros.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getError", "synopsis": null, "usage": "final public Exception MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getError ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.geterror.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getOperationId", "synopsis": "The operation ID is generated by the driver and may be used to link events together such as bulk write operations, which may have been split across several commands at the protocol level.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getOperationId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.getoperationid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getRequestId", "synopsis": "The request ID is generated by the driver and may be used to associate this MongoDB\\Driver\\Monitoring\\CommandFailedEvent with a previous MongoDB\\Driver\\Monitoring\\CommandStartedEvent.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getRequestId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.getrequestid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getServer", "synopsis": "Returns the MongoDB\\Driver\\Server on which the command was executed.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\Monitoring\\CommandFailedEvent::getServer ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandfailedevent.getserver.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommand", "synopsis": "The reply document will be converted from BSON to PHP using the default deserialization rules (e.g. BSON documents will be converted to stdClass).", "usage": "final public object MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommand ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getcommand.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommandName", "synopsis": "Returns the command name (e.g. \"find\", \"aggregate\").", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getCommandName ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getcommandname.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getDatabaseName", "synopsis": null, "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getDatabaseName ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getdatabasename.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getOperationId", "synopsis": "The operation ID is generated by the driver and may be used to link events together such as bulk write operations, which may have been split across several commands at the protocol level.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getOperationId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getoperationid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getRequestId", "synopsis": "The request ID is generated by the driver and may be used to associate this MongoDB\\Driver\\Monitoring\\CommandStartedEvent with a later MongoDB\\Driver\\Monitoring\\CommandFailedEvent or MongoDB\\Driver\\Monitoring\\CommandSucceededEvent.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getRequestId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getrequestid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getServer", "synopsis": "Returns the MongoDB\\Driver\\Server on which the command was executed.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\Monitoring\\CommandStartedEvent::getServer ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandstartedevent.getserver.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandFailed", "synopsis": "If the subscriber has been registered with MongoDB\\Driver\\Monitoring\\addSubscriber(), the driver will call this method when a command has failed.", "usage": "abstract public void MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandFailed ( MongoDB\\Driver\\Monitoring\\CommandFailedEvent $event )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsubscriber.commandfailed.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandStarted", "synopsis": "If the subscriber has been registered with MongoDB\\Driver\\Monitoring\\addSubscriber(), the driver will call this method when a command has started.", "usage": "abstract public void MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandStarted ( MongoDB\\Driver\\Monitoring\\CommandStartedEvent $event )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsubscriber.commandstarted.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandSucceeded", "synopsis": "If the subscriber has been registered with MongoDB\\Driver\\Monitoring\\addSubscriber(), the driver will call this method when a command has succeeded.", "usage": "abstract public void MongoDB\\Driver\\Monitoring\\CommandSubscriber::commandSucceeded ( MongoDB\\Driver\\Monitoring\\CommandSucceededEvent $event )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsubscriber.commandsucceeded.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getCommandName", "synopsis": "Returns the command name (e.g. \"find\", \"aggregate\").", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getCommandName ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getcommandname.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getDurationMicros", "synopsis": "The command's duration is a calculated value that includes the time to send the message and receive the reply from the server.", "usage": "final public int MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getDurationMicros ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getdurationmicros.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getOperationId", "synopsis": "The operation ID is generated by the driver and may be used to link events together such as bulk write operations, which may have been split across several commands at the protocol level.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getOperationId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getoperationid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getReply", "synopsis": "The reply document will be converted from BSON to PHP using the default deserialization rules (e.g. BSON documents will be converted to stdClass).", "usage": "final public object MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getReply ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getreply.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getRequestId", "synopsis": "The request ID is generated by the driver and may be used to associate this MongoDB\\Driver\\Monitoring\\CommandSucceededEvent with a previous MongoDB\\Driver\\Monitoring\\CommandStartedEvent.", "usage": "final public string MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getRequestId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getrequestid.php"}, {"name": "MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getServer", "synopsis": "Returns the MongoDB\\Driver\\Server on which the command was executed.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\Monitoring\\CommandSucceededEvent::getServer ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-monitoring-commandsucceededevent.getserver.php"}, {"name": "MongoDB\\Driver\\Query::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\Query, which is an immutable value object that represents a database query. The query may then be executed with MongoDB\\Driver\\Manager::executeQuery().", "usage": "final public MongoDB\\Driver\\Query::__construct ( array|object $filter [, array $queryOptions ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-query.construct.php"}, {"name": "MongoDB\\Driver\\ReadConcern::bsonSerialize", "synopsis": null, "usage": "final public object MongoDB\\Driver\\ReadConcern::bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readconcern.bsonserialize.php"}, {"name": "MongoDB\\Driver\\ReadConcern::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\ReadConcern, which is an immutable value object.", "usage": "final public MongoDB\\Driver\\ReadConcern::__construct ([ string $level ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-readconcern.construct.php"}, {"name": "MongoDB\\Driver\\ReadConcern::getLevel", "synopsis": null, "usage": "final public string|null MongoDB\\Driver\\ReadConcern::getLevel ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readconcern.getlevel.php"}, {"name": "MongoDB\\Driver\\ReadConcern::isDefault", "synopsis": "Returns whether this is the default read concern (i.e. no options are specified). This method is primarily intended to be used in conjunction with MongoDB\\Driver\\Manager::getReadConcern() to determine whether the Manager has been constructed without any read concern options.", "usage": "final public bool MongoDB\\Driver\\ReadConcern::isDefault ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readconcern.isdefault.php"}, {"name": "MongoDB\\Driver\\ReadPreference::bsonSerialize", "synopsis": null, "usage": "final public object MongoDB\\Driver\\ReadPreference::bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readpreference.bsonserialize.php"}, {"name": "MongoDB\\Driver\\ReadPreference::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\ReadPreference, which is an immutable value object.", "usage": "final public MongoDB\\Driver\\ReadPreference::__construct ( string|integer $mode [, array $tagSets = NULL [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongodb-driver-readpreference.construct.php"}, {"name": "MongoDB\\Driver\\ReadPreference::getMaxStalenessSeconds", "synopsis": null, "usage": "final public int MongoDB\\Driver\\ReadPreference::getMaxStalenessSeconds ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readpreference.getmaxstalenessseconds.php"}, {"name": "MongoDB\\Driver\\ReadPreference::getMode", "synopsis": null, "usage": "final public int MongoDB\\Driver\\ReadPreference::getMode ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readpreference.getmode.php"}, {"name": "MongoDB\\Driver\\ReadPreference::getTagSets", "synopsis": null, "usage": "final public array MongoDB\\Driver\\ReadPreference::getTagSets ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-readpreference.gettagsets.php"}, {"name": "MongoDB\\Driver\\Server::__construct", "synopsis": "MongoDB\\Driver\\Server objects are created internally by MongoDB\\Driver\\Manager when a database connection is established and may be returned by MongoDB\\Driver\\Manager::getServers() and MongoDB\\Driver\\Manager::selectServer().", "usage": "final private MongoDB\\Driver\\Server::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.construct.php"}, {"name": "MongoDB\\Driver\\Server::executeBulkWrite", "synopsis": "Executes one or more write operations on this server.", "usage": "final public MongoDB\\Driver\\WriteResult MongoDB\\Driver\\Server::executeBulkWrite ( string $namespace , MongoDB\\Driver\\BulkWrite $bulk [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executebulkwrite.php"}, {"name": "MongoDB\\Driver\\Server::executeCommand", "synopsis": "Executes the command on this server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Server::executeCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executecommand.php"}, {"name": "MongoDB\\Driver\\Server::executeQuery", "synopsis": "Executes the query on this server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Server::executeQuery ( string $namespace , MongoDB\\Driver\\Query $query [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executequery.php"}, {"name": "MongoDB\\Driver\\Server::executeReadCommand", "synopsis": "Executes the command on this server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Server::executeReadCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executereadcommand.php"}, {"name": "MongoDB\\Driver\\Server::executeReadWriteCommand", "synopsis": "Executes the command on this server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Server::executeReadWriteCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executereadwritecommand.php"}, {"name": "MongoDB\\Driver\\Server::executeWriteCommand", "synopsis": "Executes the command on this server.", "usage": "final public MongoDB\\Driver\\Cursor MongoDB\\Driver\\Server::executeWriteCommand ( string $db , MongoDB\\Driver\\Command $command [, array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.executewritecommand.php"}, {"name": "MongoDB\\Driver\\Server::getHost", "synopsis": "Returns the hostname of this server.", "usage": "final public string MongoDB\\Driver\\Server::getHost ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.gethost.php"}, {"name": "MongoDB\\Driver\\Server::getInfo", "synopsis": "Returns an array of information about this server.", "usage": "final public array MongoDB\\Driver\\Server::getInfo ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.getinfo.php"}, {"name": "MongoDB\\Driver\\Server::getLatency", "synopsis": "Returns the latency of this server (i.e. the client's measured \u00bb\u00a0round trip time of an ismaster command).", "usage": "final public string MongoDB\\Driver\\Server::getLatency ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.getlatency.php"}, {"name": "MongoDB\\Driver\\Server::getPort", "synopsis": "Returns the port on which this server is listening.", "usage": "final public int MongoDB\\Driver\\Server::getPort ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.getport.php"}, {"name": "MongoDB\\Driver\\Server::getTags", "synopsis": "Returns an array of \u00bb\u00a0tags used to describe this server in a replica set. The array will contain zero or more string key and value pairs.", "usage": "final public array MongoDB\\Driver\\Server::getTags ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.gettags.php"}, {"name": "MongoDB\\Driver\\Server::getType", "synopsis": "Returns an integer denoting the type of this server. The value will correlate with a MongoDB\\Driver\\Server constant.", "usage": "final public int MongoDB\\Driver\\Server::getType ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.gettype.php"}, {"name": "MongoDB\\Driver\\Server::isArbiter", "synopsis": "Returns whether this server is an \u00bb\u00a0arbiter member of a replica set.", "usage": "final public bool MongoDB\\Driver\\Server::isArbiter ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.isarbiter.php"}, {"name": "MongoDB\\Driver\\Server::isHidden", "synopsis": "Returns whether this server is a \u00bb\u00a0hidden member of a replica set.", "usage": "final public bool MongoDB\\Driver\\Server::isHidden ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.ishidden.php"}, {"name": "MongoDB\\Driver\\Server::isPassive", "synopsis": "Returns whether this server is a \u00bb\u00a0passive member of a replica set (i.e. its priority is 0).", "usage": "final public bool MongoDB\\Driver\\Server::isPassive ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.ispassive.php"}, {"name": "MongoDB\\Driver\\Server::isPrimary", "synopsis": "Returns whether this server is a \u00bb\u00a0primary member of a replica set.", "usage": "final public bool MongoDB\\Driver\\Server::isPrimary ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.isprimary.php"}, {"name": "MongoDB\\Driver\\Server::isSecondary", "synopsis": "Returns whether this server is a \u00bb\u00a0secondary member of a replica set.", "usage": "final public bool MongoDB\\Driver\\Server::isSecondary ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-server.issecondary.php"}, {"name": "MongoDB\\Driver\\Session::advanceClusterTime", "synopsis": "Advances the cluster time for this session. If the cluster time is less than or equal to the session's current cluster time, this function is a no-op.", "usage": "final public void MongoDB\\Driver\\Session::advanceClusterTime ( array|object $clusterTime )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.advanceclustertime.php"}, {"name": "MongoDB\\Driver\\Session::advanceOperationTime", "synopsis": "Advances the operation time for this session. If the operation time is less than or equal to the session's current operation time, this function is a no-op.", "usage": "final public void MongoDB\\Driver\\Session::advanceOperationTime ( MongoDB\\BSON\\TimestampInterface $operationTime )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.advanceoperationtime.php"}, {"name": "MongoDB\\Driver\\Session::__construct", "synopsis": "MongoDB\\Driver\\Session objects are returned by MongoDB\\Driver\\Manager::startSession() and cannot be constructed directly.", "usage": "final private MongoDB\\Driver\\Session::__construct ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.construct.php"}, {"name": "MongoDB\\Driver\\Session::getClusterTime", "synopsis": "Returns the cluster time for this session. If the session has not been used for any operation and MongoDB\\Driver\\Session::advanceClusterTime() has not been called, the cluster time will be NULL.", "usage": "final public object|null MongoDB\\Driver\\Session::getClusterTime ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.getclustertime.php"}, {"name": "MongoDB\\Driver\\Session::getLogicalSessionId", "synopsis": "Returns the logical session ID for this session, which may be used to identify this session's operations on the server.", "usage": "final public object MongoDB\\Driver\\Session::getLogicalSessionId ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.getlogicalsessionid.php"}, {"name": "MongoDB\\Driver\\Session::getOperationTime", "synopsis": "Returns the operation time for this session. If the session has not been used for any operation and MongoDB\\Driver\\Session::advanceOperationTime() has not been called, the operation time will be NULL", "usage": "final public MongoDB\\BSON\\Timestamp|null MongoDB\\Driver\\Session::getOperationTime ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-session.getoperationtime.php"}, {"name": "MongoDB\\Driver\\WriteConcern::bsonSerialize", "synopsis": null, "usage": "final public object MongoDB\\Driver\\WriteConcern::bsonSerialize ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.bsonserialize.php"}, {"name": "MongoDB\\Driver\\WriteConcern::__construct", "synopsis": "Constructs a new MongoDB\\Driver\\WriteConcern, which is an immutable value object.", "usage": "final public MongoDB\\Driver\\WriteConcern::__construct ( string|integer $w [, int $wtimeout [, bool $journal ]] )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.construct.php"}, {"name": "MongoDB\\Driver\\WriteConcern::getJournal", "synopsis": null, "usage": "final public boolean|null MongoDB\\Driver\\WriteConcern::getJournal ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.getjournal.php"}, {"name": "MongoDB\\Driver\\WriteConcern::getW", "synopsis": null, "usage": "final public string|integer|null MongoDB\\Driver\\WriteConcern::getW ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.getw.php"}, {"name": "MongoDB\\Driver\\WriteConcern::getWtimeout", "synopsis": null, "usage": "final public int MongoDB\\Driver\\WriteConcern::getWtimeout ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.getwtimeout.php"}, {"name": "MongoDB\\Driver\\WriteConcern::isDefault", "synopsis": "Returns whether this is the default write concern (i.e. no options are specified). This method is primarily intended to be used in conjunction with MongoDB\\Driver\\Manager::getWriteConcern() to determine whether the Manager has been constructed without any write concern options.", "usage": "final public bool MongoDB\\Driver\\WriteConcern::isDefault ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcern.isdefault.php"}, {"name": "MongoDB\\Driver\\WriteConcernError::getCode", "synopsis": "", "usage": "final public int MongoDB\\Driver\\WriteConcernError::getCode ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcernerror.getcode.php"}, {"name": "MongoDB\\Driver\\WriteConcernError::getInfo", "synopsis": "", "usage": "final public mixed MongoDB\\Driver\\WriteConcernError::getInfo ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcernerror.getinfo.php"}, {"name": "MongoDB\\Driver\\WriteConcernError::getMessage", "synopsis": "", "usage": "final public string MongoDB\\Driver\\WriteConcernError::getMessage ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeconcernerror.getmessage.php"}, {"name": "MongoDB\\Driver\\WriteError::getCode", "synopsis": "", "usage": "final public int MongoDB\\Driver\\WriteError::getCode ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeerror.getcode.php"}, {"name": "MongoDB\\Driver\\WriteError::getIndex", "synopsis": "", "usage": "final public int MongoDB\\Driver\\WriteError::getIndex ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeerror.getindex.php"}, {"name": "MongoDB\\Driver\\WriteError::getInfo", "synopsis": "", "usage": "final public mixed MongoDB\\Driver\\WriteError::getInfo ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeerror.getinfo.php"}, {"name": "MongoDB\\Driver\\WriteError::getMessage", "synopsis": "", "usage": "final public string MongoDB\\Driver\\WriteError::getMessage ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeerror.getmessage.php"}, {"name": "MongoDB\\Driver\\Exception\\WriteException::getWriteResult", "synopsis": "Returns the MongoDB\\Driver\\WriteResult for the failed write operation. The MongoDB\\Driver\\WriteResult::getWriteErrors() and MongoDB\\Driver\\WriteResult::getWriteConcernError() methods may be used to get more details about the failure.", "usage": "final public MongoDB\\Driver\\WriteResult MongoDB\\Driver\\Exception\\WriteException::getWriteResult ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeexception.getwriteresult.php"}, {"name": "MongoDB\\Driver\\WriteResult::getDeletedCount", "synopsis": "", "usage": "final public integer|null MongoDB\\Driver\\WriteResult::getDeletedCount ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getdeletedcount.php"}, {"name": "MongoDB\\Driver\\WriteResult::getInsertedCount", "synopsis": "", "usage": "final public integer|null MongoDB\\Driver\\WriteResult::getInsertedCount ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getinsertedcount.php"}, {"name": "MongoDB\\Driver\\WriteResult::getMatchedCount", "synopsis": "If the update operation results in no change to the document (e.g. setting the value of a field to its current value), the matched count may be greater than the value returned by MongoDB\\Driver\\WriteResult::getModifiedCount().", "usage": "final public integer|null MongoDB\\Driver\\WriteResult::getMatchedCount ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getmatchedcount.php"}, {"name": "MongoDB\\Driver\\WriteResult::getModifiedCount", "synopsis": "If the update operation results in no change to the document (e.g. setting the value of a field to its current value), the modified count may be less than the value returned by MongoDB\\Driver\\WriteResult::getMatchedCount().", "usage": "final public integer|null MongoDB\\Driver\\WriteResult::getModifiedCount ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getmodifiedcount.php"}, {"name": "MongoDB\\Driver\\WriteResult::getServer", "synopsis": "Returns the MongoDB\\Driver\\Server associated with this write result. This is the server that executed the MongoDB\\Driver\\BulkWrite.", "usage": "final public MongoDB\\Driver\\Server MongoDB\\Driver\\WriteResult::getServer ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getserver.php"}, {"name": "MongoDB\\Driver\\WriteResult::getUpsertedCount", "synopsis": "", "usage": "final public integer|null MongoDB\\Driver\\WriteResult::getUpsertedCount ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getupsertedcount.php"}, {"name": "MongoDB\\Driver\\WriteResult::getUpsertedIds", "synopsis": "", "usage": "final public array MongoDB\\Driver\\WriteResult::getUpsertedIds ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getupsertedids.php"}, {"name": "MongoDB\\Driver\\WriteResult::getWriteConcernError", "synopsis": "", "usage": "final public MongoDB\\Driver\\WriteConcernError|null MongoDB\\Driver\\WriteResult::getWriteConcernError ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getwriteconcernerror.php"}, {"name": "MongoDB\\Driver\\WriteResult::getWriteErrors", "synopsis": "", "usage": "final public array MongoDB\\Driver\\WriteResult::getWriteErrors ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.getwriteerrors.php"}, {"name": "MongoDB\\Driver\\WriteResult::isAcknowledged", "synopsis": "If the write is acknowledged, other count fields will be available on the MongoDB\\Driver\\WriteResult object.", "usage": "final public bool MongoDB\\Driver\\WriteResult::isAcknowledged ( void )", "url": "https://secure.php.net/manual/en/mongodb-driver-writeresult.isacknowledged.php"}, {"name": "MongoDB::__toString", "synopsis": null, "usage": "public string MongoDB::__toString ( void )", "url": "https://secure.php.net/manual/en/mongodb.--tostring.php"}, {"name": "MongoDB::authenticate", "synopsis": "This method causes its connection to be authenticated. If authentication is enabled for the database server (it's not, by default), you need to log in before the database will allow you to do anything.", "usage": "public array MongoDB::authenticate ( string $username , string $password )", "url": "https://secure.php.net/manual/en/mongodb.authenticate.php"}, {"name": "MongoDB::command", "synopsis": "Almost everything that is not a CRUD operation can be done with a database command. Need to know the database version? There's a command for that. Need to do aggregation? There's a command for that. Need to turn up logging? You get the idea.", "usage": "public array MongoDB::command ( array $command [, array $options = array() [, string &$hash ]] )", "url": "https://secure.php.net/manual/en/mongodb.command.php"}, {"name": "MongoDB::__construct", "synopsis": "This method is not meant to be called directly. The preferred way to create an instance of MongoDB is through MongoClient::__get() or MongoClient::selectDB().", "usage": "public MongoDB::__construct ( MongoClient $conn , string $name )", "url": "https://secure.php.net/manual/en/mongodb.construct.php"}, {"name": "MongoDB::createCollection", "synopsis": "This method is used to create capped collections and other collections requiring special options. It is identical to running:", "usage": "public MongoCollection MongoDB::createCollection ( string $name [, array $options ] )", "url": "https://secure.php.net/manual/en/mongodb.createcollection.php"}, {"name": "MongoDB::createDBRef", "synopsis": "This method is a flexible interface for creating database refrences (see MongoDBRef).", "usage": "public array MongoDB::createDBRef ( string $collection , mixed $document_or_id )", "url": "https://secure.php.net/manual/en/mongodb.createdbref.php"}, {"name": "MongoDB::drop", "synopsis": "This drops the database currently being used.", "usage": "public array MongoDB::drop ( void )", "url": "https://secure.php.net/manual/en/mongodb.drop.php"}, {"name": "MongoDB::dropCollection", "synopsis": null, "usage": "public array MongoDB::dropCollection ( mixed $coll )", "url": "https://secure.php.net/manual/en/mongodb.dropcollection.php"}, {"name": "MongoDB::execute", "synopsis": null, "usage": "public array MongoDB::execute ( mixed $code [, array $args = array() ] )", "url": "https://secure.php.net/manual/en/mongodb.execute.php"}, {"name": "MongoDB::forceError", "synopsis": "This method is not very useful for normal MongoDB use. It forces a database error to occur. This means that MongoDB::lastError() will return a generic database error after running this command.", "usage": "public bool MongoDB::forceError ( void )", "url": "https://secure.php.net/manual/en/mongodb.forceerror.php"}, {"name": "MongoDB::__get", "synopsis": "This is the easiest way of getting a collection from a database object. If a collection name contains strange characters, you may have to use MongoDB::selectCollection() instead.", "usage": "public MongoCollection MongoDB::__get ( string $name )", "url": "https://secure.php.net/manual/en/mongodb.get.php"}, {"name": "MongoDB::getCollectionInfo", "synopsis": "Gets a list of all collections in the database and returns them as an array of documents, which contain their names and options.", "usage": "public array MongoDB::getCollectionInfo ([ array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb.getcollectioninfo.php"}, {"name": "MongoDB::getCollectionNames", "synopsis": "Gets a list of all collections in the database and returns their names as an array of strings.", "usage": "public array MongoDB::getCollectionNames ([ array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb.getcollectionnames.php"}, {"name": "MongoDB::getDBRef", "synopsis": null, "usage": "public array MongoDB::getDBRef ( array $ref )", "url": "https://secure.php.net/manual/en/mongodb.getdbref.php"}, {"name": "MongoDB::getGridFS", "synopsis": null, "usage": "public MongoGridFS MongoDB::getGridFS ([ string $prefix = \"fs\" ] )", "url": "https://secure.php.net/manual/en/mongodb.getgridfs.php"}, {"name": "MongoDB::getProfilingLevel", "synopsis": "This returns the current database profiling level.", "usage": "public int MongoDB::getProfilingLevel ( void )", "url": "https://secure.php.net/manual/en/mongodb.getprofilinglevel.php"}, {"name": "MongoDB::getReadPreference", "synopsis": null, "usage": "public array MongoDB::getReadPreference ( void )", "url": "https://secure.php.net/manual/en/mongodb.getreadpreference.php"}, {"name": "MongoDB::getSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool MongoDB::getSlaveOkay ( void )", "url": "https://secure.php.net/manual/en/mongodb.getslaveokay.php"}, {"name": "MongoDB::getWriteConcern", "synopsis": null, "usage": "public array MongoDB::getWriteConcern ( void )", "url": "https://secure.php.net/manual/en/mongodb.getwriteconcern.php"}, {"name": "MongoDB::lastError", "synopsis": "This method is equivalent to:", "usage": "public array MongoDB::lastError ( void )", "url": "https://secure.php.net/manual/en/mongodb.lasterror.php"}, {"name": "MongoDB::listCollections", "synopsis": "Gets a list of all collections in the database and returns them as an array of MongoCollection objects.", "usage": "public array MongoDB::listCollections ([ array $options = array() ] )", "url": "https://secure.php.net/manual/en/mongodb.listcollections.php"}, {"name": "MongoDB::prevError", "synopsis": "MongoDB::lastError() is usually preferred to this. This method returns the last database error that occurred and how many operations ago it occurred. It is mostly deprecated.", "usage": "public array MongoDB::prevError ( void )", "url": "https://secure.php.net/manual/en/mongodb.preverror.php"}, {"name": "MongoDB::repair", "synopsis": "This creates a fresh copy of all database data. It will remove any corrupt data and compact and large stretches of free space it finds. This is a very slow operation on a large database.", "usage": "public array MongoDB::repair ([ bool $preserve_cloned_files = FALSE [, bool $backup_original_files = FALSE ]] )", "url": "https://secure.php.net/manual/en/mongodb.repair.php"}, {"name": "MongoDB::resetError", "synopsis": "This method is not used in normal operations. It resets the database error tracker (which can be incremented with MongoDB::forceError(), also not normally used).", "usage": "public array MongoDB::resetError ( void )", "url": "https://secure.php.net/manual/en/mongodb.reseterror.php"}, {"name": "MongoDB::selectCollection", "synopsis": null, "usage": "public MongoCollection MongoDB::selectCollection ( string $name )", "url": "https://secure.php.net/manual/en/mongodb.selectcollection.php"}, {"name": "MongoDB::setProfilingLevel", "synopsis": "This changes the current database profiling level.", "usage": "public int MongoDB::setProfilingLevel ( int $level )", "url": "https://secure.php.net/manual/en/mongodb.setprofilinglevel.php"}, {"name": "MongoDB::setReadPreference", "synopsis": null, "usage": "public bool MongoDB::setReadPreference ( string $read_preference [, array $tags ] )", "url": "https://secure.php.net/manual/en/mongodb.setreadpreference.php"}, {"name": "MongoDB::setSlaveOkay", "synopsis": "See the query section of this manual for information on distributing reads to secondaries.", "usage": "public bool MongoDB::setSlaveOkay ([ bool $ok = TRUE ] )", "url": "https://secure.php.net/manual/en/mongodb.setslaveokay.php"}, {"name": "MongoDB::setWriteConcern", "synopsis": null, "usage": "public bool MongoDB::setWriteConcern ( mixed $w [, int $wtimeout ] )", "url": "https://secure.php.net/manual/en/mongodb.setwriteconcern.php"}, {"name": "MongoDBRef::create", "synopsis": "If no database is given, the current database is used.", "usage": "public static array MongoDBRef::create ( string $collection , mixed $id [, string $database ] )", "url": "https://secure.php.net/manual/en/mongodbref.create.php"}, {"name": "MongoDBRef::get", "synopsis": null, "usage": "public static array MongoDBRef::get ( MongoDB $db , array $ref )", "url": "https://secure.php.net/manual/en/mongodbref.get.php"}, {"name": "MongoDBRef::isRef", "synopsis": "This method does not actually follow the reference, so it does not determine if it is broken or not. It merely checks that ref is in valid database reference format (in that it is an object or array with $ref and $id fields).", "usage": "public static bool MongoDBRef::isRef ( mixed $ref )", "url": "https://secure.php.net/manual/en/mongodbref.isref.php"}, {"name": "MongoDeleteBatch::__construct", "synopsis": "Constructs a batch of DELETE operations. See MongoWriteBatch.", "usage": "public MongoDeleteBatch::__construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/mongodeletebatch.construct.php"}, {"name": "MongoGridFS::__construct", "synopsis": "Files as stored across two collections, the first containing file meta information, the second containing chunks of the actual file. By default, fs.files and fs.chunks are the collection names used.", "usage": "public MongoGridFS::__construct ( MongoDB $db [, string $prefix = \"fs\" [, mixed $chunks = \"fs\" ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.construct.php"}, {"name": "MongoGridFS::delete", "synopsis": null, "usage": "public bool|array MongoGridFS::delete ( mixed $id )", "url": "https://secure.php.net/manual/en/mongogridfs.delete.php"}, {"name": "MongoGridFS::drop", "synopsis": null, "usage": "public array MongoGridFS::drop ( void )", "url": "https://secure.php.net/manual/en/mongogridfs.drop.php"}, {"name": "MongoGridFS::find", "synopsis": null, "usage": "public MongoGridFSCursor MongoGridFS::find ([ array $query = array() [, array $fields = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.find.php"}, {"name": "MongoGridFS::findOne", "synopsis": null, "usage": "public MongoGridFSFile MongoGridFS::findOne ([ mixed $query = array() [, mixed $fields = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.findone.php"}, {"name": "MongoGridFS::get", "synopsis": null, "usage": "public MongoGridFSFile MongoGridFS::get ( mixed $id )", "url": "https://secure.php.net/manual/en/mongogridfs.get.php"}, {"name": "MongoGridFS::put", "synopsis": null, "usage": "public mixed MongoGridFS::put ( string $filename [, array $metadata = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.put.php"}, {"name": "MongoGridFS::remove", "synopsis": null, "usage": "public bool|array MongoGridFS::remove ([ array $criteria = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.remove.php"}, {"name": "MongoGridFS::storeBytes", "synopsis": null, "usage": "public mixed MongoGridFS::storeBytes ( string $bytes [, array $metadata = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.storebytes.php"}, {"name": "MongoGridFS::storeFile", "synopsis": null, "usage": "public mixed MongoGridFS::storeFile ( string|resource $filename [, array $metadata = array() [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/mongogridfs.storefile.php"}, {"name": "MongoGridFS::storeUpload", "synopsis": null, "usage": "public mixed MongoGridFS::storeUpload ( string $name [, array $metadata ] )", "url": "https://secure.php.net/manual/en/mongogridfs.storeupload.php"}, {"name": "MongoGridFSCursor::__construct", "synopsis": null, "usage": "public MongoGridFSCursor::__construct ( MongoGridFS $gridfs , resource $connection , string $ns , array $query , array $fields )", "url": "https://secure.php.net/manual/en/mongogridfscursor.construct.php"}, {"name": "MongoGridFSCursor::current", "synopsis": null, "usage": "public MongoGridFSFile MongoGridFSCursor::current ( void )", "url": "https://secure.php.net/manual/en/mongogridfscursor.current.php"}, {"name": "MongoGridFSCursor::getNext", "synopsis": null, "usage": "public MongoGridFSFile MongoGridFSCursor::getNext ( void )", "url": "https://secure.php.net/manual/en/mongogridfscursor.getnext.php"}, {"name": "MongoGridFSCursor::key", "synopsis": null, "usage": "public string MongoGridFSCursor::key ( void )", "url": "https://secure.php.net/manual/en/mongogridfscursor.key.php"}, {"name": "MongoGridfsFile::__construct", "synopsis": null, "usage": "public MongoGridfsFile::__construct ( MongoGridFS $gridfs , array $file )", "url": "https://secure.php.net/manual/en/mongogridfsfile.construct.php"}, {"name": "MongoGridFSFile::getBytes", "synopsis": "Warning: this will load the file into memory. If the file is bigger than your memory, this will cause problems!", "usage": "public string MongoGridFSFile::getBytes ( void )", "url": "https://secure.php.net/manual/en/mongogridfsfile.getbytes.php"}, {"name": "MongoGridFSFile::getFilename", "synopsis": null, "usage": "public string MongoGridFSFile::getFilename ( void )", "url": "https://secure.php.net/manual/en/mongogridfsfile.getfilename.php"}, {"name": "MongoGridFSFile::getResource", "synopsis": "This method returns a stream resource that can be used with all file functions in PHP that deal with reading files. The contents of the file are pulled out of MongoDB on the fly, so that the whole file does not have to be loaded into memory first.", "usage": "public resource MongoGridFSFile::getResource ( void )", "url": "https://secure.php.net/manual/en/mongogridfsfile.getresource.php"}, {"name": "MongoGridFSFile::getSize", "synopsis": null, "usage": "public int MongoGridFSFile::getSize ( void )", "url": "https://secure.php.net/manual/en/mongogridfsfile.getsize.php"}, {"name": "MongoGridFSFile::write", "synopsis": null, "usage": "public int MongoGridFSFile::write ([ string $filename = NULL ] )", "url": "https://secure.php.net/manual/en/mongogridfsfile.write.php"}, {"name": "MongoDB\\BSON\\ObjectId::__construct()", "synopsis": null, "usage": "public MongoId::__construct ([ string|MongoId $id = NULL ] )", "url": "https://secure.php.net/manual/en/mongoid.construct.php"}, {"name": "MongoId::getHostname", "synopsis": "This returns the hostname MongoId is using to generate unique ids. This should be the same value gethostname() returns.", "usage": "public static string MongoId::getHostname ( void )", "url": "https://secure.php.net/manual/en/mongoid.gethostname.php"}, {"name": "MongoId::getInc", "synopsis": null, "usage": "public int MongoId::getInc ( void )", "url": "https://secure.php.net/manual/en/mongoid.getinc.php"}, {"name": "MongoId::getPID", "synopsis": "Extracts the pid from the Mongo ID", "usage": "public int MongoId::getPID ( void )", "url": "https://secure.php.net/manual/en/mongoid.getpid.php"}, {"name": "MongoId::getTimestamp", "synopsis": "This returns the same thing as running time() when the id is created.", "usage": "public int MongoId::getTimestamp ( void )", "url": "https://secure.php.net/manual/en/mongoid.gettimestamp.php"}, {"name": "MongoId::isValid", "synopsis": "This method may be used to check a variable before passing it as an argument to MongoId::__construct().", "usage": "public static bool MongoId::isValid ( mixed $value )", "url": "https://secure.php.net/manual/en/mongoid.isvalid.php"}, {"name": "MongoId::__set_state", "synopsis": "This function is only used by PHP internally, it shouldn't need to ever be called by the user.", "usage": "public static MongoId MongoId::__set_state ( array $props )", "url": "https://secure.php.net/manual/en/mongoid.set-state.php"}, {"name": "MongoDB\\BSON\\ObjectId::__toString()", "synopsis": null, "usage": "public string MongoId::__toString ( void )", "url": "https://secure.php.net/manual/en/mongoid.tostring.php"}, {"name": "MongoInsertBatch::__construct", "synopsis": "Constructs a batch of INSERT operations. See MongoWriteBatch.", "usage": "public MongoInsertBatch::__construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/mongoinsertbatch.construct.php"}, {"name": "MongoInt32::__construct", "synopsis": "Creates a new 32-bit number with the given value.", "usage": "public MongoInt32::__construct ( string $value )", "url": "https://secure.php.net/manual/en/mongoint32.construct.php"}, {"name": "MongoInt32::__toString", "synopsis": null, "usage": "public string MongoInt32::__toString ( void )", "url": "https://secure.php.net/manual/en/mongoint32.tostring.php"}, {"name": "MongoInt64::__construct", "synopsis": "Creates a new 64-bit number with the given value.", "usage": "public MongoInt64::__construct ( string $value )", "url": "https://secure.php.net/manual/en/mongoint64.construct.php"}, {"name": "MongoInt64::__toString", "synopsis": null, "usage": "public string MongoInt64::__toString ( void )", "url": "https://secure.php.net/manual/en/mongoint64.tostring.php"}, {"name": "MongoLog::getCallback", "synopsis": "Retrieves the callback function.", "usage": "public static callable MongoLog::getCallback ( void )", "url": "https://secure.php.net/manual/en/mongolog.getcallback.php"}, {"name": "MongoLog::getLevel", "synopsis": "This function can be used to see which log levels are currently enabled. The returned integer may be compared with the MongoLog level constants using bitwise operators to check for specific log levels.", "usage": "public static int MongoLog::getLevel ( void )", "url": "https://secure.php.net/manual/en/mongolog.getlevel.php"}, {"name": "MongoLog::getModule", "synopsis": "This function can be used to see which driver modules are currently being logged. The returned integer may be compared with the MongoLog module constants using bitwise operators to check if specific modules are being logged.", "usage": "public static int MongoLog::getModule ( void )", "url": "https://secure.php.net/manual/en/mongolog.getmodule.php"}, {"name": "MongoLog::setCallback", "synopsis": "This function will set a callback function to be invoked for events in lieu of emitting of PHP notice.", "usage": "public static void MongoLog::setCallback ( callable $log_function )", "url": "https://secure.php.net/manual/en/mongolog.setcallback.php"}, {"name": "MongoLog::setLevel", "synopsis": "This function can be used to control logging verbosity and the types of activities that should be logged. The MongoLog level constants may be used with bitwise operators to specify multiple levels.", "usage": "public static void MongoLog::setLevel ( int $level )", "url": "https://secure.php.net/manual/en/mongolog.setlevel.php"}, {"name": "MongoLog::setModule", "synopsis": "This function can be used to set which driver modules should be logged. The MongoLog module constants may be used with bitwise operators to specify multiple modules.", "usage": "public static void MongoLog::setModule ( int $module )", "url": "https://secure.php.net/manual/en/mongolog.setmodule.php"}, {"name": "MongoPool::getSize", "synopsis": null, "usage": "public static int MongoPool::getSize ( void )", "url": "https://secure.php.net/manual/en/mongopool.getsize.php"}, {"name": "MongoPool::info", "synopsis": "Returns an array of information about all connection pools.", "usage": "public array MongoPool::info ( void )", "url": "https://secure.php.net/manual/en/mongopool.info.php"}, {"name": "MongoPool::setSize", "synopsis": "Sets the max number of connections new pools will be able to create.", "usage": "public static bool MongoPool::setSize ( int $size )", "url": "https://secure.php.net/manual/en/mongopool.setsize.php"}, {"name": "MongoDB\\BSON\\Regex::__construct()", "synopsis": "Creates a new regular expression.", "usage": "public MongoRegex::__construct ( string $regex )", "url": "https://secure.php.net/manual/en/mongoregex.construct.php"}, {"name": "MongoDB\\BSON\\Regex::__toString()", "synopsis": "Returns a string representation of this regular expression.", "usage": "public string MongoRegex::__toString ( void )", "url": "https://secure.php.net/manual/en/mongoregex.tostring.php"}, {"name": "MongoResultException::getDocument", "synopsis": "Retrieves the full error result document.", "usage": "public array MongoResultException::getDocument ( void )", "url": "https://secure.php.net/manual/en/mongoresultexception.getdocument.php"}, {"name": "MongoDB\\BSON\\Timestamp::__construct()", "synopsis": "Creates a new timestamp. If no parameters are given, the current time is used and the increment is automatically provided. The increment is set to 0 when the module is loaded and is incremented every time this constructor is called (without the $inc parameter passed in).", "usage": "public MongoTimestamp::__construct ([ int $sec = time() [, int $inc ]] )", "url": "https://secure.php.net/manual/en/mongotimestamp.construct.php"}, {"name": "MongoDB\\BSON\\Timestamp::__toString()", "synopsis": "Returns the \"sec\" field of this timestamp.", "usage": "public string MongoTimestamp::__toString ( void )", "url": "https://secure.php.net/manual/en/mongotimestamp.tostring.php"}, {"name": "MongoUpdateBatch::__construct", "synopsis": "Constructs a batch of UPDATE operations. See MongoWriteBatch.", "usage": "public MongoUpdateBatch::__construct ( MongoCollection $collection [, array $write_options ] )", "url": "https://secure.php.net/manual/en/mongoupdatebatch.construct.php"}, {"name": "MongoWriteBatch::add", "synopsis": "Adds a write operation to the batch.", "usage": "public bool MongoWriteBatch::add ( array $item )", "url": "https://secure.php.net/manual/en/mongowritebatch.add.php"}, {"name": "MongoWriteBatch::execute", "synopsis": "Executes the batch of write operations.", "usage": "final public array MongoWriteBatch::execute ( array $write_options )", "url": "https://secure.php.net/manual/en/mongowritebatch.execute.php"}, {"name": "MongoWriteConcernException::getDocument", "synopsis": "Returns the actual response from the server that was interperated as an error.", "usage": "public array MongoWriteConcernException::getDocument ( void )", "url": "https://secure.php.net/manual/en/mongowriteconcernexception.getdocument.php"}, {"name": "KTaglib_MPEG_File::getAudioProperties", "synopsis": "Returns an object that provides access to the audio properties of the mpeg file.", "usage": "public KTaglib_MPEG_File KTaglib_MPEG_File::getAudioProperties ( void )", "url": "https://secure.php.net/manual/en/mpegfile.getaudioproperties.php"}, {"name": "KTaglib_MPEG_File::getID3v1Tag", "synopsis": "Returns an object that represents an ID3v1 tag, which can be used to get information about the ID3v1 tag.", "usage": "public KTaglib_ID3v1_Tag KTaglib_MPEG_File::getID3v1Tag ([ bool $create = FALSE ] )", "url": "https://secure.php.net/manual/en/mpegfile.getid3v1tag.php"}, {"name": "KTaglib_MPEG_File::getID3v2Tag", "synopsis": "Returns a ID3v2 object for the mpeg file. If no ID3v2 Tag is present, an KTaglib_TagNotFoundException is thrown.", "usage": "public KTaglib_ID3v2_Tag KTaglib_MPEG_File::getID3v2Tag ([ bool $create = FALSE ] )", "url": "https://secure.php.net/manual/en/mpegfile.getid3v2tag.php"}, {"name": "MultipleIterator::attachIterator", "synopsis": "Attaches iterator information.", "usage": "public void MultipleIterator::attachIterator ( Iterator $iterator [, string $infos ] )", "url": "https://secure.php.net/manual/en/multipleiterator.attachiterator.php"}, {"name": "MultipleIterator::containsIterator", "synopsis": "Checks if an iterator is attached or not.", "usage": "public bool MultipleIterator::containsIterator ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/multipleiterator.containsiterator.php"}, {"name": "MultipleIterator::countIterators", "synopsis": "Gets the number of attached iterator instances.", "usage": "public int MultipleIterator::countIterators ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.countiterators.php"}, {"name": "MultipleIterator::current", "synopsis": "Get the registered iterator instances current() result.", "usage": "public array MultipleIterator::current ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.current.php"}, {"name": "MultipleIterator::detachIterator", "synopsis": "Detaches an iterator.", "usage": "public void MultipleIterator::detachIterator ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/multipleiterator.detachiterator.php"}, {"name": "MultipleIterator::getFlags", "synopsis": "Gets information about the flags.", "usage": "public int MultipleIterator::getFlags ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.getflags.php"}, {"name": "MultipleIterator::key", "synopsis": "Get the registered iterator instances key() result.", "usage": "public array MultipleIterator::key ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.key.php"}, {"name": "MultipleIterator::next", "synopsis": "Moves all attached iterator instances forward.", "usage": "public void MultipleIterator::next ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.next.php"}, {"name": "MultipleIterator::rewind", "synopsis": "Rewinds all attached iterator instances.", "usage": "public void MultipleIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.rewind.php"}, {"name": "MultipleIterator::setFlags", "synopsis": "Sets flags.", "usage": "public void MultipleIterator::setFlags ( int $flags )", "url": "https://secure.php.net/manual/en/multipleiterator.setflags.php"}, {"name": "MultipleIterator::valid", "synopsis": "Checks the validity of sub iterators.", "usage": "public bool MultipleIterator::valid ( void )", "url": "https://secure.php.net/manual/en/multipleiterator.valid.php"}, {"name": "Mutex::create", "synopsis": "Create, and optionally lock a new Mutex for the caller", "usage": "final public static int Mutex::create ([ bool $lock ] )", "url": "https://secure.php.net/manual/en/mutex.create.php"}, {"name": "Mutex::destroy", "synopsis": "Destroying Mutex handles must be carried out explicitly by the programmer when they are finished with the Mutex handle.", "usage": "final public static bool Mutex::destroy ( int $mutex )", "url": "https://secure.php.net/manual/en/mutex.destroy.php"}, {"name": "Mutex::lock", "synopsis": "Attempt to lock the Mutex for the caller.", "usage": "final public static bool Mutex::lock ( int $mutex )", "url": "https://secure.php.net/manual/en/mutex.lock.php"}, {"name": "Mutex::trylock", "synopsis": "Attempt to lock the Mutex for the caller without blocking if the Mutex is owned (locked) by another Thread.", "usage": "final public static bool Mutex::trylock ( int $mutex )", "url": "https://secure.php.net/manual/en/mutex.trylock.php"}, {"name": "Mutex::unlock", "synopsis": "Attempts to unlock the Mutex for the caller, optionally destroying the Mutex handle. The calling thread should own the Mutex at the time of the call.", "usage": "final public static bool Mutex::unlock ( int $mutex [, bool $destroy ] )", "url": "https://secure.php.net/manual/en/mutex.unlock.php"}, {"name": "mysql_xdevapi\\BaseResult::getWarningCount", "synopsis": "Returns the number of warnings raised by the last operation. Specifically, these warnings are raised by the MySQL server.", "usage": "abstract public integer mysql_xdevapi\\BaseResult::getWarningCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-baseresult.getwarningcount.php"}, {"name": "mysql_xdevapi\\BaseResult::getWarnings", "synopsis": "Fetches the warnings generated by the MySQL server from the last operation.", "usage": "abstract public array mysql_xdevapi\\BaseResult::getWarnings ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-baseresult.getwarnings.php"}, {"name": "mysql_xdevapi\\Collection::add", "synopsis": "Triggers the insertion of the given document(s) into the collection, and multiple variants of this method are supported. Options include:", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Collection::add ( mixed $document )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.add.php"}, {"name": "mysql_xdevapi\\Collection::addOrReplaceOne", "synopsis": "Add a new document, or replace a document if it already exists.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Collection::addOrReplaceOne ( string $id , string $doc )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.addorreplaceone.php"}, {"name": "mysql_xdevapi\\Collection::count", "synopsis": "This functionality is similar to a SELECT COUNT(*) SQL operation against the MySQL server for the current schema and collection. In other words, it counts the number of documents in the collection.", "usage": "public integer mysql_xdevapi\\Collection::count ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.count.php"}, {"name": "mysql_xdevapi\\Collection::createIndex", "synopsis": "Creates an index on the collection.", "usage": "public void mysql_xdevapi\\Collection::createIndex ( string $index_name , string $index_desc_json )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.createindex.php"}, {"name": "mysql_xdevapi\\Collection::dropIndex", "synopsis": "Drop an index with the given name. Silently succeeds if the index does not exist (no error or warning raised). To confirm the drop has been executed the user should check the boolean return type.", "usage": "public bool mysql_xdevapi\\Collection::dropIndex ( string $index_name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.dropindex.php"}, {"name": "mysql_xdevapi\\Collection::existsInDatabase", "synopsis": "Checks if the Collection object refers to a collection in the database.", "usage": "public bool mysql_xdevapi\\Collection::existsInDatabase ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.existsindatabase.php"}, {"name": "mysql_xdevapi\\Collection::find", "synopsis": "Search a database collection for a document or set of documents. The returned documents are contained in the CollectionFind object that can be used further to fetch one or all the documents.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\Collection::find ([ string $search_condition ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.find.php"}, {"name": "mysql_xdevapi\\Collection::getName", "synopsis": "Retrieve the collection's name.", "usage": "public string mysql_xdevapi\\Collection::getName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.getname.php"}, {"name": "mysql_xdevapi\\Collection::getOne", "synopsis": "This is a shortcut for Collection.find(\"_id = :id\").bind(\"id\", id).execute().fetchOne();.", "usage": "public Document mysql_xdevapi\\Collection::getOne ( string $id )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.getone.php"}, {"name": "mysql_xdevapi\\Collection::getSchema", "synopsis": "Retrieve the schema object that contains the collection.", "usage": "public Schema Object mysql_xdevapi\\Collection::getSchema ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.getschema.php"}, {"name": "mysql_xdevapi\\Collection::getSession", "synopsis": "Retrieve a session object that contains the collection.", "usage": "public Session mysql_xdevapi\\Collection::getSession ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.getsession.php"}, {"name": "mysql_xdevapi\\Collection::modify", "synopsis": "Modify collections that meet specific search conditions. Multiple operations are allowed, and parameter binding is supported.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\Collection::modify ( string $search_condition )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.modify.php"}, {"name": "mysql_xdevapi\\Collection::remove", "synopsis": "Remove collections that meet specific search conditions. Multiple operations are allowed, and parameter binding is supported.", "usage": "public mysql_xdevapi\\CollectionRemove mysql_xdevapi\\Collection::remove ( string $search_condition )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.remove.php"}, {"name": "mysql_xdevapi\\Collection::removeOne", "synopsis": "Remove one document from the collection with the correspending ID. This is a shortcut for Collection.remove(\"_id = :id\").bind(\"id\", id).execute().", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Collection::removeOne ( string $id )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.removeone.php"}, {"name": "mysql_xdevapi\\Collection::replaceOne", "synopsis": "Updates (or replaces) the document identified by ID, if it exists.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Collection::replaceOne ( string $id , string $doc )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collection.replaceone.php"}, {"name": "mysql_xdevapi\\CollectionAdd::execute", "synopsis": "The execute method is required to send the CRUD operation request to the MySQL server.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\CollectionAdd::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionadd.execute.php"}, {"name": "mysql_xdevapi\\CollectionFind::bind", "synopsis": "It allows the user to bind a parameter to the placeholder in the search condition of the find operation. The placeholder has the form of :NAME where ':' is a common prefix that must always exists before any NAME, NAME is the actual name of the placeholder. The bind function accepts a list of placeholders if multiple entities have to be substituted in the search condition.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.bind.php"}, {"name": "mysql_xdevapi\\CollectionFind::execute", "synopsis": "The execute function needs to be invoked in order to trigger the client to send the CRUD operation request to the server.", "usage": "public mysql_xdevapi\\DocResult mysql_xdevapi\\CollectionFind::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.execute.php"}, {"name": "mysql_xdevapi\\CollectionFind::fields", "synopsis": "This is the equivalent of the SQL projection, which allows to select which columns the query shall return.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::fields ( string $projection )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.fields.php"}, {"name": "mysql_xdevapi\\CollectionFind::groupBy", "synopsis": "This function can be used to group the result-set by one more columns, frequently this is used with aggregate functions like COUNT,MAX,MIN,SUM etc.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::groupBy ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.groupby.php"}, {"name": "mysql_xdevapi\\CollectionFind::having", "synopsis": "This function can be used after the 'field' operation in order to make a selection on the documents to extract.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::having ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.having.php"}, {"name": "mysql_xdevapi\\CollectionFind::limit", "synopsis": "Limit the amount of documents returned by the 'find' option by the amount provided as argument", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.limit.php"}, {"name": "mysql_xdevapi\\CollectionFind::lockExclusive", "synopsis": "Lock exclusively the document, other transactions are blocked from updating the document until the document is locked While the document is locked, other transactions are blocked from updating those docs, from doing SELECT ... LOCK IN SHARE MODE, or from reading the data in certain transaction isolation levels. Consistent reads ignore any locks set on the records that exist in the read view.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::lockExclusive ([ integer $lock_waiting_option ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.lockexclusive.php"}, {"name": "mysql_xdevapi\\CollectionFind::lockShared", "synopsis": "Allows to share the documents between multiple transactions which are locking in shared mode.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::lockShared ([ integer $lock_waiting_option ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.lockshared.php"}, {"name": "mysql_xdevapi\\CollectionFind::skip", "synopsis": "For the result set of a find operation, skip the first N elements that would be returned by the find operation. If the amout of element skipped is bigger than the size of the result set then the find operation will return an empty set.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::skip ( integer $position )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.skip.php"}, {"name": "mysql_xdevapi\\CollectionFind::sort", "synopsis": "Sort the result set by the field selected in the sort_expr argument. The allowed orders are ASC (Ascending) or DESC (Descending). This operation is equivalent to the 'ORDER BY' SQL operation and it follows the same set of rules.", "usage": "public mysql_xdevapi\\CollectionFind mysql_xdevapi\\CollectionFind::sort ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionfind.sort.php"}, {"name": "mysql_xdevapi\\CollectionModify::arrayAppend", "synopsis": "Add an element to a document's field, as multiple elements of a field are represented as an array. Unlike arrayInsert(), arrayAppend() always appends the new element at the end of the array, whereas arrayInsert() can define the location.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::arrayAppend ( string $collection_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.arrayappend.php"}, {"name": "mysql_xdevapi\\CollectionModify::arrayDelete", "synopsis": "Delete a document field element. If the deleted element is the only element then the field is removed.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::arrayDelete ( string $collection_field )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.arraydelete.php"}, {"name": "mysql_xdevapi\\CollectionModify::arrayInsert", "synopsis": "Add an element to a document's field, as multiple elements of a field are represented as an array. Unlike arrayAppend(), arrayInsert() allows you to specify where the new element is inserted by defining which item it is after, whereas arrayAppend() always appends the new element at the end of the array.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::arrayInsert ( string $collection_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.arrayinsert.php"}, {"name": "mysql_xdevapi\\CollectionModify::bind", "synopsis": "Bind a parameter to the placeholder in the search condition of the modify operation.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.bind.php"}, {"name": "mysql_xdevapi\\CollectionModify::execute", "synopsis": "The execute method is required to send the CRUD operation request to the MySQL server.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\CollectionModify::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.execute.php"}, {"name": "mysql_xdevapi\\CollectionModify::limit", "synopsis": "Limit the number of documents modified by this operation.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.limit.php"}, {"name": "mysql_xdevapi\\CollectionModify::merge", "synopsis": "Adds attributes taken from a document into the documents in a collection.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::merge ( string $document )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.merge.php"}, {"name": "mysql_xdevapi\\CollectionModify::patch", "synopsis": "Takes a patch object and applies it on one or more documents, and \t can update multiple document properties.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::patch ( string $document )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.patch.php"}, {"name": "mysql_xdevapi\\CollectionModify::replace", "synopsis": "Replace (update) a given field value with a new one.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::replace ( string $collection_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.replace.php"}, {"name": "mysql_xdevapi\\CollectionModify::set", "synopsis": "Sets or updates attributes on documents in a collection.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::set ( string $collection_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.set.php"}, {"name": "mysql_xdevapi\\CollectionModify::skip", "synopsis": "Skip the first N elements that would otherwise be returned by a find operation. \t If the number of elements skipped is larger than the size of the result set, then the find operation returns an empty set.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::skip ( integer $position )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.skip.php"}, {"name": "mysql_xdevapi\\CollectionModify::sort", "synopsis": "Sort the result set by the field selected in the sort_expr argument. The allowed orders are ASC (Ascending) or DESC (Descending). This operation is equivalent to the 'ORDER BY' SQL operation and it follows the same set of rules.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::sort ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.sort.php"}, {"name": "mysql_xdevapi\\CollectionModify::unset", "synopsis": "Removes attributes from documents in a collection.", "usage": "public mysql_xdevapi\\CollectionModify mysql_xdevapi\\CollectionModify::unset ( array $fields )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionmodify.unset.php"}, {"name": "mysql_xdevapi\\CollectionRemove::bind", "synopsis": "Bind a parameter to the placeholder in the search condition of the remove operation.", "usage": "public mysql_xdevapi\\CollectionRemove mysql_xdevapi\\CollectionRemove::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionremove.bind.php"}, {"name": "mysql_xdevapi\\CollectionRemove::execute", "synopsis": "The execute function needs to be invoked in order to trigger the client to send the CRUD operation request to the server.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\CollectionRemove::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionremove.execute.php"}, {"name": "mysql_xdevapi\\CollectionRemove::limit", "synopsis": "Sets the maximum number of documents to remove.", "usage": "public mysql_xdevapi\\CollectionRemove mysql_xdevapi\\CollectionRemove::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionremove.limit.php"}, {"name": "mysql_xdevapi\\CollectionRemove::sort", "synopsis": "Sort the result set by the field selected in the sort_expr argument. The allowed orders are ASC (Ascending) or DESC (Descending). This operation is equivalent to the 'ORDER BY' SQL operation and it follows the same set of rules.", "usage": "public mysql_xdevapi\\CollectionRemove mysql_xdevapi\\CollectionRemove::sort ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-collectionremove.sort.php"}, {"name": "mysql_xdevapi\\ColumnResult::getCharacterSetName", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getCharacterSetName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getcharactersetname.php"}, {"name": "mysql_xdevapi\\ColumnResult::getCollationName", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getCollationName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getcollationname.php"}, {"name": "mysql_xdevapi\\ColumnResult::getColumnLabel", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getColumnLabel ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getcolumnlabel.php"}, {"name": "mysql_xdevapi\\ColumnResult::getColumnName", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getColumnName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getcolumnname.php"}, {"name": "mysql_xdevapi\\ColumnResult::getFractionalDigits", "synopsis": "Fetch the number of fractional digits for column.", "usage": "public integer mysql_xdevapi\\ColumnResult::getFractionalDigits ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getfractionaldigits.php"}, {"name": "mysql_xdevapi\\ColumnResult::getLength", "synopsis": "", "usage": "public integer mysql_xdevapi\\ColumnResult::getLength ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getlength.php"}, {"name": "mysql_xdevapi\\ColumnResult::getSchemaName", "synopsis": "Fetch the schema name where the column is stored.", "usage": "public string mysql_xdevapi\\ColumnResult::getSchemaName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.getschemaname.php"}, {"name": "mysql_xdevapi\\ColumnResult::getTableLabel", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getTableLabel ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.gettablelabel.php"}, {"name": "mysql_xdevapi\\ColumnResult::getTableName", "synopsis": "", "usage": "public string mysql_xdevapi\\ColumnResult::getTableName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.gettablename.php"}, {"name": "mysql_xdevapi\\ColumnResult::getType", "synopsis": "", "usage": "public integer mysql_xdevapi\\ColumnResult::getType ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.gettype.php"}, {"name": "mysql_xdevapi\\ColumnResult::isNumberSigned", "synopsis": "", "usage": "public integer mysql_xdevapi\\ColumnResult::isNumberSigned ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.isnumbersigned.php"}, {"name": "mysql_xdevapi\\ColumnResult::isPadded", "synopsis": "", "usage": "public integer mysql_xdevapi\\ColumnResult::isPadded ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-columnresult.ispadded.php"}, {"name": "mysql_xdevapi\\CrudOperationBindable::bind", "synopsis": "Binds a value to a specific placeholder.", "usage": "abstract public mysql_xdevapi\\CrudOperationBindable mysql_xdevapi\\CrudOperationBindable::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-crudoperationbindable.bind.php"}, {"name": "mysql_xdevapi\\CrudOperationLimitable::limit", "synopsis": "Sets the maximum number of records or documents to return.", "usage": "abstract public mysql_xdevapi\\CrudOperationLimitable mysql_xdevapi\\CrudOperationLimitable::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-crudoperationlimitable.limit.php"}, {"name": "mysql_xdevapi\\CrudOperationSkippable::skip", "synopsis": "Skip this number of records in the returned operation.", "usage": "abstract public mysql_xdevapi\\CrudOperationSkippable mysql_xdevapi\\CrudOperationSkippable::skip ( integer $skip )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-crudoperationskippable.skip.php"}, {"name": "mysql_xdevapi\\CrudOperationSortable::sort", "synopsis": "Sort the result set by the field selected in the sort_expr argument. The allowed orders are ASC (Ascending) or DESC (Descending). This operation is equivalent to the 'ORDER BY' SQL operation and it follows the same set of rules.", "usage": "abstract public mysql_xdevapi\\CrudOperationSortable mysql_xdevapi\\CrudOperationSortable::sort ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-crudoperationsortable.sort.php"}, {"name": "mysql_xdevapi\\DatabaseObject::existsInDatabase", "synopsis": "Verifies if the database object refers to an object that exists in the database.", "usage": "abstract public bool mysql_xdevapi\\DatabaseObject::existsInDatabase ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-databaseobject.existsindatabase.php"}, {"name": "mysql_xdevapi\\DatabaseObject::getName", "synopsis": "Fetch name of this database object.", "usage": "abstract public string mysql_xdevapi\\DatabaseObject::getName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-databaseobject.getname.php"}, {"name": "mysql_xdevapi\\DatabaseObject::getSession", "synopsis": "Fetch session associated to the database object.", "usage": "abstract public mysql_xdevapi\\Session mysql_xdevapi\\DatabaseObject::getSession ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-databaseobject.getsession.php"}, {"name": "mysql_xdevapi\\DocResult::fetchAll", "synopsis": "", "usage": "public Array mysql_xdevapi\\DocResult::fetchAll ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-docresult.fetchall.php"}, {"name": "mysql_xdevapi\\DocResult::fetchOne", "synopsis": "", "usage": "public Object mysql_xdevapi\\DocResult::fetchOne ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-docresult.fetchone.php"}, {"name": "mysql_xdevapi\\DocResult::getWarningCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\DocResult::getWarningCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-docresult.getwarningcount.php"}, {"name": "mysql_xdevapi\\DocResult::getWarnings", "synopsis": "", "usage": "public Array mysql_xdevapi\\DocResult::getWarnings ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-docresult.getwarnings.php"}, {"name": "mysql_xdevapi\\Executable::execute", "synopsis": "Execute the statement from either a collection operation or a table query.", "usage": "abstract public mysql_xdevapi\\Result mysql_xdevapi\\Executable::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-executable.execute.php"}, {"name": "mysql_xdevapi\\Result::getAffectedItemsCount", "synopsis": "", "usage": "public int mysql_xdevapi\\Result::getAffectedItemsCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-result.getaffecteditemscount.php"}, {"name": "mysql_xdevapi\\Result::getAutoIncrementValue", "synopsis": "", "usage": "public int mysql_xdevapi\\Result::getAutoIncrementValue ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-result.getautoincrementvalue.php"}, {"name": "mysql_xdevapi\\Result::getGeneratedIds", "synopsis": "", "usage": "public ArrayOfInt mysql_xdevapi\\Result::getGeneratedIds ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-result.getgeneratedids.php"}, {"name": "mysql_xdevapi\\Result::getWarningCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\Result::getWarningCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-result.getwarningcount.php"}, {"name": "mysql_xdevapi\\Result::getWarnings", "synopsis": "", "usage": "public array mysql_xdevapi\\Result::getWarnings ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-result.getwarnings.php"}, {"name": "mysql_xdevapi\\RowResult::fetchAll", "synopsis": "Fetch all the rows from the result set.", "usage": "public array mysql_xdevapi\\RowResult::fetchAll ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.fetchall.php"}, {"name": "mysql_xdevapi\\RowResult::fetchOne", "synopsis": "Fetch one result from the result set.", "usage": "public object mysql_xdevapi\\RowResult::fetchOne ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.fetchone.php"}, {"name": "mysql_xdevapi\\RowResult::getColumnCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\RowResult::getColumnCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.getcolumncount.php"}, {"name": "mysql_xdevapi\\RowResult::getColumnNames", "synopsis": "", "usage": "public array mysql_xdevapi\\RowResult::getColumnNames ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.getcolumnnames.php"}, {"name": "mysql_xdevapi\\RowResult::getColumns", "synopsis": "", "usage": "public array mysql_xdevapi\\RowResult::getColumns ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.getcolumns.php"}, {"name": "mysql_xdevapi\\RowResult::getWarningCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\RowResult::getWarningCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.getwarningcount.php"}, {"name": "mysql_xdevapi\\RowResult::getWarnings", "synopsis": "", "usage": "public array mysql_xdevapi\\RowResult::getWarnings ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-rowresult.getwarnings.php"}, {"name": "mysql_xdevapi\\Schema::createCollection", "synopsis": "Create a collection within the schema.", "usage": "public mysql_xdevapi\\Collection mysql_xdevapi\\Schema::createCollection ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.createcollection.php"}, {"name": "mysql_xdevapi\\Schema::dropCollection", "synopsis": "", "usage": "public bool mysql_xdevapi\\Schema::dropCollection ( string $collection_name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.dropcollection.php"}, {"name": "mysql_xdevapi\\Schema::existsInDatabase", "synopsis": "", "usage": "public bool mysql_xdevapi\\Schema::existsInDatabase ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.existsindatabase.php"}, {"name": "mysql_xdevapi\\Schema::getCollection", "synopsis": "", "usage": "public mysql_xdevapi\\Collection mysql_xdevapi\\Schema::getCollection ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.getcollection.php"}, {"name": "mysql_xdevapi\\Schema::getCollectionAsTable", "synopsis": "", "usage": "public mysql_xdevapi\\Table mysql_xdevapi\\Schema::getCollectionAsTable ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.getcollectionastable.php"}, {"name": "mysql_xdevapi\\Schema::getCollections", "synopsis": "Fetch a list of collections for this schema.", "usage": "public array mysql_xdevapi\\Schema::getCollections ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.getcollections.php"}, {"name": "mysql_xdevapi\\Schema::getName", "synopsis": "", "usage": "public string mysql_xdevapi\\Schema::getName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.getname.php"}, {"name": "mysql_xdevapi\\Schema::getSession", "synopsis": "", "usage": "public mysql_xdevapi\\Session mysql_xdevapi\\Schema::getSession ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.getsession.php"}, {"name": "mysql_xdevapi\\Schema::getTable", "synopsis": "", "usage": "public mysql_xdevapi\\Table mysql_xdevapi\\Schema::getTable ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.gettable.php"}, {"name": "mysql_xdevapi\\Schema::getTables", "synopsis": "", "usage": "public array mysql_xdevapi\\Schema::getTables ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schema.gettables.php"}, {"name": "mysql_xdevapi\\SchemaObject::getSchema", "synopsis": "", "usage": "abstract mysql_xdevapi\\Schema mysql_xdevapi\\SchemaObject::getSchema ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-schemaobject.getschema.php"}, {"name": "mysql_xdevapi\\Session::close", "synopsis": "Close the session with the server.", "usage": "public bool mysql_xdevapi\\Session::close ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.close.php"}, {"name": "mysql_xdevapi\\Session::commit", "synopsis": "", "usage": "public Object mysql_xdevapi\\Session::commit ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.commit.php"}, {"name": "mysql_xdevapi\\Session::createSchema", "synopsis": "Creates a new schema.", "usage": "public mysql_xdevapi\\Schema mysql_xdevapi\\Session::createSchema ( string $schema_name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.createschema.php"}, {"name": "mysql_xdevapi\\Session::dropSchema", "synopsis": "", "usage": "public bool mysql_xdevapi\\Session::dropSchema ( string $schema_name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.dropschema.php"}, {"name": "mysql_xdevapi\\Session::executeSql", "synopsis": "", "usage": "public Object mysql_xdevapi\\Session::executeSql ( string $statement )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.executesql.php"}, {"name": "mysql_xdevapi\\Session::generateUUID", "synopsis": "", "usage": "public string mysql_xdevapi\\Session::generateUUID ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.generateuuid.php"}, {"name": "mysql_xdevapi\\Session::getClientId", "synopsis": "", "usage": "public string mysql_xdevapi\\Session::getClientId ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.getclientid.php"}, {"name": "mysql_xdevapi\\Session::getSchema", "synopsis": "", "usage": "public mysql_xdevapi\\Schema mysql_xdevapi\\Session::getSchema ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.getschema.php"}, {"name": "mysql_xdevapi\\Session::getSchemas", "synopsis": "", "usage": "public array mysql_xdevapi\\Session::getSchemas ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.getschemas.php"}, {"name": "mysql_xdevapi\\Session::getServerVersion", "synopsis": "", "usage": "public integer mysql_xdevapi\\Session::getServerVersion ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.getserverversion.php"}, {"name": "mysql_xdevapi\\Session::killClient", "synopsis": "Kill the selected client and terminate the collection", "usage": "public object mysql_xdevapi\\Session::killClient ( integer $client_id )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.killclient.php"}, {"name": "mysql_xdevapi\\Session::listClients", "synopsis": "", "usage": "public array mysql_xdevapi\\Session::listClients ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.listclients.php"}, {"name": "mysql_xdevapi\\Session::quoteName", "synopsis": "", "usage": "public string mysql_xdevapi\\Session::quoteName ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.quotename.php"}, {"name": "mysql_xdevapi\\Session::releaseSavepoint", "synopsis": "Release a previously set savepoint.", "usage": "public void mysql_xdevapi\\Session::releaseSavepoint ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.releasesavepoint.php"}, {"name": "mysql_xdevapi\\Session::rollback", "synopsis": "", "usage": "public void mysql_xdevapi\\Session::rollback ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.rollback.php"}, {"name": "mysql_xdevapi\\Session::rollbackTo", "synopsis": "Rollback the transaction back to the savepoint.", "usage": "public void mysql_xdevapi\\Session::rollbackTo ( string $name )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.rollbackto.php"}, {"name": "mysql_xdevapi\\Session::setSavepoint", "synopsis": "Create a new savepoint for the transaction.", "usage": "public string mysql_xdevapi\\Session::setSavepoint ([ string $name ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.setsavepoint.php"}, {"name": "mysql_xdevapi\\Session::sql", "synopsis": "Create a native SQL command. Placeholders are supported using the native \"?\" syntax. Execute an SQL query.", "usage": "public mysql_xdevapi\\SqlStatement mysql_xdevapi\\Session::sql ( string $query )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.sql.php"}, {"name": "mysql_xdevapi\\Session::startTransaction", "synopsis": "Start a new transaction.", "usage": "public void mysql_xdevapi\\Session::startTransaction ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-session.starttransaction.php"}, {"name": "mysql_xdevapi\\SqlStatement::bind", "synopsis": "", "usage": "public mysql_xdevapi\\SqlStatement mysql_xdevapi\\SqlStatement::bind ( string $param )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatement.bind.php"}, {"name": "mysql_xdevapi\\SqlStatement::execute", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\SqlStatement::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatement.execute.php"}, {"name": "mysql_xdevapi\\SqlStatement::getNextResult", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\SqlStatement::getNextResult ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatement.getnextresult.php"}, {"name": "mysql_xdevapi\\SqlStatement::getResult", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\SqlStatement::getResult ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatement.getresult.php"}, {"name": "mysql_xdevapi\\SqlStatement::hasMoreResults", "synopsis": "", "usage": "public bool mysql_xdevapi\\SqlStatement::hasMoreResults ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatement.hasmoreresults.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::fetchAll", "synopsis": "", "usage": "public array mysql_xdevapi\\SqlStatementResult::fetchAll ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.fetchall.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::fetchOne", "synopsis": "", "usage": "public object mysql_xdevapi\\SqlStatementResult::fetchOne ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.fetchone.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getAffectedItemsCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\SqlStatementResult::getAffectedItemsCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getaffecteditemscount.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getColumnCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\SqlStatementResult::getColumnCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getcolumncount.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getColumnNames", "synopsis": "", "usage": "public array mysql_xdevapi\\SqlStatementResult::getColumnNames ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getcolumnnames.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getColumns", "synopsis": "", "usage": "public Array mysql_xdevapi\\SqlStatementResult::getColumns ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getcolumns.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getGeneratedIds", "synopsis": "", "usage": "public array mysql_xdevapi\\SqlStatementResult::getGeneratedIds ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getgeneratedids.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getLastInsertId", "synopsis": "", "usage": "public String mysql_xdevapi\\SqlStatementResult::getLastInsertId ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getlastinsertid.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getWarningCount", "synopsis": "", "usage": "public integer mysql_xdevapi\\SqlStatementResult::getWarningCount ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getwarningcount.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::getWarnings", "synopsis": "", "usage": "public array mysql_xdevapi\\SqlStatementResult::getWarnings ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.getwarnings.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::hasData", "synopsis": "", "usage": "public bool mysql_xdevapi\\SqlStatementResult::hasData ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.hasdata.php"}, {"name": "mysql_xdevapi\\SqlStatementResult::nextResult", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\SqlStatementResult::nextResult ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-sqlstatementresult.nextresult.php"}, {"name": "mysql_xdevapi\\Statement::getNextResult", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Statement::getNextResult ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-statement.getnextresult.php"}, {"name": "mysql_xdevapi\\Statement::getResult", "synopsis": "", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\Statement::getResult ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-statement.getresult.php"}, {"name": "mysql_xdevapi\\Statement::hasMoreResults", "synopsis": "", "usage": "public bool mysql_xdevapi\\Statement::hasMoreResults ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-statement.hasmoreresults.php"}, {"name": "mysql_xdevapi\\Table::count", "synopsis": "Fetch the number of rows in the table.", "usage": "public integer mysql_xdevapi\\Table::count ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.count.php"}, {"name": "mysql_xdevapi\\Table::delete", "synopsis": "Deletes rows from a table.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\Table::delete ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.delete.php"}, {"name": "mysql_xdevapi\\Table::existsInDatabase", "synopsis": "Verifies if this table exists in the database.", "usage": "public bool mysql_xdevapi\\Table::existsInDatabase ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.existsindatabase.php"}, {"name": "mysql_xdevapi\\Table::getName", "synopsis": "Returns the name of this database object.", "usage": "public string mysql_xdevapi\\Table::getName ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.getname.php"}, {"name": "mysql_xdevapi\\Table::getSchema", "synopsis": "Fetch the schema associated with the table.", "usage": "public mysql_xdevapi\\Schema mysql_xdevapi\\Table::getSchema ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.getschema.php"}, {"name": "mysql_xdevapi\\Table::getSession", "synopsis": "Get session associated with the table.", "usage": "public mysql_xdevapi\\Session mysql_xdevapi\\Table::getSession ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.getsession.php"}, {"name": "mysql_xdevapi\\Table::insert", "synopsis": "Creates a new TableInsert object.", "usage": "public mysql_xdevapi\\TableInsert mysql_xdevapi\\Table::insert ( mixed $columns [, mixed $... ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.insert.php"}, {"name": "mysql_xdevapi\\Table::isView", "synopsis": "Determine if the underlying object is a view or not.", "usage": "public bool mysql_xdevapi\\Table::isView ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.isview.php"}, {"name": "mysql_xdevapi\\Table::select", "synopsis": "Creates a new TableSelect object.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\Table::select ( mixed $columns [, mixed $... ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.select.php"}, {"name": "mysql_xdevapi\\Table::update", "synopsis": "Creates a new TableUpdate object.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\Table::update ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-table.update.php"}, {"name": "mysql_xdevapi\\TableDelete::bind", "synopsis": "Binds a value to a specific placeholder.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\TableDelete::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.bind.php"}, {"name": "mysql_xdevapi\\TableDelete::execute", "synopsis": "Execute the delete query.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\TableDelete::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.execute.php"}, {"name": "mysql_xdevapi\\TableDelete::limit", "synopsis": "Sets the maximum number of records or documents to delete.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\TableDelete::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.limit.php"}, {"name": "mysql_xdevapi\\TableDelete::offset", "synopsis": "Sets the limit offset.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\TableDelete::offset ( integer $position )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.offset.php"}, {"name": "mysql_xdevapi\\TableDelete::orderby", "synopsis": "Set the order options for a result set.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\TableDelete::orderby ( string $orderby_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.orderby.php"}, {"name": "mysql_xdevapi\\TableDelete::where", "synopsis": "Sets the search condition to filter.", "usage": "public mysql_xdevapi\\TableDelete mysql_xdevapi\\TableDelete::where ( string $where_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tabledelete.where.php"}, {"name": "mysql_xdevapi\\TableInsert::execute", "synopsis": "Execute the statement.", "usage": "public mysql_xdevapi\\Result mysql_xdevapi\\TableInsert::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableinsert.execute.php"}, {"name": "mysql_xdevapi\\TableInsert::values", "synopsis": "Set the values to be inserted.", "usage": "public mysql_xdevapi\\TableInsert mysql_xdevapi\\TableInsert::values ( array $row_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableinsert.values.php"}, {"name": "mysql_xdevapi\\TableSelect::bind", "synopsis": "Binds a value to a specific placeholder.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.bind.php"}, {"name": "mysql_xdevapi\\TableSelect::execute", "synopsis": "Execute the statement.", "usage": "public mysql_xdevapi\\RowResult mysql_xdevapi\\TableSelect::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.execute.php"}, {"name": "mysql_xdevapi\\TableSelect::groupBy", "synopsis": "Sets a grouping criteria for the result set.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::groupBy ( mixed $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.groupby.php"}, {"name": "mysql_xdevapi\\TableSelect::having", "synopsis": "Sets a condition for records to consider in agregate function operations.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::having ( string $sort_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.having.php"}, {"name": "mysql_xdevapi\\TableSelect::limit", "synopsis": "Sets the maximum number of records or documents to return.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.limit.php"}, {"name": "mysql_xdevapi\\TableSelect::lockExclusive", "synopsis": "Execute a read operation with EXCLUSIVE LOCK. Only one lock can be active at a time.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::lockExclusive ([ integer $lock_waiting_option ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.lockexclusive.php"}, {"name": "mysql_xdevapi\\TableSelect::lockShared", "synopsis": "Execute a read operation with SHARED LOCK. Only one lock can be active at a time.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::lockShared ([ integer $lock_waiting_option ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.lockshared.php"}, {"name": "mysql_xdevapi\\TableSelect::offset", "synopsis": "Skip given number of rows in result.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::offset ( integer $position )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.offset.php"}, {"name": "mysql_xdevapi\\TableSelect::orderby", "synopsis": "Sets the order by criteria.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::orderby ( mixed $sort_expr [, mixed $... ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.orderby.php"}, {"name": "mysql_xdevapi\\TableSelect::where", "synopsis": "Sets the search condition to filter.", "usage": "public mysql_xdevapi\\TableSelect mysql_xdevapi\\TableSelect::where ( string $where_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableselect.where.php"}, {"name": "mysql_xdevapi\\TableUpdate::bind", "synopsis": "Binds a value to a specific placeholder.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::bind ( array $placeholder_values )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.bind.php"}, {"name": "mysql_xdevapi\\TableUpdate::execute", "synopsis": "Executes the update statement.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::execute ( void )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.execute.php"}, {"name": "mysql_xdevapi\\TableUpdate::limit", "synopsis": "Set the maximum number of records or documents update.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::limit ( integer $rows )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.limit.php"}, {"name": "mysql_xdevapi\\TableUpdate::orderby", "synopsis": "Sets the sorting criteria.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::orderby ( mixed $orderby_expr [, mixed $... ] )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.orderby.php"}, {"name": "mysql_xdevapi\\TableUpdate::set", "synopsis": "Updates the column value on records in a table.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::set ( string $table_field , string $expression_or_literal )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.set.php"}, {"name": "mysql_xdevapi\\TableUpdate::where", "synopsis": "Set the search condition to filter.", "usage": "public mysql_xdevapi\\TableUpdate mysql_xdevapi\\TableUpdate::where ( string $where_expr )", "url": "https://secure.php.net/manual/en/mysql-xdevapi-tableupdate.where.php"}, {"name": "mysqli_driver::embedded_server_end", "synopsis": "Procedural style", "usage": "void mysqli_driver::embedded_server_end ( void )", "url": "https://secure.php.net/manual/en/mysqli-driver.embedded-server-end.php"}, {"name": "mysqli_driver::embedded_server_start", "synopsis": "Procedural style", "usage": "bool mysqli_driver::embedded_server_start ( int $start , array $arguments , array $groups )", "url": "https://secure.php.net/manual/en/mysqli-driver.embedded-server-start.php"}, {"name": "mysqli_report", "synopsis": "A function helpful in improving queries during code development and testing. Depending on the flags, it reports errors from mysqli function calls or queries that don't use an index (or use a bad index).", "usage": "bool mysqli_report ( int $flags )", "url": "https://secure.php.net/manual/en/mysqli-driver.report-mode.php"}, {"name": "mysqli_field_tell", "synopsis": "Returns the position of the field cursor used for the last mysqli_fetch_field() call. This value can be used as an argument to mysqli_field_seek().", "usage": "int mysqli_field_tell ( mysqli_result $result )", "url": "https://secure.php.net/manual/en/mysqli-result.current-field.php"}, {"name": "mysqli_result::data_seek", "synopsis": "Procedural style", "usage": "bool mysqli_result::data_seek ( int $offset )", "url": "https://secure.php.net/manual/en/mysqli-result.data-seek.php"}, {"name": "mysqli_result::fetch_all", "synopsis": "Procedural style", "usage": "mixed mysqli_result::fetch_all ([ int $resulttype = MYSQLI_NUM ] )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-all.php"}, {"name": "mysqli_result::fetch_array", "synopsis": "Procedural style", "usage": "mixed mysqli_result::fetch_array ([ int $resulttype = MYSQLI_BOTH ] )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-array.php"}, {"name": "mysqli_result::fetch_assoc", "synopsis": "Procedural style", "usage": "array mysqli_result::fetch_assoc ( void )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-assoc.php"}, {"name": "mysqli_result::fetch_field_direct", "synopsis": "Procedural style", "usage": "object mysqli_result::fetch_field_direct ( int $fieldnr )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-field-direct.php"}, {"name": "mysqli_result::fetch_field", "synopsis": "Procedural style", "usage": "object mysqli_result::fetch_field ( void )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-field.php"}, {"name": "mysqli_result::fetch_fields", "synopsis": "Procedural style", "usage": "array mysqli_result::fetch_fields ( void )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-fields.php"}, {"name": "mysqli_result::fetch_object", "synopsis": "Procedural style", "usage": "object mysqli_result::fetch_object ([ string $class_name = \"stdClass\" [, array $params ]] )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-object.php"}, {"name": "mysqli_result::fetch_row", "synopsis": "Procedural style", "usage": "mixed mysqli_result::fetch_row ( void )", "url": "https://secure.php.net/manual/en/mysqli-result.fetch-row.php"}, {"name": "mysqli_num_fields", "synopsis": "Returns the number of fields from specified result set.", "usage": "int mysqli_num_fields ( mysqli_result $result )", "url": "https://secure.php.net/manual/en/mysqli-result.field-count.php"}, {"name": "mysqli_result::field_seek", "synopsis": "Procedural style", "usage": "bool mysqli_result::field_seek ( int $fieldnr )", "url": "https://secure.php.net/manual/en/mysqli-result.field-seek.php"}, {"name": "mysqli_result::free", "synopsis": "Procedural style", "usage": "void mysqli_result::free ( void )", "url": "https://secure.php.net/manual/en/mysqli-result.free.php"}, {"name": "mysqli_fetch_lengths", "synopsis": "The mysqli_fetch_lengths() function returns an array containing the lengths of every column of the current row within the result set.", "usage": "array mysqli_fetch_lengths ( mysqli_result $result )", "url": "https://secure.php.net/manual/en/mysqli-result.lengths.php"}, {"name": "mysqli_num_rows", "synopsis": "Returns the number of rows in the result set.", "usage": "int mysqli_num_rows ( mysqli_result $result )", "url": "https://secure.php.net/manual/en/mysqli-result.num-rows.php"}, {"name": "mysqli_stmt_affected_rows", "synopsis": "Returns the number of rows affected by INSERT, UPDATE, or DELETE query.", "usage": "int mysqli_stmt_affected_rows ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.affected-rows.php"}, {"name": "mysqli_stmt::attr_get", "synopsis": "Procedural style", "usage": "int mysqli_stmt::attr_get ( int $attr )", "url": "https://secure.php.net/manual/en/mysqli-stmt.attr-get.php"}, {"name": "mysqli_stmt::attr_set", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::attr_set ( int $attr , int $mode )", "url": "https://secure.php.net/manual/en/mysqli-stmt.attr-set.php"}, {"name": "mysqli_stmt::bind_param", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::bind_param ( string $types , mixed &$var1 [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/mysqli-stmt.bind-param.php"}, {"name": "mysqli_stmt::bind_result", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::bind_result ( mixed &$var1 [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/mysqli-stmt.bind-result.php"}, {"name": "mysqli_stmt::close", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::close ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.close.php"}, {"name": "mysqli_stmt::data_seek", "synopsis": "Procedural style", "usage": "void mysqli_stmt::data_seek ( int $offset )", "url": "https://secure.php.net/manual/en/mysqli-stmt.data-seek.php"}, {"name": "mysqli_stmt_errno", "synopsis": "Returns the error code for the most recently invoked statement function that can succeed or fail.", "usage": "int mysqli_stmt_errno ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.errno.php"}, {"name": "mysqli_stmt_error_list", "synopsis": "Returns an array of errors for the most recently invoked statement function that can succeed or fail.", "usage": "array mysqli_stmt_error_list ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.error-list.php"}, {"name": "mysqli_stmt_error", "synopsis": "Returns a string containing the error message for the most recently invoked statement function that can succeed or fail.", "usage": "string mysqli_stmt_error ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.error.php"}, {"name": "mysqli_stmt::execute", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::execute ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.execute.php"}, {"name": "mysqli_stmt::fetch", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::fetch ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.fetch.php"}, {"name": "mysqli_stmt_field_count", "synopsis": null, "usage": "int mysqli_stmt_field_count ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.field-count.php"}, {"name": "mysqli_stmt::free_result", "synopsis": "Procedural style", "usage": "void mysqli_stmt::free_result ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.free-result.php"}, {"name": "mysqli_stmt::get_result", "synopsis": "Procedural style", "usage": "mysqli_result mysqli_stmt::get_result ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.get-result.php"}, {"name": "mysqli_stmt::get_warnings", "synopsis": "Procedural style", "usage": "object mysqli_stmt::get_warnings ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.get-warnings.php"}, {"name": "mysqli_stmt_insert_id", "synopsis": null, "usage": "mixed mysqli_stmt_insert_id ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.insert-id.php"}, {"name": "mysqli_stmt::more_results", "synopsis": "Procedural style:", "usage": "public bool mysqli_stmt::more_results ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.more-results.php"}, {"name": "mysqli_stmt::next_result", "synopsis": "Procedural style:", "usage": "public bool mysqli_stmt::next_result ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.next-result.php"}, {"name": "mysqli_stmt::num_rows", "synopsis": "Procedural style", "usage": "int mysqli_stmt::num_rows ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.num-rows.php"}, {"name": "mysqli_stmt_param_count", "synopsis": "Returns the number of parameter markers present in the prepared statement.", "usage": "int mysqli_stmt_param_count ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.param-count.php"}, {"name": "mysqli_stmt::prepare", "synopsis": "Procedural style", "usage": "mixed mysqli_stmt::prepare ( string $query )", "url": "https://secure.php.net/manual/en/mysqli-stmt.prepare.php"}, {"name": "mysqli_stmt::reset", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::reset ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.reset.php"}, {"name": "mysqli_stmt::result_metadata", "synopsis": "Procedural style", "usage": "mysqli_result mysqli_stmt::result_metadata ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.result-metadata.php"}, {"name": "mysqli_stmt::send_long_data", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::send_long_data ( int $param_nr , string $data )", "url": "https://secure.php.net/manual/en/mysqli-stmt.send-long-data.php"}, {"name": "mysqli_stmt_sqlstate", "synopsis": "Returns a string containing the SQLSTATE error code for the most recently invoked prepared statement function that can succeed or fail. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC. For a list of possible values, see \u00bb\u00a0http://dev.mysql.com/doc/mysql/en/error-handling.html.", "usage": "string mysqli_stmt_sqlstate ( mysqli_stmt $stmt )", "url": "https://secure.php.net/manual/en/mysqli-stmt.sqlstate.php"}, {"name": "mysqli_stmt::store_result", "synopsis": "Procedural style", "usage": "bool mysqli_stmt::store_result ( void )", "url": "https://secure.php.net/manual/en/mysqli-stmt.store-result.php"}, {"name": "mysqli_warning::__construct", "synopsis": "", "usage": "protected mysqli_warning::__construct ( void )", "url": "https://secure.php.net/manual/en/mysqli-warning.construct.php"}, {"name": "mysqli_warning::next", "synopsis": "", "usage": "public void mysqli_warning::next ( void )", "url": "https://secure.php.net/manual/en/mysqli-warning.next.php"}, {"name": "mysqli_affected_rows", "synopsis": "Returns the number of rows affected by the last INSERT, UPDATE, REPLACE or DELETE query.", "usage": "int mysqli_affected_rows ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.affected-rows.php"}, {"name": "mysqli::autocommit", "synopsis": "Procedural style", "usage": "bool mysqli::autocommit ( bool $mode )", "url": "https://secure.php.net/manual/en/mysqli.autocommit.php"}, {"name": "mysqli::begin_transaction", "synopsis": "Procedural style:", "usage": "public bool mysqli::begin_transaction ([ int $flags [, string $name ]] )", "url": "https://secure.php.net/manual/en/mysqli.begin-transaction.php"}, {"name": "mysqli::change_user", "synopsis": "Procedural style", "usage": "bool mysqli::change_user ( string $user , string $password , string $database )", "url": "https://secure.php.net/manual/en/mysqli.change-user.php"}, {"name": "mysqli::character_set_name", "synopsis": "Procedural style", "usage": "string mysqli::character_set_name ( void )", "url": "https://secure.php.net/manual/en/mysqli.character-set-name.php"}, {"name": "mysqli::close", "synopsis": "Procedural style", "usage": "bool mysqli::close ( void )", "url": "https://secure.php.net/manual/en/mysqli.close.php"}, {"name": "mysqli::commit", "synopsis": "Procedural style", "usage": "bool mysqli::commit ([ int $flags [, string $name ]] )", "url": "https://secure.php.net/manual/en/mysqli.commit.php"}, {"name": "mysqli_connect_errno", "synopsis": "Returns the last error code number from the last call to mysqli_connect().", "usage": "int mysqli_connect_errno ( void )", "url": "https://secure.php.net/manual/en/mysqli.connect-errno.php"}, {"name": "mysqli_connect_error", "synopsis": "Returns the last error message string from the last call to mysqli_connect().", "usage": "string mysqli_connect_error ( void )", "url": "https://secure.php.net/manual/en/mysqli.connect-error.php"}, {"name": "mysqli::__construct", "synopsis": "Procedural style", "usage": "void mysqli::connect ([ string $host = ini_get(\"mysqli.default_host\") [, string $username = ini_get(\"mysqli.default_user\") [, string $passwd = ini_get(\"mysqli.default_pw\") [, string $dbname = \"\" [, int $port = ini_get(\"mysqli.default_port\") [, string $socket = ini_get(\"mysqli.default_socket\") ]]]]]] )", "url": "https://secure.php.net/manual/en/mysqli.construct.php"}, {"name": "mysqli::debug", "synopsis": "Procedural style", "usage": "bool mysqli::debug ( string $message )", "url": "https://secure.php.net/manual/en/mysqli.debug.php"}, {"name": "mysqli::dump_debug_info", "synopsis": "Procedural style", "usage": "bool mysqli::dump_debug_info ( void )", "url": "https://secure.php.net/manual/en/mysqli.dump-debug-info.php"}, {"name": "mysqli_errno", "synopsis": "Returns the last error code for the most recent MySQLi function call that can succeed or fail.", "usage": "int mysqli_errno ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.errno.php"}, {"name": "mysqli_error_list", "synopsis": "Returns a array of errors for the most recent MySQLi function call that can succeed or fail.", "usage": "array mysqli_error_list ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.error-list.php"}, {"name": "mysqli_error", "synopsis": "Returns the last error message for the most recent MySQLi function call that can succeed or fail.", "usage": "string mysqli_error ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.error.php"}, {"name": "mysqli_field_count", "synopsis": "Returns the number of columns for the most recent query on the connection represented by the link parameter. This function can be useful when using the mysqli_store_result() function to determine if the query should have produced a non-empty result set or not without knowing the nature of the query.", "usage": "int mysqli_field_count ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.field-count.php"}, {"name": "mysqli::get_charset", "synopsis": "Procedural style", "usage": "object mysqli::get_charset ( void )", "url": "https://secure.php.net/manual/en/mysqli.get-charset.php"}, {"name": "mysqli::get_client_info", "synopsis": "Procedural style", "usage": "string mysqli::get_client_info ( void )", "url": "https://secure.php.net/manual/en/mysqli.get-client-info.php"}, {"name": "mysqli_get_client_version", "synopsis": "Returns client version number as an integer.", "usage": "int mysqli_get_client_version ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.get-client-version.php"}, {"name": "mysqli::get_connection_stats", "synopsis": "Procedural style", "usage": "bool mysqli::get_connection_stats ( void )", "url": "https://secure.php.net/manual/en/mysqli.get-connection-stats.php"}, {"name": "mysqli_get_host_info", "synopsis": "Returns a string describing the connection represented by the link parameter (including the server host name).", "usage": "string mysqli_get_host_info ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.get-host-info.php"}, {"name": "mysqli_get_proto_info", "synopsis": "Returns an integer representing the MySQL protocol version used by the connection represented by the link parameter.", "usage": "int mysqli_get_proto_info ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.get-proto-info.php"}, {"name": "mysqli_stmt::get_server_info", "synopsis": "Procedural style", "usage": "string mysqli_stmt::get_server_info ( void )", "url": "https://secure.php.net/manual/en/mysqli.get-server-info.php"}, {"name": "mysqli_get_server_version", "synopsis": "The mysqli_get_server_version() function returns the version of the server connected to (represented by the link parameter) as an integer.", "usage": "int mysqli_get_server_version ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.get-server-version.php"}, {"name": "mysqli::get_warnings", "synopsis": "Procedural style", "usage": "mysqli_warning mysqli::get_warnings ( void )", "url": "https://secure.php.net/manual/en/mysqli.get-warnings.php"}, {"name": "mysqli_info", "synopsis": "The mysqli_info() function returns a string providing information about the last query executed. The nature of this string is provided below:", "usage": "string mysqli_info ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.info.php"}, {"name": "mysqli::init", "synopsis": "Procedural style", "usage": "mysqli mysqli::init ( void )", "url": "https://secure.php.net/manual/en/mysqli.init.php"}, {"name": "mysqli_insert_id", "synopsis": "The mysqli_insert_id() function returns the ID generated by a query (usually INSERT) on a table with a column having the AUTO_INCREMENT attribute. If no INSERT or UPDATE statements were sent via this connection, or if the modified table does not have a column with the AUTO_INCREMENT attribute, this function will return zero.", "usage": "mixed mysqli_insert_id ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.insert-id.php"}, {"name": "mysqli::kill", "synopsis": "Procedural style", "usage": "bool mysqli::kill ( int $processid )", "url": "https://secure.php.net/manual/en/mysqli.kill.php"}, {"name": "mysqli::more_results", "synopsis": "Procedural style", "usage": "bool mysqli::more_results ( void )", "url": "https://secure.php.net/manual/en/mysqli.more-results.php"}, {"name": "mysqli::multi_query", "synopsis": "Procedural style", "usage": "bool mysqli::multi_query ( string $query )", "url": "https://secure.php.net/manual/en/mysqli.multi-query.php"}, {"name": "mysqli::next_result", "synopsis": "Procedural style", "usage": "bool mysqli::next_result ( void )", "url": "https://secure.php.net/manual/en/mysqli.next-result.php"}, {"name": "mysqli::options", "synopsis": "Procedural style", "usage": "bool mysqli::options ( int $option , mixed $value )", "url": "https://secure.php.net/manual/en/mysqli.options.php"}, {"name": "mysqli::ping", "synopsis": "Procedural style", "usage": "bool mysqli::ping ( void )", "url": "https://secure.php.net/manual/en/mysqli.ping.php"}, {"name": "mysqli::poll", "synopsis": "Procedural style", "usage": "public static int mysqli::poll ( array &$read , array &$error , array &$reject , int $sec [, int $usec ] )", "url": "https://secure.php.net/manual/en/mysqli.poll.php"}, {"name": "mysqli::prepare", "synopsis": "Procedural style", "usage": "mysqli_stmt mysqli::prepare ( string $query )", "url": "https://secure.php.net/manual/en/mysqli.prepare.php"}, {"name": "mysqli::query", "synopsis": "Procedural style", "usage": "mixed mysqli::query ( string $query [, int $resultmode = MYSQLI_STORE_RESULT ] )", "url": "https://secure.php.net/manual/en/mysqli.query.php"}, {"name": "mysqli::real_connect", "synopsis": "Procedural style", "usage": "bool mysqli::real_connect ([ string $host [, string $username [, string $passwd [, string $dbname [, int $port [, string $socket [, int $flags ]]]]]]] )", "url": "https://secure.php.net/manual/en/mysqli.real-connect.php"}, {"name": "mysqli::escape_string", "synopsis": "Procedural style", "usage": "string mysqli::escape_string ( string $escapestr )", "url": "https://secure.php.net/manual/en/mysqli.real-escape-string.php"}, {"name": "mysqli::real_query", "synopsis": "Procedural style", "usage": "bool mysqli::real_query ( string $query )", "url": "https://secure.php.net/manual/en/mysqli.real-query.php"}, {"name": "mysqli::reap_async_query", "synopsis": "Procedural style", "usage": "public mysqli_result mysqli::reap_async_query ( void )", "url": "https://secure.php.net/manual/en/mysqli.reap-async-query.php"}, {"name": "mysqli::refresh", "synopsis": "Procedural style", "usage": "public bool mysqli::refresh ( int $options )", "url": "https://secure.php.net/manual/en/mysqli.refresh.php"}, {"name": "mysqli::release_savepoint", "synopsis": "Procedural style:", "usage": "public bool mysqli::release_savepoint ( string $name )", "url": "https://secure.php.net/manual/en/mysqli.release-savepoint.php"}, {"name": "mysqli::rollback", "synopsis": "Procedural style", "usage": "bool mysqli::rollback ([ int $flags [, string $name ]] )", "url": "https://secure.php.net/manual/en/mysqli.rollback.php"}, {"name": "mysqli::rpl_query_type", "synopsis": "Procedural style", "usage": "int mysqli::rpl_query_type ( string $query )", "url": "https://secure.php.net/manual/en/mysqli.rpl-query-type.php"}, {"name": "mysqli::savepoint", "synopsis": "Procedural style:", "usage": "public bool mysqli::savepoint ( string $name )", "url": "https://secure.php.net/manual/en/mysqli.savepoint.php"}, {"name": "mysqli::select_db", "synopsis": "Procedural style", "usage": "bool mysqli::select_db ( string $dbname )", "url": "https://secure.php.net/manual/en/mysqli.select-db.php"}, {"name": "mysqli::send_query", "synopsis": "Procedural style", "usage": "bool mysqli::send_query ( string $query )", "url": "https://secure.php.net/manual/en/mysqli.send-query.php"}, {"name": "mysqli::set_charset", "synopsis": "Procedural style", "usage": "bool mysqli::set_charset ( string $charset )", "url": "https://secure.php.net/manual/en/mysqli.set-charset.php"}, {"name": "mysqli_set_local_infile_default", "synopsis": "Deactivates a LOAD DATA INFILE LOCAL handler previously set with mysqli_set_local_infile_handler().", "usage": "void mysqli_set_local_infile_default ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.set-local-infile-default.php"}, {"name": "mysqli::set_local_infile_handler", "synopsis": "Procedural style", "usage": "bool mysqli::set_local_infile_handler ( mysqli $link , callable $read_func )", "url": "https://secure.php.net/manual/en/mysqli.set-local-infile-handler.php"}, {"name": "mysqli_sqlstate", "synopsis": "Returns a string containing the SQLSTATE error code for the last error. The error code consists of five characters. '00000' means no error. The values are specified by ANSI SQL and ODBC. For a list of possible values, see \u00bb\u00a0http://dev.mysql.com/doc/mysql/en/error-handling.html.", "usage": "string mysqli_sqlstate ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.sqlstate.php"}, {"name": "mysqli::ssl_set", "synopsis": "Procedural style", "usage": "bool mysqli::ssl_set ( string $key , string $cert , string $ca , string $capath , string $cipher )", "url": "https://secure.php.net/manual/en/mysqli.ssl-set.php"}, {"name": "mysqli::stat", "synopsis": "Procedural style", "usage": "string mysqli::stat ( void )", "url": "https://secure.php.net/manual/en/mysqli.stat.php"}, {"name": "mysqli::stmt_init", "synopsis": "Procedural style", "usage": "mysqli_stmt mysqli::stmt_init ( void )", "url": "https://secure.php.net/manual/en/mysqli.stmt-init.php"}, {"name": "mysqli::store_result", "synopsis": "Procedural style", "usage": "mysqli_result mysqli::store_result ([ int $option ] )", "url": "https://secure.php.net/manual/en/mysqli.store-result.php"}, {"name": "mysqli_thread_id", "synopsis": "The mysqli_thread_id() function returns the thread ID for the current connection which can then be killed using the mysqli_kill() function. If the connection is lost and you reconnect with mysqli_ping(), the thread ID will be other. Therefore you should get the thread ID only when you need it.", "usage": "int mysqli_thread_id ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.thread-id.php"}, {"name": "mysqli_thread_safe", "synopsis": "Tells whether the client library is compiled as thread-safe.", "usage": "bool mysqli_thread_safe ( void )", "url": "https://secure.php.net/manual/en/mysqli.thread-safe.php"}, {"name": "mysqli::use_result", "synopsis": "Procedural style", "usage": "mysqli_result mysqli::use_result ( void )", "url": "https://secure.php.net/manual/en/mysqli.use-result.php"}, {"name": "mysqli_warning_count", "synopsis": "Returns the number of warnings from the last query in the connection.", "usage": "int mysqli_warning_count ( mysqli $link )", "url": "https://secure.php.net/manual/en/mysqli.warning-count.php"}, {"name": "MysqlndUhConnection::changeUser", "synopsis": "Changes the user of the specified mysqlnd database connection", "usage": "public bool MysqlndUhConnection::changeUser ( mysqlnd_connection $connection , string $user , string $password , string $database , bool $silent , int $passwd_len )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.changeuser.php"}, {"name": "MysqlndUhConnection::charsetName", "synopsis": "Returns the default character set for the database connection.", "usage": "public string MysqlndUhConnection::charsetName ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.charsetname.php"}, {"name": "MysqlndUhConnection::close", "synopsis": "Closes a previously opened database connection.", "usage": "public bool MysqlndUhConnection::close ( mysqlnd_connection $connection , int $close_type )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.close.php"}, {"name": "MysqlndUhConnection::connect", "synopsis": "Open a new connection to the MySQL server.", "usage": "public bool MysqlndUhConnection::connect ( mysqlnd_connection $connection , string $host , string $use\" , string $password , string $database , int $port , string $socket , int $mysql_flags )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.connect.php"}, {"name": "MysqlndUhConnection::__construct", "synopsis": "", "usage": "public MysqlndUhConnection::__construct ( void )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.construct.php"}, {"name": "MysqlndUhConnection::endPSession", "synopsis": "End a persistent connection", "usage": "public bool MysqlndUhConnection::endPSession ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.endpsession.php"}, {"name": "MysqlndUhConnection::escapeString", "synopsis": "Escapes special characters in a string for use in an SQL statement, taking into account the current charset of the connection.", "usage": "public string MysqlndUhConnection::escapeString ( mysqlnd_connection $connection , string $escape_string )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.escapestring.php"}, {"name": "MysqlndUhConnection::getAffectedRows", "synopsis": "Gets the number of affected rows in a previous MySQL operation.", "usage": "public int MysqlndUhConnection::getAffectedRows ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getaffectedrows.php"}, {"name": "MysqlndUhConnection::getErrorNumber", "synopsis": "Returns the error code for the most recent function call.", "usage": "public int MysqlndUhConnection::getErrorNumber ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.geterrornumber.php"}, {"name": "MysqlndUhConnection::getErrorString", "synopsis": "Returns a string description of the last error.", "usage": "public string MysqlndUhConnection::getErrorString ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.geterrorstring.php"}, {"name": "MysqlndUhConnection::getFieldCount", "synopsis": "Returns the number of columns for the most recent query.", "usage": "public int MysqlndUhConnection::getFieldCount ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getfieldcount.php"}, {"name": "MysqlndUhConnection::getHostInformation", "synopsis": "Returns a string representing the type of connection used.", "usage": "public string MysqlndUhConnection::getHostInformation ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.gethostinformation.php"}, {"name": "MysqlndUhConnection::getLastInsertId", "synopsis": "Returns the auto generated id used in the last query.", "usage": "public int MysqlndUhConnection::getLastInsertId ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getlastinsertid.php"}, {"name": "MysqlndUhConnection::getLastMessage", "synopsis": "Retrieves information about the most recently executed query.", "usage": "public void MysqlndUhConnection::getLastMessage ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getlastmessage.php"}, {"name": "MysqlndUhConnection::getProtocolInformation", "synopsis": "Returns the version of the MySQL protocol used.", "usage": "public string MysqlndUhConnection::getProtocolInformation ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getprotocolinformation.php"}, {"name": "MysqlndUhConnection::getServerInformation", "synopsis": "Returns the version of the MySQL server.", "usage": "public string MysqlndUhConnection::getServerInformation ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getserverinformation.php"}, {"name": "MysqlndUhConnection::getServerStatistics", "synopsis": "Gets the current system status.", "usage": "public string MysqlndUhConnection::getServerStatistics ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getserverstatistics.php"}, {"name": "MysqlndUhConnection::getServerVersion", "synopsis": "Returns the version of the MySQL server as an integer.", "usage": "public int MysqlndUhConnection::getServerVersion ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getserverversion.php"}, {"name": "MysqlndUhConnection::getSqlstate", "synopsis": "Returns the SQLSTATE error from previous MySQL operation.", "usage": "public string MysqlndUhConnection::getSqlstate ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getsqlstate.php"}, {"name": "MysqlndUhConnection::getStatistics", "synopsis": "Returns statistics about the client connection.", "usage": "public array MysqlndUhConnection::getStatistics ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getstatistics.php"}, {"name": "MysqlndUhConnection::getThreadId", "synopsis": "Returns the thread ID for the current connection.", "usage": "public int MysqlndUhConnection::getThreadId ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getthreadid.php"}, {"name": "MysqlndUhConnection::getWarningCount", "synopsis": "Returns the number of warnings from the last query for the given link.", "usage": "public int MysqlndUhConnection::getWarningCount ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.getwarningcount.php"}, {"name": "MysqlndUhConnection::init", "synopsis": "Initialize mysqlnd connection. This is an mysqlnd internal call to initialize the connection object.", "usage": "public bool MysqlndUhConnection::init ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.init.php"}, {"name": "MysqlndUhConnection::killConnection", "synopsis": "Asks the server to kill a MySQL thread.", "usage": "public bool MysqlndUhConnection::killConnection ( mysqlnd_connection $connection , int $pid )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.killconnection.php"}, {"name": "MysqlndUhConnection::listFields", "synopsis": "List MySQL table fields.", "usage": "public array MysqlndUhConnection::listFields ( mysqlnd_connection $connection , string $table , string $achtung_wild )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.listfields.php"}, {"name": "MysqlndUhConnection::listMethod", "synopsis": "Wrapper for assorted list commands.", "usage": "public void MysqlndUhConnection::listMethod ( mysqlnd_connection $connection , string $query , string $achtung_wild , string $par1 )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.listmethod.php"}, {"name": "MysqlndUhConnection::moreResults", "synopsis": "Check if there are any more query results from a multi query.", "usage": "public bool MysqlndUhConnection::moreResults ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.moreresults.php"}, {"name": "MysqlndUhConnection::nextResult", "synopsis": "Prepare next result from multi_query.", "usage": "public bool MysqlndUhConnection::nextResult ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.nextresult.php"}, {"name": "MysqlndUhConnection::ping", "synopsis": "Pings a server connection, or tries to reconnect if the connection has gone down.", "usage": "public bool MysqlndUhConnection::ping ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.ping.php"}, {"name": "MysqlndUhConnection::query", "synopsis": "Performs a query on the database (COM_QUERY).", "usage": "public bool MysqlndUhConnection::query ( mysqlnd_connection $connection , string $query )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.query.php"}, {"name": "MysqlndUhConnection::queryReadResultsetHeader", "synopsis": "Read a result set header.", "usage": "public bool MysqlndUhConnection::queryReadResultsetHeader ( mysqlnd_connection $connection , mysqlnd_statement $mysqlnd_stmt )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.queryreadresultsetheader.php"}, {"name": "MysqlndUhConnection::reapQuery", "synopsis": "Get result from async query.", "usage": "public bool MysqlndUhConnection::reapQuery ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.reapquery.php"}, {"name": "MysqlndUhConnection::refreshServer", "synopsis": "Flush or reset tables and caches.", "usage": "public bool MysqlndUhConnection::refreshServer ( mysqlnd_connection $connection , int $options )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.refreshserver.php"}, {"name": "MysqlndUhConnection::restartPSession", "synopsis": "Restart a persistent mysqlnd connection.", "usage": "public bool MysqlndUhConnection::restartPSession ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.restartpsession.php"}, {"name": "MysqlndUhConnection::selectDb", "synopsis": "Selects the default database for database queries.", "usage": "public bool MysqlndUhConnection::selectDb ( mysqlnd_connection $connection , string $database )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.selectdb.php"}, {"name": "MysqlndUhConnection::sendClose", "synopsis": "Sends a close command to MySQL.", "usage": "public bool MysqlndUhConnection::sendClose ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.sendclose.php"}, {"name": "MysqlndUhConnection::sendQuery", "synopsis": "Sends a query to MySQL.", "usage": "public bool MysqlndUhConnection::sendQuery ( mysqlnd_connection $connection , string $query )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.sendquery.php"}, {"name": "MysqlndUhConnection::serverDumpDebugInformation", "synopsis": "Dump debugging information into the log for the MySQL server.", "usage": "public bool MysqlndUhConnection::serverDumpDebugInformation ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.serverdumpdebuginformation.php"}, {"name": "MysqlndUhConnection::setAutocommit", "synopsis": "Turns on or off auto-committing database modifications", "usage": "public bool MysqlndUhConnection::setAutocommit ( mysqlnd_connection $connection , int $mode )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.setautocommit.php"}, {"name": "MysqlndUhConnection::setCharset", "synopsis": "Sets the default client character set.", "usage": "public bool MysqlndUhConnection::setCharset ( mysqlnd_connection $connection , string $charset )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.setcharset.php"}, {"name": "MysqlndUhConnection::setClientOption", "synopsis": "Sets a client option.", "usage": "public bool MysqlndUhConnection::setClientOption ( mysqlnd_connection $connection , int $option , int $value )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.setclientoption.php"}, {"name": "MysqlndUhConnection::setServerOption", "synopsis": "Sets a server option.", "usage": "public void MysqlndUhConnection::setServerOption ( mysqlnd_connection $connection , int $option )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.setserveroption.php"}, {"name": "MysqlndUhConnection::shutdownServer", "synopsis": "", "usage": "public void MysqlndUhConnection::shutdownServer ( string $MYSQLND_UH_RES_MYSQLND_NAME , string $level )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.shutdownserver.php"}, {"name": "MysqlndUhConnection::simpleCommand", "synopsis": "Sends a basic COM_* command to MySQL.", "usage": "public bool MysqlndUhConnection::simpleCommand ( mysqlnd_connection $connection , int $command , string $arg , int $ok_packet , bool $silent , bool $ignore_upsert_status )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.simplecommand.php"}, {"name": "MysqlndUhConnection::simpleCommandHandleResponse", "synopsis": "Process a response for a basic COM_* command send to the client.", "usage": "public bool MysqlndUhConnection::simpleCommandHandleResponse ( mysqlnd_connection $connection , int $ok_packet , bool $silent , int $command , bool $ignore_upsert_status )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.simplecommandhandleresponse.php"}, {"name": "MysqlndUhConnection::sslSet", "synopsis": "Used for establishing secure connections using SSL.", "usage": "public bool MysqlndUhConnection::sslSet ( mysqlnd_connection $connection , string $key , string $cert , string $ca , string $capath , string $cipher )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.sslset.php"}, {"name": "MysqlndUhConnection::stmtInit", "synopsis": "Initializes a statement and returns a resource for use with mysqli_statement::prepare.", "usage": "public resource MysqlndUhConnection::stmtInit ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.stmtinit.php"}, {"name": "MysqlndUhConnection::storeResult", "synopsis": "Transfers a result set from the last query.", "usage": "public resource MysqlndUhConnection::storeResult ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.storeresult.php"}, {"name": "MysqlndUhConnection::txCommit", "synopsis": "Commits the current transaction.", "usage": "public bool MysqlndUhConnection::txCommit ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.txcommit.php"}, {"name": "MysqlndUhConnection::txRollback", "synopsis": "Rolls back current transaction.", "usage": "public bool MysqlndUhConnection::txRollback ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.txrollback.php"}, {"name": "MysqlndUhConnection::useResult", "synopsis": "Initiate a result set retrieval.", "usage": "public resource MysqlndUhConnection::useResult ( mysqlnd_connection $connection )", "url": "https://secure.php.net/manual/en/mysqlnduhconnection.useresult.php"}, {"name": "MysqlndUhPreparedStatement::__construct", "synopsis": "", "usage": "public MysqlndUhPreparedStatement::__construct ( void )", "url": "https://secure.php.net/manual/en/mysqlnduhpreparedstatement.construct.php"}, {"name": "MysqlndUhPreparedStatement::execute", "synopsis": "Executes a prepared Query.", "usage": "public bool MysqlndUhPreparedStatement::execute ( mysqlnd_prepared_statement $statement )", "url": "https://secure.php.net/manual/en/mysqlnduhpreparedstatement.execute.php"}, {"name": "MysqlndUhPreparedStatement::prepare", "synopsis": "Prepare an SQL statement for execution.", "usage": "public bool MysqlndUhPreparedStatement::prepare ( mysqlnd_prepared_statement $statement , string $query )", "url": "https://secure.php.net/manual/en/mysqlnduhpreparedstatement.prepare.php"}, {"name": "NoRewindIterator::__construct", "synopsis": "Constructs a NoRewindIterator.", "usage": "public NoRewindIterator::__construct ( Iterator $iterator )", "url": "https://secure.php.net/manual/en/norewinditerator.construct.php"}, {"name": "NoRewindIterator::current", "synopsis": "Gets the current value.", "usage": "public mixed NoRewindIterator::current ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.current.php"}, {"name": "NoRewindIterator::getInnerIterator", "synopsis": "Gets the inner iterator, that was passed in to NoRewindIterator.", "usage": "public iterator NoRewindIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.getinneriterator.php"}, {"name": "NoRewindIterator::key", "synopsis": "Gets the current key.", "usage": "public mixed NoRewindIterator::key ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.key.php"}, {"name": "NoRewindIterator::next", "synopsis": "Forwards to the next element.", "usage": "public void NoRewindIterator::next ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.next.php"}, {"name": "NoRewindIterator::rewind", "synopsis": "Prevents the rewind operation on the inner iterator.", "usage": "public void NoRewindIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.rewind.php"}, {"name": "NoRewindIterator::valid", "synopsis": "Checks whether the iterator is valid.", "usage": "public bool NoRewindIterator::valid ( void )", "url": "https://secure.php.net/manual/en/norewinditerator.valid.php"}, {"name": "Normalizer::getRawDecomposition", "synopsis": "Procedural style", "usage": "public static string Normalizer::getRawDecomposition ( string $input )", "url": "https://secure.php.net/manual/en/normalizer.getrawdecomposition.php"}, {"name": "Normalizer::isNormalized", "synopsis": "Procedural style", "usage": "public static bool Normalizer::isNormalized ( string $input [, int $form = Normalizer::FORM_C ] )", "url": "https://secure.php.net/manual/en/normalizer.isnormalized.php"}, {"name": "Normalizer::normalize", "synopsis": "Procedural style", "usage": "public static string Normalizer::normalize ( string $input [, int $form = Normalizer::FORM_C ] )", "url": "https://secure.php.net/manual/en/normalizer.normalize.php"}, {"name": "NumberFormatter::create", "synopsis": "Procedural style", "usage": "public static NumberFormatter NumberFormatter::create ( string $locale , int $style [, string $pattern ] )", "url": "https://secure.php.net/manual/en/numberformatter.create.php"}, {"name": "NumberFormatter::format", "synopsis": "Procedural style", "usage": "public string NumberFormatter::format ( number $value [, int $type ] )", "url": "https://secure.php.net/manual/en/numberformatter.format.php"}, {"name": "NumberFormatter::formatCurrency", "synopsis": "Procedural style", "usage": "public string NumberFormatter::formatCurrency ( float $value , string $currency )", "url": "https://secure.php.net/manual/en/numberformatter.formatcurrency.php"}, {"name": "NumberFormatter::getAttribute", "synopsis": "Procedural style", "usage": "public int NumberFormatter::getAttribute ( int $attr )", "url": "https://secure.php.net/manual/en/numberformatter.getattribute.php"}, {"name": "NumberFormatter::getErrorCode", "synopsis": "Procedural style", "usage": "public int NumberFormatter::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/numberformatter.geterrorcode.php"}, {"name": "NumberFormatter::getErrorMessage", "synopsis": "Procedural style", "usage": "public string NumberFormatter::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/numberformatter.geterrormessage.php"}, {"name": "NumberFormatter::getLocale", "synopsis": "Procedural style", "usage": "public string NumberFormatter::getLocale ([ int $type ] )", "url": "https://secure.php.net/manual/en/numberformatter.getlocale.php"}, {"name": "NumberFormatter::getPattern", "synopsis": "Procedural style", "usage": "public string NumberFormatter::getPattern ( void )", "url": "https://secure.php.net/manual/en/numberformatter.getpattern.php"}, {"name": "NumberFormatter::getSymbol", "synopsis": "Procedural style", "usage": "public string NumberFormatter::getSymbol ( int $attr )", "url": "https://secure.php.net/manual/en/numberformatter.getsymbol.php"}, {"name": "NumberFormatter::getTextAttribute", "synopsis": "Procedural style", "usage": "public string NumberFormatter::getTextAttribute ( int $attr )", "url": "https://secure.php.net/manual/en/numberformatter.gettextattribute.php"}, {"name": "NumberFormatter::parse", "synopsis": "Procedural style", "usage": "public mixed NumberFormatter::parse ( string $value [, int $type [, int &$position ]] )", "url": "https://secure.php.net/manual/en/numberformatter.parse.php"}, {"name": "NumberFormatter::parseCurrency", "synopsis": "Procedural style", "usage": "public float NumberFormatter::parseCurrency ( string $value , string &$currency [, int &$position ] )", "url": "https://secure.php.net/manual/en/numberformatter.parsecurrency.php"}, {"name": "NumberFormatter::setAttribute", "synopsis": "Procedural style", "usage": "public bool NumberFormatter::setAttribute ( int $attr , int $value )", "url": "https://secure.php.net/manual/en/numberformatter.setattribute.php"}, {"name": "NumberFormatter::setPattern", "synopsis": "Procedural style", "usage": "public bool NumberFormatter::setPattern ( string $pattern )", "url": "https://secure.php.net/manual/en/numberformatter.setpattern.php"}, {"name": "NumberFormatter::setSymbol", "synopsis": "Procedural style", "usage": "public bool NumberFormatter::setSymbol ( int $attr , string $value )", "url": "https://secure.php.net/manual/en/numberformatter.setsymbol.php"}, {"name": "NumberFormatter::setTextAttribute", "synopsis": "Procedural style", "usage": "public bool NumberFormatter::setTextAttribute ( int $attr , string $value )", "url": "https://secure.php.net/manual/en/numberformatter.settextattribute.php"}, {"name": "OAuth::__construct", "synopsis": "Creates a new OAuth object", "usage": "public OAuth::__construct ( string $consumer_key , string $consumer_secret [, string $signature_method = OAUTH_SIG_METHOD_HMACSHA1 [, int $auth_type = 0 ]] )", "url": "https://secure.php.net/manual/en/oauth.construct.php"}, {"name": "OAuth::__destruct", "synopsis": "The destructor.", "usage": "public void OAuth::__destruct ( void )", "url": "https://secure.php.net/manual/en/oauth.destruct.php"}, {"name": "OAuth::disableDebug", "synopsis": "Turns off verbose request information (off by default). Alternatively, the debug property can be set to a FALSE value to turn debug off.", "usage": "public bool OAuth::disableDebug ( void )", "url": "https://secure.php.net/manual/en/oauth.disabledebug.php"}, {"name": "OAuth::disableRedirects", "synopsis": "Disable redirects from being followed automatically, thus allowing the request to be manually redirected.", "usage": "public bool OAuth::disableRedirects ( void )", "url": "https://secure.php.net/manual/en/oauth.disableredirects.php"}, {"name": "OAuth::disableSSLChecks", "synopsis": "Turns off the usual SSL peer certificate and host checks, this is not for production environments. Alternatively, the sslChecks member can be set to FALSE to turn SSL checks off.", "usage": "public bool OAuth::disableSSLChecks ( void )", "url": "https://secure.php.net/manual/en/oauth.disablesslchecks.php"}, {"name": "OAuth::enableDebug", "synopsis": "Turns on verbose request information useful for debugging, the debug information is stored in the debugInfo member. Alternatively, the debug member can be set to a non-FALSE value to turn debug on.", "usage": "public bool OAuth::enableDebug ( void )", "url": "https://secure.php.net/manual/en/oauth.enabledebug.php"}, {"name": "OAuth::enableRedirects", "synopsis": "Follow and sign redirects automatically, which is enabled by default.", "usage": "public bool OAuth::enableRedirects ( void )", "url": "https://secure.php.net/manual/en/oauth.enableredirects.php"}, {"name": "OAuth::enableSSLChecks", "synopsis": "Turns on the usual SSL peer certificate and host checks (enabled by default). Alternatively, the sslChecks member can be set to a non-FALSE value to turn SSL checks off.", "usage": "public bool OAuth::enableSSLChecks ( void )", "url": "https://secure.php.net/manual/en/oauth.enablesslchecks.php"}, {"name": "OAuth::fetch", "synopsis": "Fetch a resource.", "usage": "public mixed OAuth::fetch ( string $protected_resource_url [, array $extra_parameters [, string $http_method [, array $http_headers ]]] )", "url": "https://secure.php.net/manual/en/oauth.fetch.php"}, {"name": "OAuth::generateSignature", "synopsis": "Generate a signature based on the final HTTP method, URL and a string/array of parameters.", "usage": "public string OAuth::generateSignature ( string $http_method , string $url [, mixed $extra_parameters ] )", "url": "https://secure.php.net/manual/en/oauth.generatesignature.php"}, {"name": "OAuth::getAccessToken", "synopsis": "Fetch an access token, secret and any additional response parameters from the service provider.", "usage": "public array OAuth::getAccessToken ( string $access_token_url [, string $auth_session_handle [, string $verifier_token [, string $http_method ]]] )", "url": "https://secure.php.net/manual/en/oauth.getaccesstoken.php"}, {"name": "OAuth::getCAPath", "synopsis": "Gets the Certificate Authority information, which includes the ca_path and ca_info set by OAuth::setCaPath().", "usage": "public array OAuth::getCAPath ( void )", "url": "https://secure.php.net/manual/en/oauth.getcapath.php"}, {"name": "OAuth::getLastResponse", "synopsis": "Get the raw response of the most recent request.", "usage": "public string OAuth::getLastResponse ( void )", "url": "https://secure.php.net/manual/en/oauth.getlastresponse.php"}, {"name": "OAuth::getLastResponseHeaders", "synopsis": "Get headers for last response.", "usage": "public string OAuth::getLastResponseHeaders ( void )", "url": "https://secure.php.net/manual/en/oauth.getlastresponseheaders.php"}, {"name": "OAuth::getLastResponseInfo", "synopsis": "Get HTTP information about the last response.", "usage": "public array OAuth::getLastResponseInfo ( void )", "url": "https://secure.php.net/manual/en/oauth.getlastresponseinfo.php"}, {"name": "OAuth::getRequestHeader", "synopsis": "Generate OAuth header string signature based on the final HTTP method, URL and a string/array of parameters", "usage": "public string OAuth::getRequestHeader ( string $http_method , string $url [, mixed $extra_parameters ] )", "url": "https://secure.php.net/manual/en/oauth.getrequestheader.php"}, {"name": "OAuth::getRequestToken", "synopsis": "Fetch a request token, secret and any additional response parameters from the service provider.", "usage": "public array OAuth::getRequestToken ( string $request_token_url [, string $callback_url [, string $http_method ]] )", "url": "https://secure.php.net/manual/en/oauth.getrequesttoken.php"}, {"name": "OAuth::setAuthType", "synopsis": "Set where the OAuth parameters should be passed.", "usage": "public bool OAuth::setAuthType ( int $auth_type )", "url": "https://secure.php.net/manual/en/oauth.setauthtype.php"}, {"name": "OAuth::setCAPath", "synopsis": "Sets the Certificate Authority (CA), both for path and info.", "usage": "public mixed OAuth::setCAPath ([ string $ca_path [, string $ca_info ]] )", "url": "https://secure.php.net/manual/en/oauth.setcapath.php"}, {"name": "OAuth::setNonce", "synopsis": "Sets the nonce for all subsequent requests.", "usage": "public mixed OAuth::setNonce ( string $nonce )", "url": "https://secure.php.net/manual/en/oauth.setnonce.php"}, {"name": "OAuth::setRequestEngine", "synopsis": "Sets the Request Engine, that will be sending the HTTP requests.", "usage": "public void OAuth::setRequestEngine ( int $reqengine )", "url": "https://secure.php.net/manual/en/oauth.setrequestengine.php"}, {"name": "OAuth::setRSACertificate", "synopsis": "Sets the RSA certificate.", "usage": "public mixed OAuth::setRSACertificate ( string $cert )", "url": "https://secure.php.net/manual/en/oauth.setrsacertificate.php"}, {"name": "OAuth::setSSLChecks", "synopsis": "Tweak specific SSL checks for requests.", "usage": "public bool OAuth::setSSLChecks ( int $sslcheck )", "url": "https://secure.php.net/manual/en/oauth.setsslchecks.php"}, {"name": "OAuth::setTimestamp", "synopsis": "Sets the OAuth timestamp for subsequent requests.", "usage": "public mixed OAuth::setTimestamp ( string $timestamp )", "url": "https://secure.php.net/manual/en/oauth.settimestamp.php"}, {"name": "OAuth::setToken", "synopsis": "Set the token and secret for subsequent requests.", "usage": "public bool OAuth::setToken ( string $token , string $token_secret )", "url": "https://secure.php.net/manual/en/oauth.settoken.php"}, {"name": "OAuth::setVersion", "synopsis": "Sets the OAuth version for subsequent requests", "usage": "public bool OAuth::setVersion ( string $version )", "url": "https://secure.php.net/manual/en/oauth.setversion.php"}, {"name": "OAuthProvider::addRequiredParameter", "synopsis": "Add required oauth provider parameters.", "usage": "final public bool OAuthProvider::addRequiredParameter ( string $req_params )", "url": "https://secure.php.net/manual/en/oauthprovider.addrequiredparameter.php"}, {"name": "OAuthProvider::callconsumerHandler", "synopsis": "Calls the registered consumer handler callback function, which is set with OAuthProvider::consumerHandler().", "usage": "public void OAuthProvider::callconsumerHandler ( void )", "url": "https://secure.php.net/manual/en/oauthprovider.callconsumerhandler.php"}, {"name": "OAuthProvider::callTimestampNonceHandler", "synopsis": "Calls the registered timestamp handler callback function, which is set with OAuthProvider::timestampNonceHandler().", "usage": "public void OAuthProvider::callTimestampNonceHandler ( void )", "url": "https://secure.php.net/manual/en/oauthprovider.calltimestampnoncehandler.php"}, {"name": "OAuthProvider::calltokenHandler", "synopsis": "Calls the registered token handler callback function, which is set with OAuthProvider::tokenHandler().", "usage": "public void OAuthProvider::calltokenHandler ( void )", "url": "https://secure.php.net/manual/en/oauthprovider.calltokenhandler.php"}, {"name": "OAuthProvider::checkOAuthRequest", "synopsis": "Checks an OAuth request.", "usage": "public void OAuthProvider::checkOAuthRequest ([ string $uri [, string $method ]] )", "url": "https://secure.php.net/manual/en/oauthprovider.checkoauthrequest.php"}, {"name": "OAuthProvider::__construct", "synopsis": "Initiates a new OAuthProvider object.", "usage": "public OAuthProvider::__construct ([ array $params_array ] )", "url": "https://secure.php.net/manual/en/oauthprovider.construct.php"}, {"name": "OAuthProvider::consumerHandler", "synopsis": "Sets the consumer handler callback, which will later be called with OAuthProvider::callConsumerHandler().", "usage": "public void OAuthProvider::consumerHandler ( callable $callback_function )", "url": "https://secure.php.net/manual/en/oauthprovider.consumerhandler.php"}, {"name": "OAuthProvider::generateToken", "synopsis": "Generates a string of pseudo-random bytes.", "usage": "final public static string OAuthProvider::generateToken ( int $size [, bool $strong = FALSE ] )", "url": "https://secure.php.net/manual/en/oauthprovider.generatetoken.php"}, {"name": "OAuthProvider::is2LeggedEndpoint", "synopsis": "The 2-legged flow, or request signing. It does not require a token.", "usage": "public void OAuthProvider::is2LeggedEndpoint ( mixed $params_array )", "url": "https://secure.php.net/manual/en/oauthprovider.is2leggedendpoint.php"}, {"name": "OAuthProvider::isRequestTokenEndpoint", "synopsis": "", "usage": "public void OAuthProvider::isRequestTokenEndpoint ( bool $will_issue_request_token )", "url": "https://secure.php.net/manual/en/oauthprovider.isrequesttokenendpoint.php"}, {"name": "OAuthProvider::removeRequiredParameter", "synopsis": "Removes a required parameter.", "usage": "final public bool OAuthProvider::removeRequiredParameter ( string $req_params )", "url": "https://secure.php.net/manual/en/oauthprovider.removerequiredparameter.php"}, {"name": "OAuthProvider::reportProblem", "synopsis": "Pass in a problem as an OAuthException, with possible problems listed in the OAuth constants section.", "usage": "final public static string OAuthProvider::reportProblem ( string $oauthexception [, bool $send_headers = TRUE ] )", "url": "https://secure.php.net/manual/en/oauthprovider.reportproblem.php"}, {"name": "OAuthProvider::setParam", "synopsis": "Sets a parameter.", "usage": "final public bool OAuthProvider::setParam ( string $param_key [, mixed $param_val ] )", "url": "https://secure.php.net/manual/en/oauthprovider.setparam.php"}, {"name": "OAuthProvider::setRequestTokenPath", "synopsis": "Sets the request tokens path.", "usage": "final public bool OAuthProvider::setRequestTokenPath ( string $path )", "url": "https://secure.php.net/manual/en/oauthprovider.setrequesttokenpath.php"}, {"name": "OAuthProvider::timestampNonceHandler", "synopsis": "Sets the timestamp nonce handler callback, which will later be called with OAuthProvider::callTimestampNonceHandler(). Errors related to timestamp/nonce are thrown to this callback.", "usage": "public void OAuthProvider::timestampNonceHandler ( callable $callback_function )", "url": "https://secure.php.net/manual/en/oauthprovider.timestampnoncehandler.php"}, {"name": "OAuthProvider::tokenHandler", "synopsis": "Sets the token handler callback, which will later be called with OAuthProvider::callTokenHandler().", "usage": "public void OAuthProvider::tokenHandler ( callable $callback_function )", "url": "https://secure.php.net/manual/en/oauthprovider.tokenhandler.php"}, {"name": "OCI-Collection::append", "synopsis": "Appends element to the end of the collection.", "usage": "bool OCI-Collection::append ( mixed $value )", "url": "https://secure.php.net/manual/en/oci-collection.append.php"}, {"name": "OCI-Collection::assign", "synopsis": "Assigns a value to the collection from another, previously created collection. Both collections must be created with oci_new_collection() prior to using them.", "usage": "bool OCI-Collection::assign ( OCI-Collection $from )", "url": "https://secure.php.net/manual/en/oci-collection.assign.php"}, {"name": "OCI-Collection::assignElem", "synopsis": "Assigns a value to the element with index index.", "usage": "bool OCI-Collection::assignElem ( int $index , mixed $value )", "url": "https://secure.php.net/manual/en/oci-collection.assignelem.php"}, {"name": "OCI-Collection::free", "synopsis": "Frees the resources associated with the collection object.", "usage": "bool OCI-Collection::free ( void )", "url": "https://secure.php.net/manual/en/oci-collection.free.php"}, {"name": "OCI-Collection::getElem", "synopsis": "Returns element's value with the index index (0-based).", "usage": "mixed OCI-Collection::getElem ( int $index )", "url": "https://secure.php.net/manual/en/oci-collection.getelem.php"}, {"name": "OCI-Collection::max", "synopsis": "Returns the maximum number of elements in the collection.", "usage": "int OCI-Collection::max ( void )", "url": "https://secure.php.net/manual/en/oci-collection.max.php"}, {"name": "OCI-Collection::size", "synopsis": "Returns the size of the collection.", "usage": "int OCI-Collection::size ( void )", "url": "https://secure.php.net/manual/en/oci-collection.size.php"}, {"name": "OCI-Collection::trim", "synopsis": "Trims num of elements from the end of the collection.", "usage": "bool OCI-Collection::trim ( int $num )", "url": "https://secure.php.net/manual/en/oci-collection.trim.php"}, {"name": "OCI-Lob::append", "synopsis": "Appends data from the large object to the end of another large object.", "usage": "bool OCI-Lob::append ( OCI-Lob $lob_from )", "url": "https://secure.php.net/manual/en/oci-lob.append.php"}, {"name": "OCI-Lob::close", "synopsis": "Closes descriptor of LOB or FILE. This function should be used only with OCI-Lob::writeTemporary.", "usage": "bool OCI-Lob::close ( void )", "url": "https://secure.php.net/manual/en/oci-lob.close.php"}, {"name": "OCI-Lob::eof", "synopsis": "Tells whether the internal pointer of large object is at the end of LOB.", "usage": "bool OCI-Lob::eof ( void )", "url": "https://secure.php.net/manual/en/oci-lob.eof.php"}, {"name": "OCI-Lob::erase", "synopsis": "Erases a specified portion of the internal LOB data starting at a specified offset. If called without parameters, it erases all LOB data.", "usage": "int OCI-Lob::erase ([ int $offset [, int $length ]] )", "url": "https://secure.php.net/manual/en/oci-lob.erase.php"}, {"name": "OCI-Lob::export", "synopsis": "Exports LOB contents to a file.", "usage": "bool OCI-Lob::export ( string $filename [, int $start [, int $length ]] )", "url": "https://secure.php.net/manual/en/oci-lob.export.php"}, {"name": "OCI-Lob::flush", "synopsis": "OCI-Lob::flush() actually writes data to the server.", "usage": "bool OCI-Lob::flush ([ int $flag ] )", "url": "https://secure.php.net/manual/en/oci-lob.flush.php"}, {"name": "OCI-Lob::free", "synopsis": "Frees resources associated with the descriptor, previously allocated with oci_new_descriptor().", "usage": "bool OCI-Lob::free ( void )", "url": "https://secure.php.net/manual/en/oci-lob.free.php"}, {"name": "OCI-Lob::getBuffering", "synopsis": "Tells whether the buffering for the large object is on or off.", "usage": "bool OCI-Lob::getBuffering ( void )", "url": "https://secure.php.net/manual/en/oci-lob.getbuffering.php"}, {"name": "OCI-Lob::import", "synopsis": "Writes data from the filename in to the current position of large object.", "usage": "bool OCI-Lob::import ( string $filename )", "url": "https://secure.php.net/manual/en/oci-lob.import.php"}, {"name": "OCI-Lob::load", "synopsis": "Returns large object's contents. As script execution is terminated when the memory_limit is reached, ensure that the LOB does not exceed this limit. In most cases it's recommended to use OCI-Lob::read instead.", "usage": "string OCI-Lob::load ( void )", "url": "https://secure.php.net/manual/en/oci-lob.load.php"}, {"name": "OCI-Lob::read", "synopsis": "Reads length bytes from the current position of LOB's internal pointer.", "usage": "string OCI-Lob::read ( int $length )", "url": "https://secure.php.net/manual/en/oci-lob.read.php"}, {"name": "OCI-Lob::rewind", "synopsis": "Sets the internal pointer to the beginning of the large object.", "usage": "bool OCI-Lob::rewind ( void )", "url": "https://secure.php.net/manual/en/oci-lob.rewind.php"}, {"name": "OCI-Lob::save", "synopsis": "Saves data to the large object.", "usage": "bool OCI-Lob::save ( string $data [, int $offset ] )", "url": "https://secure.php.net/manual/en/oci-lob.save.php"}, {"name": "OCI-Lob::seek", "synopsis": "Sets the internal pointer of the large object.", "usage": "bool OCI-Lob::seek ( int $offset [, int $whence = OCI_SEEK_SET ] )", "url": "https://secure.php.net/manual/en/oci-lob.seek.php"}, {"name": "OCI-Lob::setBuffering", "synopsis": "Sets the buffering for the large object, depending on the value of the on_off parameter.", "usage": "bool OCI-Lob::setBuffering ( bool $on_off )", "url": "https://secure.php.net/manual/en/oci-lob.setbuffering.php"}, {"name": "OCI-Lob::size", "synopsis": "Gets the size of the large object.", "usage": "int OCI-Lob::size ( void )", "url": "https://secure.php.net/manual/en/oci-lob.size.php"}, {"name": "OCI-Lob::tell", "synopsis": "Gets the current position of a LOB's internal pointer.", "usage": "int OCI-Lob::tell ( void )", "url": "https://secure.php.net/manual/en/oci-lob.tell.php"}, {"name": "OCI-Lob::truncate", "synopsis": "Truncates the LOB.", "usage": "bool OCI-Lob::truncate ([ int $length = 0 ] )", "url": "https://secure.php.net/manual/en/oci-lob.truncate.php"}, {"name": "OCI-Lob::write", "synopsis": "Writes data from the parameter data into the current position of LOB's internal pointer.", "usage": "int OCI-Lob::write ( string $data [, int $length ] )", "url": "https://secure.php.net/manual/en/oci-lob.write.php"}, {"name": "OCI-Lob::writeTemporary", "synopsis": "Creates a temporary large object and writes data to it.", "usage": "bool OCI-Lob::writeTemporary ( string $data [, int $lob_type = OCI_TEMP_CLOB ] )", "url": "https://secure.php.net/manual/en/oci-lob.writetemporary.php"}, {"name": "userCallbackFn", "synopsis": null, "usage": "int userCallbackFn ( resource $connection , int $event , int $type )", "url": "https://secure.php.net/manual/en/oci8.taf.php"}, {"name": "OuterIterator::getInnerIterator", "synopsis": "Returns the inner iterator for the current iterator entry.", "usage": "public Iterator OuterIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/outeriterator.getinneriterator.php"}, {"name": "ParentIterator::accept", "synopsis": "Determines if the current element has children.", "usage": "public bool ParentIterator::accept ( void )", "url": "https://secure.php.net/manual/en/parentiterator.accept.php"}, {"name": "ParentIterator::__construct", "synopsis": "Constructs a ParentIterator on an iterator.", "usage": "public ParentIterator::__construct ( RecursiveIterator $iterator )", "url": "https://secure.php.net/manual/en/parentiterator.construct.php"}, {"name": "ParentIterator::getChildren", "synopsis": "Get the inner iterator's children contained in a ParentIterator.", "usage": "public ParentIterator ParentIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/parentiterator.getchildren.php"}, {"name": "ParentIterator::hasChildren", "synopsis": "Check whether the inner iterator's current element has children.", "usage": "public bool ParentIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/parentiterator.haschildren.php"}, {"name": "ParentIterator::next", "synopsis": "Moves the iterator forward.", "usage": "public void ParentIterator::next ( void )", "url": "https://secure.php.net/manual/en/parentiterator.next.php"}, {"name": "ParentIterator::rewind", "synopsis": "Rewinds the iterator.", "usage": "public void ParentIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/parentiterator.rewind.php"}, {"name": "Parle\\Lexer::advance", "synopsis": "Processes the next rule and prepares the resulting token data.", "usage": "public void Parle\\Lexer::advance ( void )", "url": "https://secure.php.net/manual/en/parle-lexer.advance.php"}, {"name": "Parle\\Lexer::build", "synopsis": "Rules, previously added with Parle\\Lexer::push() are finalized. This method call has to be done after all the necessary rules was pushed. The rule set becomes read only. The lexing can begin.", "usage": "public void Parle\\Lexer::build ( void )", "url": "https://secure.php.net/manual/en/parle-lexer.build.php"}, {"name": "Parle\\Lexer::callout", "synopsis": "Define a callback to be invoked once lexer encounters a particular token.", "usage": "public void Parle\\Lexer::callout ( int $id , callable $callback )", "url": "https://secure.php.net/manual/en/parle-lexer.callout.php"}, {"name": "Parle\\Lexer::consume", "synopsis": "Consume the data for lexing.", "usage": "public void Parle\\Lexer::consume ( string $data )", "url": "https://secure.php.net/manual/en/parle-lexer.consume.php"}, {"name": "Parle\\Lexer::dump", "synopsis": "Dump the current state machine to stdout.", "usage": "public void Parle\\Lexer::dump ( void )", "url": "https://secure.php.net/manual/en/parle-lexer.dump.php"}, {"name": "Parle\\Lexer::getToken", "synopsis": "Retrieve the current token.", "usage": "public Parle\\Token Parle\\Lexer::getToken ( void )", "url": "https://secure.php.net/manual/en/parle-lexer.gettoken.php"}, {"name": "Parle\\Lexer::insertMacro", "synopsis": "Insert a regex macro, that can be later used as a shortcut and included in other regular expressions.", "usage": "public void Parle\\Lexer::insertMacro ( string $name , string $regex )", "url": "https://secure.php.net/manual/en/parle-lexer.insertmacro.php"}, {"name": "Parle\\Lexer::push", "synopsis": "Push a pattern for lexeme recognition.", "usage": "public void Parle\\Lexer::push ( string $regex , int $id )", "url": "https://secure.php.net/manual/en/parle-lexer.push.php"}, {"name": "Parle\\Lexer::reset", "synopsis": "Reset lexing optionally supplying the desired offset.", "usage": "public void Parle\\Lexer::reset ( int $pos )", "url": "https://secure.php.net/manual/en/parle-lexer.reset.php"}, {"name": "Parle\\Parser::advance", "synopsis": "Process next parser rule.", "usage": "public void Parle\\Parser::advance ( void )", "url": "https://secure.php.net/manual/en/parle-parser.advance.php"}, {"name": "Parle\\Parser::build", "synopsis": "Any tokens and grammar rules previously added are finalized. The rule set becomes readonly and the parser is ready to start.", "usage": "public void Parle\\Parser::build ( void )", "url": "https://secure.php.net/manual/en/parle-parser.build.php"}, {"name": "Parle\\Parser::consume", "synopsis": "Consume the data for parsing.", "usage": "public void Parle\\Parser::consume ( string $data , Parle\\Lexer $lexer )", "url": "https://secure.php.net/manual/en/parle-parser.consume.php"}, {"name": "Parle\\Parser::dump", "synopsis": "Dump the current grammar to stdout.", "usage": "public void Parle\\Parser::dump ( void )", "url": "https://secure.php.net/manual/en/parle-parser.dump.php"}, {"name": "Parle\\Parser::errorInfo", "synopsis": "Retrieve the error information in case Parle\\Parser::action() returned the error action.", "usage": "public Parle\\ErrorInfo Parle\\Parser::errorInfo ( void )", "url": "https://secure.php.net/manual/en/parle-parser.errorinfo.php"}, {"name": "Parle\\Parser::left", "synopsis": "Declare a terminal with left associativity.", "usage": "public void Parle\\Parser::left ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.left.php"}, {"name": "Parle\\Parser::nonassoc", "synopsis": "Declare a terminal, that cannot appear more than once in the row.", "usage": "public void Parle\\Parser::nonassoc ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.nonassoc.php"}, {"name": "Parle\\Parser::precedence", "synopsis": "Declares a precedence rule for a fictitious terminal symbol. This rule can be later used in the specific grammar rules.", "usage": "public void Parle\\Parser::precedence ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.precedence.php"}, {"name": "Parle\\Parser::push", "synopsis": "Push a grammar rule. The production id returned can be used later in the parsing process to identify the rule matched.", "usage": "public int Parle\\Parser::push ( string $name , string $rule )", "url": "https://secure.php.net/manual/en/parle-parser.push.php"}, {"name": "Parle\\Parser::reset", "synopsis": "Reset parser state using the given token id.", "usage": "public void Parle\\Parser::reset ([ int $tokenId ] )", "url": "https://secure.php.net/manual/en/parle-parser.reset.php"}, {"name": "Parle\\Parser::right", "synopsis": "Declare a terminal with right associativity.", "usage": "public void Parle\\Parser::right ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.right.php"}, {"name": "Parle\\Parser::sigil", "synopsis": "Retrieve a part of the match by a rule. This method is equivalent to the pseudo variable functionality in Bison.", "usage": "public string Parle\\Parser::sigil ([ int $idx ] )", "url": "https://secure.php.net/manual/en/parle-parser.sigil.php"}, {"name": "Parle\\Parser::token", "synopsis": "Declare a terminal to be used in the grammar.", "usage": "public void Parle\\Parser::token ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.token.php"}, {"name": "Parle\\Parser::tokenId", "synopsis": "Retrieve the id of the named token.", "usage": "public int Parle\\Parser::tokenId ( string $tok )", "url": "https://secure.php.net/manual/en/parle-parser.tokenid.php"}, {"name": "Parle\\Parser::trace", "synopsis": "Retrieve the current parser operation description. This can be especially useful for studying the parser and to optimize the grammar.", "usage": "public string Parle\\Parser::trace ( void )", "url": "https://secure.php.net/manual/en/parle-parser.trace.php"}, {"name": "Parle\\Parser::validate", "synopsis": "Validate an input string. The string is parsed internally, thus this method is useful for the quick input validation.", "usage": "public bool Parle\\Parser::validate ( string $data , Parle\\Lexer $lexer )", "url": "https://secure.php.net/manual/en/parle-parser.validate.php"}, {"name": "Parle\\RLexer::advance", "synopsis": "Processes the next rule and prepares the resulting token data.", "usage": "public void Parle\\RLexer::advance ( void )", "url": "https://secure.php.net/manual/en/parle-rlexer.advance.php"}, {"name": "Parle\\RLexer::build", "synopsis": "Rules, previously added with Parle\\RLexer::push() are finalized. This method call has to be done after all the necessary rules was pushed. The rule set becomes read only. The lexing can begin.", "usage": "public void Parle\\RLexer::build ( void )", "url": "https://secure.php.net/manual/en/parle-rlexer.build.php"}, {"name": "Parle\\RLexer::callout", "synopsis": "Define a callback to be invoked once lexer encounters a particular token.", "usage": "public void Parle\\RLexer::callout ( int $id , callable $callback )", "url": "https://secure.php.net/manual/en/parle-rlexer.callout.php"}, {"name": "Parle\\RLexer::consume", "synopsis": "Consume the data for lexing.", "usage": "public void Parle\\RLexer::consume ( string $data )", "url": "https://secure.php.net/manual/en/parle-rlexer.consume.php"}, {"name": "Parle\\RLexer::dump", "synopsis": "Dump the current state machine to stdout.", "usage": "public void Parle\\RLexer::dump ( void )", "url": "https://secure.php.net/manual/en/parle-rlexer.dump.php"}, {"name": "Parle\\RLexer::getToken", "synopsis": "Retrive the current token.", "usage": "public Parle\\Token Parle\\RLexer::getToken ( void )", "url": "https://secure.php.net/manual/en/parle-rlexer.gettoken.php"}, {"name": "Parle\\RLexer::insertMacro", "synopsis": "Insert a regex macro, that can be later used as a shortcut and included in other regular expressions.", "usage": "public void Parle\\RLexer::insertMacro ( string $name , string $regex )", "url": "https://secure.php.net/manual/en/parle-rlexer.insertmacro.php"}, {"name": "Parle\\RLexer::push", "synopsis": "Push a pattern for lexeme recognition.", "usage": "public void Parle\\RLexer::push ( string $regex , int $id )", "url": "https://secure.php.net/manual/en/parle-rlexer.push.php"}, {"name": "Parle\\RLexer::pushState", "synopsis": "This lexer type can have more than one state machine. This allows you to lex different tokens depending on context, thus allowing simple parsing to take place. Once a state pushed, it can be used with a suitable Parle\\RLexer::push() signature variant.", "usage": "public int Parle\\RLexer::pushState ( string $state )", "url": "https://secure.php.net/manual/en/parle-rlexer.pushstate.php"}, {"name": "Parle\\RLexer::reset", "synopsis": "Reset lexing optionally supplying the desired offset.", "usage": "public void Parle\\RLexer::reset ( int $pos )", "url": "https://secure.php.net/manual/en/parle-rlexer.reset.php"}, {"name": "Parle\\RParser::advance", "synopsis": "Prosess next parser rule.", "usage": "public void Parle\\RParser::advance ( void )", "url": "https://secure.php.net/manual/en/parle-rparser.advance.php"}, {"name": "Parle\\RParser::build", "synopsis": "Any tokens and grammar rules previously added are finalized. The rule set becomes readonly and the parser is ready to start.", "usage": "public void Parle\\RParser::build ( void )", "url": "https://secure.php.net/manual/en/parle-rparser.build.php"}, {"name": "Parle\\RParser::consume", "synopsis": "Consume the data for parsing.", "usage": "public void Parle\\RParser::consume ( string $data , Parle\\RLexer $rlexer )", "url": "https://secure.php.net/manual/en/parle-rparser.consume.php"}, {"name": "Parle\\RParser::dump", "synopsis": "Dump the current grammar to stdout.", "usage": "public void Parle\\RParser::dump ( void )", "url": "https://secure.php.net/manual/en/parle-rparser.dump.php"}, {"name": "Parle\\RParser::errorInfo", "synopsis": "Retrieve the error information in case Parle\\RParser::action() returned the error action.", "usage": "public Parle\\ErrorInfo Parle\\RParser::errorInfo ( void )", "url": "https://secure.php.net/manual/en/parle-rparser.errorinfo.php"}, {"name": "Parle\\RParser::left", "synopsis": "Declare a terminal with left associativity.", "usage": "public void Parle\\RParser::left ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.left.php"}, {"name": "Parle\\RParser::nonassoc", "synopsis": "Declare a terminal, that cannot appear more than once in the row.", "usage": "public void Parle\\RParser::nonassoc ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.nonassoc.php"}, {"name": "Parle\\RParser::precedence", "synopsis": "Declares a precedence rule for a fictious terminal symbol. This rule can be later used in the specific grammar rules.", "usage": "public void Parle\\RParser::precedence ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.precedence.php"}, {"name": "Parle\\RParser::push", "synopsis": "Push a grammar rule. The production id returned can be used later in the parsing process to identify the rule matched.", "usage": "public int Parle\\RParser::push ( string $name , string $rule )", "url": "https://secure.php.net/manual/en/parle-rparser.push.php"}, {"name": "Parle\\RParser::reset", "synopsis": "Reset parser state using the given token id.", "usage": "public void Parle\\RParser::reset ([ int $tokenId ] )", "url": "https://secure.php.net/manual/en/parle-rparser.reset.php"}, {"name": "Parle\\RParser::right", "synopsis": "Declare a terminal with right associativity.", "usage": "public void Parle\\RParser::right ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.right.php"}, {"name": "Parle\\RParser::sigil", "synopsis": "Retrieve a part of the match by a rule. This method is equivalent to the pseudo variable functionality in Bison.", "usage": "public string Parle\\RParser::sigil ([ int $idx ] )", "url": "https://secure.php.net/manual/en/parle-rparser.sigil.php"}, {"name": "Parle\\RParser::token", "synopsis": "Declare a terminal to be used in the grammar.", "usage": "public void Parle\\RParser::token ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.token.php"}, {"name": "Parle\\RParser::tokenId", "synopsis": "Retrieve the id of the named token.", "usage": "public int Parle\\RParser::tokenId ( string $tok )", "url": "https://secure.php.net/manual/en/parle-rparser.tokenid.php"}, {"name": "Parle\\RParser::trace", "synopsis": "Retrieve the current parser operation description. This can be especially useful to study the parser and to optimize the grammar.", "usage": "public string Parle\\RParser::trace ( void )", "url": "https://secure.php.net/manual/en/parle-rparser.trace.php"}, {"name": "Parle\\RParser::validate", "synopsis": "Validate an input string. The string is parsed internally, thus this method is useful for the quick input validation.", "usage": "public bool Parle\\RParser::validate ( string $data , Parle\\RLexer $lexer )", "url": "https://secure.php.net/manual/en/parle-rparser.validate.php"}, {"name": "Parle\\Stack::pop", "synopsis": "", "usage": "public void Parle\\Stack::pop ( void )", "url": "https://secure.php.net/manual/en/parle-stack.pop.php"}, {"name": "Parle\\Stack::push", "synopsis": "", "usage": "public void Parle\\Stack::push ( mixed $item )", "url": "https://secure.php.net/manual/en/parle-stack.push.php"}, {"name": "PDO::beginTransaction", "synopsis": "Turns off autocommit mode. While autocommit mode is turned off, changes made to the database via the PDO object instance are not committed until you end the transaction by calling PDO::commit(). Calling PDO::rollBack() will roll back all changes to the database and return the connection to autocommit mode.", "usage": "public bool PDO::beginTransaction ( void )", "url": "https://secure.php.net/manual/en/pdo.begintransaction.php"}, {"name": "PDO::commit", "synopsis": "Commits a transaction, returning the database connection to autocommit mode until the next call to PDO::beginTransaction() starts a new transaction.", "usage": "public bool PDO::commit ( void )", "url": "https://secure.php.net/manual/en/pdo.commit.php"}, {"name": "PDO::cubrid_schema", "synopsis": "This function is used to get the requested schema information from database. You have to designate table_name, if you want to get information on certain table, col_name, if you want to get information on certain column (can be used only with PDO::CUBRID_SCH_COL_PRIVILEGE).", "usage": "public array PDO::cubrid_schema ( int $schema_type [, string $table_name [, string $col_name ]] )", "url": "https://secure.php.net/manual/en/pdo.cubrid-schema.php"}, {"name": "PDO::errorCode", "synopsis": null, "usage": "public string PDO::errorCode ( void )", "url": "https://secure.php.net/manual/en/pdo.errorcode.php"}, {"name": "PDO::errorInfo", "synopsis": null, "usage": "public array PDO::errorInfo ( void )", "url": "https://secure.php.net/manual/en/pdo.errorinfo.php"}, {"name": "PDO::exec", "synopsis": "PDO::exec() executes an SQL statement in a single function call, returning the number of rows affected by the statement.", "usage": "public int PDO::exec ( string $statement )", "url": "https://secure.php.net/manual/en/pdo.exec.php"}, {"name": "PDO::getAttribute", "synopsis": "This function returns the value of a database connection attribute. To retrieve PDOStatement attributes, refer to PDOStatement::getAttribute().", "usage": "public mixed PDO::getAttribute ( int $attribute )", "url": "https://secure.php.net/manual/en/pdo.getattribute.php"}, {"name": "PDO::getAvailableDrivers", "synopsis": "This function returns all currently available PDO drivers which can be used in DSN parameter of PDO::__construct().", "usage": "public static array PDO::getAvailableDrivers ( void )", "url": "https://secure.php.net/manual/en/pdo.getavailabledrivers.php"}, {"name": "PDO::inTransaction", "synopsis": "Checks if a transaction is currently active within the driver. This method only works for database drivers that support transactions.", "usage": "public bool PDO::inTransaction ( void )", "url": "https://secure.php.net/manual/en/pdo.intransaction.php"}, {"name": "PDO::lastInsertId", "synopsis": "Returns the ID of the last inserted row, or the last value from a sequence object, depending on the underlying driver. For example, PDO_PGSQL requires you to specify the name of a sequence object for the name parameter.", "usage": "public string PDO::lastInsertId ([ string $name = NULL ] )", "url": "https://secure.php.net/manual/en/pdo.lastinsertid.php"}, {"name": "PDO::pgsqlCopyFromArray", "synopsis": "Copies data from rows array to table table_name using delimiter as fields delimiter and fields list", "usage": "public bool PDO::pgsqlCopyFromArray ( string $table_name , array $rows [, string $delimiter = '\\t' [, string $null_as = \"\\\\\\\\N\" [, string $fields ]]] )", "url": "https://secure.php.net/manual/en/pdo.pgsqlcopyfromarray.php"}, {"name": "PDO::pgsqlCopyFromFile", "synopsis": "Copies data from file specified by filename into table table_name using delimiter as fields delimiter and fields list", "usage": "public bool PDO::pgsqlCopyFromFile ( string $table_name , string $filename [, string $delimiter = '\\t' [, string $null_as = \"\\\\\\\\N\" [, string $fields ]]] )", "url": "https://secure.php.net/manual/en/pdo.pgsqlcopyfromfile.php"}, {"name": "PDO::pgsqlCopyToArray", "synopsis": "Copies data from table into array using delimiter as fields delimiter and fields list", "usage": "public array PDO::pgsqlCopyToArray ( string $table_name [, string $delimiter = '\\t' [, string $null_as = \"\\\\\\\\N\" [, string $fields ]]] )", "url": "https://secure.php.net/manual/en/pdo.pgsqlcopytoarray.php"}, {"name": "PDO::pgsqlCopyToFile", "synopsis": "Copies data from table into file specified by filename using delimiter as fields delimiter and fields list", "usage": "public bool PDO::pgsqlCopyToFile ( string $table_name , string $filename [, string $delimiter = '\\t' [, string $null_as = \"\\\\\\\\N\" [, string $fields ]]] )", "url": "https://secure.php.net/manual/en/pdo.pgsqlcopytofile.php"}, {"name": "PDO::pgsqlGetNotify", "synopsis": "Returns a result set representing a pending asynchronous notification.", "usage": "public array PDO::pgsqlGetNotify ([ int $result_type = PDO::FETCH_USE_DEFAULT [, int $ms_timeout = 0 ]] )", "url": "https://secure.php.net/manual/en/pdo.pgsqlgetnotify.php"}, {"name": "PDO::pgsqlGetPid", "synopsis": "Returns the server's PID.", "usage": "public int PDO::pgsqlGetPid ( void )", "url": "https://secure.php.net/manual/en/pdo.pgsqlgetpid.php"}, {"name": "PDO::pgsqlLOBCreate", "synopsis": "PDO::pgsqlLOBCreate() creates a large object and returns the OID of that object. You may then open a stream on the object using PDO::pgsqlLOBOpen() to read or write data to it. The OID can be stored in columns of type OID and be used to reference the large object, without causing the row to grow arbitrarily large. The large object will continue to live in the database until it is removed by calling PDO::pgsqlLOBUnlink().", "usage": "public string PDO::pgsqlLOBCreate ( void )", "url": "https://secure.php.net/manual/en/pdo.pgsqllobcreate.php"}, {"name": "PDO::pgsqlLOBOpen", "synopsis": "PDO::pgsqlLOBOpen() opens a stream to access the data referenced by oid. If mode is r, the stream is opened for reading, if mode is w, then the stream will be opened for writing. You can use all the usual filesystem functions, such as fread(), fwrite() and fgets() to manipulate the contents of the stream.", "usage": "public resource PDO::pgsqlLOBOpen ( string $oid [, string $mode = \"rb\" ] )", "url": "https://secure.php.net/manual/en/pdo.pgsqllobopen.php"}, {"name": "PDO::pgsqlLOBUnlink", "synopsis": "Deletes a large object from the database identified by OID.", "usage": "public bool PDO::pgsqlLOBUnlink ( string $oid )", "url": "https://secure.php.net/manual/en/pdo.pgsqllobunlink.php"}, {"name": "PDO::prepare", "synopsis": "Prepares an SQL statement to be executed by the PDOStatement::execute() method. The SQL statement can contain zero or more named (:name) or question mark (?) parameter markers for which real values will be substituted when the statement is executed. You cannot use both named and question mark parameter markers within the same SQL statement; pick one or the other parameter style. Use these parameters to bind any user-input, do not include the user-input directly in the query.", "usage": "public PDOStatement PDO::prepare ( string $statement [, array $driver_options = array() ] )", "url": "https://secure.php.net/manual/en/pdo.prepare.php"}, {"name": "PDO::query", "synopsis": "PDO::query() executes an SQL statement in a single function call, returning the result set (if any) returned by the statement as a PDOStatement object.", "usage": "public PDOStatement PDO::query ( string $statement )", "url": "https://secure.php.net/manual/en/pdo.query.php"}, {"name": "PDO::quote", "synopsis": "PDO::quote() places quotes around the input string (if required) and escapes special characters within the input string, using a quoting style appropriate to the underlying driver.", "usage": "public string PDO::quote ( string $string [, int $parameter_type = PDO::PARAM_STR ] )", "url": "https://secure.php.net/manual/en/pdo.quote.php"}, {"name": "PDO::rollBack", "synopsis": "Rolls back the current transaction, as initiated by PDO::beginTransaction().", "usage": "public bool PDO::rollBack ( void )", "url": "https://secure.php.net/manual/en/pdo.rollback.php"}, {"name": "PDO::setAttribute", "synopsis": "Sets an attribute on the database handle. Some of the available generic attributes are listed below; some drivers may make use of additional driver specific attributes.", "usage": "public bool PDO::setAttribute ( int $attribute , mixed $value )", "url": "https://secure.php.net/manual/en/pdo.setattribute.php"}, {"name": "PDO::sqliteCreateAggregate", "synopsis": null, "usage": "public bool PDO::sqliteCreateAggregate ( string $function_name , callable $step_func , callable $finalize_func [, int $num_args ] )", "url": "https://secure.php.net/manual/en/pdo.sqlitecreateaggregate.php"}, {"name": "PDO::sqliteCreateCollation", "synopsis": null, "usage": "public bool PDO::sqliteCreateCollation ( string $name , callable $callback )", "url": "https://secure.php.net/manual/en/pdo.sqlitecreatecollation.php"}, {"name": "PDO::sqliteCreateFunction", "synopsis": null, "usage": "public bool PDO::sqliteCreateFunction ( string $function_name , callable $callback [, int $num_args = -1 [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/pdo.sqlitecreatefunction.php"}, {"name": "PDOStatement::bindColumn", "synopsis": "PDOStatement::bindColumn() arranges to have a particular variable bound to a given column in the result-set from a query. Each call to PDOStatement::fetch() or PDOStatement::fetchAll() will update all the variables that are bound to columns.", "usage": "public bool PDOStatement::bindColumn ( mixed $column , mixed &$param [, int $type [, int $maxlen [, mixed $driverdata ]]] )", "url": "https://secure.php.net/manual/en/pdostatement.bindcolumn.php"}, {"name": "PDOStatement::bindParam", "synopsis": "Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement. Unlike PDOStatement::bindValue(), the variable is bound as a reference and will only be evaluated at the time that PDOStatement::execute() is called.", "usage": "public bool PDOStatement::bindParam ( mixed $parameter , mixed &$variable [, int $data_type = PDO::PARAM_STR [, int $length [, mixed $driver_options ]]] )", "url": "https://secure.php.net/manual/en/pdostatement.bindparam.php"}, {"name": "PDOStatement::bindValue", "synopsis": "Binds a value to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement.", "usage": "public bool PDOStatement::bindValue ( mixed $parameter , mixed $value [, int $data_type = PDO::PARAM_STR ] )", "url": "https://secure.php.net/manual/en/pdostatement.bindvalue.php"}, {"name": "PDOStatement::closeCursor", "synopsis": "PDOStatement::closeCursor() frees up the connection to the server so that other SQL statements may be issued, but leaves the statement in a state that enables it to be executed again.", "usage": "public bool PDOStatement::closeCursor ( void )", "url": "https://secure.php.net/manual/en/pdostatement.closecursor.php"}, {"name": "PDOStatement::columnCount", "synopsis": "Use PDOStatement::columnCount() to return the number of columns in the result set represented by the PDOStatement object.", "usage": "public int PDOStatement::columnCount ( void )", "url": "https://secure.php.net/manual/en/pdostatement.columncount.php"}, {"name": "PDOStatement::debugDumpParams", "synopsis": "Dumps the information contained by a prepared statement directly on the output. It will provide the SQL query in use, the number of parameters used (Params), the list of parameters with their key name or position, their name, their position in the query (if this is supported by the PDO driver, otherwise, it will be -1), type (param_type) as an integer, and a boolean value is_param.", "usage": "public void PDOStatement::debugDumpParams ( void )", "url": "https://secure.php.net/manual/en/pdostatement.debugdumpparams.php"}, {"name": "PDOStatement::errorCode", "synopsis": null, "usage": "public string PDOStatement::errorCode ( void )", "url": "https://secure.php.net/manual/en/pdostatement.errorcode.php"}, {"name": "PDOStatement::errorInfo", "synopsis": null, "usage": "public array PDOStatement::errorInfo ( void )", "url": "https://secure.php.net/manual/en/pdostatement.errorinfo.php"}, {"name": "PDOStatement::execute", "synopsis": "Execute the prepared statement. If the prepared statement included parameter markers, either:", "usage": "public bool PDOStatement::execute ([ array $input_parameters ] )", "url": "https://secure.php.net/manual/en/pdostatement.execute.php"}, {"name": "PDOStatement::fetch", "synopsis": "Fetches a row from a result set associated with a PDOStatement object. The fetch_style parameter determines how PDO returns the row.", "usage": "public mixed PDOStatement::fetch ([ int $fetch_style [, int $cursor_orientation = PDO::FETCH_ORI_NEXT [, int $cursor_offset = 0 ]]] )", "url": "https://secure.php.net/manual/en/pdostatement.fetch.php"}, {"name": "PDOStatement::fetchAll", "synopsis": null, "usage": "public array PDOStatement::fetchAll ([ int $fetch_style [, mixed $fetch_argument [, array $ctor_args = array() ]]] )", "url": "https://secure.php.net/manual/en/pdostatement.fetchall.php"}, {"name": "PDOStatement::fetchColumn", "synopsis": "Returns a single column from the next row of a result set or FALSE if there are no more rows.", "usage": "public mixed PDOStatement::fetchColumn ([ int $column_number = 0 ] )", "url": "https://secure.php.net/manual/en/pdostatement.fetchcolumn.php"}, {"name": "PDOStatement::fetchObject", "synopsis": "Fetches the next row and returns it as an object. This function is an alternative to PDOStatement::fetch() with PDO::FETCH_CLASS or PDO::FETCH_OBJ style.", "usage": "public mixed PDOStatement::fetchObject ([ string $class_name = \"stdClass\" [, array $ctor_args ]] )", "url": "https://secure.php.net/manual/en/pdostatement.fetchobject.php"}, {"name": "PDOStatement::getAttribute", "synopsis": "Gets an attribute of the statement. Currently, no generic attributes exist but only driver specific:", "usage": "public mixed PDOStatement::getAttribute ( int $attribute )", "url": "https://secure.php.net/manual/en/pdostatement.getattribute.php"}, {"name": "PDOStatement::getColumnMeta", "synopsis": "Retrieves the metadata for a 0-indexed column in a result set as an associative array.", "usage": "public array PDOStatement::getColumnMeta ( int $column )", "url": "https://secure.php.net/manual/en/pdostatement.getcolumnmeta.php"}, {"name": "PDOStatement::nextRowset", "synopsis": "Some database servers support stored procedures that return more than one rowset (also known as a result set). PDOStatement::nextRowset() enables you to access the second and subsequent rowsets associated with a PDOStatement object. Each rowset can have a different set of columns from the preceding rowset.", "usage": "public bool PDOStatement::nextRowset ( void )", "url": "https://secure.php.net/manual/en/pdostatement.nextrowset.php"}, {"name": "PDOStatement::rowCount", "synopsis": "PDOStatement::rowCount() returns the number of rows affected by the last DELETE, INSERT, or UPDATE statement executed by the corresponding PDOStatement object.", "usage": "public int PDOStatement::rowCount ( void )", "url": "https://secure.php.net/manual/en/pdostatement.rowcount.php"}, {"name": "PDOStatement::setAttribute", "synopsis": "Sets an attribute on the statement. Currently, no generic attributes are set but only driver specific:", "usage": "public bool PDOStatement::setAttribute ( int $attribute , mixed $value )", "url": "https://secure.php.net/manual/en/pdostatement.setattribute.php"}, {"name": "PDOStatement::setFetchMode", "synopsis": null, "usage": "public bool PDOStatement::setFetchMode ( int $mode )", "url": "https://secure.php.net/manual/en/pdostatement.setfetchmode.php"}, {"name": "Phar::addEmptyDir", "synopsis": null, "usage": "public void Phar::addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/phar.addemptydir.php"}, {"name": "Phar::addFile", "synopsis": null, "usage": "public void Phar::addFile ( string $file [, string $localname ] )", "url": "https://secure.php.net/manual/en/phar.addfile.php"}, {"name": "Phar::addFromString", "synopsis": null, "usage": "public void Phar::addFromString ( string $localname , string $contents )", "url": "https://secure.php.net/manual/en/phar.addfromstring.php"}, {"name": "Phar::apiVersion", "synopsis": "Return the API version of the phar file format that will be used when creating phars. The Phar extension supports reading API version 1.0.0 or newer. API version 1.1.0 is required for SHA-256 and SHA-512 hash, and API version 1.1.1 is required to store empty directories.", "usage": "final public static string Phar::apiVersion ( void )", "url": "https://secure.php.net/manual/en/phar.apiversion.php"}, {"name": "Phar::buildFromDirectory", "synopsis": null, "usage": "public array Phar::buildFromDirectory ( string $base_dir [, string $regex ] )", "url": "https://secure.php.net/manual/en/phar.buildfromdirectory.php"}, {"name": "Phar::buildFromIterator", "synopsis": null, "usage": "public array Phar::buildFromIterator ( Iterator $iter [, string $base_directory ] )", "url": "https://secure.php.net/manual/en/phar.buildfromiterator.php"}, {"name": "Phar::canCompress", "synopsis": "This should be used to test whether compression is possible prior to loading a phar archive containing compressed files.", "usage": "final public static bool Phar::canCompress ([ int $type = 0 ] )", "url": "https://secure.php.net/manual/en/phar.cancompress.php"}, {"name": "Phar::canWrite", "synopsis": "This static method determines whether write access has been disabled in the system php.ini via the phar.readonly ini variable.", "usage": "final public static bool Phar::canWrite ( void )", "url": "https://secure.php.net/manual/en/phar.canwrite.php"}, {"name": "Phar::compress", "synopsis": null, "usage": "public object Phar::compress ( int $compression [, string $extension ] )", "url": "https://secure.php.net/manual/en/phar.compress.php"}, {"name": "Phar::compressAllFilesBZIP2", "synopsis": null, "usage": "public bool Phar::compressAllFilesBZIP2 ( void )", "url": "https://secure.php.net/manual/en/phar.compressallfilesbzip2.php"}, {"name": "Phar::compressAllFilesGZ", "synopsis": null, "usage": "public bool Phar::compressAllFilesGZ ( void )", "url": "https://secure.php.net/manual/en/phar.compressallfilesgz.php"}, {"name": "Phar::compressFiles", "synopsis": null, "usage": "public void Phar::compressFiles ( int $compression )", "url": "https://secure.php.net/manual/en/phar.compressfiles.php"}, {"name": "Phar::__construct", "synopsis": null, "usage": "public Phar::__construct ( string $fname [, int $flags [, string $alias ]] )", "url": "https://secure.php.net/manual/en/phar.construct.php"}, {"name": "Phar::convertToData", "synopsis": "This method is used to convert an executable phar archive to either a tar or zip file. To make the tar or zip non-executable, the phar stub and phar alias files are removed from the newly created archive.", "usage": "public PharData Phar::convertToData ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )", "url": "https://secure.php.net/manual/en/phar.converttodata.php"}, {"name": "Phar::convertToExecutable", "synopsis": null, "usage": "public Phar Phar::convertToExecutable ([ int $format = 9021976 [, int $compression = 9021976 [, string $extension ]]] )", "url": "https://secure.php.net/manual/en/phar.converttoexecutable.php"}, {"name": "Phar::copy", "synopsis": null, "usage": "public bool Phar::copy ( string $oldfile , string $newfile )", "url": "https://secure.php.net/manual/en/phar.copy.php"}, {"name": "Phar::count", "synopsis": "", "usage": "public int Phar::count ( void )", "url": "https://secure.php.net/manual/en/phar.count.php"}, {"name": "Phar::createDefaultStub", "synopsis": "This method is intended for creation of phar-file format-specific stubs, and is not intended for use with tar- or zip-based phar archives.", "usage": "final public static string Phar::createDefaultStub ([ string $indexfile [, string $webindexfile ]] )", "url": "https://secure.php.net/manual/en/phar.createdefaultstub.php"}, {"name": "Phar::decompress", "synopsis": null, "usage": "public object Phar::decompress ([ string $extension ] )", "url": "https://secure.php.net/manual/en/phar.decompress.php"}, {"name": "Phar::decompressFiles", "synopsis": null, "usage": "public bool Phar::decompressFiles ( void )", "url": "https://secure.php.net/manual/en/phar.decompressfiles.php"}, {"name": "Phar::delete", "synopsis": null, "usage": "public bool Phar::delete ( string $entry )", "url": "https://secure.php.net/manual/en/phar.delete.php"}, {"name": "Phar::delMetadata", "synopsis": null, "usage": "public bool Phar::delMetadata ( void )", "url": "https://secure.php.net/manual/en/phar.delmetadata.php"}, {"name": "Phar::extractTo", "synopsis": "Extract all files within a phar archive to disk. Extracted files and directories preserve permissions as stored in the archive. The optional parameters allow optional control over which files are extracted, and whether existing files on disk can be overwritten. The second parameter files can be either the name of a file or directory to extract, or an array of names of files and directories to extract. By default, this method will not overwrite existing files, the third parameter can be set to true to enable overwriting of files. This method is similar to ZipArchive::extractTo().", "usage": "public bool Phar::extractTo ( string $pathto [, string|array $files [, bool $overwrite = FALSE ]] )", "url": "https://secure.php.net/manual/en/phar.extractto.php"}, {"name": "Phar::getAlias", "synopsis": "", "usage": "public string Phar::getAlias ( void )", "url": "https://secure.php.net/manual/en/phar.getalias.php"}, {"name": "Phar::getMetadata", "synopsis": "Retrieve archive meta-data. Meta-data can be any PHP variable that can be serialized.", "usage": "public mixed Phar::getMetadata ( void )", "url": "https://secure.php.net/manual/en/phar.getmetadata.php"}, {"name": "Phar::getModified", "synopsis": "This method can be used to determine whether a phar has either had an internal file deleted, or contents of a file changed in some way.", "usage": "public bool Phar::getModified ( void )", "url": "https://secure.php.net/manual/en/phar.getmodified.php"}, {"name": "Phar::getPath", "synopsis": "", "usage": "public string Phar::getPath ( void )", "url": "https://secure.php.net/manual/en/phar.getpath.php"}, {"name": "Phar::getSignature", "synopsis": "Returns the verification signature of a phar archive in a hexadecimal string.", "usage": "public array Phar::getSignature ( void )", "url": "https://secure.php.net/manual/en/phar.getsignature.php"}, {"name": "Phar::getStub", "synopsis": "Phar archives contain a bootstrap loader, or stub written in PHP that is executed when the archive is executed in PHP either via include:", "usage": "public string Phar::getStub ( void )", "url": "https://secure.php.net/manual/en/phar.getstub.php"}, {"name": "Phar::getSupportedCompression", "synopsis": "", "usage": "final public static array Phar::getSupportedCompression ( void )", "url": "https://secure.php.net/manual/en/phar.getsupportedcompression.php"}, {"name": "Phar::getSupportedSignatures", "synopsis": "Return array of supported signature types", "usage": "final public static array Phar::getSupportedSignatures ( void )", "url": "https://secure.php.net/manual/en/phar.getsupportedsignatures.php"}, {"name": "Phar::getVersion", "synopsis": "Returns the API version of an opened Phar archive.", "usage": "public string Phar::getVersion ( void )", "url": "https://secure.php.net/manual/en/phar.getversion.php"}, {"name": "Phar::hasMetadata", "synopsis": "Returns whether phar has global meta-data set.", "usage": "public bool Phar::hasMetadata ( void )", "url": "https://secure.php.net/manual/en/phar.hasmetadata.php"}, {"name": "Phar::interceptFileFuncs", "synopsis": "instructs phar to intercept fopen(), readfile(), file_get_contents(), opendir(), and all of the stat-related functions. If any of these functions is called from within a phar archive with a relative path, the call is modified to access a file within the phar archive. Absolute paths are assumed to be attempts to load external files from the filesystem.", "usage": "final public static void Phar::interceptFileFuncs ( void )", "url": "https://secure.php.net/manual/en/phar.interceptfilefuncs.php"}, {"name": "Phar::isBuffering", "synopsis": "This method can be used to determine whether a Phar will save changes to disk immediately, or whether a call to Phar::stopBuffering() is needed to enable saving changes.", "usage": "public bool Phar::isBuffering ( void )", "url": "https://secure.php.net/manual/en/phar.isbuffering.php"}, {"name": "Phar::isCompressed", "synopsis": null, "usage": "public mixed Phar::isCompressed ( void )", "url": "https://secure.php.net/manual/en/phar.iscompressed.php"}, {"name": "Phar::isFileFormat", "synopsis": "", "usage": "public bool Phar::isFileFormat ( int $format )", "url": "https://secure.php.net/manual/en/phar.isfileformat.php"}, {"name": "Phar::isValidPharFilename", "synopsis": "Returns whether the given filename is a valid phar filename that will be recognized as a phar archive by the phar extension. This can be used to test a name without having to instantiate a phar archive and catch the inevitable Exception that will be thrown if an invalid name is specified.", "usage": "final public static bool Phar::isValidPharFilename ( string $filename [, bool $executable = TRUE ] )", "url": "https://secure.php.net/manual/en/phar.isvalidpharfilename.php"}, {"name": "Phar::isWritable", "synopsis": "This method returns TRUE if phar.readonly is 0, and the actual phar archive on disk is not read-only.", "usage": "public bool Phar::isWritable ( void )", "url": "https://secure.php.net/manual/en/phar.iswritable.php"}, {"name": "Phar::loadPhar", "synopsis": "This can be used to read the contents of an external Phar archive. This is most useful for assigning an alias to a phar so that subsequent references to the phar can use the shorter alias, or for loading Phar archives that only contain data and are not intended for execution/inclusion in PHP scripts.", "usage": "final public static bool Phar::loadPhar ( string $filename [, string $alias ] )", "url": "https://secure.php.net/manual/en/phar.loadphar.php"}, {"name": "Phar::mapPhar", "synopsis": "This static method can only be used inside a Phar archive's loader stub in order to initialize the phar when it is directly executed, or when it is included in another script.", "usage": "final public static bool Phar::mapPhar ([ string $alias [, int $dataoffset = 0 ]] )", "url": "https://secure.php.net/manual/en/phar.mapphar.php"}, {"name": "Phar::mount", "synopsis": "Much like the unix file system concept of mounting external devices to paths within the directory tree, Phar::mount() allows referring to external files and directories as if they were inside of an archive. This allows powerful abstraction such as referring to external configuration files as if they were inside the archive.", "usage": "final public static void Phar::mount ( string $pharpath , string $externalpath )", "url": "https://secure.php.net/manual/en/phar.mount.php"}, {"name": "Phar::mungServer", "synopsis": "Phar::mungServer() should only be called within the stub of a phar archive.", "usage": "final public static void Phar::mungServer ( array $munglist )", "url": "https://secure.php.net/manual/en/phar.mungserver.php"}, {"name": "Phar::offsetExists", "synopsis": "This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a Phar archive using array access brackets.", "usage": "public bool Phar::offsetExists ( string $offset )", "url": "https://secure.php.net/manual/en/phar.offsetexists.php"}, {"name": "Phar::offsetGet", "synopsis": "This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a Phar archive using array access brackets. Phar::offsetGet() is used for retrieving files from a Phar archive.", "usage": "public int Phar::offsetGet ( string $offset )", "url": "https://secure.php.net/manual/en/phar.offsetget.php"}, {"name": "Phar::offsetSet", "synopsis": null, "usage": "public void Phar::offsetSet ( string $offset , string $value )", "url": "https://secure.php.net/manual/en/phar.offsetset.php"}, {"name": "Phar::offsetUnset", "synopsis": null, "usage": "public bool Phar::offsetUnset ( string $offset )", "url": "https://secure.php.net/manual/en/phar.offsetunset.php"}, {"name": "Phar::running", "synopsis": "Returns the full path to the running phar archive. This is intended for use much like the __FILE__ magic constant, and only has effect inside an executing phar archive.", "usage": "final public static string Phar::running ([ bool $retphar = TRUE ] )", "url": "https://secure.php.net/manual/en/phar.running.php"}, {"name": "Phar::setAlias", "synopsis": null, "usage": "public bool Phar::setAlias ( string $alias )", "url": "https://secure.php.net/manual/en/phar.setalias.php"}, {"name": "Phar::setDefaultStub", "synopsis": null, "usage": "public bool Phar::setDefaultStub ([ string $index [, string $webindex ]] )", "url": "https://secure.php.net/manual/en/phar.setdefaultstub.php"}, {"name": "Phar::setMetadata", "synopsis": null, "usage": "public void Phar::setMetadata ( mixed $metadata )", "url": "https://secure.php.net/manual/en/phar.setmetadata.php"}, {"name": "Phar::setSignatureAlgorithm", "synopsis": null, "usage": "public void Phar::setSignatureAlgorithm ( int $sigtype [, string $privatekey ] )", "url": "https://secure.php.net/manual/en/phar.setsignaturealgorithm.php"}, {"name": "Phar::setStub", "synopsis": null, "usage": "public bool Phar::setStub ( string $stub [, int $len = -1 ] )", "url": "https://secure.php.net/manual/en/phar.setstub.php"}, {"name": "Phar::startBuffering", "synopsis": "Although technically unnecessary, the Phar::startBuffering() method can provide a significant performance boost when creating or modifying a Phar archive with a large number of files. Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes. In this way, the archive will be up-to-date with the activity performed on it.", "usage": "public void Phar::startBuffering ( void )", "url": "https://secure.php.net/manual/en/phar.startbuffering.php"}, {"name": "Phar::stopBuffering", "synopsis": "Phar::stopBuffering() is used in conjunction with the Phar::startBuffering() method. Phar::startBuffering() can provide a significant performance boost when creating or modifying a Phar archive with a large number of files. Ordinarily, every time a file within a Phar archive is created or modified in any way, the entire Phar archive will be recreated with the changes. In this way, the archive will be up-to-date with the activity performed on it.", "usage": "public void Phar::stopBuffering ( void )", "url": "https://secure.php.net/manual/en/phar.stopbuffering.php"}, {"name": "Phar::uncompressAllFiles", "synopsis": null, "usage": "public bool Phar::uncompressAllFiles ( void )", "url": "https://secure.php.net/manual/en/phar.uncompressallfiles.php"}, {"name": "Phar::unlinkArchive", "synopsis": "Removes a phar archive from disk and memory.", "usage": "final public static bool Phar::unlinkArchive ( string $archive )", "url": "https://secure.php.net/manual/en/phar.unlinkarchive.php"}, {"name": "Phar::webPhar", "synopsis": "Phar::mapPhar() for web-based phars. This method parses $_SERVER['REQUEST_URI'] and routes a request from a web browser to an internal file within the phar archive. In essence, it simulates a web server, routing requests to the correct file, echoing the correct headers and parsing PHP files as needed. This powerful method is part of what makes it easy to convert an existing PHP application into a phar archive. Combined with Phar::mungServer() and Phar::interceptFileFuncs(), any web application can be used unmodified from a phar archive.", "usage": "final public static void Phar::webPhar ([ string $alias [, string $index = \"index.php\" [, string $f404 [, array $mimetypes [, callable $rewrites ]]]]] )", "url": "https://secure.php.net/manual/en/phar.webphar.php"}, {"name": "PharData::addEmptyDir", "synopsis": "With this method, an empty directory is created with path dirname. This method is similar to ZipArchive::addEmptyDir().", "usage": "void PharData::addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/phardata.addemptydir.php"}, {"name": "Phar::addFile", "synopsis": "With this method, any file or URL can be added to the tar/zip archive. If the optional second parameter localname is specified, the file will be stored in the archive with that name, otherwise the file parameter is used as the path to store within the archive. URLs must have a localname or an exception is thrown. This method is similar to ZipArchive::addFile().", "usage": "public void Phar::addFile ( string $file [, string $localname ] )", "url": "https://secure.php.net/manual/en/phardata.addfile.php"}, {"name": "PharData::addFromString", "synopsis": "With this method, any string can be added to the tar/zip archive. The file will be stored in the archive with localname as its path. This method is similar to ZipArchive::addFromString().", "usage": "void PharData::addFromString ( string $localname , string $contents )", "url": "https://secure.php.net/manual/en/phardata.addfromstring.php"}, {"name": "Phar::buildFromDirectory", "synopsis": "Populate a tar/zip archive from directory contents. The optional second parameter is a regular expression (pcre) that is used to exclude files. Any filename that matches the regular expression will be included, all others will be excluded. For more fine-grained control, use PharData::buildFromIterator().", "usage": "public array Phar::buildFromDirectory ( string $base_dir [, string $regex ] )", "url": "https://secure.php.net/manual/en/phardata.buildfromdirectory.php"}, {"name": "PharData::buildFromIterator", "synopsis": "Populate a tar or zip archive from an iterator. Two styles of iterators are supported, iterators that map the filename within the tar/zip to the name of a file on disk, and iterators like DirectoryIterator that return SplFileInfo objects. For iterators that return SplFileInfo objects, the second parameter is required.", "usage": "array PharData::buildFromIterator ( Iterator $iter [, string $base_directory ] )", "url": "https://secure.php.net/manual/en/phardata.buildfromiterator.php"}, {"name": "PharData::compress", "synopsis": "For tar archives, this method compresses the entire archive using gzip compression or bzip2 compression. The resulting file can be processed with the gunzip command/bunzip command, or accessed directly and transparently with the Phar extension.", "usage": "object PharData::compress ( int $compression [, string $extension ] )", "url": "https://secure.php.net/manual/en/phardata.compress.php"}, {"name": "PharData::compressFiles", "synopsis": "For tar-based archives, this method throws a BadMethodCallException, as compression of individual files within a tar archive is not supported by the file format. Use PharData::compress() to compress an entire tar-based archive.", "usage": "void PharData::compressFiles ( int $compression )", "url": "https://secure.php.net/manual/en/phardata.compressfiles.php"}, {"name": "PharData::__construct", "synopsis": null, "usage": "PharData::__construct ( string $fname [, int $flags [, string $alias [, int $format = Phar::TAR ]]] )", "url": "https://secure.php.net/manual/en/phardata.construct.php"}, {"name": "PharData::convertToData", "synopsis": "This method is used to convert a non-executable tar or zip archive to another non-executable format.", "usage": "PharData PharData::convertToData ([ int $format [, int $compression [, string $extension ]]] )", "url": "https://secure.php.net/manual/en/phardata.converttodata.php"}, {"name": "PharData::convertToExecutable", "synopsis": null, "usage": "Phar PharData::convertToExecutable ([ int $format [, int $compression [, string $extension ]]] )", "url": "https://secure.php.net/manual/en/phardata.converttoexecutable.php"}, {"name": "PharData::copy", "synopsis": "Copy a file internal to the tar/zip archive to another new file within the same archive. This is an object-oriented alternative to using copy() with the phar stream wrapper.", "usage": "bool PharData::copy ( string $oldfile , string $newfile )", "url": "https://secure.php.net/manual/en/phardata.copy.php"}, {"name": "PharData::decompress", "synopsis": "For tar-based archives, this method decompresses the entire archive.", "usage": "object PharData::decompress ([ string $extension ] )", "url": "https://secure.php.net/manual/en/phardata.decompress.php"}, {"name": "PharData::decompressFiles", "synopsis": null, "usage": "bool PharData::decompressFiles ( void )", "url": "https://secure.php.net/manual/en/phardata.decompressfiles.php"}, {"name": "PharData::delete", "synopsis": "Delete a file within an archive. This is the functional equivalent of calling unlink() on the stream wrapper equivalent, as shown in the example below.", "usage": "bool PharData::delete ( string $entry )", "url": "https://secure.php.net/manual/en/phardata.delete.php"}, {"name": "PharData::delMetadata", "synopsis": null, "usage": "bool PharData::delMetadata ( void )", "url": "https://secure.php.net/manual/en/phardata.delmetadata.php"}, {"name": "PharData::extractTo", "synopsis": "Extract all files within a tar/zip archive to disk. Extracted files and directories preserve permissions as stored in the archive. The optional parameters allow optional control over which files are extracted, and whether existing files on disk can be overwritten. The second parameter files can be either the name of a file or directory to extract, or an array of names of files and directories to extract. By default, this method will not overwrite existing files, the third parameter can be set to true to enable overwriting of files. This method is similar to ZipArchive::extractTo().", "usage": "bool PharData::extractTo ( string $pathto [, string|array $files [, bool $overwrite = FALSE ]] )", "url": "https://secure.php.net/manual/en/phardata.extractto.php"}, {"name": "PharData::isWritable", "synopsis": "This method returns TRUE if the tar/zip archive on disk is not read-only. Unlike Phar::isWritable(), data-only tar/zip archives can be modified even if phar.readonly is set to 1.", "usage": "bool PharData::isWritable ( void )", "url": "https://secure.php.net/manual/en/phardata.iswritable.php"}, {"name": "PharData::offsetSet", "synopsis": "This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a tar/zip archive using array access brackets. offsetSet is used for modifying an existing file, or adding a new file to a tar/zip archive.", "usage": "void PharData::offsetSet ( string $offset , string $value )", "url": "https://secure.php.net/manual/en/phardata.offsetset.php"}, {"name": "PharData::offsetUnset", "synopsis": "This is an implementation of the ArrayAccess interface allowing direct manipulation of the contents of a tar/zip archive using array access brackets. offsetUnset is used for deleting an existing file, and is called by the unset() language construct.", "usage": "bool PharData::offsetUnset ( string $offset )", "url": "https://secure.php.net/manual/en/phardata.offsetunset.php"}, {"name": "PharData::setAlias", "synopsis": "Non-executable tar/zip archives cannot have an alias, so this method simply throws an exception.", "usage": "bool PharData::setAlias ( string $alias )", "url": "https://secure.php.net/manual/en/phardata.setalias.php"}, {"name": "PharData::setDefaultStub", "synopsis": "Non-executable tar/zip archives cannot have a stub, so this method simply throws an exception.", "usage": "bool PharData::setDefaultStub ([ string $index [, string $webindex ]] )", "url": "https://secure.php.net/manual/en/phardata.setdefaultstub.php"}, {"name": "Phar::setMetadata", "synopsis": null, "usage": "public void Phar::setMetadata ( mixed $metadata )", "url": "https://secure.php.net/manual/en/phardata.setmetadata.php"}, {"name": "Phar::setSignatureAlgorithm", "synopsis": null, "usage": "public void Phar::setSignatureAlgorithm ( int $sigtype )", "url": "https://secure.php.net/manual/en/phardata.setsignaturealgorithm.php"}, {"name": "PharData::setStub", "synopsis": "Non-executable tar/zip archives cannot have a stub, so this method simply throws an exception.", "usage": "bool PharData::setStub ( string $stub [, int $len = -1 ] )", "url": "https://secure.php.net/manual/en/phardata.setstub.php"}, {"name": "PharFileInfo::chmod", "synopsis": "PharFileInfo::chmod() allows setting of the executable file permissions bit, as well as read-only bits. Writeable bits are ignored, and set at runtime based on the phar.readonly INI variable. As with all functionality that modifies the contents of a phar, the phar.readonly INI variable must be off in order to succeed if the file is within a Phar archive. Files within PharData archives do not have this restriction.", "usage": "public void PharFileInfo::chmod ( int $permissions )", "url": "https://secure.php.net/manual/en/pharfileinfo.chmod.php"}, {"name": "PharFileInfo::compress", "synopsis": "This method compresses the file inside the Phar archive using either bzip2 compression or zlib compression. The bzip2 or zlib extension must be enabled to take advantage of this feature. In addition, if the file is already compressed, the respective extension must be enabled in order to decompress the file. As with all functionality that modifies the contents of a phar, the phar.readonly INI variable must be off in order to succeed if the file is within a Phar archive. Files within PharData archives do not have this restriction.", "usage": "public bool PharFileInfo::compress ( int $compression )", "url": "https://secure.php.net/manual/en/pharfileinfo.compress.php"}, {"name": "PharFileInfo::__construct", "synopsis": "This should not be called directly. Instead, a PharFileInfo object is initialized by calling Phar::offsetGet() through array access.", "usage": "public PharFileInfo::__construct ( string $entry )", "url": "https://secure.php.net/manual/en/pharfileinfo.construct.php"}, {"name": "PharFileInfo::decompress", "synopsis": "This method decompresses the file inside the Phar archive. Depending on how the file is compressed, the bzip2 or zlib extensions must be enabled to take advantage of this feature. As with all functionality that modifies the contents of a phar, the phar.readonly INI variable must be off in order to succeed if the file is within a Phar archive. Files within PharData archives do not have this restriction.", "usage": "public bool PharFileInfo::decompress ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.decompress.php"}, {"name": "PharFileInfo::delMetadata", "synopsis": "Deletes the metadata of the entry, if any.", "usage": "public bool PharFileInfo::delMetadata ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.delmetadata.php"}, {"name": "PharFileInfo::getCompressedSize", "synopsis": "This returns the size of the file within the Phar archive. Uncompressed files will return the same value for getCompressedSize as they will with filesize()", "usage": "public int PharFileInfo::getCompressedSize ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.getcompressedsize.php"}, {"name": "PharFileInfo::getContent", "synopsis": "This function behaves like file_get_contents() but for Phar.", "usage": "public string PharFileInfo::getContent ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.getcontent.php"}, {"name": "PharFileInfo::getCRC32", "synopsis": "This returns the crc32() checksum of the file within the Phar archive.", "usage": "public int PharFileInfo::getCRC32 ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.getcrc32.php"}, {"name": "PharFileInfo::getMetadata", "synopsis": "Return meta-data that was saved in the Phar archive's manifest for this file.", "usage": "public mixed PharFileInfo::getMetadata ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.getmetadata.php"}, {"name": "PharFileInfo::getPharFlags", "synopsis": "This returns the flags set in the manifest for a Phar. This will always return 0 in the current implementation.", "usage": "public int PharFileInfo::getPharFlags ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.getpharflags.php"}, {"name": "PharFileInfo::hasMetadata", "synopsis": "Returns the metadata of a file within a phar archive.", "usage": "public bool PharFileInfo::hasMetadata ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.hasmetadata.php"}, {"name": "PharFileInfo::isCompressed", "synopsis": "This returns whether a file is compressed within a Phar archive with either Gzip or Bzip2 compression.", "usage": "public bool PharFileInfo::isCompressed ([ int $compression_type = 9021976 ] )", "url": "https://secure.php.net/manual/en/pharfileinfo.iscompressed.php"}, {"name": "PharFileInfo::isCompressedBZIP2", "synopsis": null, "usage": "public bool PharFileInfo::isCompressedBZIP2 ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.iscompressedbzip2.php"}, {"name": "PharFileInfo::isCompressedGZ", "synopsis": null, "usage": "public bool PharFileInfo::isCompressedGZ ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.iscompressedgz.php"}, {"name": "PharFileInfo::isCRCChecked", "synopsis": "This returns whether a file within a Phar archive has had its CRC verified.", "usage": "public bool PharFileInfo::isCRCChecked ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.iscrcchecked.php"}, {"name": "PharFileInfo::setCompressedBZIP2", "synopsis": null, "usage": "public bool PharFileInfo::setCompressedBZIP2 ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.setcompressedbzip2.php"}, {"name": "PharFileInfo::setCompressedGZ", "synopsis": null, "usage": "public bool PharFileInfo::setCompressedGZ ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.setcompressedgz.php"}, {"name": "PharFileInfo::setMetadata", "synopsis": "PharFileInfo::setMetadata() should only be used to store customized data in a file that cannot be represented with existing information stored with a file. Meta-data can significantly slow down the performance of loading a phar archive if the data is large, or if there are many files containing meta-data. It is important to note that file permissions are natively supported inside a phar; it is possible to set them with the PharFileInfo::chmod() method. As with all functionality that modifies the contents of a phar, the phar.readonly INI variable must be off in order to succeed if the file is within a Phar archive. Files within PharData archives do not have this restriction.", "usage": "public void PharFileInfo::setMetadata ( mixed $metadata )", "url": "https://secure.php.net/manual/en/pharfileinfo.setmetadata.php"}, {"name": "PharFileInfo::setUncompressed", "synopsis": null, "usage": "public bool PharFileInfo::setUncompressed ( void )", "url": "https://secure.php.net/manual/en/pharfileinfo.setuncompressed.php"}, {"name": "phdfs::connect", "synopsis": "", "usage": "public bool phdfs::connect ( void )", "url": "https://secure.php.net/manual/en/phdfs.connect.php"}, {"name": "phdfs::__construct", "synopsis": "", "usage": "public phdfs::__construct ( string $ip , string $port )", "url": "https://secure.php.net/manual/en/phdfs.construct.php"}, {"name": "phdfs::copy", "synopsis": "", "usage": "public bool phdfs::copy ( string $source_file , string $destination_file )", "url": "https://secure.php.net/manual/en/phdfs.copy.php"}, {"name": "phdfs::create_directory", "synopsis": "", "usage": "public bool phdfs::create_directory ( string $path )", "url": "https://secure.php.net/manual/en/phdfs.create-directory.php"}, {"name": "phdfs::delete", "synopsis": "", "usage": "public bool phdfs::delete ( string $path )", "url": "https://secure.php.net/manual/en/phdfs.delete.php"}, {"name": "phdfs::__destruct", "synopsis": "", "usage": "public void phdfs::__destruct ( void )", "url": "https://secure.php.net/manual/en/phdfs.destruct.php"}, {"name": "phdfs::disconnect", "synopsis": "", "usage": "public bool phdfs::disconnect ( void )", "url": "https://secure.php.net/manual/en/phdfs.disconnect.php"}, {"name": "phdfs::exists", "synopsis": "", "usage": "public bool phdfs::exists ( string $path )", "url": "https://secure.php.net/manual/en/phdfs.exists.php"}, {"name": "phdfs::file_info", "synopsis": "", "usage": "public array phdfs::file_info ( string $path )", "url": "https://secure.php.net/manual/en/phdfs.file-info.php"}, {"name": "phdfs::list_directory", "synopsis": "", "usage": "public array phdfs::list_directory ( string $path [, int $level = 0 ] )", "url": "https://secure.php.net/manual/en/phdfs.list-directory.php"}, {"name": "phdfs::read", "synopsis": "", "usage": "public string phdfs::read ( string $path [, int $length = 0 ] )", "url": "https://secure.php.net/manual/en/phdfs.read.php"}, {"name": "phdfs::rename", "synopsis": "", "usage": "public bool phdfs::rename ( string $old_path , string $new_path )", "url": "https://secure.php.net/manual/en/phdfs.rename.php"}, {"name": "phdfs::tell", "synopsis": "", "usage": "public int phdfs::tell ( string $path [, int $read_length = 1024 ] )", "url": "https://secure.php.net/manual/en/phdfs.tell.php"}, {"name": "phdfs::write", "synopsis": "", "usage": "public bool phdfs::write ( string $path , string $buffer [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/phdfs.write.php"}, {"name": "php_user_filter::filter", "synopsis": "This method is called whenever data is read from or written to the attached stream (such as with fread() or fwrite()).", "usage": "public int php_user_filter::filter ( resource $in , resource $out , int &$consumed , bool $closing )", "url": "https://secure.php.net/manual/en/php-user-filter.filter.php"}, {"name": "php_user_filter::onClose", "synopsis": "This method is called upon filter shutdown (typically, this is also during stream shutdown), and is executed after the flush method is called. If any resources were allocated or initialized during onCreate() this would be the time to destroy or dispose of them.", "usage": "public void php_user_filter::onClose ( void )", "url": "https://secure.php.net/manual/en/php-user-filter.onclose.php"}, {"name": "php_user_filter::onCreate", "synopsis": "This method is called during instantiation of the filter class object. If your filter allocates or initializes any other resources (such as a buffer), this is the place to do it.", "usage": "public bool php_user_filter::onCreate ( void )", "url": "https://secure.php.net/manual/en/php-user-filter.oncreate.php"}, {"name": "pht\\AtomicInteger::__construct", "synopsis": "Handles the creation of a new atomic integer.", "usage": "public AtomicInteger pht\\AtomicInteger::__construct ([ int $value = 0 ] )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.construct.php"}, {"name": "pht\\AtomicInteger::dec", "synopsis": "This method will decrement the atomic integer's value by one. Internally, the mutex lock of the atomic integer will be acquired, and so there is no need to manually acquire it (unless this operation needs to be grouped with other operations on the same atomic integer - see the example in pht\\AtomicInteger::lock() for a demonstration of this).", "usage": "public void pht\\AtomicInteger::dec ( void )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.dec.php"}, {"name": "pht\\AtomicInteger::get", "synopsis": "This method will fetch the current value of the atomic integer. Internally, the mutex lock of the atomic integer will be acquired, and so there is no need to manually acquire it (unless this operation needs to be grouped with other operations on the same atomic integer - see the example in pht\\AtomicInteger::lock() for a demonstration of this).", "usage": "public int pht\\AtomicInteger::get ( void )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.get.php"}, {"name": "pht\\AtomicInteger::inc", "synopsis": "This method will increment the atomic integer's value by one. Internally, the mutex lock of the atomic integer will be acquired, and so there is no need to manually acquire it (unless this operation needs to be grouped with other operations on the same atomic integer - see the example in pht\\AtomicInteger::lock() for a demonstration of this).", "usage": "public void pht\\AtomicInteger::inc ( void )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.inc.php"}, {"name": "pht\\AtomicInteger::lock", "synopsis": "This method will acquire the mutex lock associated with the atomic integer. The mutex lock only needs to be acquired when needing to group together multiple operations.", "usage": "public void pht\\AtomicInteger::lock ( void )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.lock.php"}, {"name": "pht\\AtomicInteger::set", "synopsis": "This method will set the value of the atomic integer. Internally, the mutex lock of the atomic integer will be acquired, and so there is no need to manually acquire it (unless this operation needs to be grouped with other operations on the same atomic integer - see the example in pht\\AtomicInteger::lock() for a demonstration of this).", "usage": "public void pht\\AtomicInteger::set ( int $value )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.set.php"}, {"name": "pht\\AtomicInteger::unlock", "synopsis": "This method will release the mutex lock associated with the atomic integer.", "usage": "public void pht\\AtomicInteger::unlock ( void )", "url": "https://secure.php.net/manual/en/pht-atomicinteger.unlock.php"}, {"name": "pht\\HashTable::lock", "synopsis": "This method will acquire the mutex lock associated with the hash table. The mutex lock should always be acquired when manipulating the hash table if it is being used by multiple threads.", "usage": "public void pht\\HashTable::lock ( void )", "url": "https://secure.php.net/manual/en/pht-hashtable.lock.php"}, {"name": "pht\\HashTable::size", "synopsis": "Returns the current size of the hash table. This operation requires a pht\\HashTable's mutex lock to be held if it is being used by multiple threads.", "usage": "public int pht\\HashTable::size ( void )", "url": "https://secure.php.net/manual/en/pht-hashtable.size.php"}, {"name": "pht\\HashTable::unlock", "synopsis": "This method will release the mutex lock associated with the hash table.", "usage": "public void pht\\HashTable::unlock ( void )", "url": "https://secure.php.net/manual/en/pht-hashtable.unlock.php"}, {"name": "pht\\Queue::front", "synopsis": "This method will remove a value from the front of the queue (in constant time). Attempting to return the front value from an empty queue will result in an Error exception.", "usage": "public mixed pht\\Queue::front ( void )", "url": "https://secure.php.net/manual/en/pht-queue.front.php"}, {"name": "pht\\Queue::lock", "synopsis": "This method will acquire the mutex lock associated with the queue. The mutex lock should always be acquired when manipulating the queue if it is being used by multiple threads.", "usage": "public void pht\\Queue::lock ( void )", "url": "https://secure.php.net/manual/en/pht-queue.lock.php"}, {"name": "pht\\Queue::pop", "synopsis": "This method will remove a value from the front of the queue (in constant time). Attempting to pop a value from an empty queue will result in an Error exception.", "usage": "public mixed pht\\Queue::pop ( void )", "url": "https://secure.php.net/manual/en/pht-queue.pop.php"}, {"name": "pht\\Queue::push", "synopsis": "This method will add a value onto the queue.", "usage": "public void pht\\Queue::push ( mixed $value )", "url": "https://secure.php.net/manual/en/pht-queue.push.php"}, {"name": "pht\\Queue::size", "synopsis": "Returns the current size of the queue. This operation requires a pht\\Queue's mutex lock to be held if it is being used by multiple threads.", "usage": "public int pht\\Queue::size ( void )", "url": "https://secure.php.net/manual/en/pht-queue.size.php"}, {"name": "pht\\Queue::unlock", "synopsis": "This method will release the mutex lock associated with the queue.", "usage": "public void pht\\Queue::unlock ( void )", "url": "https://secure.php.net/manual/en/pht-queue.unlock.php"}, {"name": "pht\\Runnable::run", "synopsis": "This method acts as the entry point of execution for a threaded class. It must be defined by all classes that will be threaded.", "usage": "public void pht\\Runnable::run ( void )", "url": "https://secure.php.net/manual/en/pht-runnable.run.php"}, {"name": "pht\\Thread::addClassTask", "synopsis": "Adds a new class task to a pht\\Threads internal task queue.", "usage": "public void pht\\Thread::addClassTask ( string $className [, mixed $...ctorArgs ] )", "url": "https://secure.php.net/manual/en/pht-thread.addClassTask.php"}, {"name": "pht\\Thread::addFileTask", "synopsis": "Adds a new file task to a pht\\Threads internal task queue.", "usage": "public void pht\\Thread::addFileTask ( string $fileName [, mixed $...globals ] )", "url": "https://secure.php.net/manual/en/pht-thread.addFileTask.php"}, {"name": "pht\\Thread::addFunctionTask", "synopsis": "Adds a new function task to a pht\\Threads internal task queue.", "usage": "public void pht\\Thread::addFunctionTask ( callable $func [, mixed $...funcArgs ] )", "url": "https://secure.php.net/manual/en/pht-thread.addFunctionTask.php"}, {"name": "pht\\Thread::join", "synopsis": "This method will join the spawned thread (though it will first wait for that thread's internal task queue to finish). As a matter of good practice, threads should always be joined. Not joining a thread may lead to undefined behaviour.", "usage": "public void pht\\Thread::join ( void )", "url": "https://secure.php.net/manual/en/pht-thread.join.php"}, {"name": "pht\\Thread::start", "synopsis": "This will cause a new thread to be spawned for the associated pht\\Thread object, where its internal task queue will begin to be processed.", "usage": "public void pht\\Thread::start ( void )", "url": "https://secure.php.net/manual/en/pht-thread.start.php"}, {"name": "pht\\Thread::taskCount", "synopsis": "Retrieves the current task count of a pht\\Thread.", "usage": "public int pht\\Thread::taskCount ( void )", "url": "https://secure.php.net/manual/en/pht-thread.taskCount.php"}, {"name": "pht\\Threaded::lock", "synopsis": "This method will acquire the mutex lock associated with the given class (either a pht\\HashTable, pht\\Queue, pht\\Vector, or pht\\AtomicInteger).", "usage": "public void pht\\Threaded::lock ( void )", "url": "https://secure.php.net/manual/en/pht-threaded.lock.php"}, {"name": "pht\\Threaded::unlock", "synopsis": "This method will unlock the mutex lock associated with the given class (either a pht\\HashTable, pht\\Queue, pht\\Vector, or pht\\AtomicInteger).", "usage": "public void pht\\Threaded::unlock ( void )", "url": "https://secure.php.net/manual/en/pht-threaded.unlock.php"}, {"name": "pht\\Vector::__construct", "synopsis": "Handles the creation of a new vector.", "usage": "public Vector pht\\Vector::__construct ([ int $size = 0 [, mixed $value = 0 ]] )", "url": "https://secure.php.net/manual/en/pht-vector.construct.php"}, {"name": "pht\\Vector::deleteAt", "synopsis": "This method deletes a value at the specified offset in the vector (in linear time).", "usage": "public void pht\\Vector::deleteAt ( int $offset )", "url": "https://secure.php.net/manual/en/pht-vector.deleteAt.php"}, {"name": "pht\\Vector::insertAt", "synopsis": "This method inserts a value at the specified offset into the vector (in linear time). The vector will automatically be resized if it is not large enough.", "usage": "public void pht\\Vector::insertAt ( mixed $value , int $offset )", "url": "https://secure.php.net/manual/en/pht-vector.insertAt.php"}, {"name": "pht\\Vector::lock", "synopsis": "This method will acquire the mutex lock associated with the vector. The mutex lock should always be acquired when manipulating the vector if it is being used by multiple threads.", "usage": "public void pht\\Vector::lock ( void )", "url": "https://secure.php.net/manual/en/pht-vector.lock.php"}, {"name": "pht\\Vector::pop", "synopsis": "This method pops a value from the end of a vector (in constant time). Popping a value from an empty vector will result in an Error exception.", "usage": "public mixed pht\\Vector::pop ( void )", "url": "https://secure.php.net/manual/en/pht-vector.pop.php"}, {"name": "pht\\Vector::push", "synopsis": "This method pushes a value onto the end of a vector (in constant time). The vector will automatically be resized if it is not large enough.", "usage": "public void pht\\Vector::push ( mixed $value )", "url": "https://secure.php.net/manual/en/pht-vector.push.php"}, {"name": "pht\\Vector::resize", "synopsis": "Resizes the vector. If it is enlarged, then the value parameter will be used to fill in the new slots. If it is made smaller, then the end values will be truncated.", "usage": "public void pht\\Vector::resize ( int $size [, mixed $value = 0 ] )", "url": "https://secure.php.net/manual/en/pht-vector.resize.php"}, {"name": "pht\\Vector::shift", "synopsis": "This method shifts a value from the front of a vector (in linear time). Shifting a value from an empty vector will result in an Error exception.", "usage": "public mixed pht\\Vector::shift ( void )", "url": "https://secure.php.net/manual/en/pht-vector.shift.php"}, {"name": "pht\\Vector::size", "synopsis": "Returns the current size of the vector. This operation requires a pht\\Vector's mutex lock to be held if it is being used by multiple threads.", "usage": "public int pht\\Vector::size ( void )", "url": "https://secure.php.net/manual/en/pht-vector.size.php"}, {"name": "pht\\Vector::unlock", "synopsis": "This method will release the mutex lock associated with the vector.", "usage": "public void pht\\Vector::unlock ( void )", "url": "https://secure.php.net/manual/en/pht-vector.unlock.php"}, {"name": "pht\\Vector::unshift", "synopsis": "This method unshifts a value to the front of a vector (in linear time). The vector will automatically be resized if it is not large enough.", "usage": "public void pht\\Vector::unshift ( mixed $value )", "url": "https://secure.php.net/manual/en/pht-vector.unshift.php"}, {"name": "pht\\Vector::updateAt", "synopsis": "This method updates a value at the specified offset in the vector (in linear time). The vector will automatically be resized if it is not large enough.", "usage": "public void pht\\Vector::updateAt ( mixed $value , int $offset )", "url": "https://secure.php.net/manual/en/pht-vector.updateAt.php"}, {"name": "Pool::collect", "synopsis": "Allows the pool to collect references determined to be garbage by the optionally given collector.", "usage": "public int Pool::collect ([ Callable $collector ] )", "url": "https://secure.php.net/manual/en/pool.collect.php"}, {"name": "Pool::__construct", "synopsis": "Construct a new pool of workers. Pools lazily create their threads, which means new threads will only be spawned when they are required to execute tasks.", "usage": "public Pool Pool::__construct ( int $size [, string $class [, array $ctor ]] )", "url": "https://secure.php.net/manual/en/pool.construct.php"}, {"name": "Pool::resize", "synopsis": "Resize the Pool", "usage": "public void Pool::resize ( int $size )", "url": "https://secure.php.net/manual/en/pool.resize.php"}, {"name": "Pool::shutdown", "synopsis": "Shuts down all of the workers in the pool. This will block until all submitted tasks have been executed.", "usage": "public void Pool::shutdown ( void )", "url": "https://secure.php.net/manual/en/pool.shutdown.php"}, {"name": "Pool::submit", "synopsis": "Submit the task to the next Worker in the Pool", "usage": "public int Pool::submit ( Threaded $task )", "url": "https://secure.php.net/manual/en/pool.submit.php"}, {"name": "Pool::submitTo", "synopsis": "Submit a task to the specified worker in the pool. The workers are indexed from 0, and will only exist if the pool has needed to create them (since threads are lazily spawned).", "usage": "public int Pool::submitTo ( int $worker , Threaded $task )", "url": "https://secure.php.net/manual/en/pool.submitTo.php"}, {"name": "QuickHashIntHash::add", "synopsis": "This method adds a new entry to the hash, and returns whether the entry was added. Entries are by default always added unless QuickHashIntHash::CHECK_FOR_DUPES has been passed when the hash was created.", "usage": "public bool QuickHashIntHash::add ( int $key [, int $value ] )", "url": "https://secure.php.net/manual/en/quickhashinthash.add.php"}, {"name": "QuickHashIntHash::__construct", "synopsis": "This constructor creates a new QuickHashIntHash. The size is the amount of bucket lists to create. The more lists there are, the less collisions you will have. Options are also supported.", "usage": "public QuickHashIntHash::__construct ( int $size [, int $options ] )", "url": "https://secure.php.net/manual/en/quickhashinthash.construct.php"}, {"name": "QuickHashIntHash::delete", "synopsis": "This method deletes an entry from the hash, and returns whether the entry was deleted or not. Associated memory structures will not be freed immediately, but rather when the hash itself is freed.", "usage": "public bool QuickHashIntHash::delete ( int $key )", "url": "https://secure.php.net/manual/en/quickhashinthash.delete.php"}, {"name": "QuickHashIntHash::exists", "synopsis": "This method checks whether an entry with the provided key exists in the hash.", "usage": "public bool QuickHashIntHash::exists ( int $key )", "url": "https://secure.php.net/manual/en/quickhashinthash.exists.php"}, {"name": "QuickHashIntHash::get", "synopsis": "This method retrieves a value from the hash by its key.", "usage": "public int QuickHashIntHash::get ( int $key )", "url": "https://secure.php.net/manual/en/quickhashinthash.get.php"}, {"name": "QuickHashIntHash::getSize", "synopsis": "Returns the number of elements in the hash.", "usage": "public int QuickHashIntHash::getSize ( void )", "url": "https://secure.php.net/manual/en/quickhashinthash.getsize.php"}, {"name": "QuickHashIntHash::loadFromFile", "synopsis": "This factory method creates a new hash from a definition file on disk. The file format consists of a signature 'QH\\0x11\\0', the number of elements as a 32 bit signed integer in system Endianness, followed by 32 bit signed integers packed together in the Endianness that the system that the code runs on uses. For each hash element there are two 32 bit signed integers stored. The first of each element is the key, and the second is the value belonging to the key. An example could be:", "usage": "public static QuickHashIntHash QuickHashIntHash::loadFromFile ( string $filename [, int $options ] )", "url": "https://secure.php.net/manual/en/quickhashinthash.loadfromfile.php"}, {"name": "QuickHashIntHash::loadFromString", "synopsis": "This factory method creates a new hash from a definition in a string. The file format consists of 32 bit signed integers packed together in the Endianness that the system that the code runs on uses. For each element there are two 32 bit signed integers stored. The first of each element is the key, and the second is the value belonging to the key.", "usage": "public static QuickHashIntHash QuickHashIntHash::loadFromString ( string $contents [, int $options ] )", "url": "https://secure.php.net/manual/en/quickhashinthash.loadfromstring.php"}, {"name": "QuickHashIntHash::saveToFile", "synopsis": "This method stores an existing hash to a file on disk, in the same format that loadFromFile() can read.", "usage": "public void QuickHashIntHash::saveToFile ( string $filename )", "url": "https://secure.php.net/manual/en/quickhashinthash.savetofile.php"}, {"name": "QuickHashIntHash::saveToString", "synopsis": "This method returns a serialized version of the hash in the same format that loadFromString() can read.", "usage": "public string QuickHashIntHash::saveToString ( void )", "url": "https://secure.php.net/manual/en/quickhashinthash.savetostring.php"}, {"name": "QuickHashIntHash::set", "synopsis": "This method tries to update an entry with a new value. In case the entry did not yet exist, it will instead add a new entry. It returns whether the entry was added or update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashIntHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public bool QuickHashIntHash::set ( int $key , int $value )", "url": "https://secure.php.net/manual/en/quickhashinthash.set.php"}, {"name": "QuickHashIntHash::update", "synopsis": "This method updates an entry with a new value, and returns whether the entry was update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashIntHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public bool QuickHashIntHash::update ( int $key , int $value )", "url": "https://secure.php.net/manual/en/quickhashinthash.update.php"}, {"name": "QuickHashIntSet::add", "synopsis": "This method adds a new entry to the set, and returns whether the entry was added. Entries are by default always added unless QuickHashIntSet::CHECK_FOR_DUPES has been passed when the set was created.", "usage": "public bool QuickHashIntSet::add ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintset.add.php"}, {"name": "QuickHashIntSet::__construct", "synopsis": "This constructor creates a new QuickHashIntSet. The size is the amount of bucket lists to create. The more lists there are, the less collisions you will have. Options are also supported.", "usage": "public QuickHashIntSet::__construct ( int $size [, int $options ] )", "url": "https://secure.php.net/manual/en/quickhashintset.construct.php"}, {"name": "QuickHashIntSet::delete", "synopsis": "This method deletes an entry from the set, and returns whether the entry was deleted or not. Associated memory structures will not be freed immediately, but rather when the set itself is freed.", "usage": "public bool QuickHashIntSet::delete ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintset.delete.php"}, {"name": "QuickHashIntSet::exists", "synopsis": "This method checks whether an entry with the provided key exists in the set.", "usage": "public bool QuickHashIntSet::exists ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintset.exists.php"}, {"name": "QuickHashIntSet::getSize", "synopsis": "Returns the number of elements in the set.", "usage": "publicint QuickHashIntSet::getSize ( void )", "url": "https://secure.php.net/manual/en/quickhashintset.getsize.php"}, {"name": "QuickHashIntSet::loadFromFile", "synopsis": "This factory method creates a new set from a definition file on disk. The file format consists of 32 bit signed integers packed together in the Endianness that the system that the code runs on uses.", "usage": "public static QuickHashIntSet QuickHashIntSet::loadFromFile ( string $filename [, int $size [, int $options ]] )", "url": "https://secure.php.net/manual/en/quickhashintset.loadfromfile.php"}, {"name": "QuickHashIntSet::loadFromString", "synopsis": "This factory method creates a new set from a definition in a string. The file format consists of 32 bit signed integers packed together in the Endianness that the system that the code runs on uses.", "usage": "public static QuickHashIntSet QuickHashIntSet::loadFromString ( string $contents [, int $size [, int $options ]] )", "url": "https://secure.php.net/manual/en/quickhashintset.loadfromstring.php"}, {"name": "QuickHashIntSet::saveToFile", "synopsis": "This method stores an existing set to a file on disk, in the same format that loadFromFile() can read.", "usage": "public void QuickHashIntSet::saveToFile ( string $filename )", "url": "https://secure.php.net/manual/en/quickhashintset.savetofile.php"}, {"name": "QuickHashIntSet::saveToString", "synopsis": "This method returns a serialized version of the set in the same format that loadFromString() can read.", "usage": "public string QuickHashIntSet::saveToString ( void )", "url": "https://secure.php.net/manual/en/quickhashintset.savetostring.php"}, {"name": "QuickHashIntStringHash::add", "synopsis": "This method adds a new entry to the hash, and returns whether the entry was added. Entries are by default always added unless QuickHashIntStringHash::CHECK_FOR_DUPES has been passed when the hash was created.", "usage": "public bool QuickHashIntStringHash::add ( int $key , string $value )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.add.php"}, {"name": "QuickHashIntStringHash::__construct", "synopsis": "This constructor creates a new QuickHashIntStringHash. The size is the amount of bucket lists to create. The more lists there are, the less collisions you will have. Options are also supported.", "usage": "public QuickHashIntStringHash::__construct ( int $size [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.construct.php"}, {"name": "QuickHashIntStringHash::delete", "synopsis": "This method deletes an entry from the hash, and returns whether the entry was deleted or not. Associated memory structures will not be freed immediately, but rather when the hash itself is freed.", "usage": "public bool QuickHashIntStringHash::delete ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.delete.php"}, {"name": "QuickHashIntStringHash::exists", "synopsis": "This method checks whether an entry with the provided key exists in the hash.", "usage": "public bool QuickHashIntStringHash::exists ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.exists.php"}, {"name": "QuickHashIntStringHash::get", "synopsis": "This method retrieves a value from the hash by its key.", "usage": "public mixed QuickHashIntStringHash::get ( int $key )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.get.php"}, {"name": "QuickHashIntStringHash::getSize", "synopsis": "Returns the number of elements in the hash.", "usage": "public int QuickHashIntStringHash::getSize ( void )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.getsize.php"}, {"name": "QuickHashIntStringHash::loadFromFile", "synopsis": "This factory method creates a new hash from a definition file on disk. The file format consists of a signature 'QH\\0x12\\0', the number of elements as a 32 bit signed integer in system Endianness, an unsigned 32 bit integer containing the number of element data to follow in characters. This element data contains all the strings. After the header and the strings, the elements follow in pairs of two unsigned 32 bit integers where the first one is the key, and the second one the index in the element data string. An example could be:", "usage": "public static QuickHashIntStringHash QuickHashIntStringHash::loadFromFile ( string $filename [, int $size = 0 [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.loadfromfile.php"}, {"name": "QuickHashIntStringHash::loadFromString", "synopsis": "This factory method creates a new hash from a definition in a string. The format is the same as the one used in \"loadFromFile\".", "usage": "public static QuickHashIntStringHash QuickHashIntStringHash::loadFromString ( string $contents [, int $size = 0 [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.loadfromstring.php"}, {"name": "QuickHashIntStringHash::saveToFile", "synopsis": "This method stores an existing hash to a file on disk, in the same format that loadFromFile() can read.", "usage": "public void QuickHashIntStringHash::saveToFile ( string $filename )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.savetofile.php"}, {"name": "QuickHashIntStringHash::saveToString", "synopsis": "This method returns a serialized version of the hash in the same format that loadFromString() can read.", "usage": "public string QuickHashIntStringHash::saveToString ( void )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.savetostring.php"}, {"name": "QuickHashIntStringHash::set", "synopsis": "This method tries to update an entry with a new value. In case the entry did not yet exist, it will instead add a new entry. It returns whether the entry was added or update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashIntStringHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public int QuickHashIntStringHash::set ( int $key , string $value )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.set.php"}, {"name": "QuickHashIntStringHash::update", "synopsis": "This method updates an entry with a new value, and returns whether the entry was update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashIntStringHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public bool QuickHashIntStringHash::update ( int $key , string $value )", "url": "https://secure.php.net/manual/en/quickhashintstringhash.update.php"}, {"name": "QuickHashStringIntHash::add", "synopsis": "This method adds a new entry to the hash, and returns whether the entry was added. Entries are by default always added unless QuickHashStringIntHash::CHECK_FOR_DUPES has been passed when the hash was created.", "usage": "public bool QuickHashStringIntHash::add ( string $key , int $value )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.add.php"}, {"name": "QuickHashStringIntHash::__construct", "synopsis": "This constructor creates a new QuickHashStringIntHash. The size is the amount of bucket lists to create. The more lists there are, the less collisions you will have. Options are also supported.", "usage": "public QuickHashStringIntHash::__construct ( int $size [, int $options = 0 ] )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.construct.php"}, {"name": "QuickHashStringIntHash::delete", "synopsis": "This method deletes an entry from the hash, and returns whether the entry was deleted or not. Associated memory structures will not be freed immediately, but rather when the hash itself is freed.", "usage": "public bool QuickHashStringIntHash::delete ( string $key )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.delete.php"}, {"name": "QuickHashStringIntHash::exists", "synopsis": "This method checks whether an entry with the provided key exists in the hash.", "usage": "public bool QuickHashStringIntHash::exists ( string $key )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.exists.php"}, {"name": "QuickHashStringIntHash::get", "synopsis": "This method retrieves a value from the hash by its key.", "usage": "public mixed QuickHashStringIntHash::get ( string $key )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.get.php"}, {"name": "QuickHashStringIntHash::getSize", "synopsis": "Returns the number of elements in the hash.", "usage": "public int QuickHashStringIntHash::getSize ( void )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.getsize.php"}, {"name": "QuickHashStringIntHash::loadFromFile", "synopsis": "This factory method creates a new hash from a definition file on disk. The file format consists of a signature 'QH\\0x21\\0', the number of elements as a 32 bit signed integer in system Endianness, an unsigned 32 bit integer containing the number of element data to follow in characters. This element data contains all the strings. The follows another signed 32 bit integer containing the number of bucket lists. After the header and the strings, the elements follow. They are ordered by bucket list so that the keys don't have to be hashed in order to restore the hash. For each bucket list, the following information is stored (all as 32 bit integers): the bucket list index, the number of elements in that list, and then in pairs of two unsigned 32 bit integers the elements, where the first one is the index into the string list containing the keys, and the second one the value. An example could be:", "usage": "public static QuickHashStringIntHash QuickHashStringIntHash::loadFromFile ( string $filename [, int $size = 0 [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.loadfromfile.php"}, {"name": "QuickHashStringIntHash::loadFromString", "synopsis": "This factory method creates a new hash from a definition in a string. The format is the same as the one used in \"loadFromFile\".", "usage": "public static QuickHashStringIntHash QuickHashStringIntHash::loadFromString ( string $contents [, int $size = 0 [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.loadfromstring.php"}, {"name": "QuickHashStringIntHash::saveToFile", "synopsis": "This method stores an existing hash to a file on disk, in the same format that loadFromFile() can read.", "usage": "public void QuickHashStringIntHash::saveToFile ( string $filename )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.savetofile.php"}, {"name": "QuickHashStringIntHash::saveToString", "synopsis": "This method returns a serialized version of the hash in the same format that loadFromString() can read.", "usage": "public string QuickHashStringIntHash::saveToString ( void )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.savetostring.php"}, {"name": "QuickHashStringIntHash::set", "synopsis": "This method tries to update an entry with a new value. In case the entry did not yet exist, it will instead add a new entry. It returns whether the entry was added or update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashStringIntHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public int QuickHashStringIntHash::set ( string $key , int $value )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.set.php"}, {"name": "QuickHashStringIntHash::update", "synopsis": "This method updates an entry with a new value, and returns whether the entry was update. If there are duplicate keys, only the first found element will get an updated value. Use QuickHashStringIntHash::CHECK_FOR_DUPES during hash creation to prevent duplicate keys from being part of the hash.", "usage": "public bool QuickHashStringIntHash::update ( string $key , int $value )", "url": "https://secure.php.net/manual/en/quickhashstringinthash.update.php"}, {"name": "RarArchive::close", "synopsis": "Procedural style:", "usage": "public bool RarArchive::close ( void )", "url": "https://secure.php.net/manual/en/rararchive.close.php"}, {"name": "RarArchive::getComment", "synopsis": "Procedural style:", "usage": "public string RarArchive::getComment ( void )", "url": "https://secure.php.net/manual/en/rararchive.getcomment.php"}, {"name": "RarArchive::getEntries", "synopsis": "Procedural style:", "usage": "public array RarArchive::getEntries ( void )", "url": "https://secure.php.net/manual/en/rararchive.getentries.php"}, {"name": "RarArchive::getEntry", "synopsis": "Procedural style:", "usage": "public RarEntry RarArchive::getEntry ( string $entryname )", "url": "https://secure.php.net/manual/en/rararchive.getentry.php"}, {"name": "RarArchive::isBroken", "synopsis": "Procedural style:", "usage": "public bool RarArchive::isBroken ( void )", "url": "https://secure.php.net/manual/en/rararchive.isbroken.php"}, {"name": "RarArchive::isSolid", "synopsis": "Procedural style:", "usage": "public bool RarArchive::isSolid ( void )", "url": "https://secure.php.net/manual/en/rararchive.issolid.php"}, {"name": "RarArchive::open", "synopsis": "Procedural style:", "usage": "public static RarArchive RarArchive::open ( string $filename [, string $password = NULL [, callable $volume_callback = NULL ]] )", "url": "https://secure.php.net/manual/en/rararchive.open.php"}, {"name": "RarArchive::setAllowBroken", "synopsis": "Procedural style:", "usage": "public bool RarArchive::setAllowBroken ( bool $allow_broken )", "url": "https://secure.php.net/manual/en/rararchive.setallowbroken.php"}, {"name": "RarArchive::__toString", "synopsis": "Provides a string representation for this RarArchive object. It currently shows the full path name of the archive volume that was opened and whether the resource is valid or was already closed through a call to RarArchive::close().", "usage": "public string RarArchive::__toString ( void )", "url": "https://secure.php.net/manual/en/rararchive.tostring.php"}, {"name": "RarEntry::extract", "synopsis": "RarEntry::extract() extracts the entry's data. It will create new file in the specified dir with the name identical to the entry's name, unless the second argument is specified. See below for more information.", "usage": "public bool RarEntry::extract ( string $dir [, string $filepath = \"\" [, string $password = NULL [, bool $extended_data = FALSE ]]] )", "url": "https://secure.php.net/manual/en/rarentry.extract.php"}, {"name": "RarEntry::getAttr", "synopsis": "Returns the OS-dependent attributes of the archive entry.", "usage": "public int RarEntry::getAttr ( void )", "url": "https://secure.php.net/manual/en/rarentry.getattr.php"}, {"name": "RarEntry::getCrc", "synopsis": "Returns an hexadecimal string representation of the CRC of the archive entry.", "usage": "public string RarEntry::getCrc ( void )", "url": "https://secure.php.net/manual/en/rarentry.getcrc.php"}, {"name": "RarEntry::getFileTime", "synopsis": "Gets entry last modification time.", "usage": "public string RarEntry::getFileTime ( void )", "url": "https://secure.php.net/manual/en/rarentry.getfiletime.php"}, {"name": "RarEntry::getHostOs", "synopsis": "Returns the code of the host OS of the archive entry.", "usage": "public int RarEntry::getHostOs ( void )", "url": "https://secure.php.net/manual/en/rarentry.gethostos.php"}, {"name": "RarEntry::getMethod", "synopsis": "RarEntry::getMethod() returns number of the method used when adding current archive entry.", "usage": "public int RarEntry::getMethod ( void )", "url": "https://secure.php.net/manual/en/rarentry.getmethod.php"}, {"name": "RarEntry::getName", "synopsis": "Returns the name (with path) of the archive entry.", "usage": "public string RarEntry::getName ( void )", "url": "https://secure.php.net/manual/en/rarentry.getname.php"}, {"name": "RarEntry::getPackedSize", "synopsis": "Get packed size of the archive entry.", "usage": "public int RarEntry::getPackedSize ( void )", "url": "https://secure.php.net/manual/en/rarentry.getpackedsize.php"}, {"name": "RarEntry::getStream", "synopsis": "Returns a file handler that supports read operations. This handler provides on-the-fly decompression for this entry.", "usage": "public resource RarEntry::getStream ([ string $password ] )", "url": "https://secure.php.net/manual/en/rarentry.getstream.php"}, {"name": "RarEntry::getUnpackedSize", "synopsis": "Get unpacked size of the archive entry.", "usage": "public int RarEntry::getUnpackedSize ( void )", "url": "https://secure.php.net/manual/en/rarentry.getunpackedsize.php"}, {"name": "RarEntry::getVersion", "synopsis": "Returns minimum version of RAR program (e.g. WinRAR) required to unpack the entry. It is encoded as 10 * major version + minor version.", "usage": "public int RarEntry::getVersion ( void )", "url": "https://secure.php.net/manual/en/rarentry.getversion.php"}, {"name": "RarEntry::isDirectory", "synopsis": "Tests whether the current entry is a directory.", "usage": "public bool RarEntry::isDirectory ( void )", "url": "https://secure.php.net/manual/en/rarentry.isdirectory.php"}, {"name": "RarEntry::isEncrypted", "synopsis": "Tests whether the current entry contents are encrypted.", "usage": "public bool RarEntry::isEncrypted ( void )", "url": "https://secure.php.net/manual/en/rarentry.isencrypted.php"}, {"name": "RarEntry::__toString", "synopsis": "RarEntry::__toString() returns a textual representation for this entry. It includes whether the entry is a file or a directory (symbolic links and other special objects will be treated as files), the UTF-8 name of the entry and its CRC. The form and content of this representation may be changed in the future, so they cannot be relied upon.", "usage": "public string RarEntry::__toString ( void )", "url": "https://secure.php.net/manual/en/rarentry.tostring.php"}, {"name": "RarException::isUsingExceptions", "synopsis": "Checks whether the RAR functions will emit warnings and return error values or whether they will throw exceptions in most of the circumstances (does not include some programmatic errors such as passing the wrong type of arguments).", "usage": "public static bool RarException::isUsingExceptions ( void )", "url": "https://secure.php.net/manual/en/rarexception.isusingexceptions.php"}, {"name": "RarException::setUsingExceptions", "synopsis": "If and only if the argument is TRUE, then, instead of emitting warnings and returning a special value indicating error when the UnRAR library encounters an error, an exception of type RarException will be thrown.", "usage": "public static void RarException::setUsingExceptions ( bool $using_exceptions )", "url": "https://secure.php.net/manual/en/rarexception.setusingexceptions.php"}, {"name": "RecursiveArrayIterator::getChildren", "synopsis": "Returns an iterator for the current iterator entry.", "usage": "public RecursiveArrayIterator RecursiveArrayIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursivearrayiterator.getchildren.php"}, {"name": "RecursiveArrayIterator::hasChildren", "synopsis": "Returns whether current entry is an array or an object for which an iterator can be obtained via RecursiveArrayIterator::getChildren().", "usage": "public bool RecursiveArrayIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursivearrayiterator.haschildren.php"}, {"name": "RecursiveCachingIterator::__construct", "synopsis": "Constructs a new RecursiveCachingIterator, which consists of a passed in iterator.", "usage": "public RecursiveCachingIterator::__construct ( Iterator $iterator [, string $flags = self::CALL_TOSTRING ] )", "url": "https://secure.php.net/manual/en/recursivecachingiterator.construct.php"}, {"name": "RecursiveCachingIterator::getChildren", "synopsis": null, "usage": "public RecursiveCachingIterator RecursiveCachingIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursivecachingiterator.getchildren.php"}, {"name": "RecursiveCachingIterator::hasChildren", "synopsis": null, "usage": "public bool RecursiveCachingIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursivecachingiterator.haschildren.php"}, {"name": "RecursiveCallbackFilterIterator::getChildren", "synopsis": "Fetches the filtered children of the inner iterator.", "usage": "public RecursiveCallbackFilterIterator RecursiveCallbackFilterIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursivecallbackfilteriterator.getchildren.php"}, {"name": "RecursiveCallbackFilterIterator::hasChildren", "synopsis": "Returns TRUE if the current element has children, FALSE otherwise.", "usage": "public bool RecursiveCallbackFilterIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursivecallbackfilteriterator.haschildren.php"}, {"name": "RecursiveDirectoryIterator::__construct", "synopsis": "Constructs a RecursiveDirectoryIterator() for the provided path.", "usage": "public RecursiveDirectoryIterator::__construct ( string $path [, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO ] )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.construct.php"}, {"name": "RecursiveDirectoryIterator::getChildren", "synopsis": null, "usage": "public mixed RecursiveDirectoryIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.getchildren.php"}, {"name": "RecursiveDirectoryIterator::getSubPath", "synopsis": "Returns the sub path relative to the directory given in the constructor.", "usage": "public string RecursiveDirectoryIterator::getSubPath ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.getsubpath.php"}, {"name": "RecursiveDirectoryIterator::getSubPathname", "synopsis": "Gets the sub path and filename.", "usage": "public string RecursiveDirectoryIterator::getSubPathname ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.getsubpathname.php"}, {"name": "RecursiveDirectoryIterator::hasChildren", "synopsis": null, "usage": "public bool RecursiveDirectoryIterator::hasChildren ([ bool $allow_links = FALSE ] )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.haschildren.php"}, {"name": "RecursiveDirectoryIterator::key", "synopsis": null, "usage": "public string RecursiveDirectoryIterator::key ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.key.php"}, {"name": "RecursiveDirectoryIterator::next", "synopsis": null, "usage": "public void RecursiveDirectoryIterator::next ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.next.php"}, {"name": "RecursiveDirectoryIterator::rewind", "synopsis": null, "usage": "public void RecursiveDirectoryIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/recursivedirectoryiterator.rewind.php"}, {"name": "RecursiveFilterIterator::__construct", "synopsis": "Create a RecursiveFilterIterator from a RecursiveIterator.", "usage": "public RecursiveFilterIterator::__construct ( RecursiveIterator $iterator )", "url": "https://secure.php.net/manual/en/recursivefilteriterator.construct.php"}, {"name": "RecursiveFilterIterator::getChildren", "synopsis": "Return the inner iterator's children contained in a RecursiveFilterIterator.", "usage": "public RecursiveFilterIterator RecursiveFilterIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursivefilteriterator.getchildren.php"}, {"name": "RecursiveFilterIterator::hasChildren", "synopsis": "Check whether the inner iterator's current element has children.", "usage": "public bool RecursiveFilterIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursivefilteriterator.haschildren.php"}, {"name": "RecursiveIterator::getChildren", "synopsis": "Returns an iterator for the current iterator entry.", "usage": "public RecursiveIterator RecursiveIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiterator.getchildren.php"}, {"name": "RecursiveIterator::hasChildren", "synopsis": "Returns if an iterator can be created for the current entry. RecursiveIterator::getChildren().", "usage": "public bool RecursiveIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiterator.haschildren.php"}, {"name": "RecursiveIteratorIterator::beginChildren", "synopsis": "Is called after calling RecursiveIteratorIterator::getChildren(), and its associated RecursiveIteratorIterator::rewind().", "usage": "public void RecursiveIteratorIterator::beginChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.beginchildren.php"}, {"name": "RecursiveIteratorIterator::beginIteration", "synopsis": "Called when iteration begins (after the first RecursiveIteratorIterator::rewind() call.", "usage": "public void RecursiveIteratorIterator::beginIteration ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.beginiteration.php"}, {"name": "RecursiveIteratorIterator::callGetChildren", "synopsis": "Get children of the current element.", "usage": "public RecursiveIterator RecursiveIteratorIterator::callGetChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.callgetchildren.php"}, {"name": "RecursiveIteratorIterator::callHasChildren", "synopsis": "Called for each element to test whether it has children.", "usage": "public bool RecursiveIteratorIterator::callHasChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.callhaschildren.php"}, {"name": "RecursiveIteratorIterator::__construct", "synopsis": "Creates a RecursiveIteratorIterator from a RecursiveIterator.", "usage": "public RecursiveIteratorIterator::__construct ( Traversable $iterator [, int $mode = RecursiveIteratorIterator::LEAVES_ONLY [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.construct.php"}, {"name": "RecursiveIteratorIterator::current", "synopsis": null, "usage": "public mixed RecursiveIteratorIterator::current ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.current.php"}, {"name": "RecursiveIteratorIterator::endChildren", "synopsis": "Called when end recursing one level.", "usage": "public void RecursiveIteratorIterator::endChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.endchildren.php"}, {"name": "RecursiveIteratorIterator::endIteration", "synopsis": "Called when the iteration ends (when RecursiveIteratorIterator::valid() first returns FALSE.", "usage": "public void RecursiveIteratorIterator::endIteration ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.enditeration.php"}, {"name": "RecursiveIteratorIterator::getDepth", "synopsis": null, "usage": "public int RecursiveIteratorIterator::getDepth ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.getdepth.php"}, {"name": "RecursiveIteratorIterator::getInnerIterator", "synopsis": "Gets the current active sub iterator.", "usage": "public iterator RecursiveIteratorIterator::getInnerIterator ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.getinneriterator.php"}, {"name": "RecursiveIteratorIterator::getMaxDepth", "synopsis": "Gets the maximum allowable depth.", "usage": "public mixed RecursiveIteratorIterator::getMaxDepth ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.getmaxdepth.php"}, {"name": "RecursiveIteratorIterator::getSubIterator", "synopsis": null, "usage": "public RecursiveIterator RecursiveIteratorIterator::getSubIterator ([ int $level ] )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.getsubiterator.php"}, {"name": "RecursiveIteratorIterator::key", "synopsis": null, "usage": "public mixed RecursiveIteratorIterator::key ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.key.php"}, {"name": "RecursiveIteratorIterator::next", "synopsis": null, "usage": "public void RecursiveIteratorIterator::next ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.next.php"}, {"name": "RecursiveIteratorIterator::nextElement", "synopsis": "Called when the next element is available.", "usage": "public void RecursiveIteratorIterator::nextElement ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.nextelement.php"}, {"name": "RecursiveIteratorIterator::rewind", "synopsis": null, "usage": "public void RecursiveIteratorIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.rewind.php"}, {"name": "RecursiveIteratorIterator::setMaxDepth", "synopsis": "Set the maximum allowed depth.", "usage": "public void RecursiveIteratorIterator::setMaxDepth ([ int $max_depth = -1 ] )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.setmaxdepth.php"}, {"name": "RecursiveIteratorIterator::valid", "synopsis": null, "usage": "public bool RecursiveIteratorIterator::valid ( void )", "url": "https://secure.php.net/manual/en/recursiveiteratoriterator.valid.php"}, {"name": "RecursiveRegexIterator::getChildren", "synopsis": "Returns an iterator for the current iterator entry.", "usage": "public RecursiveRegexIterator RecursiveRegexIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveregexiterator.getchildren.php"}, {"name": "RecursiveRegexIterator::hasChildren", "synopsis": "Returns whether an iterator can be obtained for the current entry. This iterator can be obtained via RecursiveRegexIterator::getChildren().", "usage": "public bool RecursiveRegexIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/recursiveregexiterator.haschildren.php"}, {"name": "RecursiveTreeIterator::beginChildren", "synopsis": "Called when recursing one level down.", "usage": "public void RecursiveTreeIterator::beginChildren ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.beginchildren.php"}, {"name": "RecursiveTreeIterator::beginIteration", "synopsis": "Called when iteration begins (after the first RecursiveTreeIterator::rewind() call).", "usage": "public RecursiveIterator RecursiveTreeIterator::beginIteration ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.beginiteration.php"}, {"name": "RecursiveTreeIterator::callGetChildren", "synopsis": "Gets children of the current element.", "usage": "public RecursiveIterator RecursiveTreeIterator::callGetChildren ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.callgetchildren.php"}, {"name": "RecursiveTreeIterator::callHasChildren", "synopsis": "Called for each element to test whether it has children.", "usage": "public bool RecursiveTreeIterator::callHasChildren ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.callhaschildren.php"}, {"name": "RecursiveTreeIterator::__construct", "synopsis": "Constructs a new RecursiveTreeIterator from the supplied recursive iterator.", "usage": "public RecursiveTreeIterator::__construct ( RecursiveIterator|IteratorAggregate $it [, int $flags = RecursiveTreeIterator::BYPASS_KEY [, int $cit_flags = CachingIterator::CATCH_GET_CHILD [, int $mode = RecursiveIteratorIterator::SELF_FIRST ]]] )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.construct.php"}, {"name": "RecursiveTreeIterator::current", "synopsis": "Gets the current element prefixed and postfixed.", "usage": "public string RecursiveTreeIterator::current ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.current.php"}, {"name": "RecursiveTreeIterator::endChildren", "synopsis": "Called when end recursing one level.", "usage": "public void RecursiveTreeIterator::endChildren ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.endchildren.php"}, {"name": "RecursiveTreeIterator::endIteration", "synopsis": "Called when the iteration ends (when RecursiveTreeIterator::valid() first returns FALSE)", "usage": "public void RecursiveTreeIterator::endIteration ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.enditeration.php"}, {"name": "RecursiveTreeIterator::getEntry", "synopsis": "Gets the part of the tree built for the current element.", "usage": "public string RecursiveTreeIterator::getEntry ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.getentry.php"}, {"name": "RecursiveTreeIterator::getPostfix", "synopsis": "Gets the string to place after the current element.", "usage": "public string RecursiveTreeIterator::getPostfix ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.getpostfix.php"}, {"name": "RecursiveTreeIterator::getPrefix", "synopsis": "Gets the string to place in front of current element", "usage": "public string RecursiveTreeIterator::getPrefix ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.getprefix.php"}, {"name": "RecursiveTreeIterator::key", "synopsis": "Gets the current key prefixed and postfixed.", "usage": "public string RecursiveTreeIterator::key ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.key.php"}, {"name": "RecursiveTreeIterator::next", "synopsis": "Moves forward to the next element.", "usage": "public void RecursiveTreeIterator::next ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.next.php"}, {"name": "RecursiveTreeIterator::nextElement", "synopsis": "Called when the next element is available.", "usage": "public void RecursiveTreeIterator::nextElement ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.nextelement.php"}, {"name": "RecursiveTreeIterator::rewind", "synopsis": "Rewinds the iterator to the first element of the top level inner iterator.", "usage": "public void RecursiveTreeIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.rewind.php"}, {"name": "RecursiveTreeIterator::setPostfix", "synopsis": "Sets postfix as used in RecursiveTreeIterator::getPostfix().", "usage": "public void RecursiveTreeIterator::setPostfix ( string $postfix )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.setpostfix.php"}, {"name": "RecursiveTreeIterator::setPrefixPart", "synopsis": "Sets a part of the prefix used in the graphic tree.", "usage": "public void RecursiveTreeIterator::setPrefixPart ( int $part , string $value )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.setprefixpart.php"}, {"name": "RecursiveTreeIterator::valid", "synopsis": "Check whether the current position is valid.", "usage": "public bool RecursiveTreeIterator::valid ( void )", "url": "https://secure.php.net/manual/en/recursivetreeiterator.valid.php"}, {"name": "Reflection::export", "synopsis": "Exports a reflection.", "usage": "public static string Reflection::export ( Reflector $reflector [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/reflection.export.php"}, {"name": "Reflection::getModifierNames", "synopsis": "Gets modifier names.", "usage": "public static array Reflection::getModifierNames ( int $modifiers )", "url": "https://secure.php.net/manual/en/reflection.getmodifiernames.php"}, {"name": "ReflectionClass::__construct", "synopsis": "Constructs a new ReflectionClass object.", "usage": "public ReflectionClass::__construct ( mixed $argument )", "url": "https://secure.php.net/manual/en/reflectionclass.construct.php"}, {"name": "ReflectionClass::export", "synopsis": "Exports a reflected class.", "usage": "public static string ReflectionClass::export ( mixed $argument [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/reflectionclass.export.php"}, {"name": "ReflectionClass::getConstant", "synopsis": "Gets the defined constant.", "usage": "public mixed ReflectionClass::getConstant ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.getconstant.php"}, {"name": "ReflectionClass::getConstants", "synopsis": "Gets all defined constants from a class, regardless of their visibility.", "usage": "public array ReflectionClass::getConstants ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getconstants.php"}, {"name": "ReflectionClass::getConstructor", "synopsis": "Gets the constructor of the reflected class.", "usage": "public ReflectionMethod ReflectionClass::getConstructor ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getconstructor.php"}, {"name": "ReflectionClass::getDefaultProperties", "synopsis": "Gets default properties from a class (including inherited properties).", "usage": "public array ReflectionClass::getDefaultProperties ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getdefaultproperties.php"}, {"name": "ReflectionClass::getDocComment", "synopsis": "Gets doc comments from a class.", "usage": "public string ReflectionClass::getDocComment ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getdoccomment.php"}, {"name": "ReflectionClass::getEndLine", "synopsis": "Gets end line number from a user-defined class definition.", "usage": "public int ReflectionClass::getEndLine ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getendline.php"}, {"name": "ReflectionClass::getExtension", "synopsis": "Gets a ReflectionExtension object for the extension which defined the class.", "usage": "public ReflectionExtension ReflectionClass::getExtension ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getextension.php"}, {"name": "ReflectionClass::getExtensionName", "synopsis": "Gets the name of the extension which defined the class.", "usage": "public string ReflectionClass::getExtensionName ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getextensionname.php"}, {"name": "ReflectionClass::getFileName", "synopsis": "Gets the filename of the file in which the class has been defined.", "usage": "public string ReflectionClass::getFileName ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getfilename.php"}, {"name": "ReflectionClass::getInterfaceNames", "synopsis": "Get the interface names.", "usage": "public array ReflectionClass::getInterfaceNames ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getinterfacenames.php"}, {"name": "ReflectionClass::getInterfaces", "synopsis": "Gets the interfaces.", "usage": "public array ReflectionClass::getInterfaces ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getinterfaces.php"}, {"name": "ReflectionClass::getMethod", "synopsis": "Gets a ReflectionMethod for a class method.", "usage": "public ReflectionMethod ReflectionClass::getMethod ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.getmethod.php"}, {"name": "ReflectionClass::getMethods", "synopsis": "Gets an array of methods for the class.", "usage": "public array ReflectionClass::getMethods ([ int $filter ] )", "url": "https://secure.php.net/manual/en/reflectionclass.getmethods.php"}, {"name": "ReflectionClass::getModifiers", "synopsis": "Returns a bitfield of the access modifiers for this class.", "usage": "public int ReflectionClass::getModifiers ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getmodifiers.php"}, {"name": "ReflectionClass::getName", "synopsis": "Gets the class name.", "usage": "public string ReflectionClass::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getname.php"}, {"name": "ReflectionClass::getNamespaceName", "synopsis": "Gets the namespace name.", "usage": "public string ReflectionClass::getNamespaceName ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getnamespacename.php"}, {"name": "ReflectionClass::getParentClass", "synopsis": "", "usage": "public ReflectionClass ReflectionClass::getParentClass ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getparentclass.php"}, {"name": "ReflectionClass::getProperties", "synopsis": "Retrieves reflected properties.", "usage": "public array ReflectionClass::getProperties ([ int $filter ] )", "url": "https://secure.php.net/manual/en/reflectionclass.getproperties.php"}, {"name": "ReflectionClass::getProperty", "synopsis": "Gets a ReflectionProperty for a class's property.", "usage": "public ReflectionProperty ReflectionClass::getProperty ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.getproperty.php"}, {"name": "ReflectionClass::getReflectionConstant", "synopsis": "Gets a ReflectionClassConstant for a class's property.", "usage": "public ReflectionClassConstant ReflectionClass::getReflectionConstant ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.getreflectionconstant.php"}, {"name": "ReflectionClass::getReflectionConstants", "synopsis": "Retrieves reflected constants.", "usage": "public array ReflectionClass::getReflectionConstants ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getreflectionconstants.php"}, {"name": "ReflectionClass::getShortName", "synopsis": "Gets the short name of the class, the part without the namespace.", "usage": "public string ReflectionClass::getShortName ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getshortname.php"}, {"name": "ReflectionClass::getStartLine", "synopsis": "Get the starting line number.", "usage": "public int ReflectionClass::getStartLine ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getstartline.php"}, {"name": "ReflectionClass::getStaticProperties", "synopsis": "Get the static properties.", "usage": "public array ReflectionClass::getStaticProperties ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.getstaticproperties.php"}, {"name": "ReflectionClass::getStaticPropertyValue", "synopsis": "Gets the value of a static property on this class.", "usage": "public mixed ReflectionClass::getStaticPropertyValue ( string $name [, mixed &$def_value ] )", "url": "https://secure.php.net/manual/en/reflectionclass.getstaticpropertyvalue.php"}, {"name": "ReflectionClass::getTraitAliases", "synopsis": "", "usage": "public array ReflectionClass::getTraitAliases ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.gettraitaliases.php"}, {"name": "ReflectionClass::getTraitNames", "synopsis": "", "usage": "public array ReflectionClass::getTraitNames ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.gettraitnames.php"}, {"name": "ReflectionClass::getTraits", "synopsis": "", "usage": "public array ReflectionClass::getTraits ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.gettraits.php"}, {"name": "ReflectionClass::hasConstant", "synopsis": "Checks whether the class has a specific constant defined or not.", "usage": "public bool ReflectionClass::hasConstant ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.hasconstant.php"}, {"name": "ReflectionClass::hasMethod", "synopsis": "Checks whether a specific method is defined in a class.", "usage": "public bool ReflectionClass::hasMethod ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.hasmethod.php"}, {"name": "ReflectionClass::hasProperty", "synopsis": "Checks whether the specified property is defined.", "usage": "public bool ReflectionClass::hasProperty ( string $name )", "url": "https://secure.php.net/manual/en/reflectionclass.hasproperty.php"}, {"name": "ReflectionClass::implementsInterface", "synopsis": "Checks whether it implements an interface.", "usage": "public bool ReflectionClass::implementsInterface ( string $interface )", "url": "https://secure.php.net/manual/en/reflectionclass.implementsinterface.php"}, {"name": "ReflectionClass::inNamespace", "synopsis": "Checks if this class is defined in a namespace.", "usage": "public bool ReflectionClass::inNamespace ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.innamespace.php"}, {"name": "ReflectionClass::isAbstract", "synopsis": "Checks if the class is abstract.", "usage": "public bool ReflectionClass::isAbstract ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isabstract.php"}, {"name": "ReflectionClass::isAnonymous", "synopsis": "Checks if a class is an anonymous class.", "usage": "public bool ReflectionClass::isAnonymous ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isanonymous.php"}, {"name": "ReflectionClass::isCloneable", "synopsis": "Returns whether this class is cloneable.", "usage": "public bool ReflectionClass::isCloneable ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.iscloneable.php"}, {"name": "ReflectionClass::isFinal", "synopsis": "Checks if a class is final.", "usage": "public bool ReflectionClass::isFinal ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isfinal.php"}, {"name": "ReflectionClass::isInstance", "synopsis": "Checks if an object is an instance of a class.", "usage": "public bool ReflectionClass::isInstance ( object $object )", "url": "https://secure.php.net/manual/en/reflectionclass.isinstance.php"}, {"name": "ReflectionClass::isInstantiable", "synopsis": "Checks if the class is instantiable.", "usage": "public bool ReflectionClass::isInstantiable ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isinstantiable.php"}, {"name": "ReflectionClass::isInterface", "synopsis": "Checks whether the class is an interface.", "usage": "public bool ReflectionClass::isInterface ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isinterface.php"}, {"name": "ReflectionClass::isInternal", "synopsis": "Checks if the class is defined internally by an extension, or the core, as opposed to user-defined.", "usage": "public bool ReflectionClass::isInternal ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isinternal.php"}, {"name": "ReflectionClass::isIterable", "synopsis": null, "usage": "public bool ReflectionClass::isIterable ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isiterable.php"}, {"name": "ReflectionClass::isIterateable", "synopsis": "Checks whether the class is iterateable.", "usage": "public bool ReflectionClass::isIterateable ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isiterateable.php"}, {"name": "ReflectionClass::isSubclassOf", "synopsis": "Checks if the class is a subclass of a specified class or implements a specified interface.", "usage": "public bool ReflectionClass::isSubclassOf ( string $class )", "url": "https://secure.php.net/manual/en/reflectionclass.issubclassof.php"}, {"name": "ReflectionClass::isTrait", "synopsis": "", "usage": "public bool ReflectionClass::isTrait ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.istrait.php"}, {"name": "ReflectionClass::isUserDefined", "synopsis": "Checks whether the class is user-defined, as opposed to internal.", "usage": "public bool ReflectionClass::isUserDefined ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.isuserdefined.php"}, {"name": "ReflectionClass::newInstance", "synopsis": "Creates a new instance of the class. The given arguments are passed to the class constructor.", "usage": "public object ReflectionClass::newInstance ( mixed $args [, mixed $... ] )", "url": "https://secure.php.net/manual/en/reflectionclass.newinstance.php"}, {"name": "ReflectionClass::newInstanceArgs", "synopsis": "Creates a new instance of the class, the given arguments are passed to the class constructor.", "usage": "public object ReflectionClass::newInstanceArgs ([ array $args ] )", "url": "https://secure.php.net/manual/en/reflectionclass.newinstanceargs.php"}, {"name": "ReflectionClass::newInstanceWithoutConstructor", "synopsis": "Creates a new instance of the class without invoking the constructor.", "usage": "public object ReflectionClass::newInstanceWithoutConstructor ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.newinstancewithoutconstructor.php"}, {"name": "ReflectionClass::setStaticPropertyValue", "synopsis": "Sets static property value.", "usage": "public void ReflectionClass::setStaticPropertyValue ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/reflectionclass.setstaticpropertyvalue.php"}, {"name": "ReflectionClass::__toString", "synopsis": "Returns the string representation of the ReflectionClass object.", "usage": "public string ReflectionClass::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionclass.tostring.php"}, {"name": "ReflectionClassConstant::__construct", "synopsis": "Constructs a new ReflectionClassConstant object.", "usage": "public ReflectionClassConstant::__construct ( mixed $class , string $name )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.construct.php"}, {"name": "ReflectionClassConstant::export", "synopsis": "Exports a reflection.", "usage": "public static string ReflectionClassConstant::export ( mixed $class , string $name [, bool $return ] )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.export.php"}, {"name": "ReflectionClassConstant::getDeclaringClass", "synopsis": "Gets the declaring class.", "usage": "public ReflectionClass ReflectionClassConstant::getDeclaringClass ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.getdeclaringclass.php"}, {"name": "ReflectionClassConstant::getDocComment", "synopsis": "Gets doc comments from a class constant.", "usage": "public string ReflectionClassConstant::getDocComment ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.getdoccomment.php"}, {"name": "ReflectionClassConstant::getModifiers", "synopsis": "Returns a bitfield of the access modifiers for this class constant.", "usage": "public int ReflectionClassConstant::getModifiers ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.getmodifiers.php"}, {"name": "ReflectionClassConstant::getName", "synopsis": null, "usage": "public string ReflectionClassConstant::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.getname.php"}, {"name": "ReflectionClassConstant::getValue", "synopsis": "Gets the class constant's value.", "usage": "public mixed ReflectionClassConstant::getValue ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.getvalue.php"}, {"name": "ReflectionClassConstant::isPrivate", "synopsis": "Checks if the class constant is private.", "usage": "public bool ReflectionClassConstant::isPrivate ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.isprivate.php"}, {"name": "ReflectionClassConstant::isProtected", "synopsis": "Checks if the class constant is protected.", "usage": "public bool ReflectionClassConstant::isProtected ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.isprotected.php"}, {"name": "ReflectionClassConstant::isPublic", "synopsis": "Checks if the class constant is public.", "usage": "public bool ReflectionClassConstant::isPublic ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.ispublic.php"}, {"name": "ReflectionClassConstant::__toString", "synopsis": "Returns the string representation of the ReflectionClassConstant object.", "usage": "public string ReflectionClassConstant::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionclassconstant.tostring.php"}, {"name": "ReflectionExtension::__clone", "synopsis": "The clone method prevents an object from being cloned. Reflection objects cannot be cloned.", "usage": "final private void ReflectionExtension::__clone ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.clone.php"}, {"name": "ReflectionExtension::__construct", "synopsis": "Construct a ReflectionExtension object.", "usage": "public ReflectionExtension::__construct ( string $name )", "url": "https://secure.php.net/manual/en/reflectionextension.construct.php"}, {"name": "ReflectionExtension::export", "synopsis": "Exports a reflected extension. The output format of this function is the same as the CLI argument --re [extension].", "usage": "public static string ReflectionExtension::export ( string $name [, string $return = FALSE ] )", "url": "https://secure.php.net/manual/en/reflectionextension.export.php"}, {"name": "ReflectionExtension::getClasses", "synopsis": "Gets a list of classes from an extension.", "usage": "public array ReflectionExtension::getClasses ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getclasses.php"}, {"name": "ReflectionExtension::getClassNames", "synopsis": "Gets a listing of class names as defined in the extension.", "usage": "public array ReflectionExtension::getClassNames ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getclassnames.php"}, {"name": "ReflectionExtension::getConstants", "synopsis": "Get defined constants from an extension.", "usage": "public array ReflectionExtension::getConstants ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getconstants.php"}, {"name": "ReflectionExtension::getDependencies", "synopsis": "Gets dependencies, by listing both required and conflicting dependencies.", "usage": "public array ReflectionExtension::getDependencies ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getdependencies.php"}, {"name": "ReflectionExtension::getFunctions", "synopsis": "Get defined functions from an extension.", "usage": "public array ReflectionExtension::getFunctions ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getfunctions.php"}, {"name": "ReflectionExtension::getINIEntries", "synopsis": "Get the ini entries for an extension.", "usage": "public array ReflectionExtension::getINIEntries ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getinientries.php"}, {"name": "ReflectionExtension::getName", "synopsis": "Gets the extensions name.", "usage": "public string ReflectionExtension::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getname.php"}, {"name": "ReflectionExtension::getVersion", "synopsis": "Gets the version of the extension.", "usage": "public string ReflectionExtension::getVersion ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.getversion.php"}, {"name": "ReflectionExtension::info", "synopsis": "Prints out the \"phpinfo()\" snippet for the given extension.", "usage": "public void ReflectionExtension::info ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.info.php"}, {"name": "ReflectionExtension::isPersistent", "synopsis": "", "usage": "public void ReflectionExtension::isPersistent ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.ispersistent.php"}, {"name": "ReflectionExtension::isTemporary", "synopsis": "", "usage": "public void ReflectionExtension::isTemporary ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.istemporary.php"}, {"name": "ReflectionExtension::__toString", "synopsis": "Exports a reflected extension and returns it as a string. This is the same as the ReflectionExtension::export() with the return set to TRUE.", "usage": "public string ReflectionExtension::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionextension.tostring.php"}, {"name": "ReflectionFunction::__construct", "synopsis": "Constructs a ReflectionFunction object.", "usage": "public ReflectionFunction::__construct ( mixed $name )", "url": "https://secure.php.net/manual/en/reflectionfunction.construct.php"}, {"name": "ReflectionFunction::export", "synopsis": "Exports a Reflected function.", "usage": "public static string ReflectionFunction::export ( string $name [, string $return ] )", "url": "https://secure.php.net/manual/en/reflectionfunction.export.php"}, {"name": "ReflectionFunction::getClosure", "synopsis": "", "usage": "public Closure ReflectionFunction::getClosure ( void )", "url": "https://secure.php.net/manual/en/reflectionfunction.getclosure.php"}, {"name": "ReflectionFunction::invoke", "synopsis": "Invokes a reflected function.", "usage": "public mixed ReflectionFunction::invoke ([ mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/reflectionfunction.invoke.php"}, {"name": "ReflectionFunction::invokeArgs", "synopsis": "Invokes the function and pass its arguments as array.", "usage": "public mixed ReflectionFunction::invokeArgs ( array $args )", "url": "https://secure.php.net/manual/en/reflectionfunction.invokeargs.php"}, {"name": "ReflectionFunction::isDisabled", "synopsis": "Checks if the function is disabled, via the disable_functions directive.", "usage": "public bool ReflectionFunction::isDisabled ( void )", "url": "https://secure.php.net/manual/en/reflectionfunction.isdisabled.php"}, {"name": "ReflectionFunction::__toString", "synopsis": "To string.", "usage": "public string ReflectionFunction::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionfunction.tostring.php"}, {"name": "ReflectionFunctionAbstract::__clone", "synopsis": "Clones a function.", "usage": "final private void ReflectionFunctionAbstract::__clone ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.clone.php"}, {"name": "ReflectionFunctionAbstract::getClosureScopeClass", "synopsis": "", "usage": "public ReflectionClass ReflectionFunctionAbstract::getClosureScopeClass ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getclosurescopeclass.php"}, {"name": "ReflectionFunctionAbstract::getClosureThis", "synopsis": "", "usage": "public object ReflectionFunctionAbstract::getClosureThis ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getclosurethis.php"}, {"name": "ReflectionFunctionAbstract::getDocComment", "synopsis": "Get a Doc comment from a function.", "usage": "public string ReflectionFunctionAbstract::getDocComment ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getdoccomment.php"}, {"name": "ReflectionFunctionAbstract::getEndLine", "synopsis": "Get the ending line number.", "usage": "public int ReflectionFunctionAbstract::getEndLine ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getendline.php"}, {"name": "ReflectionFunctionAbstract::getExtension", "synopsis": "Get the extension information of a function.", "usage": "public ReflectionExtension ReflectionFunctionAbstract::getExtension ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getextension.php"}, {"name": "ReflectionFunctionAbstract::getExtensionName", "synopsis": "Get the extensions name.", "usage": "public string ReflectionFunctionAbstract::getExtensionName ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getextensionname.php"}, {"name": "ReflectionFunctionAbstract::getFileName", "synopsis": "Gets the file name from a user-defined function.", "usage": "public string ReflectionFunctionAbstract::getFileName ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getfilename.php"}, {"name": "ReflectionFunctionAbstract::getName", "synopsis": "Get the name of the function.", "usage": "public string ReflectionFunctionAbstract::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getname.php"}, {"name": "ReflectionFunctionAbstract::getNamespaceName", "synopsis": "Get the namespace name where the class is defined.", "usage": "public string ReflectionFunctionAbstract::getNamespaceName ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getnamespacename.php"}, {"name": "ReflectionFunctionAbstract::getNumberOfParameters", "synopsis": "Get the number of parameters that a function defines, both optional and required.", "usage": "public int ReflectionFunctionAbstract::getNumberOfParameters ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getnumberofparameters.php"}, {"name": "ReflectionFunctionAbstract::getNumberOfRequiredParameters", "synopsis": "Get the number of required parameters that a function defines.", "usage": "public int ReflectionFunctionAbstract::getNumberOfRequiredParameters ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getnumberofrequiredparameters.php"}, {"name": "ReflectionFunctionAbstract::getParameters", "synopsis": "Get the parameters as an array of ReflectionParameter.", "usage": "public array ReflectionFunctionAbstract::getParameters ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getparameters.php"}, {"name": "ReflectionFunctionAbstract::getReturnType", "synopsis": "Gets the specified return type of a reflected function.", "usage": "public ReflectionType ReflectionFunctionAbstract::getReturnType ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getreturntype.php"}, {"name": "ReflectionFunctionAbstract::getShortName", "synopsis": "Get the short name of the function (without the namespace part).", "usage": "public string ReflectionFunctionAbstract::getShortName ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getshortname.php"}, {"name": "ReflectionFunctionAbstract::getStartLine", "synopsis": "Gets the starting line number of the function.", "usage": "public int ReflectionFunctionAbstract::getStartLine ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getstartline.php"}, {"name": "ReflectionFunctionAbstract::getStaticVariables", "synopsis": "Get the static variables.", "usage": "public array ReflectionFunctionAbstract::getStaticVariables ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.getstaticvariables.php"}, {"name": "ReflectionFunctionAbstract::hasReturnType", "synopsis": "Checks whether the reflected function has a return type specified.", "usage": "public bool ReflectionFunctionAbstract::hasReturnType ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.hasreturntype.php"}, {"name": "ReflectionFunctionAbstract::inNamespace", "synopsis": "Checks whether a function is defined in a namespace.", "usage": "public bool ReflectionFunctionAbstract::inNamespace ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.innamespace.php"}, {"name": "ReflectionFunctionAbstract::isClosure", "synopsis": "Checks whether the reflected function is a Closure.", "usage": "public bool ReflectionFunctionAbstract::isClosure ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isclosure.php"}, {"name": "ReflectionFunctionAbstract::isDeprecated", "synopsis": "Checks whether the function is deprecated.", "usage": "public bool ReflectionFunctionAbstract::isDeprecated ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isdeprecated.php"}, {"name": "ReflectionFunctionAbstract::isGenerator", "synopsis": "", "usage": "public bool ReflectionFunctionAbstract::isGenerator ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isgenerator.php"}, {"name": "ReflectionFunctionAbstract::isInternal", "synopsis": "Checks whether the function is internal, as opposed to user-defined.", "usage": "public bool ReflectionFunctionAbstract::isInternal ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isinternal.php"}, {"name": "ReflectionFunctionAbstract::isUserDefined", "synopsis": "Checks whether the function is user-defined, as opposed to internal.", "usage": "public bool ReflectionFunctionAbstract::isUserDefined ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isuserdefined.php"}, {"name": "ReflectionFunctionAbstract::isVariadic", "synopsis": "Checks if the function is variadic.", "usage": "public bool ReflectionFunctionAbstract::isVariadic ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.isvariadic.php"}, {"name": "ReflectionFunctionAbstract::returnsReference", "synopsis": "Checks whether the function returns a reference.", "usage": "public bool ReflectionFunctionAbstract::returnsReference ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.returnsreference.php"}, {"name": "ReflectionFunctionAbstract::__toString", "synopsis": "To string.", "usage": "abstract public void ReflectionFunctionAbstract::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionfunctionabstract.tostring.php"}, {"name": "ReflectionGenerator::__construct", "synopsis": "Constructs a ReflectionGenerator object.", "usage": "public ReflectionGenerator::__construct ( Generator $generator )", "url": "https://secure.php.net/manual/en/reflectiongenerator.construct.php"}, {"name": "ReflectionGenerator::getExecutingFile", "synopsis": "Get the full path and file name of the currently executing generator.", "usage": "public string ReflectionGenerator::getExecutingFile ( void )", "url": "https://secure.php.net/manual/en/reflectiongenerator.getexecutingfile.php"}, {"name": "ReflectionGenerator::getExecutingGenerator", "synopsis": "Get the executing Generator object", "usage": "public Generator ReflectionGenerator::getExecutingGenerator ( void )", "url": "https://secure.php.net/manual/en/reflectiongenerator.getexecutinggenerator.php"}, {"name": "ReflectionGenerator::getExecutingLine", "synopsis": "Get the currently executing line number of the generator.", "usage": "public int ReflectionGenerator::getExecutingLine ( void )", "url": "https://secure.php.net/manual/en/reflectiongenerator.getexecutingline.php"}, {"name": "ReflectionGenerator::getFunction", "synopsis": "Enables the function name of the generator to be obtained by returning a class derived from ReflectionFunctionAbstract.", "usage": "public ReflectionFunctionAbstract ReflectionGenerator::getFunction ( void )", "url": "https://secure.php.net/manual/en/reflectiongenerator.getfunction.php"}, {"name": "ReflectionGenerator::getThis", "synopsis": "Get the $this value that the generator has access to.", "usage": "public object ReflectionGenerator::getThis ( void )", "url": "https://secure.php.net/manual/en/reflectiongenerator.getthis.php"}, {"name": "ReflectionGenerator::getTrace", "synopsis": "Get the trace of the currently executing generator.", "usage": "public array ReflectionGenerator::getTrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT ] )", "url": "https://secure.php.net/manual/en/reflectiongenerator.gettrace.php"}, {"name": "ReflectionMethod::__construct", "synopsis": "Constructs a new ReflectionMethod.", "usage": "public ReflectionMethod::__construct ( mixed $class , string $name )", "url": "https://secure.php.net/manual/en/reflectionmethod.construct.php"}, {"name": "ReflectionMethod::export", "synopsis": "Exports a ReflectionMethod.", "usage": "public static string ReflectionMethod::export ( string $class , string $name [, bool $return = FALSE ] )", "url": "https://secure.php.net/manual/en/reflectionmethod.export.php"}, {"name": "ReflectionMethod::getClosure", "synopsis": "", "usage": "public Closure ReflectionMethod::getClosure ( object $object )", "url": "https://secure.php.net/manual/en/reflectionmethod.getclosure.php"}, {"name": "ReflectionMethod::getDeclaringClass", "synopsis": "Gets the declaring class for the reflected method.", "usage": "public ReflectionClass ReflectionMethod::getDeclaringClass ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.getdeclaringclass.php"}, {"name": "ReflectionMethod::getModifiers", "synopsis": "Returns a bitfield of the access modifiers for this method.", "usage": "public int ReflectionMethod::getModifiers ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.getmodifiers.php"}, {"name": "ReflectionMethod::getPrototype", "synopsis": "Returns the methods prototype.", "usage": "public ReflectionMethod ReflectionMethod::getPrototype ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.getprototype.php"}, {"name": "ReflectionMethod::invoke", "synopsis": "Invokes a reflected method.", "usage": "public mixed ReflectionMethod::invoke ( object $object [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/reflectionmethod.invoke.php"}, {"name": "ReflectionMethod::invokeArgs", "synopsis": "Invokes the reflected method and pass its arguments as array.", "usage": "public mixed ReflectionMethod::invokeArgs ( object $object , array $args )", "url": "https://secure.php.net/manual/en/reflectionmethod.invokeargs.php"}, {"name": "ReflectionMethod::isAbstract", "synopsis": "Checks if the method is abstract.", "usage": "public bool ReflectionMethod::isAbstract ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isabstract.php"}, {"name": "ReflectionMethod::isConstructor", "synopsis": "Checks if the method is a constructor.", "usage": "public bool ReflectionMethod::isConstructor ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isconstructor.php"}, {"name": "ReflectionMethod::isDestructor", "synopsis": "Checks if the method is a destructor.", "usage": "public bool ReflectionMethod::isDestructor ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isdestructor.php"}, {"name": "ReflectionMethod::isFinal", "synopsis": "Checks if the method is final.", "usage": "public bool ReflectionMethod::isFinal ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isfinal.php"}, {"name": "ReflectionMethod::isPrivate", "synopsis": "Checks if the method is private.", "usage": "public bool ReflectionMethod::isPrivate ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isprivate.php"}, {"name": "ReflectionMethod::isProtected", "synopsis": "Checks if the method is protected.", "usage": "public bool ReflectionMethod::isProtected ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isprotected.php"}, {"name": "ReflectionMethod::isPublic", "synopsis": "Checks if the method is public.", "usage": "public bool ReflectionMethod::isPublic ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.ispublic.php"}, {"name": "ReflectionMethod::isStatic", "synopsis": "Checks if the method is static.", "usage": "public bool ReflectionMethod::isStatic ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.isstatic.php"}, {"name": "ReflectionMethod::setAccessible", "synopsis": "Sets a method to be accessible. For example, it may allow protected and private methods to be invoked.", "usage": "public void ReflectionMethod::setAccessible ( bool $accessible )", "url": "https://secure.php.net/manual/en/reflectionmethod.setaccessible.php"}, {"name": "ReflectionMethod::__toString", "synopsis": "Returns the string representation of the Reflection method object.", "usage": "public string ReflectionMethod::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionmethod.tostring.php"}, {"name": "ReflectionNamedType::getName", "synopsis": null, "usage": "public string ReflectionNamedType::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionnamedtype.getname.php"}, {"name": "ReflectionObject::__construct", "synopsis": "Constructs a ReflectionObject.", "usage": "public ReflectionObject::__construct ( object $argument )", "url": "https://secure.php.net/manual/en/reflectionobject.construct.php"}, {"name": "ReflectionObject::export", "synopsis": "Exports a reflection.", "usage": "public static string ReflectionObject::export ( string $argument [, bool $return ] )", "url": "https://secure.php.net/manual/en/reflectionobject.export.php"}, {"name": "ReflectionParameter::allowsNull", "synopsis": "Checks whether the parameter allows NULL.", "usage": "public bool ReflectionParameter::allowsNull ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.allowsnull.php"}, {"name": "ReflectionParameter::canBePassedByValue", "synopsis": "", "usage": "public bool ReflectionParameter::canBePassedByValue ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.canbepassedbyvalue.php"}, {"name": "ReflectionParameter::__clone", "synopsis": "Clones.", "usage": "final private void ReflectionParameter::__clone ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.clone.php"}, {"name": "ReflectionParameter::__construct", "synopsis": "Constructs a ReflectionParameter class.", "usage": "public ReflectionParameter::__construct ( string $function , string $parameter )", "url": "https://secure.php.net/manual/en/reflectionparameter.construct.php"}, {"name": "ReflectionParameter::export", "synopsis": "Exports.", "usage": "public static string ReflectionParameter::export ( string $function , string $parameter [, bool $return ] )", "url": "https://secure.php.net/manual/en/reflectionparameter.export.php"}, {"name": "ReflectionParameter::getClass", "synopsis": "Gets the class type hinted for the parameter as a ReflectionClass object.", "usage": "public ReflectionClass ReflectionParameter::getClass ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getclass.php"}, {"name": "ReflectionParameter::getDeclaringClass", "synopsis": "Gets the declaring class.", "usage": "public ReflectionClass ReflectionParameter::getDeclaringClass ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getdeclaringclass.php"}, {"name": "ReflectionParameter::getDeclaringFunction", "synopsis": "Gets the declaring function.", "usage": "public ReflectionFunctionAbstract ReflectionParameter::getDeclaringFunction ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getdeclaringfunction.php"}, {"name": "ReflectionParameter::getDefaultValue", "synopsis": "Gets the default value of the parameter for a user-defined function or method. If the parameter is not optional a ReflectionException will be thrown.", "usage": "public mixed ReflectionParameter::getDefaultValue ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getdefaultvalue.php"}, {"name": "ReflectionParameter::getDefaultValueConstantName", "synopsis": "", "usage": "public string ReflectionParameter::getDefaultValueConstantName ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getdefaultvalueconstantname.php"}, {"name": "ReflectionParameter::getName", "synopsis": "Gets the name of the parameter.", "usage": "public string ReflectionParameter::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getname.php"}, {"name": "ReflectionParameter::getPosition", "synopsis": "Gets the position of the parameter.", "usage": "public int ReflectionParameter::getPosition ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.getposition.php"}, {"name": "ReflectionParameter::getType", "synopsis": "Gets the associated type of a parameter.", "usage": "public ReflectionType ReflectionParameter::getType ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.gettype.php"}, {"name": "ReflectionParameter::hasType", "synopsis": "Checks if the parameter has a type associated with it.", "usage": "public bool ReflectionParameter::hasType ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.hastype.php"}, {"name": "ReflectionParameter::isArray", "synopsis": "Checks if the parameter expects an array.", "usage": "public bool ReflectionParameter::isArray ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.isarray.php"}, {"name": "ReflectionParameter::isCallable", "synopsis": "", "usage": "public bool ReflectionParameter::isCallable ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.iscallable.php"}, {"name": "ReflectionParameter::isDefaultValueAvailable", "synopsis": "Checks if a default value for the parameter is available.", "usage": "public bool ReflectionParameter::isDefaultValueAvailable ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.isdefaultvalueavailable.php"}, {"name": "ReflectionParameter::isDefaultValueConstant", "synopsis": "", "usage": "public bool ReflectionParameter::isDefaultValueConstant ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.isdefaultvalueconstant.php"}, {"name": "ReflectionParameter::isOptional", "synopsis": "Checks if the parameter is optional.", "usage": "public bool ReflectionParameter::isOptional ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.isoptional.php"}, {"name": "ReflectionParameter::isPassedByReference", "synopsis": "Checks if the parameter is passed in by reference.", "usage": "public bool ReflectionParameter::isPassedByReference ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.ispassedbyreference.php"}, {"name": "ReflectionParameter::isVariadic", "synopsis": "Checks if the parameter was declared as a variadic parameter.", "usage": "public bool ReflectionParameter::isVariadic ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.isvariadic.php"}, {"name": "ReflectionParameter::__toString", "synopsis": "To string.", "usage": "public string ReflectionParameter::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionparameter.tostring.php"}, {"name": "ReflectionProperty::__clone", "synopsis": "Clones.", "usage": "final private void ReflectionProperty::__clone ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.clone.php"}, {"name": "ReflectionProperty::__construct", "synopsis": "", "usage": "public ReflectionProperty::__construct ( mixed $class , string $name )", "url": "https://secure.php.net/manual/en/reflectionproperty.construct.php"}, {"name": "ReflectionProperty::export", "synopsis": "Exports a reflection.", "usage": "public static string ReflectionProperty::export ( mixed $class , string $name [, bool $return ] )", "url": "https://secure.php.net/manual/en/reflectionproperty.export.php"}, {"name": "ReflectionProperty::getDeclaringClass", "synopsis": "Gets the declaring class.", "usage": "public ReflectionClass ReflectionProperty::getDeclaringClass ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.getdeclaringclass.php"}, {"name": "ReflectionProperty::getDocComment", "synopsis": "Gets the doc comment for a property.", "usage": "public string ReflectionProperty::getDocComment ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.getdoccomment.php"}, {"name": "ReflectionProperty::getModifiers", "synopsis": "Gets the modifiers.", "usage": "public int ReflectionProperty::getModifiers ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.getmodifiers.php"}, {"name": "ReflectionProperty::getName", "synopsis": "Gets the properties name.", "usage": "public string ReflectionProperty::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.getname.php"}, {"name": "ReflectionProperty::getValue", "synopsis": "Gets the property's value.", "usage": "public mixed ReflectionProperty::getValue ([ object $object ] )", "url": "https://secure.php.net/manual/en/reflectionproperty.getvalue.php"}, {"name": "ReflectionProperty::isDefault", "synopsis": "Checks whether the property was declared at compile-time, or whether the property was dynamically declared at run-time.", "usage": "public bool ReflectionProperty::isDefault ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.isdefault.php"}, {"name": "ReflectionProperty::isPrivate", "synopsis": "Checks whether the property is private.", "usage": "public bool ReflectionProperty::isPrivate ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.isprivate.php"}, {"name": "ReflectionProperty::isProtected", "synopsis": "Checks whether the property is protected.", "usage": "public bool ReflectionProperty::isProtected ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.isprotected.php"}, {"name": "ReflectionProperty::isPublic", "synopsis": "Checks whether the property is public.", "usage": "public bool ReflectionProperty::isPublic ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.ispublic.php"}, {"name": "ReflectionProperty::isStatic", "synopsis": "Checks whether the property is static.", "usage": "public bool ReflectionProperty::isStatic ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.isstatic.php"}, {"name": "ReflectionProperty::setAccessible", "synopsis": "Sets a property to be accessible. For example, it may allow protected and private properties to be accessed.", "usage": "public void ReflectionProperty::setAccessible ( bool $accessible )", "url": "https://secure.php.net/manual/en/reflectionproperty.setaccessible.php"}, {"name": "ReflectionProperty::setValue", "synopsis": "Sets (changes) the property's value.", "usage": "public void ReflectionProperty::setValue ( object $object , mixed $value )", "url": "https://secure.php.net/manual/en/reflectionproperty.setvalue.php"}, {"name": "ReflectionProperty::__toString", "synopsis": "To string.", "usage": "public string ReflectionProperty::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionproperty.tostring.php"}, {"name": "ReflectionType::allowsNull", "synopsis": "Checks whether the parameter allows NULL.", "usage": "public bool ReflectionType::allowsNull ( void )", "url": "https://secure.php.net/manual/en/reflectiontype.allowsnull.php"}, {"name": "ReflectionType::isBuiltin", "synopsis": "Checks if the type is a built-in type in PHP.", "usage": "public bool ReflectionType::isBuiltin ( void )", "url": "https://secure.php.net/manual/en/reflectiontype.isbuiltin.php"}, {"name": "ReflectionType::__toString", "synopsis": "Gets the parameter type name.", "usage": "public string ReflectionType::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectiontype.tostring.php"}, {"name": "ReflectionZendExtension::__clone", "synopsis": "", "usage": "final private void ReflectionZendExtension::__clone ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.clone.php"}, {"name": "ReflectionZendExtension::__construct", "synopsis": "", "usage": "public ReflectionZendExtension::__construct ( string $name )", "url": "https://secure.php.net/manual/en/reflectionzendextension.construct.php"}, {"name": "ReflectionZendExtension::export", "synopsis": "", "usage": "public static string ReflectionZendExtension::export ( string $name [, bool $return ] )", "url": "https://secure.php.net/manual/en/reflectionzendextension.export.php"}, {"name": "ReflectionZendExtension::getAuthor", "synopsis": "", "usage": "public string ReflectionZendExtension::getAuthor ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.getauthor.php"}, {"name": "ReflectionZendExtension::getCopyright", "synopsis": "", "usage": "public string ReflectionZendExtension::getCopyright ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.getcopyright.php"}, {"name": "ReflectionZendExtension::getName", "synopsis": "", "usage": "public string ReflectionZendExtension::getName ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.getname.php"}, {"name": "ReflectionZendExtension::getURL", "synopsis": "", "usage": "public string ReflectionZendExtension::getURL ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.geturl.php"}, {"name": "ReflectionZendExtension::getVersion", "synopsis": "", "usage": "public string ReflectionZendExtension::getVersion ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.getversion.php"}, {"name": "ReflectionZendExtension::__toString", "synopsis": "", "usage": "public string ReflectionZendExtension::__toString ( void )", "url": "https://secure.php.net/manual/en/reflectionzendextension.tostring.php"}, {"name": "Reflector::export", "synopsis": "Exports.", "usage": "public static string Reflector::export ( void )", "url": "https://secure.php.net/manual/en/reflector.export.php"}, {"name": "Reflector::__toString", "synopsis": "To string.", "usage": "public string Reflector::__toString ( void )", "url": "https://secure.php.net/manual/en/reflector.tostring.php"}, {"name": "RegexIterator::accept", "synopsis": "Matches (string) RegexIterator::current() (or RegexIterator::key() if the RegexIterator::USE_KEY flag is set) against the regular expression.", "usage": "public bool RegexIterator::accept ( void )", "url": "https://secure.php.net/manual/en/regexiterator.accept.php"}, {"name": "RegexIterator::getFlags", "synopsis": "Returns the flags, see RegexIterator::setFlags() for a list of available flags.", "usage": "public int RegexIterator::getFlags ( void )", "url": "https://secure.php.net/manual/en/regexiterator.getflags.php"}, {"name": "RegexIterator::getMode", "synopsis": "Returns the operation mode, see RegexIterator::setMode() for the list of operation modes.", "usage": "public int RegexIterator::getMode ( void )", "url": "https://secure.php.net/manual/en/regexiterator.getmode.php"}, {"name": "RegexIterator::getPregFlags", "synopsis": "Returns the regular expression flags, see RegexIterator::__construct() for the list of flags.", "usage": "public int RegexIterator::getPregFlags ( void )", "url": "https://secure.php.net/manual/en/regexiterator.getpregflags.php"}, {"name": "RegexIterator::getRegex", "synopsis": "", "usage": "public string RegexIterator::getRegex ( void )", "url": "https://secure.php.net/manual/en/regexiterator.getregex.php"}, {"name": "RegexIterator::setFlags", "synopsis": "Sets the flags.", "usage": "public void RegexIterator::setFlags ( int $flags )", "url": "https://secure.php.net/manual/en/regexiterator.setflags.php"}, {"name": "RegexIterator::setMode", "synopsis": "Sets the operation mode.", "usage": "public void RegexIterator::setMode ( int $mode )", "url": "https://secure.php.net/manual/en/regexiterator.setmode.php"}, {"name": "RegexIterator::setPregFlags", "synopsis": "Sets the regular expression flags.", "usage": "public void RegexIterator::setPregFlags ( int $preg_flags )", "url": "https://secure.php.net/manual/en/regexiterator.setpregflags.php"}, {"name": "ResourceBundle::count", "synopsis": "Procedural style", "usage": "public int ResourceBundle::count ( void )", "url": "https://secure.php.net/manual/en/resourcebundle.count.php"}, {"name": "ResourceBundle::create", "synopsis": "Procedural style", "usage": "public static ResourceBundle ResourceBundle::create ( string $locale , string $bundlename [, bool $fallback ] )", "url": "https://secure.php.net/manual/en/resourcebundle.create.php"}, {"name": "ResourceBundle::get", "synopsis": "Procedural style", "usage": "public mixed ResourceBundle::get ( string|int $index [, bool $fallback = TRUE ] )", "url": "https://secure.php.net/manual/en/resourcebundle.get.php"}, {"name": "ResourceBundle::getErrorCode", "synopsis": "Procedural style", "usage": "public int ResourceBundle::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/resourcebundle.geterrorcode.php"}, {"name": "ResourceBundle::getErrorMessage", "synopsis": "Procedural style", "usage": "public string ResourceBundle::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/resourcebundle.geterrormessage.php"}, {"name": "ResourceBundle::getLocales", "synopsis": "Procedural style", "usage": "public array ResourceBundle::getLocales ( string $bundlename )", "url": "https://secure.php.net/manual/en/resourcebundle.locales.php"}, {"name": "RRDCreator::addArchive", "synopsis": "Adds RRA definition by description of archive. Archive consists of a number of data values or statistics for each of the defined data-sources (DS). Data sources are defined by method RRDCreator::addDataSource(). You need call this method for each requested archive.", "usage": "public void RRDCreator::addArchive ( string $description )", "url": "https://secure.php.net/manual/en/rrdcreator.addarchive.php"}, {"name": "RRDCreator::addDataSource", "synopsis": "RRD can accept input from several data sources (DS), e.g incoming and outgoing traffic. This method adds data source by description. You need call this method for each data source.", "usage": "public void RRDCreator::addDataSource ( string $description )", "url": "https://secure.php.net/manual/en/rrdcreator.adddatasource.php"}, {"name": "RRDCreator::__construct", "synopsis": "Creates new RRDCreator instance.", "usage": "public RRDCreator::__construct ( string $path [, string $startTime [, int $step = 0 ]] )", "url": "https://secure.php.net/manual/en/rrdcreator.construct.php"}, {"name": "RRDCreator::save", "synopsis": "Saves the RRD database into file, which name is defined by RRDCreator::__construct().", "usage": "public bool RRDCreator::save ( void )", "url": "https://secure.php.net/manual/en/rrdcreator.save.php"}, {"name": "RRDGraph::__construct", "synopsis": "Creates new RRDGraph instance. This instance is responsible for rendering the result of RRD database query into image.", "usage": "public RRDGraph::__construct ( string $path )", "url": "https://secure.php.net/manual/en/rrdgraph.construct.php"}, {"name": "RRDGraph::save", "synopsis": "Saves the result of RRD database query into image defined by RRDGraph::__construct().", "usage": "public array RRDGraph::save ( void )", "url": "https://secure.php.net/manual/en/rrdgraph.save.php"}, {"name": "RRDGraph::saveVerbose", "synopsis": "Saves the RRD database query into image file defined by method RRDGraph::__construct() and returns the verbose information about generated graph, if \"-\" is used as image filename, image data are also returned in result array.", "usage": "public array RRDGraph::saveVerbose ( void )", "url": "https://secure.php.net/manual/en/rrdgraph.saveverbose.php"}, {"name": "RRDGraph::setOptions", "synopsis": "", "usage": "public void RRDGraph::setOptions ( array $options )", "url": "https://secure.php.net/manual/en/rrdgraph.setoptions.php"}, {"name": "RRDUpdater::__construct", "synopsis": "Creates new RRDUpdater instance. This instance is responsible for updating the RRD database file.", "usage": "public RRDUpdater::__construct ( string $path )", "url": "https://secure.php.net/manual/en/rrdupdater.construct.php"}, {"name": "RRDUpdater::update", "synopsis": "Updates the RRD file defined via RRDUpdater::__construct(). The file is updated with a specific values.", "usage": "public bool RRDUpdater::update ( array $values [, string $time = time() ] )", "url": "https://secure.php.net/manual/en/rrdupdater.update.php"}, {"name": "Runkit_Sandbox_Parent::__construct", "synopsis": "Instantiating the Runkit_Sandbox_Parent class from within a sandbox environment created from the Runkit_Sandbox class provides some (controlled) means for a sandbox child to access its parent.", "usage": "void Runkit_Sandbox_Parent::__construct ( void )", "url": "https://secure.php.net/manual/en/runkit.sandbox-parent.php"}, {"name": "Runkit_Sandbox::__construct", "synopsis": "options is an associative array containing any combination of the special ini options listed below.", "usage": "void Runkit_Sandbox::__construct ([ array $options ] )", "url": "https://secure.php.net/manual/en/runkit.sandbox.php"}, {"name": "SAMConnection::commit", "synopsis": "Calling the \"commit\" method on a Connection object commits (completes) all in-flight transactions that are part of the current unit of work.", "usage": "bool SAMConnection::commit ( void )", "url": "https://secure.php.net/manual/en/samconnection.commit.php"}, {"name": "SAMConnection::connect", "synopsis": "Calling the \"connect\" method on a SAMConnection object connects the PHP script to a messaging server. No messages can be sent or received until a connection is made.", "usage": "bool SAMConnection::connect ( string $protocol [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.connect.php"}, {"name": "SAMConnection::disconnect", "synopsis": "Calling the \"disconnect\" method on a SAMConnection object disconnects the PHP script from a messaging server. No messages can be sent or received after a connection has been disconnected.", "usage": "bool SAMConnection::disconnect ( void )", "url": "https://secure.php.net/manual/en/samconnection.disconnect.php"}, {"name": "SAMConnection::isConnected", "synopsis": "Calling the \"isConnected\" method on a Connection object will check whether the PHP script is connected to a messaging server. No messages can be sent or received unless a connection has been established with a Messaging server.", "usage": "bool SAMConnection::isConnected ( void )", "url": "https://secure.php.net/manual/en/samconnection.isconnected.php"}, {"name": "SAMConnection::peek", "synopsis": null, "usage": "SAMMessage SAMConnection::peek ( string $target [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.peek.php"}, {"name": "SAMConnection::peekAll", "synopsis": null, "usage": "array SAMConnection::peekAll ( string $target [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.peekall.php"}, {"name": "SAMConnection::receive", "synopsis": null, "usage": "SAMMessage SAMConnection::receive ( string $target [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.receive.php"}, {"name": "SAMConnection::remove", "synopsis": "Removes a message from a queue.", "usage": "SAMMessage SAMConnection::remove ( string $target [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.remove.php"}, {"name": "SAMConnection::rollback", "synopsis": "Rolls back an in-flight unit of work.", "usage": "bool SAMConnection::rollback ( void )", "url": "https://secure.php.net/manual/en/samconnection.rollback.php"}, {"name": "SAMConnection::send", "synopsis": "The \"send\" method is used to send a message to a specific queue or to publish to a specific topic. The method returns a correlation id that can be used as a selector to identify reply or response messages when these are requested.", "usage": "string SAMConnection::send ( string $target , SAMMessage $msg [, array $properties ] )", "url": "https://secure.php.net/manual/en/samconnection.send.php"}, {"name": "SAMConnection::setDebug", "synopsis": null, "usage": "void SAMConnection::setDebug ( bool $switch )", "url": "https://secure.php.net/manual/en/samconnection.setdebug.php"}, {"name": "SAMConnection::subscribe", "synopsis": "The \"subscribe\" method is used to create a new subscription to a specified topic.", "usage": "string SAMConnection::subscribe ( string $targetTopic )", "url": "https://secure.php.net/manual/en/samconnection.subscribe.php"}, {"name": "SAMConnection::unsubscribe", "synopsis": "The \"unsubscribe\" method is used to delete an existing subscription to a specified topic.", "usage": "bool SAMConnection::unsubscribe ( string $subscriptionId [, string $targetTopic ] )", "url": "https://secure.php.net/manual/en/samconnection.unsubscribe.php"}, {"name": "SCA_LocalProxy::createDataObject", "synopsis": null, "usage": "SDO_DataObject SCA_LocalProxy::createDataObject ( string $type_namespace_uri , string $type_name )", "url": "https://secure.php.net/manual/en/sca-localproxy.createdataobject.php"}, {"name": "SCA_SoapProxy::createDataObject", "synopsis": null, "usage": "SDO_DataObject SCA_SoapProxy::createDataObject ( string $type_namespace_uri , string $type_name )", "url": "https://secure.php.net/manual/en/sca-soapproxy.createdataobject.php"}, {"name": "SCA::createDataObject", "synopsis": null, "usage": "SDO_DataObject SCA::createDataObject ( string $type_namespace_uri , string $type_name )", "url": "https://secure.php.net/manual/en/sca.createdataobject.php"}, {"name": "SCA::getService", "synopsis": null, "usage": "mixed SCA::getService ( string $target [, string $binding [, array $config ]] )", "url": "https://secure.php.net/manual/en/sca.getservice.php"}, {"name": "SDO_DAS_ChangeSummary::beginLogging", "synopsis": null, "usage": "void SDO_DAS_ChangeSummary::beginLogging ( void )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.beginlogging.php"}, {"name": "SDO_DAS_ChangeSummary::endLogging", "synopsis": null, "usage": "void SDO_DAS_ChangeSummary::endLogging ( void )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.endlogging.php"}, {"name": "SDO_DAS_ChangeSummary::getChangedDataObjects", "synopsis": null, "usage": "SDO_List SDO_DAS_ChangeSummary::getChangedDataObjects ( void )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.getchangeddataobjects.php"}, {"name": "SDO_DAS_ChangeSummary::getChangeType", "synopsis": null, "usage": "int SDO_DAS_ChangeSummary::getChangeType ( SDO_DataObject $dataObject )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.getchangetype.php"}, {"name": "SDO_DAS_ChangeSummary::getOldContainer", "synopsis": null, "usage": "SDO_DataObject SDO_DAS_ChangeSummary::getOldContainer ( SDO_DataObject $data_object )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.getoldcontainer.php"}, {"name": "SDO_DAS_ChangeSummary::getOldValues", "synopsis": null, "usage": "SDO_List SDO_DAS_ChangeSummary::getOldValues ( SDO_DataObject $data_object )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.getoldvalues.php"}, {"name": "SDO_DAS_ChangeSummary::isLogging", "synopsis": null, "usage": "bool SDO_DAS_ChangeSummary::isLogging ( void )", "url": "https://secure.php.net/manual/en/sdo-das-changesummary.islogging.php"}, {"name": "SDO_DAS_DataFactory::addPropertyToType", "synopsis": null, "usage": "void SDO_DAS_DataFactory::addPropertyToType ( string $parent_type_namespace_uri , string $parent_type_name , string $property_name , string $type_namespace_uri , string $type_name [, array $options ] )", "url": "https://secure.php.net/manual/en/sdo-das-datafactory.addpropertytotype.php"}, {"name": "SDO_DAS_DataFactory::addType", "synopsis": null, "usage": "void SDO_DAS_DataFactory::addType ( string $type_namespace_uri , string $type_name [, array $options ] )", "url": "https://secure.php.net/manual/en/sdo-das-datafactory.addtype.php"}, {"name": "SDO_DAS_DataFactory::getDataFactory", "synopsis": null, "usage": "SDO_DAS_DataFactory SDO_DAS_DataFactory::getDataFactory ( void )", "url": "https://secure.php.net/manual/en/sdo-das-datafactory.getdatafactory.php"}, {"name": "SDO_DAS_DataObject::getChangeSummary", "synopsis": null, "usage": "SDO_DAS_ChangeSummary SDO_DAS_DataObject::getChangeSummary ( void )", "url": "https://secure.php.net/manual/en/sdo-das-dataobject.getchangesummary.php"}, {"name": "SDO_DAS_Relational::applyChanges", "synopsis": null, "usage": "void SDO_DAS_Relational::applyChanges ( PDO $database_handle , SDODataObject $root_data_object )", "url": "https://secure.php.net/manual/en/sdo-das-relational.applychanges.php"}, {"name": "SDO_DAS_Relational::__construct", "synopsis": null, "usage": "SDO_DAS_Relational::__construct ( array $database_metadata [, string $application_root_type [, array $SDO_containment_references_metadata ]] )", "url": "https://secure.php.net/manual/en/sdo-das-relational.construct.php"}, {"name": "SDO_DAS_Relational::createRootDataObject", "synopsis": null, "usage": "SDODataObject SDO_DAS_Relational::createRootDataObject ( void )", "url": "https://secure.php.net/manual/en/sdo-das-relational.createrootdataobject.php"}, {"name": "SDO_DAS_Relational::executePreparedQuery", "synopsis": null, "usage": "SDODataObject SDO_DAS_Relational::executePreparedQuery ( PDO $database_handle , PDOStatement $prepared_statement , array $value_list [, array $column_specifier ] )", "url": "https://secure.php.net/manual/en/sdo-das-relational.executepreparedquery.php"}, {"name": "SDO_DAS_Relational::executeQuery", "synopsis": null, "usage": "SDODataObject SDO_DAS_Relational::executeQuery ( PDO $database_handle , string $SQL_statement [, array $column_specifier ] )", "url": "https://secure.php.net/manual/en/sdo-das-relational.executequery.php"}, {"name": "SDO_DAS_Setting::getListIndex", "synopsis": null, "usage": "int SDO_DAS_Setting::getListIndex ( void )", "url": "https://secure.php.net/manual/en/sdo-das-setting.getlistindex.php"}, {"name": "SDO_DAS_Setting::getPropertyIndex", "synopsis": null, "usage": "int SDO_DAS_Setting::getPropertyIndex ( void )", "url": "https://secure.php.net/manual/en/sdo-das-setting.getpropertyindex.php"}, {"name": "SDO_DAS_Setting::getPropertyName", "synopsis": null, "usage": "string SDO_DAS_Setting::getPropertyName ( void )", "url": "https://secure.php.net/manual/en/sdo-das-setting.getpropertyname.php"}, {"name": "SDO_DAS_Setting::getValue", "synopsis": null, "usage": "mixed SDO_DAS_Setting::getValue ( void )", "url": "https://secure.php.net/manual/en/sdo-das-setting.getvalue.php"}, {"name": "SDO_DAS_Setting::isSet", "synopsis": null, "usage": "bool SDO_DAS_Setting::isSet ( void )", "url": "https://secure.php.net/manual/en/sdo-das-setting.isset.php"}, {"name": "SDO_DAS_XML_Document::getRootDataObject", "synopsis": "Returns the root SDO_DataObject.", "usage": "SDO_DataObject SDO_DAS_XML_Document::getRootDataObject ( void )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.getrootdataobject.php"}, {"name": "SDO_DAS_XML_Document::getRootElementName", "synopsis": "Returns root element's name.", "usage": "string SDO_DAS_XML_Document::getRootElementName ( void )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.getrootelementname.php"}, {"name": "SDO_DAS_XML_Document::getRootElementURI", "synopsis": "Returns root element's URI string.", "usage": "string SDO_DAS_XML_Document::getRootElementURI ( void )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.getrootelementuri.php"}, {"name": "SDO_DAS_XML_Document::setEncoding", "synopsis": "Sets the given string as encoding.", "usage": "void SDO_DAS_XML_Document::setEncoding ( string $encoding )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.setencoding.php"}, {"name": "SDO_DAS_XML_Document::setXMLDeclaration", "synopsis": "Controls whether an XML declaration will be generated at the start of the XML document. Set to TRUE to generate the XML declaration, or FALSE to suppress it.", "usage": "void SDO_DAS_XML_Document::setXMLDeclaration ( bool $xmlDeclatation )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.setxmldeclaration.php"}, {"name": "SDO_DAS_XML_Document::setXMLVersion", "synopsis": "Sets the given string as xml version.", "usage": "void SDO_DAS_XML_Document::setXMLVersion ( string $xmlVersion )", "url": "https://secure.php.net/manual/en/sdo-das-xml-document.setxmlversion.php"}, {"name": "SDO_DAS_XML::addTypes", "synopsis": "Load a second or subsequent schema file to an XML DAS that has already been created with the static method create(). Although the file may be any valid schema file, a likely reason for using this method is to add a schema file containing definitions of extra complex types, hence the name. See Example 4 of the parent document for an example.", "usage": "void SDO_DAS_XML::addTypes ( string $xsd_file )", "url": "https://secure.php.net/manual/en/sdo-das-xml.addtypes.php"}, {"name": "SDO_DAS_XML::create", "synopsis": "This is the only static method of SDO_DAS_XML class. Used to instantiate SDO_DAS_XML object.", "usage": "SDO_DAS_XML SDO_DAS_XML::create ([ mixed $xsd_file [, string $key ]] )", "url": "https://secure.php.net/manual/en/sdo-das-xml.create.php"}, {"name": "SDO_DAS_XML::createDataObject", "synopsis": "Creates SDO_DataObject for a given namespace URI and type name. The type should be defined in the underlying model otherwise SDO_TypeNotFoundException will be thrown.", "usage": "SDO_DataObject SDO_DAS_XML::createDataObject ( string $namespace_uri , string $type_name )", "url": "https://secure.php.net/manual/en/sdo-das-xml.createdataobject.php"}, {"name": "SDO_DAS_XML::createDocument", "synopsis": "Creates an XML Document object. This will contain just one empty root element on which none of the properties will have been set. The purpose of this call is to allow an application to create an XML document from scratch without the need to load a document from a file or string. The document that is created will be as if a document had been loaded that contained just a single empty document element with no attributes set or elements within it.", "usage": "SDO_DAS_XML_Document SDO_DAS_XML::createDocument ([ string $document_element_name ] )", "url": "https://secure.php.net/manual/en/sdo-das-xml.createdocument.php"}, {"name": "SDO_DAS_XML::loadFile", "synopsis": "Constructs the tree of SDO_DataObjects from the given address to xml instance document. Returns SDO_DAS_XML_Document Object. Use SDO_DAS_XML_Document::getRootDataObject method to get root data object.", "usage": "SDO_XMLDocument SDO_DAS_XML::loadFile ( string $xml_file )", "url": "https://secure.php.net/manual/en/sdo-das-xml.loadfile.php"}, {"name": "SDO_DAS_XML::loadString", "synopsis": "Constructs the tree of SDO_DataObjects from the given xml instance string. Returns SDO_DAS_XML_Document Object. Use SDO_DAS_XML_Document::getRootDataObject method to get root data object.", "usage": "SDO_DAS_XML_Document SDO_DAS_XML::loadString ( string $xml_string )", "url": "https://secure.php.net/manual/en/sdo-das-xml.loadstring.php"}, {"name": "SDO_DAS_XML::saveFile", "synopsis": "Saves the SDO_DAS_XML_Document object to a file.", "usage": "void SDO_DAS_XML::saveFile ( SDO_XMLDocument $xdoc , string $xml_file [, int $indent ] )", "url": "https://secure.php.net/manual/en/sdo-das-xml.savefile.php"}, {"name": "SDO_DAS_XML::saveString", "synopsis": "Saves the SDO_DAS_XML_Document object to string.", "usage": "string SDO_DAS_XML::saveString ( SDO_XMLDocument $xdoc [, int $indent ] )", "url": "https://secure.php.net/manual/en/sdo-das-xml.savestring.php"}, {"name": "SDO_DataFactory::create", "synopsis": null, "usage": "void SDO_DataFactory::create ( string $type_namespace_uri , string $type_name )", "url": "https://secure.php.net/manual/en/sdo-datafactory.create.php"}, {"name": "SDO_DataObject::clear", "synopsis": null, "usage": "void SDO_DataObject::clear ( void )", "url": "https://secure.php.net/manual/en/sdo-dataobject.clear.php"}, {"name": "SDO_DataObject::createDataObject", "synopsis": null, "usage": "SDO_DataObject SDO_DataObject::createDataObject ( mixed $identifier )", "url": "https://secure.php.net/manual/en/sdo-dataobject.createdataobject.php"}, {"name": "SDO_DataObject::getContainer", "synopsis": null, "usage": "SDO_DataObject SDO_DataObject::getContainer ( void )", "url": "https://secure.php.net/manual/en/sdo-dataobject.getcontainer.php"}, {"name": "SDO_DataObject::getSequence", "synopsis": null, "usage": "SDO_Sequence SDO_DataObject::getSequence ( void )", "url": "https://secure.php.net/manual/en/sdo-dataobject.getsequence.php"}, {"name": "SDO_DataObject::getTypeName", "synopsis": null, "usage": "string SDO_DataObject::getTypeName ( void )", "url": "https://secure.php.net/manual/en/sdo-dataobject.gettypename.php"}, {"name": "SDO_DataObject::getTypeNamespaceURI", "synopsis": null, "usage": "string SDO_DataObject::getTypeNamespaceURI ( void )", "url": "https://secure.php.net/manual/en/sdo-dataobject.gettypenamespaceuri.php"}, {"name": "SDO_Exception::getCause", "synopsis": null, "usage": "mixed SDO_Exception::getCause ( void )", "url": "https://secure.php.net/manual/en/sdo-exception.getcause.php"}, {"name": "SDO_List::insert", "synopsis": null, "usage": "void SDO_List::insert ( mixed $value [, int $index ] )", "url": "https://secure.php.net/manual/en/sdo-list.insert.php"}, {"name": "SDO_Model_Property::getContainingType", "synopsis": null, "usage": "SDO_Model_Type SDO_Model_Property::getContainingType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.getcontainingtype.php"}, {"name": "SDO_Model_Property::getDefault", "synopsis": null, "usage": "mixed SDO_Model_Property::getDefault ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.getdefault.php"}, {"name": "SDO_Model_Property::getName", "synopsis": null, "usage": "string SDO_Model_Property::getName ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.getname.php"}, {"name": "SDO_Model_Property::getType", "synopsis": null, "usage": "SDO_Model_Type SDO_Model_Property::getType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.gettype.php"}, {"name": "SDO_Model_Property::isContainment", "synopsis": null, "usage": "bool SDO_Model_Property::isContainment ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.iscontainment.php"}, {"name": "SDO_Model_Property::isMany", "synopsis": null, "usage": "bool SDO_Model_Property::isMany ( void )", "url": "https://secure.php.net/manual/en/sdo-model-property.ismany.php"}, {"name": "SDO_Model_ReflectionDataObject::__construct", "synopsis": null, "usage": "SDO_Model_ReflectionDataObject::__construct ( SDO_DataObject $data_object )", "url": "https://secure.php.net/manual/en/sdo-model-reflectiondataobject.construct.php"}, {"name": "SDO_Model_ReflectionDataObject::export", "synopsis": null, "usage": "mixed SDO_Model_ReflectionDataObject::export ( SDO_Model_ReflectionDataObject $rdo [, bool $return ] )", "url": "https://secure.php.net/manual/en/sdo-model-reflectiondataobject.export.php"}, {"name": "SDO_Model_ReflectionDataObject::getContainmentProperty", "synopsis": null, "usage": "SDO_Model_Property SDO_Model_ReflectionDataObject::getContainmentProperty ( void )", "url": "https://secure.php.net/manual/en/sdo-model-reflectiondataobject.getcontainmentproperty.php"}, {"name": "SDO_Model_ReflectionDataObject::getInstanceProperties", "synopsis": null, "usage": "array SDO_Model_ReflectionDataObject::getInstanceProperties ( void )", "url": "https://secure.php.net/manual/en/sdo-model-reflectiondataobject.getinstanceproperties.php"}, {"name": "SDO_Model_ReflectionDataObject::getType", "synopsis": null, "usage": "SDO_Model_Type SDO_Model_ReflectionDataObject::getType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-reflectiondataobject.gettype.php"}, {"name": "SDO_Model_Type::getBaseType", "synopsis": null, "usage": "SDO_Model_Type SDO_Model_Type::getBaseType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.getbasetype.php"}, {"name": "SDO_Model_Type::getName", "synopsis": null, "usage": "string SDO_Model_Type::getName ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.getname.php"}, {"name": "SDO_Model_Type::getNamespaceURI", "synopsis": null, "usage": "string SDO_Model_Type::getNamespaceURI ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.getnamespaceuri.php"}, {"name": "SDO_Model_Type::getProperties", "synopsis": null, "usage": "array SDO_Model_Type::getProperties ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.getproperties.php"}, {"name": "SDO_Model_Type::getProperty", "synopsis": null, "usage": "SDO_Model_Property SDO_Model_Type::getProperty ( mixed $identifier )", "url": "https://secure.php.net/manual/en/sdo-model-type.getproperty.php"}, {"name": "SDO_Model_Type::isAbstractType", "synopsis": null, "usage": "bool SDO_Model_Type::isAbstractType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.isabstracttype.php"}, {"name": "SDO_Model_Type::isDataType", "synopsis": null, "usage": "bool SDO_Model_Type::isDataType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.isdatatype.php"}, {"name": "SDO_Model_Type::isInstance", "synopsis": null, "usage": "bool SDO_Model_Type::isInstance ( SDO_DataObject $data_object )", "url": "https://secure.php.net/manual/en/sdo-model-type.isinstance.php"}, {"name": "SDO_Model_Type::isOpenType", "synopsis": null, "usage": "bool SDO_Model_Type::isOpenType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.isopentype.php"}, {"name": "SDO_Model_Type::isSequencedType", "synopsis": null, "usage": "bool SDO_Model_Type::isSequencedType ( void )", "url": "https://secure.php.net/manual/en/sdo-model-type.issequencedtype.php"}, {"name": "SDO_Sequence::getProperty", "synopsis": null, "usage": "SDO_Model_Property SDO_Sequence::getProperty ( int $sequence_index )", "url": "https://secure.php.net/manual/en/sdo-sequence.getproperty.php"}, {"name": "SDO_Sequence::insert", "synopsis": null, "usage": "void SDO_Sequence::insert ( mixed $value [, int $sequenceIndex [, mixed $propertyIdentifier ]] )", "url": "https://secure.php.net/manual/en/sdo-sequence.insert.php"}, {"name": "SDO_Sequence::move", "synopsis": null, "usage": "void SDO_Sequence::move ( int $toIndex, int $fromIndex )", "url": "https://secure.php.net/manual/en/sdo-sequence.move.php"}, {"name": "SeekableIterator::seek", "synopsis": "Seeks to a given position in the iterator.", "usage": "abstract public void SeekableIterator::seek ( int $position )", "url": "https://secure.php.net/manual/en/seekableiterator.seek.php"}, {"name": "Serializable::serialize", "synopsis": "Should return the string representation of the object.", "usage": "abstract public string Serializable::serialize ( void )", "url": "https://secure.php.net/manual/en/serializable.serialize.php"}, {"name": "Serializable::unserialize", "synopsis": "Called during unserialization of the object.", "usage": "abstract public void Serializable::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/serializable.unserialize.php"}, {"name": "SessionHandler::close", "synopsis": "Closes the current session. This method is automatically executed internally by PHP when closing the session, or explicitly via session_write_close() (which first calls the SessionHandler::write()).", "usage": "public bool SessionHandler::close ( void )", "url": "https://secure.php.net/manual/en/sessionhandler.close.php"}, {"name": "SessionHandler::create_sid", "synopsis": "Generates and returns a new session ID.", "usage": "public string SessionHandler::create_sid ( void )", "url": "https://secure.php.net/manual/en/sessionhandler.create-sid.php"}, {"name": "SessionHandler::destroy", "synopsis": "Destroys a session. Called internally by PHP with session_regenerate_id() (assuming the $destroy is set to TRUE, by session_destroy() or when session_decode() fails.", "usage": "public bool SessionHandler::destroy ( string $session_id )", "url": "https://secure.php.net/manual/en/sessionhandler.destroy.php"}, {"name": "SessionHandler::gc", "synopsis": "Cleans up expired sessions. Called randomly by PHP internally when a session starts or when session_start() is invoked. The frequency this is called is based on the session.gc_divisor and session.gc_probability configuration directives.", "usage": "public int SessionHandler::gc ( int $maxlifetime )", "url": "https://secure.php.net/manual/en/sessionhandler.gc.php"}, {"name": "SessionHandler::open", "synopsis": "Create new session, or re-initialize existing session. Called internally by PHP when a session starts either automatically or when session_start() is invoked.", "usage": "public bool SessionHandler::open ( string $save_path , string $session_name )", "url": "https://secure.php.net/manual/en/sessionhandler.open.php"}, {"name": "SessionHandler::read", "synopsis": "Reads the session data from the session storage, and returns the result back to PHP for internal processing. This method is called automatically by PHP when a session is started (either automatically or explicity with session_start() and is preceeded by an internal call to the SessionHandler::open().", "usage": "public string SessionHandler::read ( string $session_id )", "url": "https://secure.php.net/manual/en/sessionhandler.read.php"}, {"name": "SessionHandler::write", "synopsis": "Writes the session data to the session storage. Called by normal PHP shutdown, by session_write_close(), or when session_register_shutdown() fails. PHP will call SessionHandler::close() immediately after this method returns.", "usage": "public bool SessionHandler::write ( string $session_id , string $session_data )", "url": "https://secure.php.net/manual/en/sessionhandler.write.php"}, {"name": "SessionHandlerInterface::close", "synopsis": "Closes the current session. This function is automatically executed when closing the session, or explicitly via session_write_close().", "usage": "abstract public bool SessionHandlerInterface::close ( void )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.close.php"}, {"name": "SessionHandlerInterface::destroy", "synopsis": "Destroys a session. Called by session_regenerate_id() (with $destroy = TRUE), session_destroy() and when session_decode() fails.", "usage": "abstract public bool SessionHandlerInterface::destroy ( string $session_id )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.destroy.php"}, {"name": "SessionHandlerInterface::gc", "synopsis": "Cleans up expired sessions. Called by session_start(), based on session.gc_divisor, session.gc_probability and session.gc_maxlifetime settings.", "usage": "abstract public int SessionHandlerInterface::gc ( int $maxlifetime )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.gc.php"}, {"name": "SessionHandlerInterface::open", "synopsis": "Re-initialize existing session, or creates a new one. Called when a session starts or when session_start() is invoked.", "usage": "abstract public bool SessionHandlerInterface::open ( string $save_path , string $session_name )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.open.php"}, {"name": "SessionHandlerInterface::read", "synopsis": "Reads the session data from the session storage, and returns the results. Called right after the session starts or when session_start() is called. Please note that before this method is called SessionHandlerInterface::open() is invoked.", "usage": "abstract public string SessionHandlerInterface::read ( string $session_id )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.read.php"}, {"name": "SessionHandlerInterface::write", "synopsis": "Writes the session data to the session storage. Called by session_write_close(), when session_register_shutdown() fails, or during a normal shutdown. Note: SessionHandlerInterface::close() is called immediately after this function.", "usage": "abstract public bool SessionHandlerInterface::write ( string $session_id , string $session_data )", "url": "https://secure.php.net/manual/en/sessionhandlerinterface.write.php"}, {"name": "SessionIdInterface::create_sid", "synopsis": "", "usage": "abstract public string SessionIdInterface::create_sid ( void )", "url": "https://secure.php.net/manual/en/sessionidinterface.create-sid.php"}, {"name": "SessionUpdateTimestampHandlerInterface::updateTimestamp", "synopsis": "", "usage": "abstract public bool SessionUpdateTimestampHandlerInterface::updateTimestamp ( string $key , string $val )", "url": "https://secure.php.net/manual/en/sessionupdatetimestamphandlerinterface.updatetimestamp.php"}, {"name": "SessionUpdateTimestampHandlerInterface::validateId", "synopsis": "", "usage": "abstract public bool SessionUpdateTimestampHandlerInterface::validateId ( string $key )", "url": "https://secure.php.net/manual/en/sessionupdatetimestamphandlerinterface.validateid.php"}, {"name": "SimpleXMLElement::addAttribute", "synopsis": "Adds an attribute to the SimpleXML element.", "usage": "public void SimpleXMLElement::addAttribute ( string $name [, string $value [, string $namespace ]] )", "url": "https://secure.php.net/manual/en/simplexmlelement.addattribute.php"}, {"name": "SimpleXMLElement::addChild", "synopsis": "Adds a child element to the node and returns a SimpleXMLElement of the child.", "usage": "public SimpleXMLElement SimpleXMLElement::addChild ( string $name [, string $value [, string $namespace ]] )", "url": "https://secure.php.net/manual/en/simplexmlelement.addchild.php"}, {"name": "SimpleXMLElement::asXML", "synopsis": "The asXML method formats the parent object's data in XML version 1.0.", "usage": "public mixed SimpleXMLElement::asXML ([ string $filename ] )", "url": "https://secure.php.net/manual/en/simplexmlelement.asxml.php"}, {"name": "SimpleXMLElement::attributes", "synopsis": "This function provides the attributes and values defined within an xml tag.", "usage": "public SimpleXMLElement SimpleXMLElement::attributes ([ string $ns = NULL [, bool $is_prefix = FALSE ]] )", "url": "https://secure.php.net/manual/en/simplexmlelement.attributes.php"}, {"name": "SimpleXMLElement::children", "synopsis": "This method finds the children of an element. The result follows normal iteration rules.", "usage": "public SimpleXMLElement SimpleXMLElement::children ([ string $ns [, bool $is_prefix = FALSE ]] )", "url": "https://secure.php.net/manual/en/simplexmlelement.children.php"}, {"name": "SimpleXMLElement::count", "synopsis": "This method counts the number of children of an element.", "usage": "public int SimpleXMLElement::count ( void )", "url": "https://secure.php.net/manual/en/simplexmlelement.count.php"}, {"name": "SimpleXMLElement::getDocNamespaces", "synopsis": "Returns namespaces declared in document", "usage": "public array SimpleXMLElement::getDocNamespaces ([ bool $recursive = FALSE [, bool $from_root = TRUE ]] )", "url": "https://secure.php.net/manual/en/simplexmlelement.getdocnamespaces.php"}, {"name": "SimpleXMLElement::getName", "synopsis": "Gets the name of the XML element.", "usage": "public string SimpleXMLElement::getName ( void )", "url": "https://secure.php.net/manual/en/simplexmlelement.getname.php"}, {"name": "SimpleXMLElement::getNamespaces", "synopsis": "Returns namespaces used in document", "usage": "public array SimpleXMLElement::getNamespaces ([ bool $recursive = FALSE ] )", "url": "https://secure.php.net/manual/en/simplexmlelement.getnamespaces.php"}, {"name": "SimpleXMLElement::registerXPathNamespace", "synopsis": "Creates a prefix/ns context for the next XPath query. In particular, this is helpful if the provider of the given XML document alters the namespace prefixes. registerXPathNamespace will create a prefix for the associated namespace, allowing one to access nodes in that namespace without the need to change code to allow for the new prefixes dictated by the provider.", "usage": "public bool SimpleXMLElement::registerXPathNamespace ( string $prefix , string $ns )", "url": "https://secure.php.net/manual/en/simplexmlelement.registerxpathnamespace.php"}, {"name": "SimpleXMLElement::__toString", "synopsis": "Returns text content that is directly in this element. Does not return text content that is inside this element's children.", "usage": "public string SimpleXMLElement::__toString ( void )", "url": "https://secure.php.net/manual/en/simplexmlelement.tostring.php"}, {"name": "SimpleXMLElement::xpath", "synopsis": "The xpath method searches the SimpleXML node for children matching the XPath path.", "usage": "public array SimpleXMLElement::xpath ( string $path )", "url": "https://secure.php.net/manual/en/simplexmlelement.xpath.php"}, {"name": "SimpleXMLIterator::current", "synopsis": "This method returns the current element as a SimpleXMLIterator object or NULL.", "usage": "public mixed SimpleXMLIterator::current ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.current.php"}, {"name": "SimpleXMLIterator::getChildren", "synopsis": "This method returns a SimpleXMLIterator object containing sub-elements of the current SimpleXMLIterator element.", "usage": "public SimpleXMLIterator SimpleXMLIterator::getChildren ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.getchildren.php"}, {"name": "SimpleXMLIterator::hasChildren", "synopsis": "This method checks whether the current SimpleXMLIterator element has sub-elements.", "usage": "public bool SimpleXMLIterator::hasChildren ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.haschildren.php"}, {"name": "SimpleXMLIterator::key", "synopsis": "This method gets the XML tag name of the current element.", "usage": "public mixed SimpleXMLIterator::key ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.key.php"}, {"name": "SimpleXMLIterator::next", "synopsis": "This method moves the SimpleXMLIterator to the next element.", "usage": "public void SimpleXMLIterator::next ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.next.php"}, {"name": "SimpleXMLIterator::rewind", "synopsis": "This method rewinds the SimpleXMLIterator to the first element.", "usage": "public void SimpleXMLIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.rewind.php"}, {"name": "SimpleXMLIterator::valid", "synopsis": "This method checks if the current element is valid after calls to SimpleXMLIterator::rewind() or SimpleXMLIterator::next().", "usage": "public bool SimpleXMLIterator::valid ( void )", "url": "https://secure.php.net/manual/en/simplexmliterator.valid.php"}, {"name": "SNMP::close", "synopsis": "Frees previously allocated SNMP session object.", "usage": "public bool SNMP::close ( void )", "url": "https://secure.php.net/manual/en/snmp.close.php"}, {"name": "SNMP::get", "synopsis": "Fetch an SNMP object specified in object_id using GET query.", "usage": "public mixed SNMP::get ( mixed $object_id [, bool $preserve_keys = FALSE ] )", "url": "https://secure.php.net/manual/en/snmp.get.php"}, {"name": "SNMP::getErrno", "synopsis": "Returns error code from last SNMP request.", "usage": "public int SNMP::getErrno ( void )", "url": "https://secure.php.net/manual/en/snmp.geterrno.php"}, {"name": "SNMP::getError", "synopsis": "Returns string with error from last SNMP request.", "usage": "public string SNMP::getError ( void )", "url": "https://secure.php.net/manual/en/snmp.geterror.php"}, {"name": "SNMP::getnext", "synopsis": "Fetch an SNMP object that follows specified object_id.", "usage": "public mixed SNMP::getnext ( mixed $object_id )", "url": "https://secure.php.net/manual/en/snmp.getnext.php"}, {"name": "SNMP::set", "synopsis": "Requests remote SNMP agent setting the value of one or more SNMP objects specified by the object_id.", "usage": "public bool SNMP::set ( mixed $object_id , mixed $type , mixed $value )", "url": "https://secure.php.net/manual/en/snmp.set.php"}, {"name": "SNMP::setSecurity", "synopsis": "setSecurity configures security-related session parameters used in SNMP protocol version 3", "usage": "public bool SNMP::setSecurity ( string $sec_level [, string $auth_protocol = [, string $auth_passphrase = [, string $priv_protocol = [, string $priv_passphrase = [, string $contextName = [, string $contextEngineID = ]]]]]] )", "url": "https://secure.php.net/manual/en/snmp.setsecurity.php"}, {"name": "SNMP::walk", "synopsis": "SNMP::walk() is used to read SNMP subtree rooted at specified object_id.", "usage": "public array SNMP::walk ( string $object_id [, bool $suffix_as_key = FALSE [, int $max_repetitions [, int $non_repeaters ]]] )", "url": "https://secure.php.net/manual/en/snmp.walk.php"}, {"name": "SoapClient::__call", "synopsis": "Calling this method directly is deprecated. Usually, SOAP functions can be called as methods of the SoapClient object; in situations where this is not possible or additional options are needed, use SoapClient::__soapCall().", "usage": "public mixed SoapClient::__call ( string $function_name , string $arguments )", "url": "https://secure.php.net/manual/en/soapclient.call.php"}, {"name": "SoapClient::__construct", "synopsis": "This function is an alias of: SoapClient::SoapClient()", "usage": "public SoapClient::__construct ( mixed $wsdl [, array $options ] )", "url": "https://secure.php.net/manual/en/soapclient.construct.php"}, {"name": "SoapClient::__doRequest", "synopsis": "Performs SOAP request over HTTP.", "usage": "public string SoapClient::__doRequest ( string $request , string $location , string $action , int $version [, int $one_way = 0 ] )", "url": "https://secure.php.net/manual/en/soapclient.dorequest.php"}, {"name": "SoapClient::__getCookies", "synopsis": "", "usage": "public array SoapClient::__getCookies ( void )", "url": "https://secure.php.net/manual/en/soapclient.getcookies.php"}, {"name": "SoapClient::__getFunctions", "synopsis": "Returns an array of functions described in the WSDL for the Web service.", "usage": "public array SoapClient::__getFunctions ( void )", "url": "https://secure.php.net/manual/en/soapclient.getfunctions.php"}, {"name": "SoapClient::__getLastRequest", "synopsis": "Returns the XML sent in the last SOAP request.", "usage": "public string SoapClient::__getLastRequest ( void )", "url": "https://secure.php.net/manual/en/soapclient.getlastrequest.php"}, {"name": "SoapClient::__getLastRequestHeaders", "synopsis": "Returns the SOAP headers from the last request.", "usage": "public string SoapClient::__getLastRequestHeaders ( void )", "url": "https://secure.php.net/manual/en/soapclient.getlastrequestheaders.php"}, {"name": "SoapClient::__getLastResponse", "synopsis": "Returns the XML received in the last SOAP response.", "usage": "public string SoapClient::__getLastResponse ( void )", "url": "https://secure.php.net/manual/en/soapclient.getlastresponse.php"}, {"name": "SoapClient::__getLastResponseHeaders", "synopsis": "Returns the SOAP headers from the last response.", "usage": "public string SoapClient::__getLastResponseHeaders ( void )", "url": "https://secure.php.net/manual/en/soapclient.getlastresponseheaders.php"}, {"name": "SoapClient::__getTypes", "synopsis": "Returns an array of types described in the WSDL for the Web service.", "usage": "public array SoapClient::__getTypes ( void )", "url": "https://secure.php.net/manual/en/soapclient.gettypes.php"}, {"name": "SoapClient::__setCookie", "synopsis": "Defines a cookie to be sent along with the SOAP requests.", "usage": "public void SoapClient::__setCookie ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/soapclient.setcookie.php"}, {"name": "SoapClient::__setLocation", "synopsis": "Sets the endpoint URL that will be touched by following SOAP requests. This is equivalent to specifying the location option when constructing the SoapClient.", "usage": "public string SoapClient::__setLocation ([ string $new_location ] )", "url": "https://secure.php.net/manual/en/soapclient.setlocation.php"}, {"name": "SoapClient::__setSoapHeaders", "synopsis": "Defines headers to be sent along with the SOAP requests.", "usage": "public bool SoapClient::__setSoapHeaders ([ mixed $soapheaders ] )", "url": "https://secure.php.net/manual/en/soapclient.setsoapheaders.php"}, {"name": "SoapClient::__soapCall", "synopsis": "This is a low level API function that is used to make a SOAP call. Usually, in WSDL mode, SOAP functions can be called as methods of the SoapClient object. This method is useful in non-WSDL mode when soapaction is unknown, uri differs from the default or when sending and/or receiving SOAP Headers.", "usage": "public mixed SoapClient::__soapCall ( string $function_name , array $arguments [, array $options [, mixed $input_headers [, array &$output_headers ]]] )", "url": "https://secure.php.net/manual/en/soapclient.soapcall.php"}, {"name": "SoapClient::SoapClient", "synopsis": "This constructor creates SoapClient objects in WSDL or non-WSDL mode.", "usage": "public SoapClient::SoapClient ( mixed $wsdl [, array $options ] )", "url": "https://secure.php.net/manual/en/soapclient.soapclient.php"}, {"name": "SoapFault::__construct", "synopsis": "This function is an alias of: SoapFault::SoapFault()", "usage": "SoapFault::__construct ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )", "url": "https://secure.php.net/manual/en/soapfault.construct.php"}, {"name": "SoapFault::SoapFault", "synopsis": "This class is used to send SOAP fault responses from the PHP handler. faultcode, faultstring, faultactor and detail are standard elements of a SOAP Fault.", "usage": "SoapFault::SoapFault ( string $faultcode , string $faultstring [, string $faultactor [, string $detail [, string $faultname [, string $headerfault ]]]] )", "url": "https://secure.php.net/manual/en/soapfault.soapfault.php"}, {"name": "SoapFault::__toString", "synopsis": "Returns a string representation of the SoapFault.", "usage": "public string SoapFault::__toString ( void )", "url": "https://secure.php.net/manual/en/soapfault.tostring.php"}, {"name": "SoapHeader::__construct", "synopsis": "This function is an alias of: SoapHeader::SoapHeader()", "usage": "SoapHeader::__construct ( string $namespace , string $name [, mixed $data [, bool $mustunderstand [, string $actor ]]] )", "url": "https://secure.php.net/manual/en/soapheader.construct.php"}, {"name": "SoapHeader::SoapHeader", "synopsis": "Constructs a new SoapHeader object.", "usage": "SoapHeader::SoapHeader ( string $namespace , string $name [, mixed $data [, bool $mustunderstand = FALSE [, string $actor ]]] )", "url": "https://secure.php.net/manual/en/soapheader.soapheader.php"}, {"name": "SoapParam::__construct", "synopsis": "This function is an alias of: SoapParam::SoapParam()", "usage": "SoapParam::__construct ( mixed $data , string $name )", "url": "https://secure.php.net/manual/en/soapparam.construct.php"}, {"name": "SoapParam::SoapParam", "synopsis": "Constructs a new SoapParam object.", "usage": "SoapParam::SoapParam ( mixed $data , string $name )", "url": "https://secure.php.net/manual/en/soapparam.soapparam.php"}, {"name": "SoapServer::addFunction", "synopsis": "Exports one or more functions for remote clients", "usage": "public void SoapServer::addFunction ( mixed $functions )", "url": "https://secure.php.net/manual/en/soapserver.addfunction.php"}, {"name": "SoapServer::addSoapHeader", "synopsis": "Adds a SOAP header to be returned with the response to the current request.", "usage": "public void SoapServer::addSoapHeader ( SoapHeader $object )", "url": "https://secure.php.net/manual/en/soapserver.addsoapheader.php"}, {"name": "SoapServer::__construct", "synopsis": "This function is an alias of: SoapServer::SoapServer()", "usage": "public SoapServer::__construct ( mixed $wsdl [, array $options ] )", "url": "https://secure.php.net/manual/en/soapserver.construct.php"}, {"name": "SoapServer::fault", "synopsis": "Sends a response to the client of the current request indicating an error.", "usage": "public void SoapServer::fault ( string $code , string $string [, string $actor [, string $details [, string $name ]]] )", "url": "https://secure.php.net/manual/en/soapserver.fault.php"}, {"name": "SoapServer::getFunctions", "synopsis": "Returns a list of the defined functions in the SoapServer object. This method returns the list of all functions added by SoapServer::addFunction() or SoapServer::setClass().", "usage": "public array SoapServer::getFunctions ( void )", "url": "https://secure.php.net/manual/en/soapserver.getfunctions.php"}, {"name": "SoapServer::handle", "synopsis": "Processes a SOAP request, calls necessary functions, and sends a response back.", "usage": "public void SoapServer::handle ([ string $soap_request ] )", "url": "https://secure.php.net/manual/en/soapserver.handle.php"}, {"name": "SoapServer::setClass", "synopsis": "Exports all methods from specified class.", "usage": "public void SoapServer::setClass ( string $class_name [, mixed $args [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/soapserver.setclass.php"}, {"name": "SoapServer::setObject", "synopsis": "This sets a specific object as the handler for SOAP requests, rather than just a class as in SoapServer::setClass().", "usage": "public void SoapServer::setObject ( object $object )", "url": "https://secure.php.net/manual/en/soapserver.setobject.php"}, {"name": "SoapServer::setPersistence", "synopsis": "This function allows changing the persistence state of a SoapServer object between requests. This function allows saving data between requests utilizing PHP sessions. This method only has an affect on a SoapServer after it has exported functions utilizing SoapServer::setClass().", "usage": "public void SoapServer::setPersistence ( int $mode )", "url": "https://secure.php.net/manual/en/soapserver.setpersistence.php"}, {"name": "SoapServer::SoapServer", "synopsis": "This constructor allows the creation of SoapServer objects in WSDL or non-WSDL mode.", "usage": "public SoapServer::SoapServer ( mixed $wsdl [, array $options ] )", "url": "https://secure.php.net/manual/en/soapserver.soapserver.php"}, {"name": "SoapVar::__construct", "synopsis": "This function is an alias of: SoapVar::SoapVar()", "usage": "SoapVar::__construct ( mixed $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )", "url": "https://secure.php.net/manual/en/soapvar.construct.php"}, {"name": "SoapVar::SoapVar", "synopsis": "Constructs a new SoapVar object.", "usage": "SoapVar::SoapVar ( mixed $data , string $encoding [, string $type_name [, string $type_namespace [, string $node_name [, string $node_namespace ]]]] )", "url": "https://secure.php.net/manual/en/soapvar.soapvar.php"}, {"name": "SolrClient::addDocument", "synopsis": "This method adds a document to the index.", "usage": "public SolrUpdateResponse SolrClient::addDocument ( SolrInputDocument $doc [, bool $overwrite = TRUE [, int $commitWithin = 0 ]] )", "url": "https://secure.php.net/manual/en/solrclient.adddocument.php"}, {"name": "SolrClient::addDocuments", "synopsis": "Adds a collection of documents to the index.", "usage": "public void SolrClient::addDocuments ( array $docs [, bool $overwrite = TRUE [, int $commitWithin = 0 ]] )", "url": "https://secure.php.net/manual/en/solrclient.adddocuments.php"}, {"name": "SolrClient::commit", "synopsis": "This method finalizes all add/deletes made to the index.", "usage": "public SolrUpdateResponse SolrClient::commit ([ bool $softCommit = FALSE [, bool $waitSearcher = TRUE [, bool $expungeDeletes = FALSE ]]] )", "url": "https://secure.php.net/manual/en/solrclient.commit.php"}, {"name": "SolrClient::__construct", "synopsis": "Constructor for the SolrClient object", "usage": "public SolrClient::__construct ( array $clientOptions )", "url": "https://secure.php.net/manual/en/solrclient.construct.php"}, {"name": "SolrClient::deleteById", "synopsis": "Deletes the document with the specified ID. Where ID is the value of the uniqueKey field declared in the schema", "usage": "public SolrUpdateResponse SolrClient::deleteById ( string $id )", "url": "https://secure.php.net/manual/en/solrclient.deletebyid.php"}, {"name": "SolrClient::deleteByIds", "synopsis": "Deletes a collection of documents with the specified set of ids.", "usage": "public SolrUpdateResponse SolrClient::deleteByIds ( array $ids )", "url": "https://secure.php.net/manual/en/solrclient.deletebyids.php"}, {"name": "SolrClient::deleteByQueries", "synopsis": "Removes all documents matching any of the queries", "usage": "public SolrUpdateResponse SolrClient::deleteByQueries ( array $queries )", "url": "https://secure.php.net/manual/en/solrclient.deletebyqueries.php"}, {"name": "SolrClient::deleteByQuery", "synopsis": "Deletes all documents matching the given query.", "usage": "public SolrUpdateResponse SolrClient::deleteByQuery ( string $query )", "url": "https://secure.php.net/manual/en/solrclient.deletebyquery.php"}, {"name": "SolrClient::__destruct", "synopsis": "Destructor", "usage": "public void SolrClient::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrclient.destruct.php"}, {"name": "SolrClient::getById", "synopsis": "Get Document By Id. Utilizes Solr Realtime Get (RTG).", "usage": "public SolrQueryResponse SolrClient::getById ( string $id )", "url": "https://secure.php.net/manual/en/solrclient.getbyid.php"}, {"name": "SolrClient::getByIds", "synopsis": "Get Documents by their Ids. Utilizes Solr Realtime Get (RTG).", "usage": "public SolrQueryResponse SolrClient::getByIds ( array $ids )", "url": "https://secure.php.net/manual/en/solrclient.getbyids.php"}, {"name": "SolrClient::getDebug", "synopsis": "Returns the debug data for the last connection attempt", "usage": "public string SolrClient::getDebug ( void )", "url": "https://secure.php.net/manual/en/solrclient.getdebug.php"}, {"name": "SolrClient::getOptions", "synopsis": "Returns the client options set internally. Very useful for debugging. The values returned are readonly and can only be set when the object is instantiated.", "usage": "public array SolrClient::getOptions ( void )", "url": "https://secure.php.net/manual/en/solrclient.getoptions.php"}, {"name": "SolrClient::optimize", "synopsis": "Defragments the index for faster search performance.", "usage": "public SolrUpdateResponse SolrClient::optimize ([ int $maxSegments = 1 [, bool $softCommit = TRUE [, bool $waitSearcher = TRUE ]]] )", "url": "https://secure.php.net/manual/en/solrclient.optimize.php"}, {"name": "SolrClient::ping", "synopsis": "Checks if the Solr server is still alive. Sends a HEAD request to the Apache Solr server.", "usage": "public SolrPingResponse SolrClient::ping ( void )", "url": "https://secure.php.net/manual/en/solrclient.ping.php"}, {"name": "SolrClient::query", "synopsis": "Sends a query to the server.", "usage": "public SolrQueryResponse SolrClient::query ( SolrParams $query )", "url": "https://secure.php.net/manual/en/solrclient.query.php"}, {"name": "SolrClient::request", "synopsis": "Sends a raw XML update request to the server", "usage": "public SolrUpdateResponse SolrClient::request ( string $raw_request )", "url": "https://secure.php.net/manual/en/solrclient.request.php"}, {"name": "SolrClient::rollback", "synopsis": "Rollbacks all add/deletes made to the index since the last commit. It neither calls any event listeners nor creates a new searcher.", "usage": "public SolrUpdateResponse SolrClient::rollback ( void )", "url": "https://secure.php.net/manual/en/solrclient.rollback.php"}, {"name": "SolrClient::setResponseWriter", "synopsis": "Sets the response writer used to prepare the response from Solr", "usage": "public void SolrClient::setResponseWriter ( string $responseWriter )", "url": "https://secure.php.net/manual/en/solrclient.setresponsewriter.php"}, {"name": "SolrClient::setServlet", "synopsis": "Changes the specified servlet type to a new value", "usage": "public bool SolrClient::setServlet ( int $type , string $value )", "url": "https://secure.php.net/manual/en/solrclient.setservlet.php"}, {"name": "SolrClient::system", "synopsis": "Retrieve Solr Server information", "usage": "public void SolrClient::system ( void )", "url": "https://secure.php.net/manual/en/solrclient.system.php"}, {"name": "SolrClient::threads", "synopsis": "Checks the threads status", "usage": "public void SolrClient::threads ( void )", "url": "https://secure.php.net/manual/en/solrclient.threads.php"}, {"name": "SolrClientException::getInternalInfo", "synopsis": "Returns internal information where the Exception was thrown.", "usage": "public array SolrClientException::getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/solrclientexception.getinternalinfo.php"}, {"name": "SolrCollapseFunction::getField", "synopsis": "Returns the field that is being collapsed on.", "usage": "public string SolrCollapseFunction::getField ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.getfield.php"}, {"name": "SolrCollapseFunction::getHint", "synopsis": "Returns collapse hint", "usage": "public string SolrCollapseFunction::getHint ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.gethint.php"}, {"name": "SolrCollapseFunction::getMax", "synopsis": "Returns max parameter", "usage": "public string SolrCollapseFunction::getMax ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.getmax.php"}, {"name": "SolrCollapseFunction::getMin", "synopsis": "Returns min parameter", "usage": "public string SolrCollapseFunction::getMin ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.getmin.php"}, {"name": "SolrCollapseFunction::getNullPolicy", "synopsis": "Returns null policy used or null", "usage": "public string SolrCollapseFunction::getNullPolicy ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.getnullpolicy.php"}, {"name": "SolrCollapseFunction::getSize", "synopsis": "Gets the initial size of the collapse data structures when collapsing on a numeric field only", "usage": "public int SolrCollapseFunction::getSize ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.getsize.php"}, {"name": "SolrCollapseFunction::setField", "synopsis": "The field name to collapse on. In order to collapse a result. The field type must be a single valued String, Int or Float.", "usage": "public SolrCollapseFunction SolrCollapseFunction::setField ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.setfield.php"}, {"name": "SolrCollapseFunction::setHint", "synopsis": "Sets collapse hint", "usage": "public SolrCollapseFunction SolrCollapseFunction::setHint ( string $hint )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.sethint.php"}, {"name": "SolrCollapseFunction::setMax", "synopsis": "Selects the group heads by the max value of a numeric field or function query.", "usage": "public SolrCollapseFunction SolrCollapseFunction::setMax ( string $max )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.setmax.php"}, {"name": "SolrCollapseFunction::setMin", "synopsis": "Sets the initial size of the collapse data structures when collapsing on a numeric field only", "usage": "public SolrCollapseFunction SolrCollapseFunction::setMin ( string $min )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.setmin.php"}, {"name": "SolrCollapseFunction::setNullPolicy", "synopsis": "Sets the NULL Policy. One of the 3 policies defined as class constants shall be passed. Accepts ignore, expand, or collapse policies.", "usage": "public SolrCollapseFunction SolrCollapseFunction::setNullPolicy ( string $nullPolicy )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.setnullpolicy.php"}, {"name": "SolrCollapseFunction::setSize", "synopsis": "Sets the initial size of the collapse data structures when collapsing on a numeric field only.", "usage": "public SolrCollapseFunction SolrCollapseFunction::setSize ( int $size )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.setsize.php"}, {"name": "SolrCollapseFunction::__toString", "synopsis": "Returns a string representing the constructed collapse function", "usage": "public string SolrCollapseFunction::__toString ( void )", "url": "https://secure.php.net/manual/en/solrcollapsefunction.tostring.php"}, {"name": "SolrDisMaxQuery::addBigramPhraseField", "synopsis": "Adds a Phrase Bigram Field (pf2 parameter) output format: field~slop^boost OR field^boost Slop is optional", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addBigramPhraseField ( string $field , string $boost [, string $slop ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.addbigramphrasefield.php"}, {"name": "SolrDisMaxQuery::addBoostQuery", "synopsis": "Adds a Boost Query field with value [and boost] (bq parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addBoostQuery ( string $field , string $value [, string $boost ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.addboostquery.php"}, {"name": "SolrDisMaxQuery::addPhraseField", "synopsis": "Adds a Phrase Field (pf parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addPhraseField ( string $field , string $boost [, string $slop ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.addphrasefield.php"}, {"name": "SolrDisMaxQuery::addQueryField", "synopsis": "Add a query field with optional boost (qf parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addQueryField ( string $field [, string $boost ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.addqueryfield.php"}, {"name": "SolrDisMaxQuery::addTrigramPhraseField", "synopsis": "Adds a Trigram Phrase Field (pf3 parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addTrigramPhraseField ( string $field , string $boost [, string $slop ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.addtrigramphrasefield.php"}, {"name": "SolrDisMaxQuery::addUserField", "synopsis": "Adds a field to The User Fields Parameter (uf)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::addUserField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.adduserfield.php"}, {"name": "SolrDisMaxQuery::__construct", "synopsis": "Class constructor initializes the object and sets the q parameter if passed", "usage": "public SolrDisMaxQuery::__construct ([ string $q ] )", "url": "https://secure.php.net/manual/en/solrdismaxquery.construct.php"}, {"name": "SolrDisMaxQuery::removeBigramPhraseField", "synopsis": "Removes a Bigram Phrase Field (pf2 parameter) that was previously added using SolrDisMaxQuery::addBigramPhraseField()", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removeBigramPhraseField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removebigramphrasefield.php"}, {"name": "SolrDisMaxQuery::removeBoostQuery", "synopsis": "Removes a boost query partial from the existing query, only if SolrDisMaxQuery::addBoostQuery() was used.", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removeBoostQuery ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removeboostquery.php"}, {"name": "SolrDisMaxQuery::removePhraseField", "synopsis": "Removes a Phrase Field (pf parameter) that was previously added using SolrDisMaxQuery::addPhraseField", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removePhraseField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removephrasefield.php"}, {"name": "SolrDisMaxQuery::removeQueryField", "synopsis": "Removes a Query Field (qf parameter) from the field list added by SolrDisMaxQuery::addQueryField()", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removeQueryField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removequeryfield.php"}, {"name": "SolrDisMaxQuery::removeTrigramPhraseField", "synopsis": "Removes a Trigram Phrase Field (pf3 parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removeTrigramPhraseField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removetrigramphrasefield.php"}, {"name": "SolrDisMaxQuery::removeUserField", "synopsis": "Removes a field from The User Fields Parameter (uf)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::removeUserField ( string $field )", "url": "https://secure.php.net/manual/en/solrdismaxquery.removeuserfield.php"}, {"name": "SolrDisMaxQuery::setBigramPhraseFields", "synopsis": "Sets Bigram Phrase Fields (pf2) and their boosts (and slops)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseFields ( string $fields )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setbigramphrasefields.php"}, {"name": "SolrDisMaxQuery::setBigramPhraseSlop", "synopsis": "Sets Bigram Phrase Slop (ps2 parameter). A default slop for Bigram phrase fields.", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setBigramPhraseSlop ( string $slop )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setbigramphraseslop.php"}, {"name": "SolrDisMaxQuery::setBoostFunction", "synopsis": "Sets Boost Function (bf parameter).", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setBoostFunction ( string $function )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setboostfunction.php"}, {"name": "SolrDisMaxQuery::setBoostQuery", "synopsis": "Sets Boost Query Parameter (bq)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setBoostQuery ( string $q )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setboostquery.php"}, {"name": "SolrDisMaxQuery::setMinimumMatch", "synopsis": "Set Minimum \"Should\" Match parameter (mm). If the default query operator is AND then mm=100%, if the default query operator (q.op) is OR, then mm=0%.", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setMinimumMatch ( string $value )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setminimummatch.php"}, {"name": "SolrDisMaxQuery::setPhraseFields", "synopsis": "Sets Phrase Fields (pf) and their boosts (and slops)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setPhraseFields ( string $fields )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setphrasefields.php"}, {"name": "SolrDisMaxQuery::setPhraseSlop", "synopsis": "Sets the default amount of slop on phrase queries built with \"pf\", \"pf2\" and/or \"pf3\" fields (affects boosting). \"ps\" parameter", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setPhraseSlop ( string $slop )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setphraseslop.php"}, {"name": "SolrDisMaxQuery::setQueryAlt", "synopsis": "Set Query Alternate (q.alt parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setQueryAlt ( string $q )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setqueryalt.php"}, {"name": "SolrDisMaxQuery::setQueryPhraseSlop", "synopsis": "The Query Phrase Slop is the amount of slop permitted on phrase queries explicitly included in the user's query string with the qf parameter.", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setQueryPhraseSlop ( string $slop )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setqueryphraseslop.php"}, {"name": "SolrDisMaxQuery::setTieBreaker", "synopsis": "Sets Tie Breaker parameter (tie parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setTieBreaker ( string $tieBreaker )", "url": "https://secure.php.net/manual/en/solrdismaxquery.settiebreaker.php"}, {"name": "SolrDisMaxQuery::setTrigramPhraseFields", "synopsis": "Directly Sets Trigram Phrase Fields (pf3 parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseFields ( string $fields )", "url": "https://secure.php.net/manual/en/solrdismaxquery.settrigramphrasefields.php"}, {"name": "SolrDisMaxQuery::setTrigramPhraseSlop", "synopsis": "Sets Trigram Phrase Slop (ps3 parameter)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setTrigramPhraseSlop ( string $slop )", "url": "https://secure.php.net/manual/en/solrdismaxquery.settrigramphraseslop.php"}, {"name": "SolrDisMaxQuery::setUserFields", "synopsis": "Sets User Fields parameter (uf)", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::setUserFields ( string $fields )", "url": "https://secure.php.net/manual/en/solrdismaxquery.setuserfields.php"}, {"name": "SolrDisMaxQuery::useDisMaxQueryParser", "synopsis": "Switch QueryParser to be DisMax Query Parser", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::useDisMaxQueryParser ( void )", "url": "https://secure.php.net/manual/en/solrdismaxquery.usedismaxqueryparser.php"}, {"name": "SolrDisMaxQuery::useEDisMaxQueryParser", "synopsis": "Switch QueryParser to be EDisMax. By default the query builder uses edismax, if it was switched using SolrDisMaxQuery::useDisMaxQueryParser(), it can be switched back using this method.", "usage": "public SolrDisMaxQuery SolrDisMaxQuery::useEDisMaxQueryParser ( void )", "url": "https://secure.php.net/manual/en/solrdismaxquery.useedismaxqueryparser.php"}, {"name": "SolrDocument::addField", "synopsis": "This method adds a field to the SolrDocument instance.", "usage": "public bool SolrDocument::addField ( string $fieldName , string $fieldValue )", "url": "https://secure.php.net/manual/en/solrdocument.addfield.php"}, {"name": "SolrDocument::clear", "synopsis": "Resets the current object. Discards all the fields and resets the document boost to zero.", "usage": "public bool SolrDocument::clear ( void )", "url": "https://secure.php.net/manual/en/solrdocument.clear.php"}, {"name": "SolrDocument::__clone", "synopsis": "Creates a copy of a SolrDocument object. Not to be called directly.", "usage": "public void SolrDocument::__clone ( void )", "url": "https://secure.php.net/manual/en/solrdocument.clone.php"}, {"name": "SolrDocument::__construct", "synopsis": "Constructor for SolrDocument", "usage": "public SolrDocument::__construct ( void )", "url": "https://secure.php.net/manual/en/solrdocument.construct.php"}, {"name": "SolrDocument::current", "synopsis": "Retrieves the current field", "usage": "public SolrDocumentField SolrDocument::current ( void )", "url": "https://secure.php.net/manual/en/solrdocument.current.php"}, {"name": "SolrDocument::deleteField", "synopsis": "Removes a field from the document.", "usage": "public bool SolrDocument::deleteField ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.deletefield.php"}, {"name": "SolrDocument::__destruct", "synopsis": "Destructor for SolrDocument.", "usage": "public void SolrDocument::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrdocument.destruct.php"}, {"name": "SolrDocument::fieldExists", "synopsis": "Checks if the requested field as a valid fieldname in the document.", "usage": "public bool SolrDocument::fieldExists ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.fieldexists.php"}, {"name": "SolrDocument::__get", "synopsis": "Magic method for accessing the field as a property.", "usage": "public SolrDocumentField SolrDocument::__get ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.get.php"}, {"name": "SolrDocument::getChildDocuments", "synopsis": "Returns an array of child documents (SolrDocument)", "usage": "public array SolrDocument::getChildDocuments ( void )", "url": "https://secure.php.net/manual/en/solrdocument.getchilddocuments.php"}, {"name": "SolrDocument::getChildDocumentsCount", "synopsis": "Returns the number of child documents", "usage": "public int SolrDocument::getChildDocumentsCount ( void )", "url": "https://secure.php.net/manual/en/solrdocument.getchilddocumentscount.php"}, {"name": "SolrDocument::getField", "synopsis": "Retrieves a field by name.", "usage": "public SolrDocumentField SolrDocument::getField ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.getfield.php"}, {"name": "SolrDocument::getFieldCount", "synopsis": "Returns the number of fields in this document. Multi-value fields are only counted once.", "usage": "public int SolrDocument::getFieldCount ( void )", "url": "https://secure.php.net/manual/en/solrdocument.getfieldcount.php"}, {"name": "SolrDocument::getFieldNames", "synopsis": "Returns an array of fields names in the document.", "usage": "public array SolrDocument::getFieldNames ( void )", "url": "https://secure.php.net/manual/en/solrdocument.getfieldnames.php"}, {"name": "SolrDocument::getInputDocument", "synopsis": "Returns a SolrInputDocument equivalent of the object. This is useful if one wishes to resubmit/update a document retrieved from a query.", "usage": "public SolrInputDocument SolrDocument::getInputDocument ( void )", "url": "https://secure.php.net/manual/en/solrdocument.getinputdocument.php"}, {"name": "SolrDocument::hasChildDocuments", "synopsis": "Checks whether the document has any child documents", "usage": "public bool SolrDocument::hasChildDocuments ( void )", "url": "https://secure.php.net/manual/en/solrdocument.haschilddocuments.php"}, {"name": "SolrDocument::__isset", "synopsis": "Checks if a field exists", "usage": "public bool SolrDocument::__isset ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.isset.php"}, {"name": "SolrDocument::key", "synopsis": "Retrieves the current key.", "usage": "public string SolrDocument::key ( void )", "url": "https://secure.php.net/manual/en/solrdocument.key.php"}, {"name": "SolrDocument::merge", "synopsis": "Merges source to the current SolrDocument.", "usage": "public bool SolrDocument::merge ( SolrDocument $sourceDoc [, bool $overwrite = TRUE ] )", "url": "https://secure.php.net/manual/en/solrdocument.merge.php"}, {"name": "SolrDocument::next", "synopsis": "Moves the internal pointer to the next field.", "usage": "public void SolrDocument::next ( void )", "url": "https://secure.php.net/manual/en/solrdocument.next.php"}, {"name": "SolrDocument::offsetExists", "synopsis": "Checks if a particular field exists. This is used when the object is treated as an array.", "usage": "public bool SolrDocument::offsetExists ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.offsetexists.php"}, {"name": "SolrDocument::offsetGet", "synopsis": "This is used to retrieve the field when the object is treated as an array.", "usage": "public SolrDocumentField SolrDocument::offsetGet ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.offsetget.php"}, {"name": "SolrDocument::offsetSet", "synopsis": "Used when the object is treated as an array to add a field to the document.", "usage": "public void SolrDocument::offsetSet ( string $fieldName , string $fieldValue )", "url": "https://secure.php.net/manual/en/solrdocument.offsetset.php"}, {"name": "SolrDocument::offsetUnset", "synopsis": "Removes a field from the document.", "usage": "public void SolrDocument::offsetUnset ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.offsetunset.php"}, {"name": "SolrDocument::reset", "synopsis": "This is an alias to SolrDocument::clear()", "usage": "public bool SolrDocument::reset ( void )", "url": "https://secure.php.net/manual/en/solrdocument.reset.php"}, {"name": "SolrDocument::rewind", "synopsis": "Resets the internal pointer to the beginning.", "usage": "public void SolrDocument::rewind ( void )", "url": "https://secure.php.net/manual/en/solrdocument.rewind.php"}, {"name": "SolrDocument::serialize", "synopsis": "Used for custom serialization.", "usage": "public string SolrDocument::serialize ( void )", "url": "https://secure.php.net/manual/en/solrdocument.serialize.php"}, {"name": "SolrDocument::__set", "synopsis": "Adds another field to the document. Used to set the fields as new properties.", "usage": "public bool SolrDocument::__set ( string $fieldName , string $fieldValue )", "url": "https://secure.php.net/manual/en/solrdocument.set.php"}, {"name": "SolrDocument::sort", "synopsis": "", "usage": "public bool SolrDocument::sort ( int $sortOrderBy [, int $sortDirection = SolrDocument::SORT_ASC ] )", "url": "https://secure.php.net/manual/en/solrdocument.sort.php"}, {"name": "SolrDocument::toArray", "synopsis": "Returns an array representation of the document.", "usage": "public array SolrDocument::toArray ( void )", "url": "https://secure.php.net/manual/en/solrdocument.toarray.php"}, {"name": "SolrDocument::unserialize", "synopsis": "Custom serialization of SolrDocument objects", "usage": "public void SolrDocument::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/solrdocument.unserialize.php"}, {"name": "SolrDocument::__unset", "synopsis": "Removes a field from the document when the field is access as an object property.", "usage": "public bool SolrDocument::__unset ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrdocument.unset.php"}, {"name": "SolrDocument::valid", "synopsis": "Checks if the current position internally is still valid. It is used during foreach operations.", "usage": "public bool SolrDocument::valid ( void )", "url": "https://secure.php.net/manual/en/solrdocument.valid.php"}, {"name": "SolrDocumentField::__construct", "synopsis": "Constructor.", "usage": "public SolrDocumentField::__construct ( void )", "url": "https://secure.php.net/manual/en/solrdocumentfield.construct.php"}, {"name": "SolrDocumentField::__destruct", "synopsis": "Destructor.", "usage": "public void SolrDocumentField::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrdocumentfield.destruct.php"}, {"name": "SolrException::getInternalInfo", "synopsis": "Returns internal information where the Exception was thrown.", "usage": "public array SolrException::getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/solrexception.getinternalinfo.php"}, {"name": "SolrGenericResponse::__construct", "synopsis": "Constructor", "usage": "public SolrGenericResponse::__construct ( void )", "url": "https://secure.php.net/manual/en/solrgenericresponse.construct.php"}, {"name": "SolrGenericResponse::__destruct", "synopsis": "Destructor.", "usage": "public void SolrGenericResponse::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrgenericresponse.destruct.php"}, {"name": "SolrIllegalArgumentException::getInternalInfo", "synopsis": "Returns internal information where the Exception was thrown.", "usage": "public array SolrIllegalArgumentException::getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/solrillegalargumentexception.getinternalinfo.php"}, {"name": "SolrIllegalOperationException::getInternalInfo", "synopsis": "Returns internal information where the Exception was thrown.", "usage": "public array SolrIllegalOperationException::getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/solrillegaloperationexception.getinternalinfo.php"}, {"name": "SolrInputDocument::addChildDocument", "synopsis": "Adds a child document to construct a document block with nested documents.", "usage": "public void SolrInputDocument::addChildDocument ( SolrInputDocument $child )", "url": "https://secure.php.net/manual/en/solrinputdocument.addchilddocument.php"}, {"name": "SolrInputDocument::addChildDocuments", "synopsis": "Adds an array of child documents to the current input document.", "usage": "public void SolrInputDocument::addChildDocuments ( array &$docs )", "url": "https://secure.php.net/manual/en/solrinputdocument.addchilddocuments.php"}, {"name": "SolrInputDocument::addField", "synopsis": "For multi-value fields, if a valid boost value is specified, the specified value will be multiplied by the current boost value for this field.", "usage": "public bool SolrInputDocument::addField ( string $fieldName , string $fieldValue [, float $fieldBoostValue = 0.0 ] )", "url": "https://secure.php.net/manual/en/solrinputdocument.addfield.php"}, {"name": "SolrInputDocument::clear", "synopsis": "Resets the document by dropping all the fields and resets the document boost to zero.", "usage": "public bool SolrInputDocument::clear ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.clear.php"}, {"name": "SolrInputDocument::__clone", "synopsis": "Should not be called directly. It is used to create a deep copy of a SolrInputDocument.", "usage": "public void SolrInputDocument::__clone ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.clone.php"}, {"name": "SolrInputDocument::__construct", "synopsis": "Constructor.", "usage": "public SolrInputDocument::__construct ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.construct.php"}, {"name": "SolrInputDocument::deleteField", "synopsis": "Removes a field from the document.", "usage": "public bool SolrInputDocument::deleteField ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrinputdocument.deletefield.php"}, {"name": "SolrInputDocument::__destruct", "synopsis": "Destructor", "usage": "public void SolrInputDocument::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.destruct.php"}, {"name": "SolrInputDocument::fieldExists", "synopsis": "Checks if a field exists", "usage": "public bool SolrInputDocument::fieldExists ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrinputdocument.fieldexists.php"}, {"name": "SolrInputDocument::getBoost", "synopsis": "Retrieves the current boost value for the document.", "usage": "public float SolrInputDocument::getBoost ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.getboost.php"}, {"name": "SolrInputDocument::getChildDocuments", "synopsis": "Returns an array of child documents (SolrInputDocument)", "usage": "public array SolrInputDocument::getChildDocuments ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.getchilddocuments.php"}, {"name": "SolrInputDocument::getChildDocumentsCount", "synopsis": "Returns the number of child documents", "usage": "public int SolrInputDocument::getChildDocumentsCount ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.getchilddocumentscount.php"}, {"name": "SolrInputDocument::getField", "synopsis": "Retrieves a field in the document.", "usage": "public SolrDocumentField SolrInputDocument::getField ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrinputdocument.getfield.php"}, {"name": "SolrInputDocument::getFieldBoost", "synopsis": "Retrieves the boost value for a particular field.", "usage": "public float SolrInputDocument::getFieldBoost ( string $fieldName )", "url": "https://secure.php.net/manual/en/solrinputdocument.getfieldboost.php"}, {"name": "SolrInputDocument::getFieldCount", "synopsis": "Returns the number of fields in the document.", "usage": "public int SolrInputDocument::getFieldCount ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.getfieldcount.php"}, {"name": "SolrInputDocument::getFieldNames", "synopsis": "Returns an array containing all the fields in the document.", "usage": "public array SolrInputDocument::getFieldNames ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.getfieldnames.php"}, {"name": "SolrInputDocument::hasChildDocuments", "synopsis": "Checks whether the document has any child documents", "usage": "public bool SolrInputDocument::hasChildDocuments ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.haschilddocuments.php"}, {"name": "SolrInputDocument::merge", "synopsis": "Merges one input document into another.", "usage": "public bool SolrInputDocument::merge ( SolrInputDocument $sourceDoc [, bool $overwrite = TRUE ] )", "url": "https://secure.php.net/manual/en/solrinputdocument.merge.php"}, {"name": "SolrInputDocument::reset", "synopsis": "This is an alias of SolrInputDocument::clear", "usage": "public bool SolrInputDocument::reset ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.reset.php"}, {"name": "SolrInputDocument::setBoost", "synopsis": "Sets the boost value for this document.", "usage": "public bool SolrInputDocument::setBoost ( float $documentBoostValue )", "url": "https://secure.php.net/manual/en/solrinputdocument.setboost.php"}, {"name": "SolrInputDocument::setFieldBoost", "synopsis": "Sets the index-time boost value for a field. This replaces the current boost value for this field.", "usage": "public bool SolrInputDocument::setFieldBoost ( string $fieldName , float $fieldBoostValue )", "url": "https://secure.php.net/manual/en/solrinputdocument.setfieldboost.php"}, {"name": "SolrInputDocument::sort", "synopsis": "", "usage": "public bool SolrInputDocument::sort ( int $sortOrderBy [, int $sortDirection = SolrInputDocument::SORT_ASC ] )", "url": "https://secure.php.net/manual/en/solrinputdocument.sort.php"}, {"name": "SolrInputDocument::toArray", "synopsis": "Returns an array representation of the input document.", "usage": "public array SolrInputDocument::toArray ( void )", "url": "https://secure.php.net/manual/en/solrinputdocument.toarray.php"}, {"name": "SolrModifiableParams::__construct", "synopsis": "Constructor", "usage": "public SolrModifiableParams::__construct ( void )", "url": "https://secure.php.net/manual/en/solrmodifiableparams.construct.php"}, {"name": "SolrModifiableParams::__destruct", "synopsis": "Destructor", "usage": "public void SolrModifiableParams::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrmodifiableparams.destruct.php"}, {"name": "SolrObject::__construct", "synopsis": "Creates Solr object.", "usage": "public SolrObject::__construct ( void )", "url": "https://secure.php.net/manual/en/solrobject.construct.php"}, {"name": "SolrObject::__destruct", "synopsis": "The destructor", "usage": "public void SolrObject::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrobject.destruct.php"}, {"name": "SolrObject::getPropertyNames", "synopsis": "Returns an array of all the names of the properties", "usage": "public array SolrObject::getPropertyNames ( void )", "url": "https://secure.php.net/manual/en/solrobject.getpropertynames.php"}, {"name": "SolrObject::offsetExists", "synopsis": "Checks if the property exists. This is used when the object is treated as an array.", "usage": "public bool SolrObject::offsetExists ( string $property_name )", "url": "https://secure.php.net/manual/en/solrobject.offsetexists.php"}, {"name": "SolrObject::offsetGet", "synopsis": "Used to get the value of a property. This is used when the object is treated as an array.", "usage": "public mixed SolrObject::offsetGet ( string $property_name )", "url": "https://secure.php.net/manual/en/solrobject.offsetget.php"}, {"name": "SolrObject::offsetSet", "synopsis": "Sets the value for a property. This is used when the object is treated as an array. This object is read-only. This should never be attempted.", "usage": "public void SolrObject::offsetSet ( string $property_name , string $property_value )", "url": "https://secure.php.net/manual/en/solrobject.offsetset.php"}, {"name": "SolrObject::offsetUnset", "synopsis": "Unsets the value for the property. This is used when the object is treated as an array. This object is read-only. This should never be attempted.", "usage": "public void SolrObject::offsetUnset ( string $property_name )", "url": "https://secure.php.net/manual/en/solrobject.offsetunset.php"}, {"name": "SolrParams::add", "synopsis": "This is an alias for SolrParams::addParam", "usage": "final public SolrParams SolrParams::add ( string $name , string $value )", "url": "https://secure.php.net/manual/en/solrparams.add.php"}, {"name": "SolrParams::addParam", "synopsis": "Adds a parameter to the object. This is used for parameters that can be specified multiple times.", "usage": "public SolrParams SolrParams::addParam ( string $name , string $value )", "url": "https://secure.php.net/manual/en/solrparams.addparam.php"}, {"name": "SolrParams::get", "synopsis": "This is an alias for SolrParams::getParam", "usage": "final public mixed SolrParams::get ( string $param_name )", "url": "https://secure.php.net/manual/en/solrparams.get.php"}, {"name": "SolrParams::getParam", "synopsis": "Returns a parameter with name param_name", "usage": "final public mixed SolrParams::getParam ([ string $param_name ] )", "url": "https://secure.php.net/manual/en/solrparams.getparam.php"}, {"name": "SolrParams::getParams", "synopsis": "Returns an array of non URL-encoded parameters", "usage": "final public array SolrParams::getParams ( void )", "url": "https://secure.php.net/manual/en/solrparams.getparams.php"}, {"name": "SolrParams::getPreparedParams", "synopsis": "Returns an array on URL-encoded parameters", "usage": "final public array SolrParams::getPreparedParams ( void )", "url": "https://secure.php.net/manual/en/solrparams.getpreparedparams.php"}, {"name": "SolrParams::serialize", "synopsis": "Used for custom serialization", "usage": "final public string SolrParams::serialize ( void )", "url": "https://secure.php.net/manual/en/solrparams.serialize.php"}, {"name": "SolrParams::set", "synopsis": "An alias of SolrParams::setParam", "usage": "final public void SolrParams::set ( string $name , string $value )", "url": "https://secure.php.net/manual/en/solrparams.set.php"}, {"name": "SolrParams::setParam", "synopsis": "Sets the query parameter to the specified value. This is used for parameters that can only be specified once. Subsequent calls with the same parameter name will override the existing value", "usage": "public SolrParams SolrParams::setParam ( string $name , string $value )", "url": "https://secure.php.net/manual/en/solrparams.setparam.php"}, {"name": "SolrParams::toString", "synopsis": "Returns all the name-value pair parameters in the object", "usage": "final public string SolrParams::toString ([ bool $url_encode = FALSE ] )", "url": "https://secure.php.net/manual/en/solrparams.tostring.php"}, {"name": "SolrParams::unserialize", "synopsis": "Used for custom serialization", "usage": "final public void SolrParams::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/solrparams.unserialize.php"}, {"name": "SolrPingResponse::__construct", "synopsis": "Constructor", "usage": "public SolrPingResponse::__construct ( void )", "url": "https://secure.php.net/manual/en/solrpingresponse.construct.php"}, {"name": "SolrPingResponse::__destruct", "synopsis": "Destructor", "usage": "public void SolrPingResponse::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrpingresponse.destruct.php"}, {"name": "SolrPingResponse::getResponse", "synopsis": "Returns the response from the server. This should be empty because the request as a HEAD request.", "usage": "public string SolrPingResponse::getResponse ( void )", "url": "https://secure.php.net/manual/en/solrpingresponse.getresponse.php"}, {"name": "SolrQuery::addExpandFilterQuery", "synopsis": "Overrides main filter query, determines which documents to include in the main group.", "usage": "public SolrQuery SolrQuery::addExpandFilterQuery ( string $fq )", "url": "https://secure.php.net/manual/en/solrquery.addexpandfilterquery.php"}, {"name": "SolrQuery::addExpandSortField", "synopsis": "Orders the documents within the expanded groups (expand.sort parameter).", "usage": "public SolrQuery SolrQuery::addExpandSortField ( string $field [, string $order ] )", "url": "https://secure.php.net/manual/en/solrquery.addexpandsortfield.php"}, {"name": "SolrQuery::addFacetDateField", "synopsis": "This method allows you to specify a field which should be treated as a facet.", "usage": "public SolrQuery SolrQuery::addFacetDateField ( string $dateField )", "url": "https://secure.php.net/manual/en/solrquery.addfacetdatefield.php"}, {"name": "SolrQuery::addFacetDateOther", "synopsis": "Sets the facet.date.other parameter. Accepts an optional field override", "usage": "public SolrQuery SolrQuery::addFacetDateOther ( string $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.addfacetdateother.php"}, {"name": "SolrQuery::addFacetField", "synopsis": "Adds another field to the facet", "usage": "public SolrQuery SolrQuery::addFacetField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addfacetfield.php"}, {"name": "SolrQuery::addFacetQuery", "synopsis": "Adds a facet query", "usage": "public SolrQuery SolrQuery::addFacetQuery ( string $facetQuery )", "url": "https://secure.php.net/manual/en/solrquery.addfacetquery.php"}, {"name": "SolrQuery::addField", "synopsis": "This method is used to used to specify a set of fields to return, thereby restricting the amount of data returned in the response.", "usage": "public SolrQuery SolrQuery::addField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addfield.php"}, {"name": "SolrQuery::addFilterQuery", "synopsis": "Specifies a filter query", "usage": "public SolrQuery SolrQuery::addFilterQuery ( string $fq )", "url": "https://secure.php.net/manual/en/solrquery.addfilterquery.php"}, {"name": "SolrQuery::addGroupField", "synopsis": "The name of the field by which to group results. The field must be single-valued, and either be indexed or a field type that has a value source and works in a function query, such as ExternalFileField. It must also be a string-based field, such as StrField or TextField Uses group.field parameter", "usage": "public SolrQuery SolrQuery::addGroupField ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.addgroupfield.php"}, {"name": "SolrQuery::addGroupFunction", "synopsis": "Adds a group function (group.func parameter) Allows grouping results based on the unique values of a function query.", "usage": "public SolrQuery SolrQuery::addGroupFunction ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.addgroupfunction.php"}, {"name": "SolrQuery::addGroupQuery", "synopsis": "Allows grouping of documents that match the given query. Adds query to the group.query parameter", "usage": "public SolrQuery SolrQuery::addGroupQuery ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.addgroupquery.php"}, {"name": "SolrQuery::addGroupSortField", "synopsis": "Allow sorting group documents, using group sort field (group.sort parameter).", "usage": "public SolrQuery SolrQuery::addGroupSortField ( string $field [, int $order ] )", "url": "https://secure.php.net/manual/en/solrquery.addgroupsortfield.php"}, {"name": "SolrQuery::addHighlightField", "synopsis": "Maps to hl.fl. This is used to specify that highlighted snippets should be generated for a particular field", "usage": "public SolrQuery SolrQuery::addHighlightField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addhighlightfield.php"}, {"name": "SolrQuery::addMltField", "synopsis": "Maps to mlt.fl. It specifies that a field should be used for similarity.", "usage": "public SolrQuery SolrQuery::addMltField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addmltfield.php"}, {"name": "SolrQuery::addMltQueryField", "synopsis": "Maps to mlt.qf. It is used to specify query fields and their boosts", "usage": "public SolrQuery SolrQuery::addMltQueryField ( string $field , float $boost )", "url": "https://secure.php.net/manual/en/solrquery.addmltqueryfield.php"}, {"name": "SolrQuery::addSortField", "synopsis": "Used to control how the results should be sorted.", "usage": "public SolrQuery SolrQuery::addSortField ( string $field [, int $order = SolrQuery::ORDER_DESC ] )", "url": "https://secure.php.net/manual/en/solrquery.addsortfield.php"}, {"name": "SolrQuery::addStatsFacet", "synopsis": "Requests a return of sub results for values within the given facet. Maps to the stats.facet field", "usage": "public SolrQuery SolrQuery::addStatsFacet ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addstatsfacet.php"}, {"name": "SolrQuery::addStatsField", "synopsis": "Maps to stats.field parameter This methods adds another stats.field parameter.", "usage": "public SolrQuery SolrQuery::addStatsField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.addstatsfield.php"}, {"name": "SolrQuery::collapse", "synopsis": "Collapses the result set to a single document per group before it forwards the result set to the rest of the search components.", "usage": "public SolrQuery SolrQuery::collapse ( SolrCollapseFunction $collapseFunction )", "url": "https://secure.php.net/manual/en/solrquery.collapse.php"}, {"name": "SolrQuery::__construct", "synopsis": "Constructor.", "usage": "public SolrQuery::__construct ([ string $q ] )", "url": "https://secure.php.net/manual/en/solrquery.construct.php"}, {"name": "SolrQuery::__destruct", "synopsis": "Destructor", "usage": "public void SolrQuery::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrquery.destruct.php"}, {"name": "SolrQuery::getExpand", "synopsis": "Returns TRUE if group expanding is enabled", "usage": "public bool SolrQuery::getExpand ( void )", "url": "https://secure.php.net/manual/en/solrquery.getexpand.php"}, {"name": "SolrQuery::getExpandFilterQueries", "synopsis": "Returns the expand filter queries", "usage": "public array SolrQuery::getExpandFilterQueries ( void )", "url": "https://secure.php.net/manual/en/solrquery.getexpandfilterqueries.php"}, {"name": "SolrQuery::getExpandQuery", "synopsis": "Returns the expand query expand.q parameter", "usage": "public array SolrQuery::getExpandQuery ( void )", "url": "https://secure.php.net/manual/en/solrquery.getexpandquery.php"}, {"name": "SolrQuery::getExpandRows", "synopsis": "Returns The number of rows to display in each group (expand.rows)", "usage": "public int SolrQuery::getExpandRows ( void )", "url": "https://secure.php.net/manual/en/solrquery.getexpandrows.php"}, {"name": "SolrQuery::getExpandSortFields", "synopsis": "Returns an array of fields", "usage": "public array SolrQuery::getExpandSortFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getexpandsortfields.php"}, {"name": "SolrQuery::getFacet", "synopsis": "Returns the value of the facet parameter.", "usage": "public bool SolrQuery::getFacet ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfacet.php"}, {"name": "SolrQuery::getFacetDateEnd", "synopsis": "Returns the value for the facet.date.end parameter. This method accepts an optional field override", "usage": "public string SolrQuery::getFacetDateEnd ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdateend.php"}, {"name": "SolrQuery::getFacetDateFields", "synopsis": "Returns all the facet.date fields", "usage": "public array SolrQuery::getFacetDateFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdatefields.php"}, {"name": "SolrQuery::getFacetDateGap", "synopsis": "Returns the value of the facet.date.gap parameter. It accepts an optional field override", "usage": "public string SolrQuery::getFacetDateGap ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdategap.php"}, {"name": "SolrQuery::getFacetDateHardEnd", "synopsis": "Returns the value of the facet.date.hardend parameter. Accepts an optional field override", "usage": "public string SolrQuery::getFacetDateHardEnd ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdatehardend.php"}, {"name": "SolrQuery::getFacetDateOther", "synopsis": "Returns the value for the facet.date.other parameter. This method accepts an optional field override.", "usage": "public array SolrQuery::getFacetDateOther ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdateother.php"}, {"name": "SolrQuery::getFacetDateStart", "synopsis": "Returns the lower bound for the first date range for all date faceting on this field. Accepts an optional field override", "usage": "public string SolrQuery::getFacetDateStart ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetdatestart.php"}, {"name": "SolrQuery::getFacetFields", "synopsis": "Returns all the facet fields", "usage": "public array SolrQuery::getFacetFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfacetfields.php"}, {"name": "SolrQuery::getFacetLimit", "synopsis": "Returns the maximum number of constraint counts that should be returned for the facet fields. This method accepts an optional field override", "usage": "public int SolrQuery::getFacetLimit ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetlimit.php"}, {"name": "SolrQuery::getFacetMethod", "synopsis": "Returns the value of the facet.method parameter. This accepts an optional field override.", "usage": "public string SolrQuery::getFacetMethod ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetmethod.php"}, {"name": "SolrQuery::getFacetMinCount", "synopsis": "Returns the minimum counts for facet fields should be included in the response. It accepts an optional field override", "usage": "public int SolrQuery::getFacetMinCount ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetmincount.php"}, {"name": "SolrQuery::getFacetMissing", "synopsis": "Returns the current state of the facet.missing parameter. This accepts an optional field override", "usage": "public bool SolrQuery::getFacetMissing ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetmissing.php"}, {"name": "SolrQuery::getFacetOffset", "synopsis": "Returns an offset into the list of constraints to be used for pagination. Accepts an optional field override", "usage": "public int SolrQuery::getFacetOffset ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetoffset.php"}, {"name": "SolrQuery::getFacetPrefix", "synopsis": "Returns the facet prefix", "usage": "public string SolrQuery::getFacetPrefix ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetprefix.php"}, {"name": "SolrQuery::getFacetQueries", "synopsis": "Returns all the facet queries", "usage": "public array SolrQuery::getFacetQueries ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfacetqueries.php"}, {"name": "SolrQuery::getFacetSort", "synopsis": "Returns an integer (SolrQuery::FACET_SORT_INDEX or SolrQuery::FACET_SORT_COUNT)", "usage": "public int SolrQuery::getFacetSort ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.getfacetsort.php"}, {"name": "SolrQuery::getFields", "synopsis": "Returns the list of fields that will be returned in the response", "usage": "public array SolrQuery::getFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfields.php"}, {"name": "SolrQuery::getFilterQueries", "synopsis": "Returns an array of filter queries. These are queries that can be used to restrict the super set of documents that can be returned, without influencing score", "usage": "public array SolrQuery::getFilterQueries ( void )", "url": "https://secure.php.net/manual/en/solrquery.getfilterqueries.php"}, {"name": "SolrQuery::getGroup", "synopsis": "Returns true if grouping is enabled", "usage": "public bool SolrQuery::getGroup ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroup.php"}, {"name": "SolrQuery::getGroupCachePercent", "synopsis": "Returns group cache percent value", "usage": "public int SolrQuery::getGroupCachePercent ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupcachepercent.php"}, {"name": "SolrQuery::getGroupFacet", "synopsis": "Returns the group.facet parameter value", "usage": "public bool SolrQuery::getGroupFacet ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupfacet.php"}, {"name": "SolrQuery::getGroupFields", "synopsis": "Returns group fields (group.field parameter values)", "usage": "public array SolrQuery::getGroupFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupfields.php"}, {"name": "SolrQuery::getGroupFormat", "synopsis": "Returns the group.format value", "usage": "public string SolrQuery::getGroupFormat ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupformat.php"}, {"name": "SolrQuery::getGroupFunctions", "synopsis": "Returns group functions (group.func parameter values)", "usage": "public array SolrQuery::getGroupFunctions ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupfunctions.php"}, {"name": "SolrQuery::getGroupLimit", "synopsis": "Returns the group.limit value", "usage": "public int SolrQuery::getGroupLimit ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgrouplimit.php"}, {"name": "SolrQuery::getGroupMain", "synopsis": "Returns the group.main value", "usage": "public bool SolrQuery::getGroupMain ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupmain.php"}, {"name": "SolrQuery::getGroupNGroups", "synopsis": "Returns the group.ngroups value", "usage": "public bool SolrQuery::getGroupNGroups ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupngroups.php"}, {"name": "SolrQuery::getGroupOffset", "synopsis": "Returns the group.offset value", "usage": "public int SolrQuery::getGroupOffset ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupoffset.php"}, {"name": "SolrQuery::getGroupQueries", "synopsis": "Returns all the group.query parameter values", "usage": "public array SolrQuery::getGroupQueries ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupqueries.php"}, {"name": "SolrQuery::getGroupSortFields", "synopsis": "Returns the group.sort value", "usage": "public array SolrQuery::getGroupSortFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgroupsortfields.php"}, {"name": "SolrQuery::getGroupTruncate", "synopsis": "Returns the group.truncate value", "usage": "public bool SolrQuery::getGroupTruncate ( void )", "url": "https://secure.php.net/manual/en/solrquery.getgrouptruncate.php"}, {"name": "SolrQuery::getHighlight", "synopsis": "Returns a boolean indicating whether or not to enable highlighted snippets to be generated in the query response.", "usage": "public bool SolrQuery::getHighlight ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlight.php"}, {"name": "SolrQuery::getHighlightAlternateField", "synopsis": "Returns the highlight field to use as backup or default. It accepts an optional override.", "usage": "public string SolrQuery::getHighlightAlternateField ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightalternatefield.php"}, {"name": "SolrQuery::getHighlightFields", "synopsis": "Returns all the fields that Solr should generate highlighted snippets for", "usage": "public array SolrQuery::getHighlightFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightfields.php"}, {"name": "SolrQuery::getHighlightFormatter", "synopsis": "Returns the formatter for the highlighted output", "usage": "public string SolrQuery::getHighlightFormatter ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightformatter.php"}, {"name": "SolrQuery::getHighlightFragmenter", "synopsis": "Returns the text snippet generator for highlighted text. Accepts an optional field override.", "usage": "public string SolrQuery::getHighlightFragmenter ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightfragmenter.php"}, {"name": "SolrQuery::getHighlightFragsize", "synopsis": "Returns the number of characters of fragments to consider for highlighting. Zero implies no fragmenting. The entire field should be used.", "usage": "public int SolrQuery::getHighlightFragsize ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightfragsize.php"}, {"name": "SolrQuery::getHighlightHighlightMultiTerm", "synopsis": "Returns whether or not to enable highlighting for range/wildcard/fuzzy/prefix queries", "usage": "public bool SolrQuery::getHighlightHighlightMultiTerm ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlighthighlightmultiterm.php"}, {"name": "SolrQuery::getHighlightMaxAlternateFieldLength", "synopsis": "Returns the maximum number of characters of the field to return", "usage": "public int SolrQuery::getHighlightMaxAlternateFieldLength ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightmaxalternatefieldlength.php"}, {"name": "SolrQuery::getHighlightMaxAnalyzedChars", "synopsis": "Returns the maximum number of characters into a document to look for suitable snippets", "usage": "public int SolrQuery::getHighlightMaxAnalyzedChars ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightmaxanalyzedchars.php"}, {"name": "SolrQuery::getHighlightMergeContiguous", "synopsis": "Returns whether or not the collapse contiguous fragments into a single fragment. Accepts an optional field override.", "usage": "public bool SolrQuery::getHighlightMergeContiguous ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightmergecontiguous.php"}, {"name": "SolrQuery::getHighlightRegexMaxAnalyzedChars", "synopsis": "Returns the maximum number of characters from a field when using the regex fragmenter", "usage": "public int SolrQuery::getHighlightRegexMaxAnalyzedChars ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightregexmaxanalyzedchars.php"}, {"name": "SolrQuery::getHighlightRegexPattern", "synopsis": "Returns the regular expression used for fragmenting", "usage": "public string SolrQuery::getHighlightRegexPattern ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightregexpattern.php"}, {"name": "SolrQuery::getHighlightRegexSlop", "synopsis": "Returns the factor by which the regex fragmenter can deviate from the ideal fragment size to accomodate the regular expression", "usage": "public float SolrQuery::getHighlightRegexSlop ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightregexslop.php"}, {"name": "SolrQuery::getHighlightRequireFieldMatch", "synopsis": "Returns if a field will only be highlighted if the query matched in this particular field.", "usage": "public bool SolrQuery::getHighlightRequireFieldMatch ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightrequirefieldmatch.php"}, {"name": "SolrQuery::getHighlightSimplePost", "synopsis": "Returns the text which appears after a highlighted term. Accepts an optional field override", "usage": "public string SolrQuery::getHighlightSimplePost ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightsimplepost.php"}, {"name": "SolrQuery::getHighlightSimplePre", "synopsis": "Returns the text which appears before a highlighted term. Accepts an optional field override", "usage": "public string SolrQuery::getHighlightSimplePre ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightsimplepre.php"}, {"name": "SolrQuery::getHighlightSnippets", "synopsis": "Returns the maximum number of highlighted snippets to generate per field. Accepts an optional field override", "usage": "public int SolrQuery::getHighlightSnippets ([ string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightsnippets.php"}, {"name": "SolrQuery::getHighlightUsePhraseHighlighter", "synopsis": "Returns whether or not to use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document.", "usage": "public bool SolrQuery::getHighlightUsePhraseHighlighter ( void )", "url": "https://secure.php.net/manual/en/solrquery.gethighlightusephrasehighlighter.php"}, {"name": "SolrQuery::getMlt", "synopsis": "Returns whether or not MoreLikeThis results should be enabled", "usage": "public bool SolrQuery::getMlt ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmlt.php"}, {"name": "SolrQuery::getMltBoost", "synopsis": "Returns whether or not the query will be boosted by the interesting term relevance", "usage": "public bool SolrQuery::getMltBoost ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltboost.php"}, {"name": "SolrQuery::getMltCount", "synopsis": "Returns the number of similar documents to return for each result", "usage": "public int SolrQuery::getMltCount ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltcount.php"}, {"name": "SolrQuery::getMltFields", "synopsis": "Returns all the fields to use for similarity", "usage": "public array SolrQuery::getMltFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltfields.php"}, {"name": "SolrQuery::getMltMaxNumQueryTerms", "synopsis": "Returns the maximum number of query terms that will be included in any generated query", "usage": "public int SolrQuery::getMltMaxNumQueryTerms ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltmaxnumqueryterms.php"}, {"name": "SolrQuery::getMltMaxNumTokens", "synopsis": "Returns the maximum number of tokens to parse in each document field that is not stored with TermVector support", "usage": "public int SolrQuery::getMltMaxNumTokens ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltmaxnumtokens.php"}, {"name": "SolrQuery::getMltMaxWordLength", "synopsis": "Returns the maximum word length above which words will be ignored", "usage": "public int SolrQuery::getMltMaxWordLength ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltmaxwordlength.php"}, {"name": "SolrQuery::getMltMinDocFrequency", "synopsis": "Returns the treshold frequency at which words will be ignored which do not occur in at least this many docs", "usage": "public int SolrQuery::getMltMinDocFrequency ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltmindocfrequency.php"}, {"name": "SolrQuery::getMltMinTermFrequency", "synopsis": "Returns the frequency below which terms will be ignored in the source document", "usage": "public int SolrQuery::getMltMinTermFrequency ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltmintermfrequency.php"}, {"name": "SolrQuery::getMltMinWordLength", "synopsis": "Returns the minimum word length below which words will be ignored", "usage": "public int SolrQuery::getMltMinWordLength ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltminwordlength.php"}, {"name": "SolrQuery::getMltQueryFields", "synopsis": "Returns the query fields and their boosts", "usage": "public array SolrQuery::getMltQueryFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getmltqueryfields.php"}, {"name": "SolrQuery::getQuery", "synopsis": "Returns the main search query", "usage": "public string SolrQuery::getQuery ( void )", "url": "https://secure.php.net/manual/en/solrquery.getquery.php"}, {"name": "SolrQuery::getRows", "synopsis": "Returns the maximum number of documents from the complete result set to return to the client for every request", "usage": "public int SolrQuery::getRows ( void )", "url": "https://secure.php.net/manual/en/solrquery.getrows.php"}, {"name": "SolrQuery::getSortFields", "synopsis": "Returns all the sort fields", "usage": "public array SolrQuery::getSortFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getsortfields.php"}, {"name": "SolrQuery::getStart", "synopsis": "Returns the offset in the complete result set for the queries where the set of returned documents should begin.", "usage": "public int SolrQuery::getStart ( void )", "url": "https://secure.php.net/manual/en/solrquery.getstart.php"}, {"name": "SolrQuery::getStats", "synopsis": "Returns whether or not stats is enabled", "usage": "public bool SolrQuery::getStats ( void )", "url": "https://secure.php.net/manual/en/solrquery.getstats.php"}, {"name": "SolrQuery::getStatsFacets", "synopsis": "Returns all the stats facets that were set", "usage": "public array SolrQuery::getStatsFacets ( void )", "url": "https://secure.php.net/manual/en/solrquery.getstatsfacets.php"}, {"name": "SolrQuery::getStatsFields", "synopsis": "Returns all the statistics fields", "usage": "public array SolrQuery::getStatsFields ( void )", "url": "https://secure.php.net/manual/en/solrquery.getstatsfields.php"}, {"name": "SolrQuery::getTerms", "synopsis": "Returns whether or not the TermsComponent is enabled", "usage": "public bool SolrQuery::getTerms ( void )", "url": "https://secure.php.net/manual/en/solrquery.getterms.php"}, {"name": "SolrQuery::getTermsField", "synopsis": "Returns the field from which the terms are retrieved", "usage": "public string SolrQuery::getTermsField ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsfield.php"}, {"name": "SolrQuery::getTermsIncludeLowerBound", "synopsis": "Returns whether or not to include the lower bound in the result set", "usage": "public bool SolrQuery::getTermsIncludeLowerBound ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsincludelowerbound.php"}, {"name": "SolrQuery::getTermsIncludeUpperBound", "synopsis": "Returns whether or not to include the upper bound term in the result set", "usage": "public bool SolrQuery::getTermsIncludeUpperBound ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsincludeupperbound.php"}, {"name": "SolrQuery::getTermsLimit", "synopsis": "Returns the maximum number of terms Solr should return", "usage": "public int SolrQuery::getTermsLimit ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermslimit.php"}, {"name": "SolrQuery::getTermsLowerBound", "synopsis": "Returns the term to start at", "usage": "public string SolrQuery::getTermsLowerBound ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermslowerbound.php"}, {"name": "SolrQuery::getTermsMaxCount", "synopsis": "Returns the maximum document frequency", "usage": "public int SolrQuery::getTermsMaxCount ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsmaxcount.php"}, {"name": "SolrQuery::getTermsMinCount", "synopsis": "Returns the minimum document frequency to return in order to be included", "usage": "public int SolrQuery::getTermsMinCount ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsmincount.php"}, {"name": "SolrQuery::getTermsPrefix", "synopsis": "Returns the prefix to which matching terms must be restricted. This will restrict matches to only terms that start with the prefix", "usage": "public string SolrQuery::getTermsPrefix ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsprefix.php"}, {"name": "SolrQuery::getTermsReturnRaw", "synopsis": "Returns a boolean indicating whether or not to return the raw characters of the indexed term, regardless of if it is human readable", "usage": "public bool SolrQuery::getTermsReturnRaw ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsreturnraw.php"}, {"name": "SolrQuery::getTermsSort", "synopsis": "SolrQuery::TERMS_SORT_INDEX indicates that the terms are returned by index order. SolrQuery::TERMS_SORT_COUNT implies that the terms are sorted by term frequency (highest count first)", "usage": "public int SolrQuery::getTermsSort ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermssort.php"}, {"name": "SolrQuery::getTermsUpperBound", "synopsis": "Returns the term to stop at", "usage": "public string SolrQuery::getTermsUpperBound ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettermsupperbound.php"}, {"name": "SolrQuery::getTimeAllowed", "synopsis": "Returns the time in milliseconds allowed for the query to finish.", "usage": "public int SolrQuery::getTimeAllowed ( void )", "url": "https://secure.php.net/manual/en/solrquery.gettimeallowed.php"}, {"name": "SolrQuery::removeExpandFilterQuery", "synopsis": "Removes an expand filter query.", "usage": "public SolrQuery SolrQuery::removeExpandFilterQuery ( string $fq )", "url": "https://secure.php.net/manual/en/solrquery.removeexpandfilterquery.php"}, {"name": "SolrQuery::removeExpandSortField", "synopsis": "Removes an expand sort field from the expand.sort parameter.", "usage": "public SolrQuery SolrQuery::removeExpandSortField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removeexpandsortfield.php"}, {"name": "SolrQuery::removeFacetDateField", "synopsis": "The name of the field", "usage": "public SolrQuery SolrQuery::removeFacetDateField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removefacetdatefield.php"}, {"name": "SolrQuery::removeFacetDateOther", "synopsis": "Removes one of the facet.date.other parameters", "usage": "public SolrQuery SolrQuery::removeFacetDateOther ( string $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.removefacetdateother.php"}, {"name": "SolrQuery::removeFacetField", "synopsis": "Removes one of the facet.date parameters", "usage": "public SolrQuery SolrQuery::removeFacetField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removefacetfield.php"}, {"name": "SolrQuery::removeFacetQuery", "synopsis": "Removes one of the facet.query parameters.", "usage": "public SolrQuery SolrQuery::removeFacetQuery ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.removefacetquery.php"}, {"name": "SolrQuery::removeField", "synopsis": "Removes a field from the list of fields", "usage": "public SolrQuery SolrQuery::removeField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removefield.php"}, {"name": "SolrQuery::removeFilterQuery", "synopsis": "Removes a filter query.", "usage": "public SolrQuery SolrQuery::removeFilterQuery ( string $fq )", "url": "https://secure.php.net/manual/en/solrquery.removefilterquery.php"}, {"name": "SolrQuery::removeHighlightField", "synopsis": "Removes one of the fields used for highlighting.", "usage": "public SolrQuery SolrQuery::removeHighlightField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removehighlightfield.php"}, {"name": "SolrQuery::removeMltField", "synopsis": "Removes one of the moreLikeThis fields.", "usage": "public SolrQuery SolrQuery::removeMltField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removemltfield.php"}, {"name": "SolrQuery::removeMltQueryField", "synopsis": "Removes one of the moreLikeThis query fields.", "usage": "public SolrQuery SolrQuery::removeMltQueryField ( string $queryField )", "url": "https://secure.php.net/manual/en/solrquery.removemltqueryfield.php"}, {"name": "SolrQuery::removeSortField", "synopsis": "Removes one of the sort fields", "usage": "public SolrQuery SolrQuery::removeSortField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removesortfield.php"}, {"name": "SolrQuery::removeStatsFacet", "synopsis": "Removes one of the stats.facet parameters", "usage": "public SolrQuery SolrQuery::removeStatsFacet ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.removestatsfacet.php"}, {"name": "SolrQuery::removeStatsField", "synopsis": "Removes one of the stats.field parameters", "usage": "public SolrQuery SolrQuery::removeStatsField ( string $field )", "url": "https://secure.php.net/manual/en/solrquery.removestatsfield.php"}, {"name": "SolrQuery::setEchoHandler", "synopsis": "If set to true, Solr places the name of the handle used in the response to the client for debugging purposes.", "usage": "public SolrQuery SolrQuery::setEchoHandler ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setechohandler.php"}, {"name": "SolrQuery::setEchoParams", "synopsis": "Instructs Solr what kinds of Request parameters should be included in the response for debugging purposes, legal values include:", "usage": "public SolrQuery SolrQuery::setEchoParams ( string $type )", "url": "https://secure.php.net/manual/en/solrquery.setechoparams.php"}, {"name": "SolrQuery::setExpand", "synopsis": "Enables/Disables the Expand Component.", "usage": "public SolrQuery SolrQuery::setExpand ( bool $value )", "url": "https://secure.php.net/manual/en/solrquery.setexpand.php"}, {"name": "SolrQuery::setExpandQuery", "synopsis": "Sets the expand.q parameter.", "usage": "public SolrQuery SolrQuery::setExpandQuery ( string $q )", "url": "https://secure.php.net/manual/en/solrquery.setexpandquery.php"}, {"name": "SolrQuery::setExpandRows", "synopsis": "Sets the number of rows to display in each group (expand.rows). Server Default 5", "usage": "public SolrQuery SolrQuery::setExpandRows ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.setexpandrows.php"}, {"name": "SolrQuery::setExplainOther", "synopsis": "Sets the explainOther common query parameter", "usage": "public SolrQuery SolrQuery::setExplainOther ( string $query )", "url": "https://secure.php.net/manual/en/solrquery.setexplainother.php"}, {"name": "SolrQuery::setFacet", "synopsis": "Enables or disables faceting.", "usage": "public SolrQuery SolrQuery::setFacet ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setfacet.php"}, {"name": "SolrQuery::setFacetDateEnd", "synopsis": "Maps to facet.date.end", "usage": "public SolrQuery SolrQuery::setFacetDateEnd ( string $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetdateend.php"}, {"name": "SolrQuery::setFacetDateGap", "synopsis": "Maps to facet.date.gap", "usage": "public SolrQuery SolrQuery::setFacetDateGap ( string $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetdategap.php"}, {"name": "SolrQuery::setFacetDateHardEnd", "synopsis": "Maps to facet.date.hardend", "usage": "public SolrQuery SolrQuery::setFacetDateHardEnd ( bool $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetdatehardend.php"}, {"name": "SolrQuery::setFacetDateStart", "synopsis": "Maps to facet.date.start", "usage": "public SolrQuery SolrQuery::setFacetDateStart ( string $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetdatestart.php"}, {"name": "SolrQuery::setFacetEnumCacheMinDefaultFrequency", "synopsis": "Sets the minimum document frequency used for determining term count", "usage": "public SolrQuery SolrQuery::setFacetEnumCacheMinDefaultFrequency ( int $frequency [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetenumcachemindefaultfrequency.php"}, {"name": "SolrQuery::setFacetLimit", "synopsis": "Maps to facet.limit. Sets the maximum number of constraint counts that should be returned for the facet fields.", "usage": "public SolrQuery SolrQuery::setFacetLimit ( int $limit [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetlimit.php"}, {"name": "SolrQuery::setFacetMethod", "synopsis": "Specifies the type of algorithm to use when faceting a field. This method accepts optional field override.", "usage": "public SolrQuery SolrQuery::setFacetMethod ( string $method [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetmethod.php"}, {"name": "SolrQuery::setFacetMinCount", "synopsis": "Sets the minimum counts for facet fields that should be included in the response", "usage": "public SolrQuery SolrQuery::setFacetMinCount ( int $mincount [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetmincount.php"}, {"name": "SolrQuery::setFacetMissing", "synopsis": "Used to indicate that in addition to the Term-based constraints of a facet field, a count of all matching results which have no value for the field should be computed", "usage": "public SolrQuery SolrQuery::setFacetMissing ( bool $flag [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetmissing.php"}, {"name": "SolrQuery::setFacetOffset", "synopsis": "Sets the offset into the list of constraints to allow for pagination.", "usage": "public SolrQuery SolrQuery::setFacetOffset ( int $offset [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetoffset.php"}, {"name": "SolrQuery::setFacetPrefix", "synopsis": "Specifies a string prefix with which to limits the terms on which to facet.", "usage": "public SolrQuery SolrQuery::setFacetPrefix ( string $prefix [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetprefix.php"}, {"name": "SolrQuery::setFacetSort", "synopsis": "Determines the ordering of the facet field constraints", "usage": "public SolrQuery SolrQuery::setFacetSort ( int $facetSort [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.setfacetsort.php"}, {"name": "SolrQuery::setGroup", "synopsis": "Enable/Disable result grouping (group parameter)", "usage": "public SolrQuery SolrQuery::setGroup ( bool $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroup.php"}, {"name": "SolrQuery::setGroupCachePercent", "synopsis": "Setting this parameter to a number greater than 0 enables caching for result grouping. Result Grouping executes two searches; this option caches the second search. The server default value is 0. Testing has shown that group caching only improves search time with Boolean, wildcard, and fuzzy queries. For simple queries like term or \"match all\" queries, group caching degrades performance. group.cache.percent parameter", "usage": "public SolrQuery SolrQuery::setGroupCachePercent ( int $percent )", "url": "https://secure.php.net/manual/en/solrquery.setgroupcachepercent.php"}, {"name": "SolrQuery::setGroupFacet", "synopsis": "Determines whether to compute grouped facets for the field facets specified in facet.field parameters. Grouped facets are computed based on the first specified group.", "usage": "public SolrQuery SolrQuery::setGroupFacet ( bool $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroupfacet.php"}, {"name": "SolrQuery::setGroupFormat", "synopsis": "Sets the group.format parameter. If this parameter is set to simple, the grouped documents are presented in a single flat list, and the start and rows parameters affect the numbers of documents instead of groups. Accepts: grouped/simple", "usage": "public SolrQuery SolrQuery::setGroupFormat ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroupformat.php"}, {"name": "SolrQuery::setGroupLimit", "synopsis": "Specifies the number of results to return for each group. The server default value is 1.", "usage": "public SolrQuery SolrQuery::setGroupLimit ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.setgrouplimit.php"}, {"name": "SolrQuery::setGroupMain", "synopsis": "If true, the result of the first field grouping command is used as the main result list in the response, using group.format=simple.", "usage": "public SolrQuery SolrQuery::setGroupMain ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroupmain.php"}, {"name": "SolrQuery::setGroupNGroups", "synopsis": "If true, Solr includes the number of groups that have matched the query in the results.", "usage": "public SolrQuery SolrQuery::setGroupNGroups ( bool $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroupngroups.php"}, {"name": "SolrQuery::setGroupOffset", "synopsis": "Sets the group.offset parameter.", "usage": "public SolrQuery SolrQuery::setGroupOffset ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.setgroupoffset.php"}, {"name": "SolrQuery::setGroupTruncate", "synopsis": "If true, facet counts are based on the most relevant document of each group matching the query. The server default value is false. group.truncate parameter", "usage": "public SolrQuery SolrQuery::setGroupTruncate ( bool $value )", "url": "https://secure.php.net/manual/en/solrquery.setgrouptruncate.php"}, {"name": "SolrQuery::setHighlight", "synopsis": "Setting it to TRUE enables highlighted snippets to be generated in the query response.", "usage": "public SolrQuery SolrQuery::setHighlight ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.sethighlight.php"}, {"name": "SolrQuery::setHighlightAlternateField", "synopsis": "If a snippet cannot be generated because there were no matching terms, one can specify a field to use as the backup or default summary", "usage": "public SolrQuery SolrQuery::setHighlightAlternateField ( string $field [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightalternatefield.php"}, {"name": "SolrQuery::setHighlightFormatter", "synopsis": "Specify a formatter for the highlight output.", "usage": "public SolrQuery SolrQuery::setHighlightFormatter ( string $formatter [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightformatter.php"}, {"name": "SolrQuery::setHighlightFragmenter", "synopsis": "Specify a text snippet generator for highlighted text.", "usage": "public SolrQuery SolrQuery::setHighlightFragmenter ( string $fragmenter [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightfragmenter.php"}, {"name": "SolrQuery::setHighlightFragsize", "synopsis": "Sets the size, in characters, of fragments to consider for highlighting. \"0\" indicates that the whole field value should be used (no fragmenting).", "usage": "public SolrQuery SolrQuery::setHighlightFragsize ( int $size [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightfragsize.php"}, {"name": "SolrQuery::setHighlightHighlightMultiTerm", "synopsis": "Use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document.", "usage": "public SolrQuery SolrQuery::setHighlightHighlightMultiTerm ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.sethighlighthighlightmultiterm.php"}, {"name": "SolrQuery::setHighlightMaxAlternateFieldLength", "synopsis": "If SolrQuery::setHighlightAlternateField() was passed the value TRUE, this parameter specifies the maximum number of characters of the field to return", "usage": "public SolrQuery SolrQuery::setHighlightMaxAlternateFieldLength ( int $fieldLength [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightmaxalternatefieldlength.php"}, {"name": "SolrQuery::setHighlightMaxAnalyzedChars", "synopsis": "Specifies the number of characters into a document to look for suitable snippets", "usage": "public SolrQuery SolrQuery::setHighlightMaxAnalyzedChars ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightmaxanalyzedchars.php"}, {"name": "SolrQuery::setHighlightMergeContiguous", "synopsis": "Whether or not to collapse contiguous fragments into a single fragment", "usage": "public SolrQuery SolrQuery::setHighlightMergeContiguous ( bool $flag [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightmergecontiguous.php"}, {"name": "SolrQuery::setHighlightRegexMaxAnalyzedChars", "synopsis": "Specify the maximum number of characters to analyze from a field when using the regex fragmenter", "usage": "public SolrQuery SolrQuery::setHighlightRegexMaxAnalyzedChars ( int $maxAnalyzedChars )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightregexmaxanalyzedchars.php"}, {"name": "SolrQuery::setHighlightRegexPattern", "synopsis": "Specifies the regular expression for fragmenting. This could be used to extract sentences", "usage": "public SolrQuery SolrQuery::setHighlightRegexPattern ( string $value )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightregexpattern.php"}, {"name": "SolrQuery::setHighlightRegexSlop", "synopsis": "The factor by which the regex fragmenter can stray from the ideal fragment size ( specfied by SolrQuery::setHighlightFragsize )to accommodate the regular expression", "usage": "public SolrQuery SolrQuery::setHighlightRegexSlop ( float $factor )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightregexslop.php"}, {"name": "SolrQuery::setHighlightRequireFieldMatch", "synopsis": "If TRUE, then a field will only be highlighted if the query matched in this particular field.", "usage": "public SolrQuery SolrQuery::setHighlightRequireFieldMatch ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightrequirefieldmatch.php"}, {"name": "SolrQuery::setHighlightSimplePost", "synopsis": "Sets the text which appears before a highlighted term", "usage": "public SolrQuery SolrQuery::setHighlightSimplePost ( string $simplePost [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightsimplepost.php"}, {"name": "SolrQuery::setHighlightSimplePre", "synopsis": "Sets the text which appears before a highlighted term", "usage": "public SolrQuery SolrQuery::setHighlightSimplePre ( string $simplePre [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightsimplepre.php"}, {"name": "SolrQuery::setHighlightSnippets", "synopsis": "Sets the maximum number of highlighted snippets to generate per field", "usage": "public SolrQuery SolrQuery::setHighlightSnippets ( int $value [, string $field_override ] )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightsnippets.php"}, {"name": "SolrQuery::setHighlightUsePhraseHighlighter", "synopsis": "Sets whether or not to use SpanScorer to highlight phrase terms only when they appear within the query phrase in the document", "usage": "public SolrQuery SolrQuery::setHighlightUsePhraseHighlighter ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.sethighlightusephrasehighlighter.php"}, {"name": "SolrQuery::setMlt", "synopsis": "Enables or disables moreLikeThis", "usage": "public SolrQuery SolrQuery::setMlt ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setmlt.php"}, {"name": "SolrQuery::setMltBoost", "synopsis": "Set if the query will be boosted by the interesting term relevance", "usage": "public SolrQuery SolrQuery::setMltBoost ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setmltboost.php"}, {"name": "SolrQuery::setMltCount", "synopsis": "Set the number of similar documents to return for each result", "usage": "public SolrQuery SolrQuery::setMltCount ( int $count )", "url": "https://secure.php.net/manual/en/solrquery.setmltcount.php"}, {"name": "SolrQuery::setMltMaxNumQueryTerms", "synopsis": "Sets the maximum number of query terms that will be included in any generated query.", "usage": "public SolrQuery SolrQuery::setMltMaxNumQueryTerms ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.setmltmaxnumqueryterms.php"}, {"name": "SolrQuery::setMltMaxNumTokens", "synopsis": "Specifies the maximum number of tokens to parse in each example doc field that is not stored with TermVector support.", "usage": "public SolrQuery SolrQuery::setMltMaxNumTokens ( int $value )", "url": "https://secure.php.net/manual/en/solrquery.setmltmaxnumtokens.php"}, {"name": "SolrQuery::setMltMaxWordLength", "synopsis": "Sets the maximum word length above which words will be ignored.", "usage": "public SolrQuery SolrQuery::setMltMaxWordLength ( int $maxWordLength )", "url": "https://secure.php.net/manual/en/solrquery.setmltmaxwordlength.php"}, {"name": "SolrQuery::setMltMinDocFrequency", "synopsis": "The frequency at which words will be ignored which do not occur in at least this many docs.", "usage": "public SolrQuery SolrQuery::setMltMinDocFrequency ( int $minDocFrequency )", "url": "https://secure.php.net/manual/en/solrquery.setmltmindocfrequency.php"}, {"name": "SolrQuery::setMltMinTermFrequency", "synopsis": "Sets the frequency below which terms will be ignored in the source docs", "usage": "public SolrQuery SolrQuery::setMltMinTermFrequency ( int $minTermFrequency )", "url": "https://secure.php.net/manual/en/solrquery.setmltmintermfrequency.php"}, {"name": "SolrQuery::setMltMinWordLength", "synopsis": "Sets the minimum word length below which words will be ignored.", "usage": "public SolrQuery SolrQuery::setMltMinWordLength ( int $minWordLength )", "url": "https://secure.php.net/manual/en/solrquery.setmltminwordlength.php"}, {"name": "SolrQuery::setOmitHeader", "synopsis": "Exclude the header from the returned results.", "usage": "public SolrQuery SolrQuery::setOmitHeader ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setomitheader.php"}, {"name": "SolrQuery::setQuery", "synopsis": "Sets the search query.", "usage": "public SolrQuery SolrQuery::setQuery ( string $query )", "url": "https://secure.php.net/manual/en/solrquery.setquery.php"}, {"name": "SolrQuery::setRows", "synopsis": "Specifies the maximum number of rows to return in the result", "usage": "public SolrQuery SolrQuery::setRows ( int $rows )", "url": "https://secure.php.net/manual/en/solrquery.setrows.php"}, {"name": "SolrQuery::setShowDebugInfo", "synopsis": "Whether to show debug info", "usage": "public SolrQuery SolrQuery::setShowDebugInfo ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setshowdebuginfo.php"}, {"name": "SolrQuery::setStart", "synopsis": "Specifies the number of rows to skip. Useful in pagination of results.", "usage": "public SolrQuery SolrQuery::setStart ( int $start )", "url": "https://secure.php.net/manual/en/solrquery.setstart.php"}, {"name": "SolrQuery::setStats", "synopsis": "Enables or disables the Stats component.", "usage": "public SolrQuery SolrQuery::setStats ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setstats.php"}, {"name": "SolrQuery::setTerms", "synopsis": "Enables or disables the TermsComponent", "usage": "public SolrQuery SolrQuery::setTerms ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.setterms.php"}, {"name": "SolrQuery::setTermsField", "synopsis": "Sets the name of the field to get the terms from", "usage": "public SolrQuery SolrQuery::setTermsField ( string $fieldname )", "url": "https://secure.php.net/manual/en/solrquery.settermsfield.php"}, {"name": "SolrQuery::setTermsIncludeLowerBound", "synopsis": "Include the lower bound term in the result set.", "usage": "public SolrQuery SolrQuery::setTermsIncludeLowerBound ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.settermsincludelowerbound.php"}, {"name": "SolrQuery::setTermsIncludeUpperBound", "synopsis": "Include the upper bound term in the result set.", "usage": "public SolrQuery SolrQuery::setTermsIncludeUpperBound ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.settermsincludeupperbound.php"}, {"name": "SolrQuery::setTermsLimit", "synopsis": "Sets the maximum number of terms to return", "usage": "public SolrQuery SolrQuery::setTermsLimit ( int $limit )", "url": "https://secure.php.net/manual/en/solrquery.settermslimit.php"}, {"name": "SolrQuery::setTermsLowerBound", "synopsis": "Specifies the Term to start from", "usage": "public SolrQuery SolrQuery::setTermsLowerBound ( string $lowerBound )", "url": "https://secure.php.net/manual/en/solrquery.settermslowerbound.php"}, {"name": "SolrQuery::setTermsMaxCount", "synopsis": "Sets the maximum document frequency.", "usage": "public SolrQuery SolrQuery::setTermsMaxCount ( int $frequency )", "url": "https://secure.php.net/manual/en/solrquery.settermsmaxcount.php"}, {"name": "SolrQuery::setTermsMinCount", "synopsis": "Sets the minimum doc frequency to return in order to be included", "usage": "public SolrQuery SolrQuery::setTermsMinCount ( int $frequency )", "url": "https://secure.php.net/manual/en/solrquery.settermsmincount.php"}, {"name": "SolrQuery::setTermsPrefix", "synopsis": "Restrict matches to terms that start with the prefix", "usage": "public SolrQuery SolrQuery::setTermsPrefix ( string $prefix )", "url": "https://secure.php.net/manual/en/solrquery.settermsprefix.php"}, {"name": "SolrQuery::setTermsReturnRaw", "synopsis": "If true, return the raw characters of the indexed term, regardless of if it is human readable", "usage": "public SolrQuery SolrQuery::setTermsReturnRaw ( bool $flag )", "url": "https://secure.php.net/manual/en/solrquery.settermsreturnraw.php"}, {"name": "SolrQuery::setTermsSort", "synopsis": "If SolrQuery::TERMS_SORT_COUNT, sorts the terms by the term frequency (highest count first). If SolrQuery::TERMS_SORT_INDEX, returns the terms in index order", "usage": "public SolrQuery SolrQuery::setTermsSort ( int $sortType )", "url": "https://secure.php.net/manual/en/solrquery.settermssort.php"}, {"name": "SolrQuery::setTermsUpperBound", "synopsis": "Sets the term to stop at", "usage": "public SolrQuery SolrQuery::setTermsUpperBound ( string $upperBound )", "url": "https://secure.php.net/manual/en/solrquery.settermsupperbound.php"}, {"name": "SolrQuery::setTimeAllowed", "synopsis": "The time allowed for a search to finish. This value only applies to the search and not to requests in general. Time is in milliseconds. Values less than or equal to zero implies no time restriction. Partial results may be returned, if there are any.", "usage": "public SolrQuery SolrQuery::setTimeAllowed ( int $timeAllowed )", "url": "https://secure.php.net/manual/en/solrquery.settimeallowed.php"}, {"name": "SolrQueryResponse::__construct", "synopsis": "Constructor", "usage": "public SolrQueryResponse::__construct ( void )", "url": "https://secure.php.net/manual/en/solrqueryresponse.construct.php"}, {"name": "SolrQueryResponse::__destruct", "synopsis": "Destructor.", "usage": "public void SolrQueryResponse::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrqueryresponse.destruct.php"}, {"name": "SolrResponse::getDigestedResponse", "synopsis": "Returns the XML response as serialized PHP data", "usage": "public string SolrResponse::getDigestedResponse ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getdigestedresponse.php"}, {"name": "SolrResponse::getHttpStatus", "synopsis": "Returns the HTTP status of the response.", "usage": "public int SolrResponse::getHttpStatus ( void )", "url": "https://secure.php.net/manual/en/solrresponse.gethttpstatus.php"}, {"name": "SolrResponse::getHttpStatusMessage", "synopsis": "Returns more details on the HTTP status.", "usage": "public string SolrResponse::getHttpStatusMessage ( void )", "url": "https://secure.php.net/manual/en/solrresponse.gethttpstatusmessage.php"}, {"name": "SolrResponse::getRawRequest", "synopsis": "Returns the raw request sent to the Solr server.", "usage": "public string SolrResponse::getRawRequest ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getrawrequest.php"}, {"name": "SolrResponse::getRawRequestHeaders", "synopsis": "Returns the raw request headers sent to the Solr server.", "usage": "public string SolrResponse::getRawRequestHeaders ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getrawrequestheaders.php"}, {"name": "SolrResponse::getRawResponse", "synopsis": "Returns the raw response from the server.", "usage": "public string SolrResponse::getRawResponse ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getrawresponse.php"}, {"name": "SolrResponse::getRawResponseHeaders", "synopsis": "Returns the raw response headers from the server.", "usage": "public string SolrResponse::getRawResponseHeaders ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getrawresponseheaders.php"}, {"name": "SolrResponse::getRequestUrl", "synopsis": "Returns the full URL the request was sent to.", "usage": "public string SolrResponse::getRequestUrl ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getrequesturl.php"}, {"name": "SolrResponse::getResponse", "synopsis": "Returns a SolrObject representing the XML response from the server.", "usage": "public SolrObject SolrResponse::getResponse ( void )", "url": "https://secure.php.net/manual/en/solrresponse.getresponse.php"}, {"name": "SolrResponse::setParseMode", "synopsis": "Sets the parse mode.", "usage": "public bool SolrResponse::setParseMode ([ int $parser_mode = 0 ] )", "url": "https://secure.php.net/manual/en/solrresponse.setparsemode.php"}, {"name": "SolrResponse::success", "synopsis": "Used to check if the request to the server was successful.", "usage": "public bool SolrResponse::success ( void )", "url": "https://secure.php.net/manual/en/solrresponse.success.php"}, {"name": "SolrServerException::getInternalInfo", "synopsis": "Returns internal information where the Exception was thrown.", "usage": "public array SolrServerException::getInternalInfo ( void )", "url": "https://secure.php.net/manual/en/solrserverexception.getinternalinfo.php"}, {"name": "SolrUpdateResponse::__construct", "synopsis": "Constructor", "usage": "public SolrUpdateResponse::__construct ( void )", "url": "https://secure.php.net/manual/en/solrupdateresponse.construct.php"}, {"name": "SolrUpdateResponse::__destruct", "synopsis": "Destructor", "usage": "public void SolrUpdateResponse::__destruct ( void )", "url": "https://secure.php.net/manual/en/solrupdateresponse.destruct.php"}, {"name": "SolrUtils::digestXmlResponse", "synopsis": "This method parses an response XML string from the Apache Solr server into a SolrObject. It throws a SolrException if there was an error.", "usage": "public static SolrObject SolrUtils::digestXmlResponse ( string $xmlresponse [, int $parse_mode = 0 ] )", "url": "https://secure.php.net/manual/en/solrutils.digestxmlresponse.php"}, {"name": "SolrUtils::escapeQueryChars", "synopsis": "Lucene supports escaping special characters that are part of the query syntax.", "usage": "public static string SolrUtils::escapeQueryChars ( string $str )", "url": "https://secure.php.net/manual/en/solrutils.escapequerychars.php"}, {"name": "SolrUtils::getSolrVersion", "synopsis": "Returns the current Solr version.", "usage": "public static string SolrUtils::getSolrVersion ( void )", "url": "https://secure.php.net/manual/en/solrutils.getsolrversion.php"}, {"name": "SolrUtils::queryPhrase", "synopsis": "Prepares a phrase from an unescaped lucene string.", "usage": "public static string SolrUtils::queryPhrase ( string $str )", "url": "https://secure.php.net/manual/en/solrutils.queryphrase.php"}, {"name": "SphinxClient::addQuery", "synopsis": "Adds query with the current settings to multi-query batch. This method doesn't affect current settings (sorting, filtering, grouping etc.) in any way.", "usage": "public int SphinxClient::addQuery ( string $query [, string $index = \"*\" [, string $comment = \"\" ]] )", "url": "https://secure.php.net/manual/en/sphinxclient.addquery.php"}, {"name": "SphinxClient::buildExcerpts", "synopsis": "Connects to searchd, requests it to generate excerpts (snippets) from the given documents, and returns the results.", "usage": "public array SphinxClient::buildExcerpts ( array $docs , string $index , string $words [, array $opts ] )", "url": "https://secure.php.net/manual/en/sphinxclient.buildexcerpts.php"}, {"name": "SphinxClient::buildKeywords", "synopsis": "Extracts keywords from query using tokenizer settings for the given index, optionally with per-keyword occurrence statistics.", "usage": "public array SphinxClient::buildKeywords ( string $query , string $index , bool $hits )", "url": "https://secure.php.net/manual/en/sphinxclient.buildkeywords.php"}, {"name": "SphinxClient::close", "synopsis": "Closes previously opened persistent connection.", "usage": "public bool SphinxClient::close ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.close.php"}, {"name": "SphinxClient::__construct", "synopsis": "Creates a new SphinxClient object.", "usage": "public SphinxClient::__construct ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.construct.php"}, {"name": "SphinxClient::escapeString", "synopsis": "Escapes characters that are treated as special operators by the query language parser.", "usage": "public string SphinxClient::escapeString ( string $string )", "url": "https://secure.php.net/manual/en/sphinxclient.escapestring.php"}, {"name": "SphinxClient::getLastError", "synopsis": "Returns string with the last error message. If there were no errors during the previous API call, empty string is returned. This method doesn't reset the error message, so you can safely call it several times.", "usage": "public string SphinxClient::getLastError ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.getlasterror.php"}, {"name": "SphinxClient::getLastWarning", "synopsis": "Returns last warning message. If there were no warnings during the previous API call, empty string is returned. This method doesn't reset the warning, so you can safely call it several times.", "usage": "public string SphinxClient::getLastWarning ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.getlastwarning.php"}, {"name": "SphinxClient::open", "synopsis": "Opens persistent connection to the server.", "usage": "public bool SphinxClient::open ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.open.php"}, {"name": "SphinxClient::query", "synopsis": "Connects to searchd server, runs the given search query with the current settings, obtains and returns the result set.", "usage": "public array SphinxClient::query ( string $query [, string $index = \"*\" [, string $comment = \"\" ]] )", "url": "https://secure.php.net/manual/en/sphinxclient.query.php"}, {"name": "SphinxClient::resetFilters", "synopsis": "Clears all currently set filters. This call is normally required when using multi-queries. You might want to set different filters for different queries in the batch. To do that, you should call SphinxClient::resetFilters() and add new filters using the respective calls.", "usage": "public void SphinxClient::resetFilters ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.resetfilters.php"}, {"name": "SphinxClient::resetGroupBy", "synopsis": "Clears all currently group-by settings, and disables group-by. This call is normally required only when using multi-queries.", "usage": "public void SphinxClient::resetGroupBy ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.resetgroupby.php"}, {"name": "SphinxClient::runQueries", "synopsis": "Connects to searchd, runs a batch of all queries added using SphinxClient::addQuery, obtains and returns the result sets.", "usage": "public array SphinxClient::runQueries ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.runqueries.php"}, {"name": "SphinxClient::setArrayResult", "synopsis": "Controls the format of search results set arrays (whether matches should be returned as an array or a hash).", "usage": "public bool SphinxClient::setArrayResult ( bool $array_result = FALSE )", "url": "https://secure.php.net/manual/en/sphinxclient.setarrayresult.php"}, {"name": "SphinxClient::setConnectTimeout", "synopsis": "Sets connection timeout (in seconds) for searchd connection.", "usage": "public bool SphinxClient::setConnectTimeout ( float $timeout )", "url": "https://secure.php.net/manual/en/sphinxclient.setconnecttimeout.php"}, {"name": "SphinxClient::setFieldWeights", "synopsis": "Binds per-field weights by name.", "usage": "public bool SphinxClient::setFieldWeights ( array $weights )", "url": "https://secure.php.net/manual/en/sphinxclient.setfieldweights.php"}, {"name": "SphinxClient::setFilter", "synopsis": "Adds new integer values set filter to the existing list of filters.", "usage": "public bool SphinxClient::setFilter ( string $attribute , array $values [, bool $exclude = FALSE ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setfilter.php"}, {"name": "SphinxClient::setFilterFloatRange", "synopsis": "Adds new float range filter to the existing list of filters. Only those documents which have attribute value stored in the index between min and max (including values that are exactly equal to min or max) will be matched (or rejected, if exclude is TRUE).", "usage": "public bool SphinxClient::setFilterFloatRange ( string $attribute , float $min , float $max [, bool $exclude = FALSE ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setfilterfloatrange.php"}, {"name": "SphinxClient::setFilterRange", "synopsis": "Adds new integer range filter to the existing list of filters. Only those documents which have attribute value stored in the index between min and max (including values that are exactly equal to min or max) will be matched (or rejected, if exclude is TRUE).", "usage": "public bool SphinxClient::setFilterRange ( string $attribute , int $min , int $max [, bool $exclude = FALSE ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setfilterrange.php"}, {"name": "SphinxClient::setGeoAnchor", "synopsis": "Sets anchor point for a geosphere distance (geodistance) calculations and enables them.", "usage": "public bool SphinxClient::setGeoAnchor ( string $attrlat , string $attrlong , float $latitude , float $longitude )", "url": "https://secure.php.net/manual/en/sphinxclient.setgeoanchor.php"}, {"name": "SphinxClient::setGroupBy", "synopsis": "Sets grouping attribute, function, and group sorting mode, and enables grouping.", "usage": "public bool SphinxClient::setGroupBy ( string $attribute , int $func [, string $groupsort = \"@group desc\" ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setgroupby.php"}, {"name": "SphinxClient::setGroupDistinct", "synopsis": "Sets attribute name for per-group distinct values count calculations. Only available for grouping queries. For each group, all values of attribute will be stored, then the amount of distinct values will be calculated and returned to the client. This feature is similar to COUNT(DISTINCT) clause in SQL.", "usage": "public bool SphinxClient::setGroupDistinct ( string $attribute )", "url": "https://secure.php.net/manual/en/sphinxclient.setgroupdistinct.php"}, {"name": "SphinxClient::setIDRange", "synopsis": "Sets an accepted range of document IDs. Default range is from 0 to 0, i.e. no limit. Only those records that have document ID between min and max (including IDs exactly equal to min or max) will be matched.", "usage": "public bool SphinxClient::setIDRange ( int $min , int $max )", "url": "https://secure.php.net/manual/en/sphinxclient.setidrange.php"}, {"name": "SphinxClient::setIndexWeights", "synopsis": "Sets per-index weights and enables weighted summing of match weights across different indexes.", "usage": "public bool SphinxClient::setIndexWeights ( array $weights )", "url": "https://secure.php.net/manual/en/sphinxclient.setindexweights.php"}, {"name": "SphinxClient::setLimits", "synopsis": "Sets offset into server-side result set and amount of matches to return to client starting from that offset (limit). Can additionally control maximum server-side result set size for current query (max_matches) and the threshold amount of matches to stop searching at (cutoff).", "usage": "public bool SphinxClient::setLimits ( int $offset , int $limit [, int $max_matches = 0 [, int $cutoff = 0 ]] )", "url": "https://secure.php.net/manual/en/sphinxclient.setlimits.php"}, {"name": "SphinxClient::setMatchMode", "synopsis": "Sets full-text query matching mode. mode is one of the constants listed below.", "usage": "public bool SphinxClient::setMatchMode ( int $mode )", "url": "https://secure.php.net/manual/en/sphinxclient.setmatchmode.php"}, {"name": "SphinxClient::setMaxQueryTime", "synopsis": "Sets maximum search query time.", "usage": "public bool SphinxClient::setMaxQueryTime ( int $qtime )", "url": "https://secure.php.net/manual/en/sphinxclient.setmaxquerytime.php"}, {"name": "SphinxClient::setOverride", "synopsis": "Sets temporary (per-query) per-document attribute value overrides. Override feature lets you \"temporary\" update attribute values for some documents within a single query, leaving all other queries unaffected. This might be useful for personalized data", "usage": "public bool SphinxClient::setOverride ( string $attribute , int $type , array $values )", "url": "https://secure.php.net/manual/en/sphinxclient.setoverride.php"}, {"name": "SphinxClient::setRankingMode", "synopsis": "Sets ranking mode. Only available in SPH_MATCH_EXTENDED2 matching mode.", "usage": "public bool SphinxClient::setRankingMode ( int $ranker )", "url": "https://secure.php.net/manual/en/sphinxclient.setrankingmode.php"}, {"name": "SphinxClient::setRetries", "synopsis": "Sets distributed retry count and delay.", "usage": "public bool SphinxClient::setRetries ( int $count [, int $delay = 0 ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setretries.php"}, {"name": "SphinxClient::setSelect", "synopsis": "Sets the select clause, listing specific attributes to fetch, and expressions to compute and fetch.", "usage": "public bool SphinxClient::setSelect ( string $clause )", "url": "https://secure.php.net/manual/en/sphinxclient.setselect.php"}, {"name": "SphinxClient::setServer", "synopsis": "Sets searchd host name and TCP port. All subsequent requests will use the new host and port settings. Default host and port are 'localhost' and 3312, respectively.", "usage": "public bool SphinxClient::setServer ( string $server , int $port )", "url": "https://secure.php.net/manual/en/sphinxclient.setserver.php"}, {"name": "SphinxClient::setSortMode", "synopsis": "Sets matches sorting mode. See available modes below.", "usage": "public bool SphinxClient::setSortMode ( int $mode [, string $sortby ] )", "url": "https://secure.php.net/manual/en/sphinxclient.setsortmode.php"}, {"name": "SphinxClient::status", "synopsis": "Queries searchd status, and returns an array of status variable name and value pairs.", "usage": "public array SphinxClient::status ( void )", "url": "https://secure.php.net/manual/en/sphinxclient.status.php"}, {"name": "SphinxClient::updateAttributes", "synopsis": "Instantly updates given attribute values in given documents.", "usage": "public int SphinxClient::updateAttributes ( string $index , array $attributes , array $values [, bool $mva = FALSE ] )", "url": "https://secure.php.net/manual/en/sphinxclient.updateattributes.php"}, {"name": "SplDoublyLinkedList::add", "synopsis": "Insert the value newval at the specified index, shuffling the previous value at that index (and all subsequent values) up through the list.", "usage": "public void SplDoublyLinkedList::add ( mixed $index , mixed $newval )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.add.php"}, {"name": "SplDoublyLinkedList::bottom", "synopsis": null, "usage": "public mixed SplDoublyLinkedList::bottom ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.bottom.php"}, {"name": "SplDoublyLinkedList::count", "synopsis": null, "usage": "public int SplDoublyLinkedList::count ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.count.php"}, {"name": "SplDoublyLinkedList::current", "synopsis": "Get the current doubly linked list node.", "usage": "public mixed SplDoublyLinkedList::current ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.current.php"}, {"name": "SplDoublyLinkedList::getIteratorMode", "synopsis": null, "usage": "public int SplDoublyLinkedList::getIteratorMode ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.getiteratormode.php"}, {"name": "SplDoublyLinkedList::isEmpty", "synopsis": null, "usage": "public bool SplDoublyLinkedList::isEmpty ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.isempty.php"}, {"name": "SplDoublyLinkedList::key", "synopsis": "This function returns the current node index", "usage": "public mixed SplDoublyLinkedList::key ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.key.php"}, {"name": "SplDoublyLinkedList::next", "synopsis": "Move the iterator to the next node.", "usage": "public void SplDoublyLinkedList::next ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.next.php"}, {"name": "SplDoublyLinkedList::offsetExists", "synopsis": null, "usage": "public bool SplDoublyLinkedList::offsetExists ( mixed $index )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.offsetexists.php"}, {"name": "SplDoublyLinkedList::offsetGet", "synopsis": null, "usage": "public mixed SplDoublyLinkedList::offsetGet ( mixed $index )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.offsetget.php"}, {"name": "SplDoublyLinkedList::offsetSet", "synopsis": "Sets the value at the specified index to newval.", "usage": "public void SplDoublyLinkedList::offsetSet ( mixed $index , mixed $newval )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.offsetset.php"}, {"name": "SplDoublyLinkedList::offsetUnset", "synopsis": "Unsets the value at the specified index.", "usage": "public void SplDoublyLinkedList::offsetUnset ( mixed $index )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.offsetunset.php"}, {"name": "SplDoublyLinkedList::pop", "synopsis": null, "usage": "public mixed SplDoublyLinkedList::pop ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.pop.php"}, {"name": "SplDoublyLinkedList::prev", "synopsis": "Move the iterator to the previous node.", "usage": "public void SplDoublyLinkedList::prev ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.prev.php"}, {"name": "SplDoublyLinkedList::push", "synopsis": "Pushes value at the end of the doubly linked list.", "usage": "public void SplDoublyLinkedList::push ( mixed $value )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.push.php"}, {"name": "SplDoublyLinkedList::rewind", "synopsis": "This rewinds the iterator to the beginning.", "usage": "public void SplDoublyLinkedList::rewind ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.rewind.php"}, {"name": "SplDoublyLinkedList::serialize", "synopsis": "Serializes the storage.", "usage": "public string SplDoublyLinkedList::serialize ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.serialize.php"}, {"name": "SplDoublyLinkedList::setIteratorMode", "synopsis": null, "usage": "public void SplDoublyLinkedList::setIteratorMode ( int $mode )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.setiteratormode.php"}, {"name": "SplDoublyLinkedList::shift", "synopsis": null, "usage": "public mixed SplDoublyLinkedList::shift ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.shift.php"}, {"name": "SplDoublyLinkedList::top", "synopsis": null, "usage": "public mixed SplDoublyLinkedList::top ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.top.php"}, {"name": "SplDoublyLinkedList::unserialize", "synopsis": "Unserializes the storage, from SplDoublyLinkedList::serialize().", "usage": "public void SplDoublyLinkedList::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.unserialize.php"}, {"name": "SplDoublyLinkedList::unshift", "synopsis": "Prepends value at the beginning of the doubly linked list.", "usage": "public void SplDoublyLinkedList::unshift ( mixed $value )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.unshift.php"}, {"name": "SplDoublyLinkedList::valid", "synopsis": "Checks if the doubly linked list contains any more nodes.", "usage": "public bool SplDoublyLinkedList::valid ( void )", "url": "https://secure.php.net/manual/en/spldoublylinkedlist.valid.php"}, {"name": "SplEnum::getConstList", "synopsis": "", "usage": "public array SplEnum::getConstList ([ bool $include_default = FALSE ] )", "url": "https://secure.php.net/manual/en/splenum.getconstlist.php"}, {"name": "SplFileInfo::__construct", "synopsis": "Creates a new SplFileInfo object for the file_name specified. The file does not need to exist, or be readable.", "usage": "public SplFileInfo::__construct ( string $file_name )", "url": "https://secure.php.net/manual/en/splfileinfo.construct.php"}, {"name": "SplFileInfo::getATime", "synopsis": "Gets the last access time for the file.", "usage": "public int SplFileInfo::getATime ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getatime.php"}, {"name": "SplFileInfo::getBasename", "synopsis": "This method returns the base name of the file, directory, or link without path info.", "usage": "public string SplFileInfo::getBasename ([ string $suffix ] )", "url": "https://secure.php.net/manual/en/splfileinfo.getbasename.php"}, {"name": "SplFileInfo::getCTime", "synopsis": "Returns the inode change time for the file. The time returned is a Unix timestamp.", "usage": "public int SplFileInfo::getCTime ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getctime.php"}, {"name": "SplFileInfo::getExtension", "synopsis": "Retrieves the file extension.", "usage": "public string SplFileInfo::getExtension ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getextension.php"}, {"name": "SplFileInfo::getFileInfo", "synopsis": "This method gets an SplFileInfo object for the referenced file.", "usage": "public SplFileInfo SplFileInfo::getFileInfo ([ string $class_name ] )", "url": "https://secure.php.net/manual/en/splfileinfo.getfileinfo.php"}, {"name": "SplFileInfo::getFilename", "synopsis": "Gets the filename without any path information.", "usage": "public string SplFileInfo::getFilename ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getfilename.php"}, {"name": "SplFileInfo::getGroup", "synopsis": "Gets the file group. The group ID is returned in numerical format.", "usage": "public int SplFileInfo::getGroup ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getgroup.php"}, {"name": "SplFileInfo::getInode", "synopsis": "Gets the inode number for the filesystem object.", "usage": "public int SplFileInfo::getInode ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getinode.php"}, {"name": "SplFileInfo::getLinkTarget", "synopsis": "Gets the target of a filesystem link.", "usage": "public string SplFileInfo::getLinkTarget ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getlinktarget.php"}, {"name": "SplFileInfo::getMTime", "synopsis": "Returns the time when the contents of the file were changed. The time returned is a Unix timestamp.", "usage": "public int SplFileInfo::getMTime ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getmtime.php"}, {"name": "SplFileInfo::getOwner", "synopsis": "Gets the file owner. The owner ID is returned in numerical format.", "usage": "public int SplFileInfo::getOwner ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getowner.php"}, {"name": "SplFileInfo::getPath", "synopsis": "Returns the path to the file, omitting the filename and any trailing slash.", "usage": "public string SplFileInfo::getPath ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getpath.php"}, {"name": "SplFileInfo::getPathInfo", "synopsis": "Gets an SplFileInfo object for the parent of the current file.", "usage": "public SplFileInfo SplFileInfo::getPathInfo ([ string $class_name ] )", "url": "https://secure.php.net/manual/en/splfileinfo.getpathinfo.php"}, {"name": "SplFileInfo::getPathname", "synopsis": "Returns the path to the file.", "usage": "public string SplFileInfo::getPathname ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getpathname.php"}, {"name": "SplFileInfo::getPerms", "synopsis": "Gets the file permissions for the file.", "usage": "public int SplFileInfo::getPerms ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getperms.php"}, {"name": "SplFileInfo::getRealPath", "synopsis": "This method expands all symbolic links, resolves relative references and returns the real path to the file.", "usage": "public string SplFileInfo::getRealPath ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getrealpath.php"}, {"name": "SplFileInfo::getSize", "synopsis": "Returns the filesize in bytes for the file referenced.", "usage": "public int SplFileInfo::getSize ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.getsize.php"}, {"name": "SplFileInfo::getType", "synopsis": "Returns the type of the file referenced.", "usage": "public string SplFileInfo::getType ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.gettype.php"}, {"name": "SplFileInfo::isDir", "synopsis": "This method can be used to determine if the file is a directory.", "usage": "public bool SplFileInfo::isDir ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.isdir.php"}, {"name": "SplFileInfo::isExecutable", "synopsis": "Checks if the file is executable.", "usage": "public bool SplFileInfo::isExecutable ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.isexecutable.php"}, {"name": "SplFileInfo::isFile", "synopsis": "Checks if the file referenced by this SplFileInfo object exists and is a regular file.", "usage": "public bool SplFileInfo::isFile ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.isfile.php"}, {"name": "SplFileInfo::isLink", "synopsis": "Use this method to check if the file referenced by the SplFileInfo object is a link.", "usage": "public bool SplFileInfo::isLink ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.islink.php"}, {"name": "SplFileInfo::isReadable", "synopsis": "Check if the file is readable.", "usage": "public bool SplFileInfo::isReadable ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.isreadable.php"}, {"name": "SplFileInfo::isWritable", "synopsis": "Checks if the current entry is writable.", "usage": "public bool SplFileInfo::isWritable ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.iswritable.php"}, {"name": "SplFileInfo::openFile", "synopsis": "Creates an SplFileObject object of the file. This is useful because SplFileObject contains additional methods for manipulating the file whereas SplFileInfo is only useful for gaining information, like whether the file is writable.", "usage": "public SplFileObject SplFileInfo::openFile ([ string $open_mode = \"r\" [, bool $use_include_path = FALSE [, resource $context = NULL ]]] )", "url": "https://secure.php.net/manual/en/splfileinfo.openfile.php"}, {"name": "SplFileInfo::openFile()", "synopsis": "Use this method to set a custom class which will be used when SplFileInfo::openFile() is called. The class name passed to this method must be SplFileObject or a class derived from SplFileObject.", "usage": "public void SplFileInfo::setFileClass ([ string $class_name = \"SplFileObject\" ] )", "url": "https://secure.php.net/manual/en/splfileinfo.setfileclass.php"}, {"name": "SplFileInfo::getFileInfo()", "synopsis": "Use this method to set a custom class which will be used when SplFileInfo::getFileInfo() and SplFileInfo::getPathInfo() are called. The class name passed to this method must be SplFileInfo or a class derived from SplFileInfo.", "usage": "public void SplFileInfo::setInfoClass ([ string $class_name = \"SplFileInfo\" ] )", "url": "https://secure.php.net/manual/en/splfileinfo.setinfoclass.php"}, {"name": "SplFileInfo::__toString", "synopsis": "This method will return the file name of the referenced file.", "usage": "public void SplFileInfo::__toString ( void )", "url": "https://secure.php.net/manual/en/splfileinfo.tostring.php"}, {"name": "SplFileObject::current", "synopsis": "Retrieves the current line of the file.", "usage": "public string|array SplFileObject::current ( void )", "url": "https://secure.php.net/manual/en/splfileobject.current.php"}, {"name": "SplFileObject::eof", "synopsis": "Determine whether the end of file has been reached", "usage": "public bool SplFileObject::eof ( void )", "url": "https://secure.php.net/manual/en/splfileobject.eof.php"}, {"name": "SplFileObject::fflush", "synopsis": "Forces a write of all buffered output to the file.", "usage": "public bool SplFileObject::fflush ( void )", "url": "https://secure.php.net/manual/en/splfileobject.fflush.php"}, {"name": "SplFileObject::fgetc", "synopsis": "Gets a character from the file.", "usage": "public string SplFileObject::fgetc ( void )", "url": "https://secure.php.net/manual/en/splfileobject.fgetc.php"}, {"name": "SplFileObject::fgetcsv", "synopsis": "Gets a line from the file which is in CSV format and returns an array containing the fields read.", "usage": "public array SplFileObject::fgetcsv ([ string $delimiter = \",\" [, string $enclosure = \"\\\"\" [, string $escape = \"\\\\\" ]]] )", "url": "https://secure.php.net/manual/en/splfileobject.fgetcsv.php"}, {"name": "SplFileObject::fgets", "synopsis": "Gets a line from the file.", "usage": "public string SplFileObject::fgets ( void )", "url": "https://secure.php.net/manual/en/splfileobject.fgets.php"}, {"name": "SplFileObject::fgetss", "synopsis": "Identical to SplFileObject::fgets(), except that SplFileObject::fgetss() attempts to strip any HTML and PHP tags from the text it reads.", "usage": "public string SplFileObject::fgetss ([ string $allowable_tags ] )", "url": "https://secure.php.net/manual/en/splfileobject.fgetss.php"}, {"name": "SplFileObject::flock", "synopsis": "Locks or unlocks the file in the same portable way as flock().", "usage": "public bool SplFileObject::flock ( int $operation [, int &$wouldblock ] )", "url": "https://secure.php.net/manual/en/splfileobject.flock.php"}, {"name": "SplFileObject::fpassthru", "synopsis": "Reads to EOF on the given file pointer from the current position and writes the results to the output buffer.", "usage": "public int SplFileObject::fpassthru ( void )", "url": "https://secure.php.net/manual/en/splfileobject.fpassthru.php"}, {"name": "SplFileObject::fputcsv", "synopsis": "Writes the fields array to the file as a CSV line.", "usage": "public int SplFileObject::fputcsv ( array $fields [, string $delimiter = \",\" [, string $enclosure = '\"' [, string $escape = \"\\\\\" ]]] )", "url": "https://secure.php.net/manual/en/splfileobject.fputcsv.php"}, {"name": "SplFileObject::fread", "synopsis": "Reads the given number of bytes from the file.", "usage": "public string SplFileObject::fread ( int $length )", "url": "https://secure.php.net/manual/en/splfileobject.fread.php"}, {"name": "SplFileObject::fscanf", "synopsis": "Reads a line from the file and interprets it according to the specified format, which is described in the documentation for sprintf().", "usage": "public mixed SplFileObject::fscanf ( string $format [, mixed &$... ] )", "url": "https://secure.php.net/manual/en/splfileobject.fscanf.php"}, {"name": "SplFileObject::fseek", "synopsis": "Seek to a position in the file measured in bytes from the beginning of the file, obtained by adding offset to the position specified by whence.", "usage": "public int SplFileObject::fseek ( int $offset [, int $whence = SEEK_SET ] )", "url": "https://secure.php.net/manual/en/splfileobject.fseek.php"}, {"name": "SplFileObject::fstat", "synopsis": "Gathers the statistics of the file. Behaves identically to fstat().", "usage": "public array SplFileObject::fstat ( void )", "url": "https://secure.php.net/manual/en/splfileobject.fstat.php"}, {"name": "SplFileObject::ftell", "synopsis": "Returns the position of the file pointer which represents the current offset in the file stream.", "usage": "public int SplFileObject::ftell ( void )", "url": "https://secure.php.net/manual/en/splfileobject.ftell.php"}, {"name": "SplFileObject::ftruncate", "synopsis": "Truncates the file to size bytes.", "usage": "public bool SplFileObject::ftruncate ( int $size )", "url": "https://secure.php.net/manual/en/splfileobject.ftruncate.php"}, {"name": "SplFileObject::fwrite", "synopsis": "Writes the contents of string to the file", "usage": "public int SplFileObject::fwrite ( string $str [, int $length ] )", "url": "https://secure.php.net/manual/en/splfileobject.fwrite.php"}, {"name": "SplFileObject::getChildren", "synopsis": "An SplFileObject does not have children so this method returns NULL.", "usage": "public void SplFileObject::getChildren ( void )", "url": "https://secure.php.net/manual/en/splfileobject.getchildren.php"}, {"name": "SplFileObject::getCsvControl", "synopsis": "Gets the delimiter, enclosure and escape character used for parsing CSV fields.", "usage": "public array SplFileObject::getCsvControl ( void )", "url": "https://secure.php.net/manual/en/splfileobject.getcsvcontrol.php"}, {"name": "SplFileObject::getFlags", "synopsis": "Gets the flags set for an instance of SplFileObject as an integer.", "usage": "public int SplFileObject::getFlags ( void )", "url": "https://secure.php.net/manual/en/splfileobject.getflags.php"}, {"name": "SplFileObject::getMaxLineLen", "synopsis": "Gets the maximum line length as set by SplFileObject::setMaxLineLen().", "usage": "public int SplFileObject::getMaxLineLen ( void )", "url": "https://secure.php.net/manual/en/splfileobject.getmaxlinelen.php"}, {"name": "SplFileObject::hasChildren", "synopsis": "An SplFileObject does not have children so this method always return FALSE.", "usage": "public bool SplFileObject::hasChildren ( void )", "url": "https://secure.php.net/manual/en/splfileobject.haschildren.php"}, {"name": "SplFileObject::key", "synopsis": "Gets the current line number.", "usage": "public int SplFileObject::key ( void )", "url": "https://secure.php.net/manual/en/splfileobject.key.php"}, {"name": "SplFileObject::next", "synopsis": "Moves ahead to the next line in the file.", "usage": "public void SplFileObject::next ( void )", "url": "https://secure.php.net/manual/en/splfileobject.next.php"}, {"name": "SplFileObject::rewind", "synopsis": "Rewinds the file back to the first line.", "usage": "public void SplFileObject::rewind ( void )", "url": "https://secure.php.net/manual/en/splfileobject.rewind.php"}, {"name": "SplFileObject::seek", "synopsis": "Seek to specified line in the file.", "usage": "public void SplFileObject::seek ( int $line_pos )", "url": "https://secure.php.net/manual/en/splfileobject.seek.php"}, {"name": "SplFileObject::setCsvControl", "synopsis": "Sets the delimiter, enclosure and escape character for parsing CSV fields.", "usage": "public void SplFileObject::setCsvControl ([ string $delimiter = \",\" [, string $enclosure = \"\\\"\" [, string $escape = \"\\\\\" ]]] )", "url": "https://secure.php.net/manual/en/splfileobject.setcsvcontrol.php"}, {"name": "SplFileObject::setFlags", "synopsis": "Sets the flags to be used by the SplFileObject.", "usage": "public void SplFileObject::setFlags ( int $flags )", "url": "https://secure.php.net/manual/en/splfileobject.setflags.php"}, {"name": "SplFileObject::setMaxLineLen", "synopsis": "Sets the maximum length of a line to be read.", "usage": "public void SplFileObject::setMaxLineLen ( int $max_len )", "url": "https://secure.php.net/manual/en/splfileobject.setmaxlinelen.php"}, {"name": "SplFileObject::current()", "synopsis": null, "usage": "public void SplFileObject::__toString ( void )", "url": "https://secure.php.net/manual/en/splfileobject.tostring.php"}, {"name": "SplFileObject::valid", "synopsis": "Check whether EOF has been reached.", "usage": "public bool SplFileObject::valid ( void )", "url": "https://secure.php.net/manual/en/splfileobject.valid.php"}, {"name": "SplFixedArray::count", "synopsis": "Returns the size of the array.", "usage": "public int SplFixedArray::count ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.count.php"}, {"name": "SplFixedArray::current", "synopsis": "Get the current array element.", "usage": "public mixed SplFixedArray::current ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.current.php"}, {"name": "SplFixedArray::fromArray", "synopsis": "Import the PHP array array in a new SplFixedArray instance", "usage": "public static SplFixedArray SplFixedArray::fromArray ( array $array [, bool $save_indexes = TRUE ] )", "url": "https://secure.php.net/manual/en/splfixedarray.fromarray.php"}, {"name": "SplFixedArray::getSize", "synopsis": "Gets the size of the array.", "usage": "public int SplFixedArray::getSize ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.getsize.php"}, {"name": "SplFixedArray::key", "synopsis": "Returns the current array index.", "usage": "public int SplFixedArray::key ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.key.php"}, {"name": "SplFixedArray::next", "synopsis": "Move the iterator to the next array entry.", "usage": "public void SplFixedArray::next ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.next.php"}, {"name": "SplFixedArray::offsetExists", "synopsis": "Checks whether the requested index index exists.", "usage": "public bool SplFixedArray::offsetExists ( int $index )", "url": "https://secure.php.net/manual/en/splfixedarray.offsetexists.php"}, {"name": "SplFixedArray::offsetGet", "synopsis": "Returns the value at the index index.", "usage": "public mixed SplFixedArray::offsetGet ( int $index )", "url": "https://secure.php.net/manual/en/splfixedarray.offsetget.php"}, {"name": "SplFixedArray::offsetSet", "synopsis": "Sets the value at the specified index to newval.", "usage": "public void SplFixedArray::offsetSet ( int $index , mixed $newval )", "url": "https://secure.php.net/manual/en/splfixedarray.offsetset.php"}, {"name": "SplFixedArray::offsetUnset", "synopsis": "Unsets the value at the specified index.", "usage": "public void SplFixedArray::offsetUnset ( int $index )", "url": "https://secure.php.net/manual/en/splfixedarray.offsetunset.php"}, {"name": "SplFixedArray::rewind", "synopsis": "Rewinds the iterator to the beginning.", "usage": "public void SplFixedArray::rewind ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.rewind.php"}, {"name": "SplFixedArray::setSize", "synopsis": "Change the size of an array to the new size of size. If size is less than the current array size, any values after the new size will be discarded. If size is greater than the current array size, the array will be padded with NULL values.", "usage": "public bool SplFixedArray::setSize ( int $size )", "url": "https://secure.php.net/manual/en/splfixedarray.setsize.php"}, {"name": "SplFixedArray::toArray", "synopsis": "Returns a PHP array from the fixed array.", "usage": "public array SplFixedArray::toArray ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.toarray.php"}, {"name": "SplFixedArray::valid", "synopsis": "Checks if the array contains any more elements.", "usage": "public bool SplFixedArray::valid ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.valid.php"}, {"name": "SplFixedArray::__wakeup", "synopsis": "Reinitialises the array after being unserialised.", "usage": "public void SplFixedArray::__wakeup ( void )", "url": "https://secure.php.net/manual/en/splfixedarray.wakeup.php"}, {"name": "SplHeap::compare", "synopsis": "Compare value1 with value2.", "usage": "abstract protected int SplHeap::compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/splheap.compare.php"}, {"name": "SplHeap::count", "synopsis": null, "usage": "public int SplHeap::count ( void )", "url": "https://secure.php.net/manual/en/splheap.count.php"}, {"name": "SplHeap::current", "synopsis": "Get the current datastructure node.", "usage": "public mixed SplHeap::current ( void )", "url": "https://secure.php.net/manual/en/splheap.current.php"}, {"name": "SplHeap::extract", "synopsis": null, "usage": "public mixed SplHeap::extract ( void )", "url": "https://secure.php.net/manual/en/splheap.extract.php"}, {"name": "SplHeap::insert", "synopsis": "Insert value in the heap.", "usage": "public void SplHeap::insert ( mixed $value )", "url": "https://secure.php.net/manual/en/splheap.insert.php"}, {"name": "SplHeap::isCorrupted", "synopsis": null, "usage": "public bool SplHeap::isCorrupted ( void )", "url": "https://secure.php.net/manual/en/splheap.iscorrupted.php"}, {"name": "SplHeap::isEmpty", "synopsis": null, "usage": "public bool SplHeap::isEmpty ( void )", "url": "https://secure.php.net/manual/en/splheap.isempty.php"}, {"name": "SplHeap::key", "synopsis": "This function returns the current node index", "usage": "public mixed SplHeap::key ( void )", "url": "https://secure.php.net/manual/en/splheap.key.php"}, {"name": "SplHeap::next", "synopsis": "Move to the next node. This will delete the top node of the heap.", "usage": "public void SplHeap::next ( void )", "url": "https://secure.php.net/manual/en/splheap.next.php"}, {"name": "SplHeap::recoverFromCorruption", "synopsis": null, "usage": "public void SplHeap::recoverFromCorruption ( void )", "url": "https://secure.php.net/manual/en/splheap.recoverfromcorruption.php"}, {"name": "SplHeap::rewind", "synopsis": "This rewinds the iterator to the beginning. This is a no-op for heaps as the iterator is virtual and in fact never moves from the top of the heap.", "usage": "public void SplHeap::rewind ( void )", "url": "https://secure.php.net/manual/en/splheap.rewind.php"}, {"name": "SplHeap::top", "synopsis": null, "usage": "public mixed SplHeap::top ( void )", "url": "https://secure.php.net/manual/en/splheap.top.php"}, {"name": "SplHeap::valid", "synopsis": "Checks if the heap contains any more nodes.", "usage": "public bool SplHeap::valid ( void )", "url": "https://secure.php.net/manual/en/splheap.valid.php"}, {"name": "SplMaxHeap::compare", "synopsis": "Compare value1 with value2.", "usage": "protected int SplMaxHeap::compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/splmaxheap.compare.php"}, {"name": "SplMinHeap::compare", "synopsis": "Compare value1 with value2.", "usage": "protected int SplMinHeap::compare ( mixed $value1 , mixed $value2 )", "url": "https://secure.php.net/manual/en/splminheap.compare.php"}, {"name": "SplObjectStorage::addAll", "synopsis": "Adds all objects-data pairs from a different storage in the current storage.", "usage": "public void SplObjectStorage::addAll ( SplObjectStorage $storage )", "url": "https://secure.php.net/manual/en/splobjectstorage.addall.php"}, {"name": "SplObjectStorage::attach", "synopsis": "Adds an object inside the storage, and optionally associate it to some data.", "usage": "public void SplObjectStorage::attach ( object $object [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/splobjectstorage.attach.php"}, {"name": "SplObjectStorage::contains", "synopsis": "Checks if the storage contains the object provided.", "usage": "public bool SplObjectStorage::contains ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.contains.php"}, {"name": "SplObjectStorage::count", "synopsis": "Counts the number of objects in the storage.", "usage": "public int SplObjectStorage::count ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.count.php"}, {"name": "SplObjectStorage::current", "synopsis": "Returns the current storage entry.", "usage": "public object SplObjectStorage::current ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.current.php"}, {"name": "SplObjectStorage::detach", "synopsis": "Removes the object from the storage.", "usage": "public void SplObjectStorage::detach ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.detach.php"}, {"name": "SplObjectStorage::getHash", "synopsis": "This method calculates an identifier for the objects added to an SplObjectStorage object.", "usage": "public string SplObjectStorage::getHash ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.gethash.php"}, {"name": "SplObjectStorage::getInfo", "synopsis": "Returns the data, or info, associated with the object pointed by the current iterator position.", "usage": "public mixed SplObjectStorage::getInfo ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.getinfo.php"}, {"name": "SplObjectStorage::key", "synopsis": "Returns the index at which the iterator currently is.", "usage": "public int SplObjectStorage::key ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.key.php"}, {"name": "SplObjectStorage::next", "synopsis": "Moves the iterator to the next object in the storage.", "usage": "public void SplObjectStorage::next ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.next.php"}, {"name": "SplObjectStorage::offsetExists", "synopsis": "Checks whether an object exists in the storage.", "usage": "public bool SplObjectStorage::offsetExists ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.offsetexists.php"}, {"name": "SplObjectStorage::offsetGet", "synopsis": "Returns the data associated with an object in the storage.", "usage": "public mixed SplObjectStorage::offsetGet ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.offsetget.php"}, {"name": "SplObjectStorage::offsetSet", "synopsis": "Associate data to an object in the storage.", "usage": "public void SplObjectStorage::offsetSet ( object $object [, mixed $data = NULL ] )", "url": "https://secure.php.net/manual/en/splobjectstorage.offsetset.php"}, {"name": "SplObjectStorage::offsetUnset", "synopsis": "Removes an object from the storage.", "usage": "public void SplObjectStorage::offsetUnset ( object $object )", "url": "https://secure.php.net/manual/en/splobjectstorage.offsetunset.php"}, {"name": "SplObjectStorage::removeAll", "synopsis": "Removes objects contained in another storage from the current storage.", "usage": "public void SplObjectStorage::removeAll ( SplObjectStorage $storage )", "url": "https://secure.php.net/manual/en/splobjectstorage.removeall.php"}, {"name": "SplObjectStorage::removeAllExcept", "synopsis": "Removes all objects except for those contained in another storage from the current storage.", "usage": "public void SplObjectStorage::removeAllExcept ( SplObjectStorage $storage )", "url": "https://secure.php.net/manual/en/splobjectstorage.removeallexcept.php"}, {"name": "SplObjectStorage::rewind", "synopsis": "Rewind the iterator to the first storage element.", "usage": "public void SplObjectStorage::rewind ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.rewind.php"}, {"name": "SplObjectStorage::serialize", "synopsis": "Returns a string representation of the storage.", "usage": "public string SplObjectStorage::serialize ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.serialize.php"}, {"name": "SplObjectStorage::setInfo", "synopsis": "Associates data, or info, with the object currently pointed to by the iterator.", "usage": "public void SplObjectStorage::setInfo ( mixed $data )", "url": "https://secure.php.net/manual/en/splobjectstorage.setinfo.php"}, {"name": "SplObjectStorage::unserialize", "synopsis": "Unserializes storage entries and attach them to the current storage.", "usage": "public void SplObjectStorage::unserialize ( string $serialized )", "url": "https://secure.php.net/manual/en/splobjectstorage.unserialize.php"}, {"name": "SplObjectStorage::valid", "synopsis": "Returns if the current iterator entry is valid.", "usage": "public bool SplObjectStorage::valid ( void )", "url": "https://secure.php.net/manual/en/splobjectstorage.valid.php"}, {"name": "SplObserver::update", "synopsis": "This method is called when any SplSubject to which the observer is attached calls SplSubject::notify().", "usage": "abstract public void SplObserver::update ( SplSubject $subject )", "url": "https://secure.php.net/manual/en/splobserver.update.php"}, {"name": "SplPriorityQueue::compare", "synopsis": "Compare priority1 with priority2.", "usage": "public int SplPriorityQueue::compare ( mixed $priority1 , mixed $priority2 )", "url": "https://secure.php.net/manual/en/splpriorityqueue.compare.php"}, {"name": "SplPriorityQueue::count", "synopsis": null, "usage": "public int SplPriorityQueue::count ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.count.php"}, {"name": "SplPriorityQueue::current", "synopsis": "Get the current datastructure node.", "usage": "public mixed SplPriorityQueue::current ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.current.php"}, {"name": "SplPriorityQueue::extract", "synopsis": null, "usage": "public mixed SplPriorityQueue::extract ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.extract.php"}, {"name": "SplPriorityQueue::getExtractFlags", "synopsis": "", "usage": "public int SplPriorityQueue::getExtractFlags ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.getextractflags.php"}, {"name": "SplPriorityQueue::insert", "synopsis": "Insert value with the priority priority in the queue.", "usage": "public void SplPriorityQueue::insert ( mixed $value , mixed $priority )", "url": "https://secure.php.net/manual/en/splpriorityqueue.insert.php"}, {"name": "SplPriorityQueue::isCorrupted", "synopsis": null, "usage": "public bool SplPriorityQueue::isCorrupted ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.iscorrupted.php"}, {"name": "SplPriorityQueue::isEmpty", "synopsis": null, "usage": "public bool SplPriorityQueue::isEmpty ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.isempty.php"}, {"name": "SplPriorityQueue::key", "synopsis": "This function returns the current node index", "usage": "public mixed SplPriorityQueue::key ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.key.php"}, {"name": "SplPriorityQueue::next", "synopsis": "Extracts the top node from the queue.", "usage": "public void SplPriorityQueue::next ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.next.php"}, {"name": "SplPriorityQueue::recoverFromCorruption", "synopsis": null, "usage": "public void SplPriorityQueue::recoverFromCorruption ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.recoverfromcorruption.php"}, {"name": "SplPriorityQueue::rewind", "synopsis": "This rewinds the iterator to the beginning. This is a no-op for heaps as the iterator is virtual and in fact never moves from the top of the heap.", "usage": "public void SplPriorityQueue::rewind ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.rewind.php"}, {"name": "SplPriorityQueue::setExtractFlags", "synopsis": null, "usage": "public void SplPriorityQueue::setExtractFlags ( int $flags )", "url": "https://secure.php.net/manual/en/splpriorityqueue.setextractflags.php"}, {"name": "SplPriorityQueue::top", "synopsis": null, "usage": "public mixed SplPriorityQueue::top ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.top.php"}, {"name": "SplPriorityQueue::valid", "synopsis": "Checks if the queue contains any more nodes.", "usage": "public bool SplPriorityQueue::valid ( void )", "url": "https://secure.php.net/manual/en/splpriorityqueue.valid.php"}, {"name": "SplQueue::dequeue", "synopsis": "Dequeues value from the top of the queue.", "usage": "mixed SplQueue::dequeue ( void )", "url": "https://secure.php.net/manual/en/splqueue.dequeue.php"}, {"name": "SplQueue::enqueue", "synopsis": "Enqueues value at the end of the queue.", "usage": "void SplQueue::enqueue ( mixed $value )", "url": "https://secure.php.net/manual/en/splqueue.enqueue.php"}, {"name": "SplQueue::setIteratorMode", "synopsis": null, "usage": "void SplQueue::setIteratorMode ( int $mode )", "url": "https://secure.php.net/manual/en/splqueue.setiteratormode.php"}, {"name": "SplStack::setIteratorMode", "synopsis": null, "usage": "void SplStack::setIteratorMode ( int $mode )", "url": "https://secure.php.net/manual/en/splstack.setiteratormode.php"}, {"name": "SplSubject::attach", "synopsis": "Attaches an SplObserver so that it can be notified of updates.", "usage": "abstract public void SplSubject::attach ( SplObserver $observer )", "url": "https://secure.php.net/manual/en/splsubject.attach.php"}, {"name": "SplSubject::detach", "synopsis": "Detaches an observer from the subject to no longer notify it of updates.", "usage": "abstract public void SplSubject::detach ( SplObserver $observer )", "url": "https://secure.php.net/manual/en/splsubject.detach.php"}, {"name": "SplSubject::notify", "synopsis": "Notifies all attached observers.", "usage": "abstract public void SplSubject::notify ( void )", "url": "https://secure.php.net/manual/en/splsubject.notify.php"}, {"name": "SplTempFileObject::__construct", "synopsis": "Construct a new temporary file object.", "usage": "public SplTempFileObject::__construct ([ int $max_memory ] )", "url": "https://secure.php.net/manual/en/spltempfileobject.construct.php"}, {"name": "SplType::__construct", "synopsis": "", "usage": "SplType::__construct ([ mixed $initial_value [, bool $strict ]] )", "url": "https://secure.php.net/manual/en/spltype.construct.php"}, {"name": "Spoofchecker::areConfusable", "synopsis": "Checks whether two given strings can easily be mistaken.", "usage": "public bool Spoofchecker::areConfusable ( string $str1 , string $str2 [, string &$error ] )", "url": "https://secure.php.net/manual/en/spoofchecker.areconfusable.php"}, {"name": "Spoofchecker::__construct", "synopsis": "Creates new instance of Spoofchecker.", "usage": "public Spoofchecker::__construct ( void )", "url": "https://secure.php.net/manual/en/spoofchecker.construct.php"}, {"name": "Spoofchecker::isSuspicious", "synopsis": "Checks if given string contains any suspicious characters like letters which are almost identical visually, but are Unicode characters from different sets.", "usage": "public bool Spoofchecker::isSuspicious ( string $text [, string &$error ] )", "url": "https://secure.php.net/manual/en/spoofchecker.issuspicious.php"}, {"name": "Spoofchecker::setAllowedLocales", "synopsis": "", "usage": "public void Spoofchecker::setAllowedLocales ( string $locale_list )", "url": "https://secure.php.net/manual/en/spoofchecker.setallowedlocales.php"}, {"name": "Spoofchecker::setChecks", "synopsis": "", "usage": "public void Spoofchecker::setChecks ( int $checks )", "url": "https://secure.php.net/manual/en/spoofchecker.setchecks.php"}, {"name": "SQLite3::busyTimeout", "synopsis": "Sets a busy handler that will sleep until the database is not locked or the timeout is reached.", "usage": "public bool SQLite3::busyTimeout ( int $msecs )", "url": "https://secure.php.net/manual/en/sqlite3.busytimeout.php"}, {"name": "SQLite3::changes", "synopsis": "Returns the number of database rows that were changed (or inserted or deleted) by the most recent SQL statement.", "usage": "public int SQLite3::changes ( void )", "url": "https://secure.php.net/manual/en/sqlite3.changes.php"}, {"name": "SQLite3::close", "synopsis": "Closes the database connection.", "usage": "public bool SQLite3::close ( void )", "url": "https://secure.php.net/manual/en/sqlite3.close.php"}, {"name": "SQLite3::__construct", "synopsis": "Instantiates an SQLite3 object and opens a connection to an SQLite 3 database. If the build includes encryption, then it will attempt to use the key.", "usage": "public SQLite3::__construct ( string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key = NULL ]] )", "url": "https://secure.php.net/manual/en/sqlite3.construct.php"}, {"name": "SQLite3::createAggregate", "synopsis": "Registers a PHP function or user-defined function for use as an SQL aggregate function for use within SQL statements.", "usage": "public bool SQLite3::createAggregate ( string $name , mixed $step_callback , mixed $final_callback [, int $argument_count = -1 ] )", "url": "https://secure.php.net/manual/en/sqlite3.createaggregate.php"}, {"name": "SQLite3::createCollation", "synopsis": "Registers a PHP function or user-defined function for use as a collating function within SQL statements.", "usage": "public bool SQLite3::createCollation ( string $name , callable $callback )", "url": "https://secure.php.net/manual/en/sqlite3.createcollation.php"}, {"name": "SQLite3::createFunction", "synopsis": "Registers a PHP function or user-defined function for use as an SQL scalar function for use within SQL statements.", "usage": "public bool SQLite3::createFunction ( string $name , mixed $callback [, int $argument_count = -1 [, int $flags = 0 ]] )", "url": "https://secure.php.net/manual/en/sqlite3.createfunction.php"}, {"name": "SQLite3::enableExceptions", "synopsis": "Controls whether the SQLite3 instance will throw exceptions or warnings on error.", "usage": "bool SQLite3::enableExceptions ([ bool $enableExceptions = FALSE ] )", "url": "https://secure.php.net/manual/en/sqlite3.enableexceptions.php"}, {"name": "SQLite3::escapeString", "synopsis": "Returns a string that has been properly escaped for safe inclusion in an SQL statement.", "usage": "public static string SQLite3::escapeString ( string $value )", "url": "https://secure.php.net/manual/en/sqlite3.escapestring.php"}, {"name": "SQLite3::exec", "synopsis": "Executes a result-less query against a given database.", "usage": "public bool SQLite3::exec ( string $query )", "url": "https://secure.php.net/manual/en/sqlite3.exec.php"}, {"name": "SQLite3::lastErrorCode", "synopsis": "Returns the numeric result code of the most recent failed SQLite request.", "usage": "public int SQLite3::lastErrorCode ( void )", "url": "https://secure.php.net/manual/en/sqlite3.lasterrorcode.php"}, {"name": "SQLite3::lastErrorMsg", "synopsis": "Returns English text describing the most recent failed SQLite request.", "usage": "public string SQLite3::lastErrorMsg ( void )", "url": "https://secure.php.net/manual/en/sqlite3.lasterrormsg.php"}, {"name": "SQLite3::lastInsertRowID", "synopsis": "Returns the row ID of the most recent INSERT into the database.", "usage": "public int SQLite3::lastInsertRowID ( void )", "url": "https://secure.php.net/manual/en/sqlite3.lastinsertrowid.php"}, {"name": "SQLite3::loadExtension", "synopsis": "Attempts to load an SQLite extension library.", "usage": "public bool SQLite3::loadExtension ( string $shared_library )", "url": "https://secure.php.net/manual/en/sqlite3.loadextension.php"}, {"name": "SQLite3::open", "synopsis": "Opens an SQLite 3 Database. If the build includes encryption, then it will attempt to use the key.", "usage": "public void SQLite3::open ( string $filename [, int $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE [, string $encryption_key = NULL ]] )", "url": "https://secure.php.net/manual/en/sqlite3.open.php"}, {"name": "SQLite3::openBlob", "synopsis": "Opens a stream resource to read or write a BLOB, which would be selected by:", "usage": "public resource SQLite3::openBlob ( string $table , string $column , int $rowid [, string $dbname = \"main\" [, int $flags = SQLITE3_OPEN_READONLY ]] )", "url": "https://secure.php.net/manual/en/sqlite3.openblob.php"}, {"name": "SQLite3::prepare", "synopsis": "Prepares an SQL statement for execution and returns an SQLite3Stmt object.", "usage": "public SQLite3Stmt SQLite3::prepare ( string $query )", "url": "https://secure.php.net/manual/en/sqlite3.prepare.php"}, {"name": "SQLite3::query", "synopsis": "Executes an SQL query, returning an SQLite3Result object. If the query does not yield a result (such as DML statements) the returned SQLite3Result object is not really usable. Use SQLite3::exec() for such queries instead.", "usage": "public SQLite3Result SQLite3::query ( string $query )", "url": "https://secure.php.net/manual/en/sqlite3.query.php"}, {"name": "SQLite3::querySingle", "synopsis": "Executes a query and returns a single result.", "usage": "public mixed SQLite3::querySingle ( string $query [, bool $entire_row = FALSE ] )", "url": "https://secure.php.net/manual/en/sqlite3.querysingle.php"}, {"name": "SQLite3::version", "synopsis": "Returns the SQLite3 library version as a string constant and as a number.", "usage": "public static array SQLite3::version ( void )", "url": "https://secure.php.net/manual/en/sqlite3.version.php"}, {"name": "SQLite3Result::columnName", "synopsis": "Returns the name of the column specified by the column_number.", "usage": "public string SQLite3Result::columnName ( int $column_number )", "url": "https://secure.php.net/manual/en/sqlite3result.columnname.php"}, {"name": "SQLite3Result::columnType", "synopsis": "Returns the type of the column identified by column_number.", "usage": "public int SQLite3Result::columnType ( int $column_number )", "url": "https://secure.php.net/manual/en/sqlite3result.columntype.php"}, {"name": "SQLite3Result::fetchArray", "synopsis": "Fetches a result row as an associative or numerically indexed array or both. By default, fetches as both.", "usage": "public array SQLite3Result::fetchArray ([ int $mode = SQLITE3_BOTH ] )", "url": "https://secure.php.net/manual/en/sqlite3result.fetcharray.php"}, {"name": "SQLite3Result::finalize", "synopsis": "Closes the result set.", "usage": "public bool SQLite3Result::finalize ( void )", "url": "https://secure.php.net/manual/en/sqlite3result.finalize.php"}, {"name": "SQLite3Result::numColumns", "synopsis": "Returns the number of columns in the result set.", "usage": "public int SQLite3Result::numColumns ( void )", "url": "https://secure.php.net/manual/en/sqlite3result.numcolumns.php"}, {"name": "SQLite3Result::reset", "synopsis": "Resets the result set back to the first row.", "usage": "public bool SQLite3Result::reset ( void )", "url": "https://secure.php.net/manual/en/sqlite3result.reset.php"}, {"name": "SQLite3Stmt::bindParam", "synopsis": "Binds a parameter to a statement variable.", "usage": "public bool SQLite3Stmt::bindParam ( mixed $sql_param , mixed &$param [, int $type ] )", "url": "https://secure.php.net/manual/en/sqlite3stmt.bindparam.php"}, {"name": "SQLite3Stmt::bindValue", "synopsis": "Binds the value of a parameter to a statement variable.", "usage": "public bool SQLite3Stmt::bindValue ( mixed $sql_param , mixed $value [, int $type ] )", "url": "https://secure.php.net/manual/en/sqlite3stmt.bindvalue.php"}, {"name": "SQLite3Stmt::clear", "synopsis": "Clears all current bound parameters.", "usage": "public bool SQLite3Stmt::clear ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.clear.php"}, {"name": "SQLite3Stmt::close", "synopsis": "Closes the prepared statement.", "usage": "public bool SQLite3Stmt::close ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.close.php"}, {"name": "SQLite3Stmt::execute", "synopsis": "Executes a prepared statement and returns a result set object.", "usage": "public SQLite3Result SQLite3Stmt::execute ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.execute.php"}, {"name": "SQLite3Stmt::paramCount", "synopsis": "Returns the number of parameters within the prepared statement.", "usage": "public int SQLite3Stmt::paramCount ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.paramcount.php"}, {"name": "SQLite3Stmt::readOnly", "synopsis": "Returns whether a statement is definitely read only. A statement is considered read only, if it makes no direct changes to the content of the database file. Note that user defined SQL functions might change the database indirectly as a side effect.", "usage": "public bool SQLite3Stmt::readOnly ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.readonly.php"}, {"name": "SQLite3Stmt::reset", "synopsis": "Resets the prepared statement to its state prior to execution. All bindings remain intact after reset.", "usage": "public bool SQLite3Stmt::reset ( void )", "url": "https://secure.php.net/manual/en/sqlite3stmt.reset.php"}, {"name": "Stomp::abort", "synopsis": "Procedural style:", "usage": "public bool Stomp::abort ( string $transaction_id [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.abort.php"}, {"name": "Stomp::ack", "synopsis": "Procedural style:", "usage": "public bool Stomp::ack ( mixed $msg [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.ack.php"}, {"name": "Stomp::begin", "synopsis": "Procedural style:", "usage": "public bool Stomp::begin ( string $transaction_id [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.begin.php"}, {"name": "Stomp::commit", "synopsis": "Procedural style:", "usage": "public bool Stomp::commit ( string $transaction_id [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.commit.php"}, {"name": "Stomp::__construct", "synopsis": "Procedural style:", "usage": "public Stomp::__construct ([ string $broker = ini_get(\"stomp.default_broker_uri\") [, string $username [, string $password [, array $headers ]]]] )", "url": "https://secure.php.net/manual/en/stomp.construct.php"}, {"name": "Stomp::__destruct", "synopsis": "Procedural style:", "usage": "public bool Stomp::__destruct ( void )", "url": "https://secure.php.net/manual/en/stomp.destruct.php"}, {"name": "Stomp::error", "synopsis": "Procedural style:", "usage": "public string Stomp::error ( void )", "url": "https://secure.php.net/manual/en/stomp.error.php"}, {"name": "StompException::getDetails", "synopsis": "Get exception details.", "usage": "public string StompException::getDetails ( void )", "url": "https://secure.php.net/manual/en/stomp.getdetails.php"}, {"name": "Stomp::getReadTimeout", "synopsis": "Procedural style:", "usage": "public array Stomp::getReadTimeout ( void )", "url": "https://secure.php.net/manual/en/stomp.getreadtimeout.php"}, {"name": "Stomp::getSessionId", "synopsis": "Procedural style:", "usage": "public string Stomp::getSessionId ( void )", "url": "https://secure.php.net/manual/en/stomp.getsessionid.php"}, {"name": "Stomp::hasFrame", "synopsis": "Procedural style:", "usage": "public bool Stomp::hasFrame ( void )", "url": "https://secure.php.net/manual/en/stomp.hasframe.php"}, {"name": "Stomp::readFrame", "synopsis": "Procedural style:", "usage": "public stompframe Stomp::readFrame ([ string $class_name = \"stompFrame\" ] )", "url": "https://secure.php.net/manual/en/stomp.readframe.php"}, {"name": "Stomp::send", "synopsis": "Procedural style:", "usage": "public bool Stomp::send ( string $destination , mixed $msg [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.send.php"}, {"name": "Stomp::setReadTimeout", "synopsis": "Procedural style:", "usage": "public void Stomp::setReadTimeout ( int $seconds [, int $microseconds ] )", "url": "https://secure.php.net/manual/en/stomp.setreadtimeout.php"}, {"name": "Stomp::subscribe", "synopsis": "Procedural style:", "usage": "public bool Stomp::subscribe ( string $destination [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.subscribe.php"}, {"name": "Stomp::unsubscribe", "synopsis": "Procedural style:", "usage": "public bool Stomp::unsubscribe ( string $destination [, array $headers ] )", "url": "https://secure.php.net/manual/en/stomp.unsubscribe.php"}, {"name": "StompFrame::__construct", "synopsis": "Constructor.", "usage": "StompFrame::__construct ([ string $command [, array $headers [, string $body ]]] )", "url": "https://secure.php.net/manual/en/stompframe.construct.php"}, {"name": "streamWrapper::__construct", "synopsis": "Called when opening the stream wrapper, right before streamWrapper::stream_open().", "usage": "streamWrapper::__construct ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.construct.php"}, {"name": "streamWrapper::__destruct", "synopsis": "Called when closing the stream wrapper, right before streamWrapper::stream_flush().", "usage": "streamWrapper::__destruct ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.destruct.php"}, {"name": "streamWrapper::dir_closedir", "synopsis": "This method is called in response to closedir().", "usage": "public bool streamWrapper::dir_closedir ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.dir-closedir.php"}, {"name": "streamWrapper::dir_opendir", "synopsis": "This method is called in response to opendir().", "usage": "public bool streamWrapper::dir_opendir ( string $path , int $options )", "url": "https://secure.php.net/manual/en/streamwrapper.dir-opendir.php"}, {"name": "streamWrapper::dir_readdir", "synopsis": "This method is called in response to readdir().", "usage": "public string streamWrapper::dir_readdir ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.dir-readdir.php"}, {"name": "streamWrapper::dir_rewinddir", "synopsis": "This method is called in response to rewinddir().", "usage": "public bool streamWrapper::dir_rewinddir ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.dir-rewinddir.php"}, {"name": "streamWrapper::mkdir", "synopsis": "This method is called in response to mkdir().", "usage": "public bool streamWrapper::mkdir ( string $path , int $mode , int $options )", "url": "https://secure.php.net/manual/en/streamwrapper.mkdir.php"}, {"name": "streamWrapper::rename", "synopsis": "This method is called in response to rename().", "usage": "public bool streamWrapper::rename ( string $path_from , string $path_to )", "url": "https://secure.php.net/manual/en/streamwrapper.rename.php"}, {"name": "streamWrapper::rmdir", "synopsis": "This method is called in response to rmdir().", "usage": "public bool streamWrapper::rmdir ( string $path , int $options )", "url": "https://secure.php.net/manual/en/streamwrapper.rmdir.php"}, {"name": "streamWrapper::stream_cast", "synopsis": "This method is called in response to stream_select().", "usage": "public resource streamWrapper::stream_cast ( int $cast_as )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-cast.php"}, {"name": "streamWrapper::stream_close", "synopsis": "This method is called in response to fclose().", "usage": "public void streamWrapper::stream_close ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-close.php"}, {"name": "streamWrapper::stream_eof", "synopsis": "This method is called in response to feof().", "usage": "public bool streamWrapper::stream_eof ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-eof.php"}, {"name": "streamWrapper::stream_flush", "synopsis": "This method is called in response to fflush() and when the stream is being closed while any unflushed data has been written to it before.", "usage": "public bool streamWrapper::stream_flush ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-flush.php"}, {"name": "streamWrapper::stream_lock", "synopsis": "This method is called in response to flock(), when file_put_contents() (when flags contains LOCK_EX), stream_set_blocking() and when closing the stream (LOCK_UN).", "usage": "public bool streamWrapper::stream_lock ( int $operation )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-lock.php"}, {"name": "streamWrapper::stream_metadata", "synopsis": "This method is called to set metadata on the stream. It is called when one of the following functions is called on a stream URL:", "usage": "public bool streamWrapper::stream_metadata ( string $path , int $option , mixed $value )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-metadata.php"}, {"name": "streamWrapper::stream_open", "synopsis": "This method is called immediately after the wrapper is initialized (f.e. by fopen() and file_get_contents()).", "usage": "public bool streamWrapper::stream_open ( string $path , string $mode , int $options , string &$opened_path )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-open.php"}, {"name": "streamWrapper::stream_read", "synopsis": "This method is called in response to fread() and fgets().", "usage": "public string streamWrapper::stream_read ( int $count )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-read.php"}, {"name": "streamWrapper::stream_seek", "synopsis": "This method is called in response to fseek().", "usage": "public bool streamWrapper::stream_seek ( int $offset , int $whence = SEEK_SET )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-seek.php"}, {"name": "streamWrapper::stream_set_option", "synopsis": "This method is called to set options on the stream.", "usage": "public bool streamWrapper::stream_set_option ( int $option , int $arg1 , int $arg2 )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-set-option.php"}, {"name": "streamWrapper::stream_stat", "synopsis": "This method is called in response to fstat().", "usage": "public array streamWrapper::stream_stat ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-stat.php"}, {"name": "streamWrapper::stream_tell", "synopsis": "This method is called in response to fseek() to determine the current position.", "usage": "public int streamWrapper::stream_tell ( void )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-tell.php"}, {"name": "streamWrapper::stream_truncate", "synopsis": "Will respond to truncation, e.g., through ftruncate().", "usage": "public bool streamWrapper::stream_truncate ( int $new_size )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-truncate.php"}, {"name": "streamWrapper::stream_write", "synopsis": "This method is called in response to fwrite().", "usage": "public int streamWrapper::stream_write ( string $data )", "url": "https://secure.php.net/manual/en/streamwrapper.stream-write.php"}, {"name": "streamWrapper::unlink", "synopsis": "This method is called in response to unlink().", "usage": "public bool streamWrapper::unlink ( string $path )", "url": "https://secure.php.net/manual/en/streamwrapper.unlink.php"}, {"name": "streamWrapper::url_stat", "synopsis": "This method is called in response to all stat() related functions, such as:", "usage": "public array streamWrapper::url_stat ( string $path , int $flags )", "url": "https://secure.php.net/manual/en/streamwrapper.url-stat.php"}, {"name": "SVM::__construct", "synopsis": "Constructs a new SVM object ready to accept training data.", "usage": "public SVM::__construct ( void )", "url": "https://secure.php.net/manual/en/svm.construct.php"}, {"name": "svm::crossvalidate", "synopsis": "Crossvalidate can be used to test the effectiveness of the current parameter set on a subset of the training data. Given a problem set and a n \"folds\", it separates the problem set into n subsets, and the repeatedly trains on one subset and tests on another. While the accuracy will generally be lower than a SVM trained on the enter data set, the accuracy score returned should be relatively useful, so it can be used to test different training parameters.", "usage": "public float svm::crossvalidate ( array $problem , int $number_of_folds )", "url": "https://secure.php.net/manual/en/svm.crossvalidate.php"}, {"name": "SVM::getOptions", "synopsis": "Retrieve an array containing the training parameters. The parameters will be keyed on the predefined SVM constants.", "usage": "public array SVM::getOptions ( void )", "url": "https://secure.php.net/manual/en/svm.getoptions.php"}, {"name": "SVM::setOptions", "synopsis": "Set one or more training parameters.", "usage": "public bool SVM::setOptions ( array $params )", "url": "https://secure.php.net/manual/en/svm.setoptions.php"}, {"name": "svm::train", "synopsis": "Train a support vector machine based on the supplied training data.", "usage": "public SVMModel svm::train ( array $problem [, array $weights ] )", "url": "https://secure.php.net/manual/en/svm.train.php"}, {"name": "SVMModel::checkProbabilityModel", "synopsis": "Returns true if the model contains probability information.", "usage": "public bool SVMModel::checkProbabilityModel ( void )", "url": "https://secure.php.net/manual/en/svmmodel.checkprobabilitymodel.php"}, {"name": "SVMModel::__construct", "synopsis": "Build a new SVMModel. Models will usually be created from the SVM::train function, but then saved models may be restored directly.", "usage": "public SVMModel::__construct ([ string $filename ] )", "url": "https://secure.php.net/manual/en/svmmodel.construct.php"}, {"name": "SVMModel::getLabels", "synopsis": "Return an array of labels that the model was trained on. For regression and one class models an empty array is returned.", "usage": "public array SVMModel::getLabels ( void )", "url": "https://secure.php.net/manual/en/svmmodel.getlabels.php"}, {"name": "SVMModel::getNrClass", "synopsis": "Returns the number of classes the model was trained with, will return 2 for one class and regression models.", "usage": "public int SVMModel::getNrClass ( void )", "url": "https://secure.php.net/manual/en/svmmodel.getnrclass.php"}, {"name": "SVMModel::getSvmType", "synopsis": "Returns an integer value representing the type of the SVM model used, e.g SVM::C_SVC.", "usage": "public int SVMModel::getSvmType ( void )", "url": "https://secure.php.net/manual/en/svmmodel.getsvmtype.php"}, {"name": "SVMModel::getSvrProbability", "synopsis": "For regression models, returns a sigma value. If there is no probability information or the model is not SVR, 0 is returned.", "usage": "public float SVMModel::getSvrProbability ( void )", "url": "https://secure.php.net/manual/en/svmmodel.getsvrprobability.php"}, {"name": "SVMModel::load", "synopsis": "Load a model file ready for classification or regression.", "usage": "public bool SVMModel::load ( string $filename )", "url": "https://secure.php.net/manual/en/svmmodel.load.php"}, {"name": "SVMModel::predict_probability", "synopsis": "This function accepts an array of data and attempts to predict the class, as with the predict function. Additionally, however, this function returns an array of probabilities, one per class in the model, which represent the estimated chance of the data supplied being a member of that class. Requires that the model to be used has been trained with the probability parameter set to true.", "usage": "public float SVMModel::predict_probability ( array $data )", "url": "https://secure.php.net/manual/en/svmmodel.predict-probability.php"}, {"name": "SVMModel::predict", "synopsis": "This function accepts an array of data and attempts to predict the class or regression value based on the model extracted from previously trained data.", "usage": "public float SVMModel::predict ( array $data )", "url": "https://secure.php.net/manual/en/svmmodel.predict.php"}, {"name": "SVMModel::save", "synopsis": "Save the model data to a file, for later use.", "usage": "public bool SVMModel::save ( string $filename )", "url": "https://secure.php.net/manual/en/svmmodel.save.php"}, {"name": "SWFAction::__construct", "synopsis": null, "usage": "SWFAction::__construct ( string $script )", "url": "https://secure.php.net/manual/en/swfaction.construct.php"}, {"name": "SWFBitmap::__construct", "synopsis": null, "usage": "SWFBitmap::__construct ( mixed $file [, mixed $alphafile ] )", "url": "https://secure.php.net/manual/en/swfbitmap.construct.php"}, {"name": "SWFBitmap::getHeight", "synopsis": null, "usage": "float SWFBitmap::getHeight ( void )", "url": "https://secure.php.net/manual/en/swfbitmap.getheight.php"}, {"name": "SWFBitmap::getWidth", "synopsis": null, "usage": "float SWFBitmap::getWidth ( void )", "url": "https://secure.php.net/manual/en/swfbitmap.getwidth.php"}, {"name": "SWFButton::addAction", "synopsis": null, "usage": "void SWFButton::addAction ( SWFAction $action , int $flags )", "url": "https://secure.php.net/manual/en/swfbutton.addaction.php"}, {"name": "SWFButton::addASound", "synopsis": null, "usage": "SWFSoundInstance SWFButton::addASound ( SWFSound $sound , int $flags )", "url": "https://secure.php.net/manual/en/swfbutton.addasound.php"}, {"name": "SWFButton::addShape", "synopsis": null, "usage": "void SWFButton::addShape ( SWFShape $shape , int $flags )", "url": "https://secure.php.net/manual/en/swfbutton.addshape.php"}, {"name": "SWFButton::__construct", "synopsis": null, "usage": "SWFButton::__construct ( void )", "url": "https://secure.php.net/manual/en/swfbutton.construct.php"}, {"name": "SWFButton::setAction", "synopsis": null, "usage": "void SWFButton::setAction ( SWFAction $action )", "url": "https://secure.php.net/manual/en/swfbutton.setaction.php"}, {"name": "SWFButton::setDown", "synopsis": null, "usage": "void SWFButton::setDown ( SWFShape $shape )", "url": "https://secure.php.net/manual/en/swfbutton.setdown.php"}, {"name": "SWFButton::setHit", "synopsis": null, "usage": "void SWFButton::setHit ( SWFShape $shape )", "url": "https://secure.php.net/manual/en/swfbutton.sethit.php"}, {"name": "SWFButton::setMenu", "synopsis": null, "usage": "void SWFButton::setMenu ( int $flag )", "url": "https://secure.php.net/manual/en/swfbutton.setmenu.php"}, {"name": "SWFButton::setOver", "synopsis": null, "usage": "void SWFButton::setOver ( SWFShape $shape )", "url": "https://secure.php.net/manual/en/swfbutton.setover.php"}, {"name": "SWFButton::setUp", "synopsis": null, "usage": "void SWFButton::setUp ( SWFShape $shape )", "url": "https://secure.php.net/manual/en/swfbutton.setup.php"}, {"name": "SWFDisplayItem::addAction", "synopsis": null, "usage": "void SWFDisplayItem::addAction ( SWFAction $action , int $flags )", "url": "https://secure.php.net/manual/en/swfdisplayitem.addaction.php"}, {"name": "SWFDisplayItem::addColor", "synopsis": null, "usage": "void SWFDisplayItem::addColor ( int $red , int $green , int $blue [, int $a ] )", "url": "https://secure.php.net/manual/en/swfdisplayitem.addcolor.php"}, {"name": "SWFDisplayItem::endMask", "synopsis": null, "usage": "void SWFDisplayItem::endMask ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.endmask.php"}, {"name": "SWFDisplayItem::getRot", "synopsis": null, "usage": "float SWFDisplayItem::getRot ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getrot.php"}, {"name": "SWFDisplayItem::getX", "synopsis": null, "usage": "float SWFDisplayItem::getX ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getx.php"}, {"name": "SWFDisplayItem::getXScale", "synopsis": null, "usage": "float SWFDisplayItem::getXScale ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getxscale.php"}, {"name": "SWFDisplayItem::getXSkew", "synopsis": null, "usage": "float SWFDisplayItem::getXSkew ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getxskew.php"}, {"name": "SWFDisplayItem::getY", "synopsis": null, "usage": "float SWFDisplayItem::getY ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.gety.php"}, {"name": "SWFDisplayItem::getYScale", "synopsis": null, "usage": "float SWFDisplayItem::getYScale ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getyscale.php"}, {"name": "SWFDisplayItem::getYSkew", "synopsis": null, "usage": "float SWFDisplayItem::getYSkew ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.getyskew.php"}, {"name": "SWFDisplayItem::move", "synopsis": null, "usage": "void SWFDisplayItem::move ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfdisplayitem.move.php"}, {"name": "SWFDisplayItem::moveTo", "synopsis": null, "usage": "void SWFDisplayItem::moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/swfdisplayitem.moveto.php"}, {"name": "SWFDisplayItem::multColor", "synopsis": null, "usage": "void SWFDisplayItem::multColor ( float $red , float $green , float $blue [, float $a ] )", "url": "https://secure.php.net/manual/en/swfdisplayitem.multcolor.php"}, {"name": "SWFDisplayItem::remove", "synopsis": null, "usage": "void SWFDisplayItem::remove ( void )", "url": "https://secure.php.net/manual/en/swfdisplayitem.remove.php"}, {"name": "SWFDisplayItem::rotate", "synopsis": null, "usage": "void SWFDisplayItem::rotate ( float $angle )", "url": "https://secure.php.net/manual/en/swfdisplayitem.rotate.php"}, {"name": "SWFDisplayItem::rotateTo", "synopsis": null, "usage": "void SWFDisplayItem::rotateTo ( float $angle )", "url": "https://secure.php.net/manual/en/swfdisplayitem.rotateto.php"}, {"name": "SWFDisplayItem::scale", "synopsis": null, "usage": "void SWFDisplayItem::scale ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfdisplayitem.scale.php"}, {"name": "SWFDisplayItem::scaleTo", "synopsis": null, "usage": "void SWFDisplayItem::scaleTo ( float $x [, float $y ] )", "url": "https://secure.php.net/manual/en/swfdisplayitem.scaleto.php"}, {"name": "SWFDisplayItem::setDepth", "synopsis": null, "usage": "void SWFDisplayItem::setDepth ( int $depth )", "url": "https://secure.php.net/manual/en/swfdisplayitem.setdepth.php"}, {"name": "SWFDisplayItem::setMaskLevel", "synopsis": null, "usage": "void SWFDisplayItem::setMaskLevel ( int $level )", "url": "https://secure.php.net/manual/en/swfdisplayitem.setmasklevel.php"}, {"name": "SWFDisplayItem::setMatrix", "synopsis": null, "usage": "void SWFDisplayItem::setMatrix ( float $a , float $b , float $c , float $d , float $x , float $y )", "url": "https://secure.php.net/manual/en/swfdisplayitem.setmatrix.php"}, {"name": "SWFDisplayItem::setName", "synopsis": null, "usage": "void SWFDisplayItem::setName ( string $name )", "url": "https://secure.php.net/manual/en/swfdisplayitem.setname.php"}, {"name": "SWFDisplayItem::setRatio", "synopsis": null, "usage": "void SWFDisplayItem::setRatio ( float $ratio )", "url": "https://secure.php.net/manual/en/swfdisplayitem.setratio.php"}, {"name": "SWFDisplayItem::skewX", "synopsis": null, "usage": "void SWFDisplayItem::skewX ( float $ddegrees )", "url": "https://secure.php.net/manual/en/swfdisplayitem.skewx.php"}, {"name": "SWFDisplayItem::skewXTo", "synopsis": null, "usage": "void SWFDisplayItem::skewXTo ( float $degrees )", "url": "https://secure.php.net/manual/en/swfdisplayitem.skewxto.php"}, {"name": "SWFDisplayItem::skewY", "synopsis": null, "usage": "void SWFDisplayItem::skewY ( float $ddegrees )", "url": "https://secure.php.net/manual/en/swfdisplayitem.skewy.php"}, {"name": "SWFDisplayItem::skewYTo", "synopsis": null, "usage": "void SWFDisplayItem::skewYTo ( float $degrees )", "url": "https://secure.php.net/manual/en/swfdisplayitem.skewyto.php"}, {"name": "SWFFill::moveTo", "synopsis": null, "usage": "void SWFFill::moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/swffill.moveto.php"}, {"name": "SWFFill::rotateTo", "synopsis": null, "usage": "void SWFFill::rotateTo ( float $angle )", "url": "https://secure.php.net/manual/en/swffill.rotateto.php"}, {"name": "SWFFill::scaleTo", "synopsis": null, "usage": "void SWFFill::scaleTo ( float $x [, float $y ] )", "url": "https://secure.php.net/manual/en/swffill.scaleto.php"}, {"name": "SWFFill::skewXTo", "synopsis": null, "usage": "void SWFFill::skewXTo ( float $x )", "url": "https://secure.php.net/manual/en/swffill.skewxto.php"}, {"name": "SWFFill::skewYTo", "synopsis": null, "usage": "void SWFFill::skewYTo ( float $y )", "url": "https://secure.php.net/manual/en/swffill.skewyto.php"}, {"name": "SWFFont::__construct", "synopsis": null, "usage": "SWFFont::__construct ( string $filename )", "url": "https://secure.php.net/manual/en/swffont.construct.php"}, {"name": "SWFFont::getAscent", "synopsis": null, "usage": "float SWFFont::getAscent ( void )", "url": "https://secure.php.net/manual/en/swffont.getascent.php"}, {"name": "SWFFont::getDescent", "synopsis": null, "usage": "float SWFFont::getDescent ( void )", "url": "https://secure.php.net/manual/en/swffont.getdescent.php"}, {"name": "SWFFont::getLeading", "synopsis": null, "usage": "float SWFFont::getLeading ( void )", "url": "https://secure.php.net/manual/en/swffont.getleading.php"}, {"name": "SWFFont::getShape", "synopsis": null, "usage": "string SWFFont::getShape ( int $code )", "url": "https://secure.php.net/manual/en/swffont.getshape.php"}, {"name": "SWFFont::getUTF8Width", "synopsis": null, "usage": "float SWFFont::getUTF8Width ( string $string )", "url": "https://secure.php.net/manual/en/swffont.getutf8width.php"}, {"name": "SWFFont::getWidth", "synopsis": null, "usage": "float SWFFont::getWidth ( string $string )", "url": "https://secure.php.net/manual/en/swffont.getwidth.php"}, {"name": "SWFFontChar::addChars", "synopsis": null, "usage": "void SWFFontChar::addChars ( string $char )", "url": "https://secure.php.net/manual/en/swffontchar.addchars.php"}, {"name": "SWFFontChar::addUTF8Chars", "synopsis": null, "usage": "void SWFFontChar::addUTF8Chars ( string $char )", "url": "https://secure.php.net/manual/en/swffontchar.addutf8chars.php"}, {"name": "SWFGradient::addEntry", "synopsis": null, "usage": "void SWFGradient::addEntry ( float $ratio , int $red , int $green , int $blue [, int $alpha = 255 ] )", "url": "https://secure.php.net/manual/en/swfgradient.addentry.php"}, {"name": "SWFGradient::__construct", "synopsis": null, "usage": "SWFGradient::__construct ( void )", "url": "https://secure.php.net/manual/en/swfgradient.construct.php"}, {"name": "SWFMorph::__construct", "synopsis": null, "usage": "SWFMorph::__construct ( void )", "url": "https://secure.php.net/manual/en/swfmorph.construct.php"}, {"name": "SWFMorph::getShape1", "synopsis": null, "usage": "SWFShape SWFMorph::getShape1 ( void )", "url": "https://secure.php.net/manual/en/swfmorph.getshape1.php"}, {"name": "SWFMorph::getShape2", "synopsis": null, "usage": "SWFShape SWFMorph::getShape2 ( void )", "url": "https://secure.php.net/manual/en/swfmorph.getshape2.php"}, {"name": "SWFMovie::add", "synopsis": null, "usage": "mixed SWFMovie::add ( object $instance )", "url": "https://secure.php.net/manual/en/swfmovie.add.php"}, {"name": "SWFMovie::addExport", "synopsis": null, "usage": "void SWFMovie::addExport ( SWFCharacter $char , string $name )", "url": "https://secure.php.net/manual/en/swfmovie.addexport.php"}, {"name": "SWFMovie::addFont", "synopsis": null, "usage": "mixed SWFMovie::addFont ( SWFFont $font )", "url": "https://secure.php.net/manual/en/swfmovie.addfont.php"}, {"name": "SWFMovie::__construct", "synopsis": null, "usage": "SWFMovie::__construct ([ int $version ] )", "url": "https://secure.php.net/manual/en/swfmovie.construct.php"}, {"name": "SWFMovie::importChar", "synopsis": null, "usage": "SWFSprite SWFMovie::importChar ( string $libswf , string $name )", "url": "https://secure.php.net/manual/en/swfmovie.importchar.php"}, {"name": "SWFMovie::importFont", "synopsis": null, "usage": "SWFFontChar SWFMovie::importFont ( string $libswf , string $name )", "url": "https://secure.php.net/manual/en/swfmovie.importfont.php"}, {"name": "SWFMovie::labelFrame", "synopsis": null, "usage": "void SWFMovie::labelFrame ( string $label )", "url": "https://secure.php.net/manual/en/swfmovie.labelframe.php"}, {"name": "SWFMovie::nextFrame", "synopsis": null, "usage": "void SWFMovie::nextFrame ( void )", "url": "https://secure.php.net/manual/en/swfmovie.nextframe.php"}, {"name": "SWFMovie::output", "synopsis": null, "usage": "int SWFMovie::output ([ int $compression ] )", "url": "https://secure.php.net/manual/en/swfmovie.output.php"}, {"name": "SWFMovie::remove", "synopsis": null, "usage": "void SWFMovie::remove ( object $instance )", "url": "https://secure.php.net/manual/en/swfmovie.remove.php"}, {"name": "SWFMovie::save", "synopsis": null, "usage": "int SWFMovie::save ( string $filename [, int $compression = -1 ] )", "url": "https://secure.php.net/manual/en/swfmovie.save.php"}, {"name": "SWFMovie::saveToFile", "synopsis": null, "usage": "int SWFMovie::saveToFile ( resource $x [, int $compression = -1 ] )", "url": "https://secure.php.net/manual/en/swfmovie.savetofile.php"}, {"name": "SWFMovie::setbackground", "synopsis": null, "usage": "void SWFMovie::setbackground ( int $red , int $green , int $blue )", "url": "https://secure.php.net/manual/en/swfmovie.setbackground.php"}, {"name": "SWFMovie::setDimension", "synopsis": null, "usage": "void SWFMovie::setDimension ( float $width , float $height )", "url": "https://secure.php.net/manual/en/swfmovie.setdimension.php"}, {"name": "SWFMovie::setFrames", "synopsis": null, "usage": "void SWFMovie::setFrames ( int $number )", "url": "https://secure.php.net/manual/en/swfmovie.setframes.php"}, {"name": "SWFMovie::setRate", "synopsis": null, "usage": "void SWFMovie::setRate ( float $rate )", "url": "https://secure.php.net/manual/en/swfmovie.setrate.php"}, {"name": "SWFMovie::startSound", "synopsis": null, "usage": "SWFSoundInstance SWFMovie::startSound ( SWFSound $sound )", "url": "https://secure.php.net/manual/en/swfmovie.startsound.php"}, {"name": "SWFMovie::stopSound", "synopsis": null, "usage": "void SWFMovie::stopSound ( SWFSound $sound )", "url": "https://secure.php.net/manual/en/swfmovie.stopsound.php"}, {"name": "SWFMovie::streamMP3", "synopsis": null, "usage": "int SWFMovie::streamMP3 ( mixed $mp3file [, float $skip = 0 ] )", "url": "https://secure.php.net/manual/en/swfmovie.streammp3.php"}, {"name": "SWFMovie::writeExports", "synopsis": null, "usage": "void SWFMovie::writeExports ( void )", "url": "https://secure.php.net/manual/en/swfmovie.writeexports.php"}, {"name": "SWFPrebuiltClip::__construct", "synopsis": null, "usage": "SWFPrebuiltClip::__construct ( mixed $file )", "url": "https://secure.php.net/manual/en/swfprebuiltclip.construct.php"}, {"name": "SWFShape::addFill", "synopsis": null, "usage": "SWFFill SWFShape::addFill ( int $red , int $green , int $blue [, int $alpha = 255 ] )", "url": "https://secure.php.net/manual/en/swfshape.addfill.php"}, {"name": "SWFShape::__construct", "synopsis": null, "usage": "SWFShape::__construct ( void )", "url": "https://secure.php.net/manual/en/swfshape.construct.php"}, {"name": "SWFShape::drawArc", "synopsis": null, "usage": "void SWFShape::drawArc ( float $r , float $startAngle , float $endAngle )", "url": "https://secure.php.net/manual/en/swfshape.drawarc.php"}, {"name": "SWFShape::drawCircle", "synopsis": null, "usage": "void SWFShape::drawCircle ( float $r )", "url": "https://secure.php.net/manual/en/swfshape.drawcircle.php"}, {"name": "SWFShape::drawCubic", "synopsis": null, "usage": "int SWFShape::drawCubic ( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfshape.drawcubic.php"}, {"name": "SWFShape::drawCubicTo", "synopsis": null, "usage": "int SWFShape::drawCubicTo ( float $bx , float $by , float $cx , float $cy , float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfshape.drawcubicto.php"}, {"name": "SWFShape::drawCurve", "synopsis": null, "usage": "int SWFShape::drawCurve ( float $controldx , float $controldy , float $anchordx , float $anchordy [, float $targetdx ], float $targetdy )", "url": "https://secure.php.net/manual/en/swfshape.drawcurve.php"}, {"name": "SWFShape::drawCurveTo", "synopsis": null, "usage": "int SWFShape::drawCurveTo ( float $controlx , float $controly , float $anchorx , float $anchory [, float $targetx ], float $targety )", "url": "https://secure.php.net/manual/en/swfshape.drawcurveto.php"}, {"name": "SWFShape::drawGlyph", "synopsis": null, "usage": "void SWFShape::drawGlyph ( SWFFont $font , string $character [, int $size ] )", "url": "https://secure.php.net/manual/en/swfshape.drawglyph.php"}, {"name": "SWFShape::drawLine", "synopsis": null, "usage": "void SWFShape::drawLine ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfshape.drawline.php"}, {"name": "SWFShape::drawLineTo", "synopsis": null, "usage": "void SWFShape::drawLineTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/swfshape.drawlineto.php"}, {"name": "SWFShape::movePen", "synopsis": null, "usage": "void SWFShape::movePen ( float $dx , float $dy )", "url": "https://secure.php.net/manual/en/swfshape.movepen.php"}, {"name": "SWFShape::movePenTo", "synopsis": null, "usage": "void SWFShape::movePenTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/swfshape.movepento.php"}, {"name": "SWFShape::setLeftFill", "synopsis": null, "usage": "void SWFShape::setLeftFill ( SWFGradient $fill )", "url": "https://secure.php.net/manual/en/swfshape.setleftfill.php"}, {"name": "SWFShape::setLine", "synopsis": null, "usage": "void SWFShape::setLine ( SWFShape $shape )", "url": "https://secure.php.net/manual/en/swfshape.setline.php"}, {"name": "SWFShape::setRightFill", "synopsis": null, "usage": "void SWFShape::setRightFill ( SWFGradient $fill )", "url": "https://secure.php.net/manual/en/swfshape.setrightfill.php"}, {"name": "SWFSound::__construct", "synopsis": null, "usage": "SWFSound::__construct ( string $filename [, int $flags = 0 ] )", "url": "https://secure.php.net/manual/en/swfsound.construct.php"}, {"name": "SWFSoundInstance::loopCount", "synopsis": null, "usage": "void SWFSoundInstance::loopCount ( int $point )", "url": "https://secure.php.net/manual/en/swfsoundinstance.loopcount.php"}, {"name": "SWFSoundInstance::loopInPoint", "synopsis": null, "usage": "void SWFSoundInstance::loopInPoint ( int $point )", "url": "https://secure.php.net/manual/en/swfsoundinstance.loopinpoint.php"}, {"name": "SWFSoundInstance::loopOutPoint", "synopsis": null, "usage": "void SWFSoundInstance::loopOutPoint ( int $point )", "url": "https://secure.php.net/manual/en/swfsoundinstance.loopoutpoint.php"}, {"name": "SWFSoundInstance::noMultiple", "synopsis": null, "usage": "void SWFSoundInstance::noMultiple ( void )", "url": "https://secure.php.net/manual/en/swfsoundinstance.nomultiple.php"}, {"name": "SWFSprite::add", "synopsis": null, "usage": "void SWFSprite::add ( object $object )", "url": "https://secure.php.net/manual/en/swfsprite.add.php"}, {"name": "SWFSprite::__construct", "synopsis": null, "usage": "SWFSprite::__construct ( void )", "url": "https://secure.php.net/manual/en/swfsprite.construct.php"}, {"name": "SWFSprite::labelFrame", "synopsis": null, "usage": "void SWFSprite::labelFrame ( string $label )", "url": "https://secure.php.net/manual/en/swfsprite.labelframe.php"}, {"name": "SWFSprite::nextFrame", "synopsis": null, "usage": "void SWFSprite::nextFrame ( void )", "url": "https://secure.php.net/manual/en/swfsprite.nextframe.php"}, {"name": "SWFSprite::remove", "synopsis": null, "usage": "void SWFSprite::remove ( object $object )", "url": "https://secure.php.net/manual/en/swfsprite.remove.php"}, {"name": "SWFSprite::setFrames", "synopsis": null, "usage": "void SWFSprite::setFrames ( int $number )", "url": "https://secure.php.net/manual/en/swfsprite.setframes.php"}, {"name": "SWFSprite::startSound", "synopsis": null, "usage": "SWFSoundInstance SWFSprite::startSound ( SWFSound $sount )", "url": "https://secure.php.net/manual/en/swfsprite.startsound.php"}, {"name": "SWFSprite::stopSound", "synopsis": null, "usage": "void SWFSprite::stopSound ( SWFSound $sount )", "url": "https://secure.php.net/manual/en/swfsprite.stopsound.php"}, {"name": "SWFText::addString", "synopsis": null, "usage": "void SWFText::addString ( string $string )", "url": "https://secure.php.net/manual/en/swftext.addstring.php"}, {"name": "SWFText::addUTF8String", "synopsis": null, "usage": "void SWFText::addUTF8String ( string $text )", "url": "https://secure.php.net/manual/en/swftext.addutf8string.php"}, {"name": "SWFText::__construct", "synopsis": null, "usage": "SWFText::__construct ( void )", "url": "https://secure.php.net/manual/en/swftext.construct.php"}, {"name": "SWFText::getAscent", "synopsis": null, "usage": "float SWFText::getAscent ( void )", "url": "https://secure.php.net/manual/en/swftext.getascent.php"}, {"name": "SWFText::getDescent", "synopsis": null, "usage": "float SWFText::getDescent ( void )", "url": "https://secure.php.net/manual/en/swftext.getdescent.php"}, {"name": "SWFText::getLeading", "synopsis": null, "usage": "float SWFText::getLeading ( void )", "url": "https://secure.php.net/manual/en/swftext.getleading.php"}, {"name": "SWFText::getUTF8Width", "synopsis": null, "usage": "float SWFText::getUTF8Width ( string $string )", "url": "https://secure.php.net/manual/en/swftext.getutf8width.php"}, {"name": "SWFText::getWidth", "synopsis": null, "usage": "float SWFText::getWidth ( string $string )", "url": "https://secure.php.net/manual/en/swftext.getwidth.php"}, {"name": "SWFText::moveTo", "synopsis": null, "usage": "void SWFText::moveTo ( float $x , float $y )", "url": "https://secure.php.net/manual/en/swftext.moveto.php"}, {"name": "SWFText::setColor", "synopsis": null, "usage": "void SWFText::setColor ( int $red , int $green , int $blue [, int $a = 255 ] )", "url": "https://secure.php.net/manual/en/swftext.setcolor.php"}, {"name": "SWFText::setFont", "synopsis": null, "usage": "void SWFText::setFont ( SWFFont $font )", "url": "https://secure.php.net/manual/en/swftext.setfont.php"}, {"name": "SWFText::setHeight", "synopsis": null, "usage": "void SWFText::setHeight ( float $height )", "url": "https://secure.php.net/manual/en/swftext.setheight.php"}, {"name": "SWFText::setSpacing", "synopsis": null, "usage": "void SWFText::setSpacing ( float $spacing )", "url": "https://secure.php.net/manual/en/swftext.setspacing.php"}, {"name": "SWFTextField::addChars", "synopsis": null, "usage": "void SWFTextField::addChars ( string $chars )", "url": "https://secure.php.net/manual/en/swftextfield.addchars.php"}, {"name": "SWFTextField::addString", "synopsis": null, "usage": "void SWFTextField::addString ( string $string )", "url": "https://secure.php.net/manual/en/swftextfield.addstring.php"}, {"name": "SWFTextField::align", "synopsis": null, "usage": "void SWFTextField::align ( int $alignement )", "url": "https://secure.php.net/manual/en/swftextfield.align.php"}, {"name": "SWFTextField::__construct", "synopsis": null, "usage": "SWFTextField::__construct ([ int $flags ] )", "url": "https://secure.php.net/manual/en/swftextfield.construct.php"}, {"name": "SWFTextField::setBounds", "synopsis": null, "usage": "void SWFTextField::setBounds ( float $width , float $height )", "url": "https://secure.php.net/manual/en/swftextfield.setbounds.php"}, {"name": "SWFTextField::setColor", "synopsis": null, "usage": "void SWFTextField::setColor ( int $red , int $green , int $blue [, int $a = 255 ] )", "url": "https://secure.php.net/manual/en/swftextfield.setcolor.php"}, {"name": "SWFTextField::setFont", "synopsis": null, "usage": "void SWFTextField::setFont ( SWFFont $font )", "url": "https://secure.php.net/manual/en/swftextfield.setfont.php"}, {"name": "SWFTextField::setHeight", "synopsis": null, "usage": "void SWFTextField::setHeight ( float $height )", "url": "https://secure.php.net/manual/en/swftextfield.setheight.php"}, {"name": "SWFTextField::setIndentation", "synopsis": null, "usage": "void SWFTextField::setIndentation ( float $width )", "url": "https://secure.php.net/manual/en/swftextfield.setindentation.php"}, {"name": "SWFTextField::setLeftMargin", "synopsis": null, "usage": "void SWFTextField::setLeftMargin ( float $width )", "url": "https://secure.php.net/manual/en/swftextfield.setleftmargin.php"}, {"name": "SWFTextField::setLineSpacing", "synopsis": null, "usage": "void SWFTextField::setLineSpacing ( float $height )", "url": "https://secure.php.net/manual/en/swftextfield.setlinespacing.php"}, {"name": "SWFTextField::setMargins", "synopsis": null, "usage": "void SWFTextField::setMargins ( float $left , float $right )", "url": "https://secure.php.net/manual/en/swftextfield.setmargins.php"}, {"name": "SWFTextField::setName", "synopsis": null, "usage": "void SWFTextField::setName ( string $name )", "url": "https://secure.php.net/manual/en/swftextfield.setname.php"}, {"name": "SWFTextField::setPadding", "synopsis": null, "usage": "void SWFTextField::setPadding ( float $padding )", "url": "https://secure.php.net/manual/en/swftextfield.setpadding.php"}, {"name": "SWFTextField::setRightMargin", "synopsis": null, "usage": "void SWFTextField::setRightMargin ( float $width )", "url": "https://secure.php.net/manual/en/swftextfield.setrightmargin.php"}, {"name": "SWFVideoStream::__construct", "synopsis": null, "usage": "SWFVideoStream::__construct ([ string $file ] )", "url": "https://secure.php.net/manual/en/swfvideostream.construct.php"}, {"name": "SWFVideoStream::getNumFrames", "synopsis": "This function returns the number of video-frames of a SWFVideoStream.", "usage": "int SWFVideoStream::getNumFrames ( void )", "url": "https://secure.php.net/manual/en/swfvideostream.getnumframes.php"}, {"name": "SWFVideoStream::setDimension", "synopsis": "Sets the width and height for streamed videos.", "usage": "void SWFVideoStream::setDimension ( int $x , int $y )", "url": "https://secure.php.net/manual/en/swfvideostream.setdimension.php"}, {"name": "Swish::__construct", "synopsis": null, "usage": "void Swish::__construct ( string $index_names )", "url": "https://secure.php.net/manual/en/swish.construct.php"}, {"name": "Swish::getMetaList", "synopsis": null, "usage": "array Swish::getMetaList ( string $index_name )", "url": "https://secure.php.net/manual/en/swish.getmetalist.php"}, {"name": "Swish::getPropertyList", "synopsis": null, "usage": "array Swish::getPropertyList ( string $index_name )", "url": "https://secure.php.net/manual/en/swish.getpropertylist.php"}, {"name": "Swish::prepare", "synopsis": null, "usage": "object Swish::prepare ([ string $query ] )", "url": "https://secure.php.net/manual/en/swish.prepare.php"}, {"name": "Swish::query", "synopsis": null, "usage": "object Swish::query ( string $query )", "url": "https://secure.php.net/manual/en/swish.query.php"}, {"name": "SwishResult::getMetaList", "synopsis": null, "usage": "array SwishResult::getMetaList ( void )", "url": "https://secure.php.net/manual/en/swishresult.getmetalist.php"}, {"name": "SwishResult::stem", "synopsis": null, "usage": "array SwishResult::stem ( string $word )", "url": "https://secure.php.net/manual/en/swishresult.stem.php"}, {"name": "SwishResults::getParsedWords", "synopsis": null, "usage": "array SwishResults::getParsedWords ( string $index_name )", "url": "https://secure.php.net/manual/en/swishresults.getparsedwords.php"}, {"name": "SwishResults::getRemovedStopwords", "synopsis": null, "usage": "array SwishResults::getRemovedStopwords ( string $index_name )", "url": "https://secure.php.net/manual/en/swishresults.getremovedstopwords.php"}, {"name": "SwishResults::nextResult", "synopsis": null, "usage": "object SwishResults::nextResult ( void )", "url": "https://secure.php.net/manual/en/swishresults.nextresult.php"}, {"name": "SwishResults::seekResult", "synopsis": null, "usage": "int SwishResults::seekResult ( int $position )", "url": "https://secure.php.net/manual/en/swishresults.seekresult.php"}, {"name": "SwishSearch::execute", "synopsis": null, "usage": "object SwishSearch::execute ([ string $query ] )", "url": "https://secure.php.net/manual/en/swishsearch.execute.php"}, {"name": "SwishSearch::resetLimit", "synopsis": null, "usage": "void SwishSearch::resetLimit ( void )", "url": "https://secure.php.net/manual/en/swishsearch.resetlimit.php"}, {"name": "SwishSearch::setLimit", "synopsis": null, "usage": "void SwishSearch::setLimit ( string $property , string $low , string $high )", "url": "https://secure.php.net/manual/en/swishsearch.setlimit.php"}, {"name": "SwishSearch::setPhraseDelimiter", "synopsis": null, "usage": "void SwishSearch::setPhraseDelimiter ( string $delimiter )", "url": "https://secure.php.net/manual/en/swishsearch.setphrasedelimiter.php"}, {"name": "SwishSearch::setSort", "synopsis": null, "usage": "void SwishSearch::setSort ( string $sort )", "url": "https://secure.php.net/manual/en/swishsearch.setsort.php"}, {"name": "SwishSearch::setStructure", "synopsis": null, "usage": "void SwishSearch::setStructure ( int $structure )", "url": "https://secure.php.net/manual/en/swishsearch.setstructure.php"}, {"name": "Swoole\\Async::dnsLookup", "synopsis": "", "usage": "public static void Swoole\\Async::dnsLookup ( string $hostname , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-async.dnslookup.php"}, {"name": "Swoole\\Async::read", "synopsis": "", "usage": "public static bool Swoole\\Async::read ( string $filename , callable $callback [, integer $chunk_size [, integer $offset ]] )", "url": "https://secure.php.net/manual/en/swoole-async.read.php"}, {"name": "Swoole\\Async::readFile", "synopsis": "", "usage": "public static void Swoole\\Async::readFile ( string $filename , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-async.readfile.php"}, {"name": "Swoole\\Async::set", "synopsis": "", "usage": "public static void Swoole\\Async::set ( array $settings )", "url": "https://secure.php.net/manual/en/swoole-async.set.php"}, {"name": "Swoole\\Async::write", "synopsis": "", "usage": "public static void Swoole\\Async::write ( string $filename , string $content [, integer $offset [, callable $callback ]] )", "url": "https://secure.php.net/manual/en/swoole-async.write.php"}, {"name": "Swoole\\Async::writeFile", "synopsis": "", "usage": "public static void Swoole\\Async::writeFile ( string $filename , string $content [, callable $callback [, string $flags ]] )", "url": "https://secure.php.net/manual/en/swoole-async.writefile.php"}, {"name": "Swoole\\Atomic::add", "synopsis": "Add a number to the value to the atomic object.", "usage": "public integer Swoole\\Atomic::add ([ integer $add_value ] )", "url": "https://secure.php.net/manual/en/swoole-atomic.add.php"}, {"name": "Swoole\\Atomic::cmpset", "synopsis": "", "usage": "public integer Swoole\\Atomic::cmpset ( integer $cmp_value , integer $new_value )", "url": "https://secure.php.net/manual/en/swoole-atomic.cmpset.php"}, {"name": "Swoole\\Atomic::get", "synopsis": "Get the current value of the atomic object.", "usage": "public integer Swoole\\Atomic::get ( void )", "url": "https://secure.php.net/manual/en/swoole-atomic.get.php"}, {"name": "Swoole\\Atomic::set", "synopsis": "Set a new value to the atomic object.", "usage": "public integer Swoole\\Atomic::set ( integer $value )", "url": "https://secure.php.net/manual/en/swoole-atomic.set.php"}, {"name": "Swoole\\Atomic::sub", "synopsis": "Subtract a number to the value of the atomic object.", "usage": "public integer Swoole\\Atomic::sub ([ integer $sub_value ] )", "url": "https://secure.php.net/manual/en/swoole-atomic.sub.php"}, {"name": "Swoole\\Buffer::append", "synopsis": "", "usage": "public integer Swoole\\Buffer::append ( string $data )", "url": "https://secure.php.net/manual/en/swoole-buffer.append.php"}, {"name": "Swoole\\Buffer::clear", "synopsis": "", "usage": "public void Swoole\\Buffer::clear ( void )", "url": "https://secure.php.net/manual/en/swoole-buffer.clear.php"}, {"name": "Swoole\\Buffer::__destruct", "synopsis": "", "usage": "public void Swoole\\Buffer::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-buffer.destruct.php"}, {"name": "Swoole\\Buffer::expand", "synopsis": "", "usage": "public integer Swoole\\Buffer::expand ( integer $size )", "url": "https://secure.php.net/manual/en/swoole-buffer.expand.php"}, {"name": "Swoole\\Buffer::read", "synopsis": "", "usage": "public string Swoole\\Buffer::read ( integer $offset , integer $length )", "url": "https://secure.php.net/manual/en/swoole-buffer.read.php"}, {"name": "Swoole\\Buffer::recycle", "synopsis": "", "usage": "public void Swoole\\Buffer::recycle ( void )", "url": "https://secure.php.net/manual/en/swoole-buffer.recycle.php"}, {"name": "Swoole\\Buffer::substr", "synopsis": "If $remove is set to be true and $offset is set to be 0, the data will be removed from the buffer. The memory for storing the data will be released when the buffer object is deconstructed.", "usage": "public string Swoole\\Buffer::substr ( integer $offset [, integer $length [, bool $remove ]] )", "url": "https://secure.php.net/manual/en/swoole-buffer.substr.php"}, {"name": "Swoole\\Buffer::__toString", "synopsis": "", "usage": "public string Swoole\\Buffer::__toString ( void )", "url": "https://secure.php.net/manual/en/swoole-buffer.tostring.php"}, {"name": "Swoole\\Buffer::write", "synopsis": "", "usage": "public void Swoole\\Buffer::write ( integer $offset , string $data )", "url": "https://secure.php.net/manual/en/swoole-buffer.write.php"}, {"name": "Swoole\\Channel::__destruct", "synopsis": "", "usage": "public void Swoole\\Channel::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-channel.destruct.php"}, {"name": "Swoole\\Channel::pop", "synopsis": "", "usage": "public mixed Swoole\\Channel::pop ( void )", "url": "https://secure.php.net/manual/en/swoole-channel.pop.php"}, {"name": "Swoole\\Channel::push", "synopsis": "Data can be any non-empty PHP variable, the variable will be serialized if it is not string type.", "usage": "public bool Swoole\\Channel::push ( string $data )", "url": "https://secure.php.net/manual/en/swoole-channel.push.php"}, {"name": "Swoole\\Channel::stats", "synopsis": "Get the numbers of queued elements and total size of the memory used by the queue.", "usage": "public array Swoole\\Channel::stats ( void )", "url": "https://secure.php.net/manual/en/swoole-channel.stats.php"}, {"name": "Swoole\\Client::close", "synopsis": "", "usage": "public bool Swoole\\Client::close ([ bool $force ] )", "url": "https://secure.php.net/manual/en/swoole-client.close.php"}, {"name": "Swoole\\Client::connect", "synopsis": "", "usage": "public bool Swoole\\Client::connect ( string $host [, integer $port [, integer $timeout [, integer $flag ]]] )", "url": "https://secure.php.net/manual/en/swoole-client.connect.php"}, {"name": "Swoole\\Client::__destruct", "synopsis": "", "usage": "public void Swoole\\Client::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-client.destruct.php"}, {"name": "Swoole\\Client::getpeername", "synopsis": "", "usage": "public array Swoole\\Client::getpeername ( void )", "url": "https://secure.php.net/manual/en/swoole-client.getpeername.php"}, {"name": "Swoole\\Client::getsockname", "synopsis": "", "usage": "public array Swoole\\Client::getsockname ( void )", "url": "https://secure.php.net/manual/en/swoole-client.getsockname.php"}, {"name": "Swoole\\Client::isConnected", "synopsis": "This method returns the connection status of application layer.", "usage": "public bool Swoole\\Client::isConnected ( void )", "url": "https://secure.php.net/manual/en/swoole-client.isconnected.php"}, {"name": "Swoole\\Client::on", "synopsis": "", "usage": "public void Swoole\\Client::on ( string $event , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-client.on.php"}, {"name": "Swoole\\Client::pause", "synopsis": "", "usage": "public void Swoole\\Client::pause ( void )", "url": "https://secure.php.net/manual/en/swoole-client.pause.php"}, {"name": "Swoole\\Client::pipe", "synopsis": "", "usage": "public void Swoole\\Client::pipe ( string $socket )", "url": "https://secure.php.net/manual/en/swoole-client.pipe.php"}, {"name": "Swoole\\Client::recv", "synopsis": "", "usage": "public void Swoole\\Client::recv ([ string $size [, string $flag ]] )", "url": "https://secure.php.net/manual/en/swoole-client.recv.php"}, {"name": "Swoole\\Client::resume", "synopsis": "", "usage": "public void Swoole\\Client::resume ( void )", "url": "https://secure.php.net/manual/en/swoole-client.resume.php"}, {"name": "Swoole\\Client::send", "synopsis": "", "usage": "public integer Swoole\\Client::send ( string $data [, string $flag ] )", "url": "https://secure.php.net/manual/en/swoole-client.send.php"}, {"name": "Swoole\\Client::sendfile", "synopsis": "This is a wrapper of the Linux sendfile system call.", "usage": "public boolean Swoole\\Client::sendfile ( string $filename [, int $offset ] )", "url": "https://secure.php.net/manual/en/swoole-client.sendfile.php"}, {"name": "Swoole\\Client::sendto", "synopsis": "The swoole client should be type of SWOOLE_SOCK_UDP or SWOOLE_SOCK_UDP6.", "usage": "public boolean Swoole\\Client::sendto ( string $ip , integer $port , string $data )", "url": "https://secure.php.net/manual/en/swoole-client.sendto.php"}, {"name": "Swoole\\Client::set", "synopsis": "", "usage": "public void Swoole\\Client::set ( array $settings )", "url": "https://secure.php.net/manual/en/swoole-client.set.php"}, {"name": "Swoole\\Client::sleep", "synopsis": "Remove the TCP client from system event loop.", "usage": "public void Swoole\\Client::sleep ( void )", "url": "https://secure.php.net/manual/en/swoole-client.sleep.php"}, {"name": "Swoole\\Client::wakeup", "synopsis": "", "usage": "public void Swoole\\Client::wakeup ( void )", "url": "https://secure.php.net/manual/en/swoole-client.wakeup.php"}, {"name": "Swoole\\Connection\\Iterator::count", "synopsis": "Gets the number of connections.", "usage": "public int Swoole\\Connection\\Iterator::count ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.count.php"}, {"name": "Swoole\\Connection\\Iterator::current", "synopsis": "Get current connection entry.", "usage": "public Connection Swoole\\Connection\\Iterator::current ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.current.php"}, {"name": "Swoole\\Connection\\Iterator::key", "synopsis": "This function returns key of the current connection.", "usage": "public int Swoole\\Connection\\Iterator::key ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.key.php"}, {"name": "Swoole\\Connection\\Iterator::next", "synopsis": "The iterator to the next connection.", "usage": "public Connection Swoole\\Connection\\Iterator::next ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.next.php"}, {"name": "Swoole\\Connection\\Iterator::offsetExists", "synopsis": "Check if offset exists.", "usage": "public boolean Swoole\\Connection\\Iterator::offsetExists ( int $index )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.offsetexists.php"}, {"name": "Swoole\\Connection\\Iterator::offsetGet", "synopsis": "Return the connection at specified offset.", "usage": "public Connection Swoole\\Connection\\Iterator::offsetGet ( string $index )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.offsetget.php"}, {"name": "Swoole\\Connection\\Iterator::offsetSet", "synopsis": "Assign a Connection to the specified offset.", "usage": "public void Swoole\\Connection\\Iterator::offsetSet ( int $offset , mixed $connection )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.offsetset.php"}, {"name": "Swoole\\Connection\\Iterator::offsetUnset", "synopsis": "Unsets an offset.", "usage": "public void Swoole\\Connection\\Iterator::offsetUnset ( int $offset )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.offsetunset.php"}, {"name": "Swoole\\Connection\\Iterator::rewind", "synopsis": "", "usage": "public void Swoole\\Connection\\Iterator::rewind ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.rewind.php"}, {"name": "Swoole\\Connection\\Iterator::valid", "synopsis": "Checks if the current position is valid.", "usage": "public boolean Swoole\\Connection\\Iterator::valid ( void )", "url": "https://secure.php.net/manual/en/swoole-connection-iterator.valid.php"}, {"name": "Swoole\\Coroutine\\Client::close", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::close ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.close.php"}, {"name": "Swoole\\Coroutine\\Client::connect", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::connect ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.connect.php"}, {"name": "Swoole\\Coroutine\\Client::__destruct", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.destruct.php"}, {"name": "Swoole\\Coroutine\\Client::getpeername", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::getpeername ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.getpeername.php"}, {"name": "Swoole\\Coroutine\\Client::getsockname", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::getsockname ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.getsockname.php"}, {"name": "Swoole\\Coroutine\\Client::isConnected", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::isConnected ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.isconnected.php"}, {"name": "Swoole\\Coroutine\\Client::recv", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::recv ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.recv.php"}, {"name": "Swoole\\Coroutine\\Client::send", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::send ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.send.php"}, {"name": "Swoole\\Coroutine\\Client::sendfile", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::sendfile ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.sendfile.php"}, {"name": "Swoole\\Coroutine\\Client::sendto", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::sendto ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.sendto.php"}, {"name": "Swoole\\Coroutine\\Client::set", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Client::set ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-client.set.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::addFile", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::addFile ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.addfile.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::close", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::close ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.close.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::__destruct", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.destruct.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::execute", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::execute ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.execute.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::get", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::get ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.get.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::getDefer", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::getDefer ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.getdefer.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::isConnected", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::isConnected ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.isconnected.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::post", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::post ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.post.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::recv", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::recv ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.recv.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::set", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::set ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.set.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::setCookies", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::setCookies ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.setcookies.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::setData", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::setData ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.setdata.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::setDefer", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::setDefer ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.setdefer.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::setHeaders", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::setHeaders ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.setheaders.php"}, {"name": "Swoole\\Coroutine\\Http\\Client::setMethod", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\Http\\Client::setMethod ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-http-client.setmethod.php"}, {"name": "Swoole\\Coroutine\\MySQL::close", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::close ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.close.php"}, {"name": "Swoole\\Coroutine\\MySQL::connect", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::connect ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.connect.php"}, {"name": "Swoole\\Coroutine\\MySQL::__destruct", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.destruct.php"}, {"name": "Swoole\\Coroutine\\MySQL::getDefer", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::getDefer ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.getdefer.php"}, {"name": "Swoole\\Coroutine\\MySQL::query", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::query ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.query.php"}, {"name": "Swoole\\Coroutine\\MySQL::recv", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::recv ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.recv.php"}, {"name": "Swoole\\Coroutine\\MySQL::setDefer", "synopsis": "", "usage": "public ReturnType Swoole\\Coroutine\\MySQL::setDefer ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine-mysql.setdefer.php"}, {"name": "Swoole\\Coroutine::call_user_func_array", "synopsis": "Calls the callback given by the first parameter with the parameters in param_array.", "usage": "public static mixed Swoole\\Coroutine::call_user_func_array ( callable $callback , array $param_array )", "url": "https://secure.php.net/manual/en/swoole-coroutine.call-user-func-array.php"}, {"name": "Swoole\\Coroutine::call_user_func", "synopsis": "Calls the callback given by the first parameter and passes the remaining parameters as arguments.", "usage": "public static mixed Swoole\\Coroutine::call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/swoole-coroutine.call-user-func.php"}, {"name": "Swoole\\Coroutine::cli_wait", "synopsis": "", "usage": "public static ReturnType Swoole\\Coroutine::cli_wait ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine.cli-wait.php"}, {"name": "Swoole\\Coroutine::create", "synopsis": "", "usage": "public static ReturnType Swoole\\Coroutine::create ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine.create.php"}, {"name": "Swoole\\Coroutine::getuid", "synopsis": "", "usage": "public static ReturnType Swoole\\Coroutine::getuid ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine.getuid.php"}, {"name": "Swoole\\Coroutine::resume", "synopsis": "", "usage": "public static ReturnType Swoole\\Coroutine::resume ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine.resume.php"}, {"name": "Swoole\\Coroutine::suspend", "synopsis": "", "usage": "public static ReturnType Swoole\\Coroutine::suspend ( void )", "url": "https://secure.php.net/manual/en/swoole-coroutine.suspend.php"}, {"name": "Swoole\\Event::add", "synopsis": "", "usage": "public static boolean Swoole\\Event::add ( int $fd , callable $read_callback [, callable $write_callback [, string $events ]] )", "url": "https://secure.php.net/manual/en/swoole-event.add.php"}, {"name": "Swoole\\Event::defer", "synopsis": "", "usage": "public static void Swoole\\Event::defer ( mixed $callback )", "url": "https://secure.php.net/manual/en/swoole-event.defer.php"}, {"name": "Swoole\\Event::del", "synopsis": "", "usage": "public static boolean Swoole\\Event::del ( string $fd )", "url": "https://secure.php.net/manual/en/swoole-event.del.php"}, {"name": "Swoole\\Event::exit", "synopsis": "", "usage": "public static void Swoole\\Event::exit ( void )", "url": "https://secure.php.net/manual/en/swoole-event.exit.php"}, {"name": "Swoole\\Event::set", "synopsis": "", "usage": "public static boolean Swoole\\Event::set ( int $fd [, string $read_callback [, string $write_callback [, string $events ]]] )", "url": "https://secure.php.net/manual/en/swoole-event.set.php"}, {"name": "Swoole\\Event::wait", "synopsis": "", "usage": "public static void Swoole\\Event::wait ( void )", "url": "https://secure.php.net/manual/en/swoole-event.wait.php"}, {"name": "Swoole\\Event::write", "synopsis": "", "usage": "public static void Swoole\\Event::write ( string $fd , string $data )", "url": "https://secure.php.net/manual/en/swoole-event.write.php"}, {"name": "Swoole\\Http\\Client::addFile", "synopsis": "", "usage": "public void Swoole\\Http\\Client::addFile ( string $path , string $name [, string $type [, string $filename [, string $offset ]]] )", "url": "https://secure.php.net/manual/en/swoole-http-client.addfile.php"}, {"name": "Swoole\\Http\\Client::close", "synopsis": "", "usage": "public void Swoole\\Http\\Client::close ( void )", "url": "https://secure.php.net/manual/en/swoole-http-client.close.php"}, {"name": "Swoole\\Http\\Client::__destruct", "synopsis": "", "usage": "public void Swoole\\Http\\Client::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-http-client.destruct.php"}, {"name": "Swoole\\Http\\Client::download", "synopsis": "", "usage": "public void Swoole\\Http\\Client::download ( string $path , string $file , callable $callback [, integer $offset ] )", "url": "https://secure.php.net/manual/en/swoole-http-client.download.php"}, {"name": "Swoole\\Http\\Client::execute", "synopsis": "", "usage": "public void Swoole\\Http\\Client::execute ( string $path , string $callback )", "url": "https://secure.php.net/manual/en/swoole-http-client.execute.php"}, {"name": "Swoole\\Http\\Client::get", "synopsis": "", "usage": "public void Swoole\\Http\\Client::get ( string $path , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-http-client.get.php"}, {"name": "Swoole\\Http\\Client::isConnected", "synopsis": "", "usage": "public boolean Swoole\\Http\\Client::isConnected ( void )", "url": "https://secure.php.net/manual/en/swoole-http-client.isconnected.php"}, {"name": "Swoole\\Http\\Client::on", "synopsis": "", "usage": "public void Swoole\\Http\\Client::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-http-client.on.php"}, {"name": "Swoole\\Http\\Client::post", "synopsis": "", "usage": "public void Swoole\\Http\\Client::post ( string $path , string $data , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-http-client.post.php"}, {"name": "Swoole\\Http\\Client::push", "synopsis": "", "usage": "public void Swoole\\Http\\Client::push ( string $data [, string $opcode [, string $finish ]] )", "url": "https://secure.php.net/manual/en/swoole-http-client.push.php"}, {"name": "Swoole\\Http\\Client::set", "synopsis": "", "usage": "public void Swoole\\Http\\Client::set ( array $settings )", "url": "https://secure.php.net/manual/en/swoole-http-client.set.php"}, {"name": "Swoole\\Http\\Client::setCookies", "synopsis": "", "usage": "public void Swoole\\Http\\Client::setCookies ( array $cookies )", "url": "https://secure.php.net/manual/en/swoole-http-client.setcookies.php"}, {"name": "Swoole\\Http\\Client::setData", "synopsis": "The HTTP method will be changed to be POST.", "usage": "public ReturnType Swoole\\Http\\Client::setData ( string $data )", "url": "https://secure.php.net/manual/en/swoole-http-client.setdata.php"}, {"name": "Swoole\\Http\\Client::setHeaders", "synopsis": "", "usage": "public void Swoole\\Http\\Client::setHeaders ( array $headers )", "url": "https://secure.php.net/manual/en/swoole-http-client.setheaders.php"}, {"name": "Swoole\\Http\\Client::setMethod", "synopsis": "", "usage": "public void Swoole\\Http\\Client::setMethod ( string $method )", "url": "https://secure.php.net/manual/en/swoole-http-client.setmethod.php"}, {"name": "Swoole\\Http\\Client::upgrade", "synopsis": "", "usage": "public void Swoole\\Http\\Client::upgrade ( string $path , string $callback )", "url": "https://secure.php.net/manual/en/swoole-http-client.upgrade.php"}, {"name": "Swoole\\Http\\Request::__destruct", "synopsis": "", "usage": "public void Swoole\\Http\\Request::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-http-request.destruct.php"}, {"name": "Swoole\\Http\\Request::rawcontent", "synopsis": "This method is used for the POST data which isn't in the form of `application/x-www-form-urlencoded`.", "usage": "public string Swoole\\Http\\Request::rawcontent ( void )", "url": "https://secure.php.net/manual/en/swoole-http-request.rawcontent.php"}, {"name": "Swoole\\Http\\Response::cookie", "synopsis": "", "usage": "public string Swoole\\Http\\Response::cookie ( string $name [, string $value [, string $expires [, string $path [, string $domain [, string $secure [, string $httponly ]]]]]] )", "url": "https://secure.php.net/manual/en/swoole-http-response.cookie.php"}, {"name": "Swoole\\Http\\Response::__destruct", "synopsis": "", "usage": "public void Swoole\\Http\\Response::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-http-response.destruct.php"}, {"name": "Swoole\\Http\\Response::end", "synopsis": "", "usage": "public void Swoole\\Http\\Response::end ([ string $content ] )", "url": "https://secure.php.net/manual/en/swoole-http-response.end.php"}, {"name": "Swoole\\Http\\Response::gzip", "synopsis": "The header about Content-Encoding will be added automatically.", "usage": "public ReturnType Swoole\\Http\\Response::gzip ([ string $compress_level ] )", "url": "https://secure.php.net/manual/en/swoole-http-response.gzip.php"}, {"name": "Swoole\\Http\\Response::header", "synopsis": "", "usage": "public void Swoole\\Http\\Response::header ( string $key , string $value [, string $ucwords ] )", "url": "https://secure.php.net/manual/en/swoole-http-response.header.php"}, {"name": "Swoole\\Http\\Response::initHeader", "synopsis": "Init the HTTP response header.", "usage": "public ReturnType Swoole\\Http\\Response::initHeader ( void )", "url": "https://secure.php.net/manual/en/swoole-http-response.initheader.php"}, {"name": "Swoole\\Http\\Response::rawcookie", "synopsis": "", "usage": "public ReturnType Swoole\\Http\\Response::rawcookie ( string $name [, string $value [, string $expires [, string $path [, string $domain [, string $secure [, string $httponly ]]]]]] )", "url": "https://secure.php.net/manual/en/swoole-http-response.rawcookie.php"}, {"name": "Swoole\\Http\\Response::sendfile", "synopsis": "Send file through the HTTP response.", "usage": "public ReturnType Swoole\\Http\\Response::sendfile ( string $filename [, int $offset ] )", "url": "https://secure.php.net/manual/en/swoole-http-response.sendfile.php"}, {"name": "Swoole\\Http\\Response::status", "synopsis": "Set the status code of the HTTP response.", "usage": "public ReturnType Swoole\\Http\\Response::status ( string $http_code )", "url": "https://secure.php.net/manual/en/swoole-http-response.status.php"}, {"name": "Swoole\\Http\\Response::write", "synopsis": "Append HTTP body content to the HTTP response.", "usage": "public void Swoole\\Http\\Response::write ( string $content )", "url": "https://secure.php.net/manual/en/swoole-http-response.write.php"}, {"name": "Swoole\\Http\\Server::on", "synopsis": "Bind callback function to HTTP server by event name.", "usage": "public void Swoole\\Http\\Server::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-http-server.on.php"}, {"name": "Swoole\\Http\\Server::start", "synopsis": "Start the swoole http server.", "usage": "public void Swoole\\Http\\Server::start ( void )", "url": "https://secure.php.net/manual/en/swoole-http-server.start.php"}, {"name": "Swoole\\Lock::__destruct", "synopsis": "", "usage": "public void Swoole\\Lock::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.destruct.php"}, {"name": "Swoole\\Lock::lock_read", "synopsis": "Lock a read-write lock for reading.", "usage": "public void Swoole\\Lock::lock_read ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.lock-read.php"}, {"name": "Swoole\\Lock::lock", "synopsis": "", "usage": "public void Swoole\\Lock::lock ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.lock.php"}, {"name": "Swoole\\Lock::trylock_read", "synopsis": "", "usage": "public void Swoole\\Lock::trylock_read ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.trylock-read.php"}, {"name": "Swoole\\Lock::trylock", "synopsis": "", "usage": "public void Swoole\\Lock::trylock ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.trylock.php"}, {"name": "Swoole\\Lock::unlock", "synopsis": "", "usage": "public void Swoole\\Lock::unlock ( void )", "url": "https://secure.php.net/manual/en/swoole-lock.unlock.php"}, {"name": "Swoole\\Mmap::open", "synopsis": "", "usage": "public static ReturnType Swoole\\Mmap::open ( string $filename [, string $size [, string $offset ]] )", "url": "https://secure.php.net/manual/en/swoole-mmap.open.php"}, {"name": "Swoole\\MySQL::close", "synopsis": "", "usage": "public void Swoole\\MySQL::close ( void )", "url": "https://secure.php.net/manual/en/swoole-mysql.close.php"}, {"name": "Swoole\\MySQL::connect", "synopsis": "Connect to the remote MySQL server.", "usage": "public void Swoole\\MySQL::connect ( array $server_config , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-mysql.connect.php"}, {"name": "Swoole\\MySQL::__destruct", "synopsis": "", "usage": "public void Swoole\\MySQL::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-mysql.destruct.php"}, {"name": "Swoole\\MySQL::getBuffer", "synopsis": "", "usage": "public ReturnType Swoole\\MySQL::getBuffer ( void )", "url": "https://secure.php.net/manual/en/swoole-mysql.getbuffer.php"}, {"name": "Swoole\\MySQL::on", "synopsis": "Register callback function based on event name, current only 'close' event is supported.", "usage": "public void Swoole\\MySQL::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-mysql.on.php"}, {"name": "Swoole\\MySQL::query", "synopsis": "", "usage": "public ReturnType Swoole\\MySQL::query ( string $sql , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-mysql.query.php"}, {"name": "Swoole\\Process::alarm", "synopsis": "", "usage": "public static void Swoole\\Process::alarm ( integer $interval_usec )", "url": "https://secure.php.net/manual/en/swoole-process.alarm.php"}, {"name": "Swoole\\Process::close", "synopsis": "Close the pipe to the child process.", "usage": "public void Swoole\\Process::close ( void )", "url": "https://secure.php.net/manual/en/swoole-process.close.php"}, {"name": "Swoole\\Process::daemon", "synopsis": "", "usage": "public static void Swoole\\Process::daemon ([ boolean $nochdir [, boolean $noclose ]] )", "url": "https://secure.php.net/manual/en/swoole-process.daemon.php"}, {"name": "Swoole\\Process::__destruct", "synopsis": "", "usage": "public void Swoole\\Process::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-process.destruct.php"}, {"name": "Swoole\\Process::exec", "synopsis": "The process will be replaced to be the system command process, but the pipe to the parent process will be kept.", "usage": "public ReturnType Swoole\\Process::exec ( string $exec_file , string $args )", "url": "https://secure.php.net/manual/en/swoole-process.exec.php"}, {"name": "Swoole\\Process::exit", "synopsis": "", "usage": "public void Swoole\\Process::exit ([ string $exit_code ] )", "url": "https://secure.php.net/manual/en/swoole-process.exit.php"}, {"name": "Swoole\\Process::freeQueue", "synopsis": "", "usage": "public void Swoole\\Process::freeQueue ( void )", "url": "https://secure.php.net/manual/en/swoole-process.freequeue.php"}, {"name": "Swoole\\Process::kill", "synopsis": "Send signal to the child process.", "usage": "public static void Swoole\\Process::kill ( integer $pid [, string $signal_no ] )", "url": "https://secure.php.net/manual/en/swoole-process.kill.php"}, {"name": "Swoole\\Process::name", "synopsis": "", "usage": "public void Swoole\\Process::name ( string $process_name )", "url": "https://secure.php.net/manual/en/swoole-process.name.php"}, {"name": "Swoole\\Process::pop", "synopsis": "", "usage": "public mixed Swoole\\Process::pop ([ integer $maxsize ] )", "url": "https://secure.php.net/manual/en/swoole-process.pop.php"}, {"name": "Swoole\\Process::push", "synopsis": "", "usage": "public boolean Swoole\\Process::push ( string $data )", "url": "https://secure.php.net/manual/en/swoole-process.push.php"}, {"name": "Swoole\\Process::read", "synopsis": "", "usage": "public string Swoole\\Process::read ([ integer $maxsize ] )", "url": "https://secure.php.net/manual/en/swoole-process.read.php"}, {"name": "Swoole\\Process::signal", "synopsis": "", "usage": "public static void Swoole\\Process::signal ( string $signal_no , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-process.signal.php"}, {"name": "Swoole\\Process::start", "synopsis": "", "usage": "public void Swoole\\Process::start ( void )", "url": "https://secure.php.net/manual/en/swoole-process.start.php"}, {"name": "Swoole\\Process::statQueue", "synopsis": "", "usage": "public array Swoole\\Process::statQueue ( void )", "url": "https://secure.php.net/manual/en/swoole-process.statqueue.php"}, {"name": "Swoole\\Process::useQueue", "synopsis": "", "usage": "public boolean Swoole\\Process::useQueue ( integer $key [, integer $mode ] )", "url": "https://secure.php.net/manual/en/swoole-process.usequeue.php"}, {"name": "Swoole\\Process::wait", "synopsis": "", "usage": "public static array Swoole\\Process::wait ([ boolean $blocking ] )", "url": "https://secure.php.net/manual/en/swoole-process.wait.php"}, {"name": "Swoole\\Process::write", "synopsis": "", "usage": "public integer Swoole\\Process::write ( string $data )", "url": "https://secure.php.net/manual/en/swoole-process.write.php"}, {"name": "Swoole\\Redis\\Server::format", "synopsis": "", "usage": "public static ReturnType Swoole\\Redis\\Server::format ( string $type [, string $value ] )", "url": "https://secure.php.net/manual/en/swoole-redis-server.format.php"}, {"name": "Swoole\\Redis\\Server::setHandler", "synopsis": "", "usage": "public ReturnType Swoole\\Redis\\Server::setHandler ( string $command , string $callback [, string $number_of_string_param [, string $type_of_array_param ]] )", "url": "https://secure.php.net/manual/en/swoole-redis-server.sethandler.php"}, {"name": "Swoole\\Redis\\Server::start", "synopsis": "", "usage": "public ReturnType Swoole\\Redis\\Server::start ( void )", "url": "https://secure.php.net/manual/en/swoole-redis-server.start.php"}, {"name": "Swoole\\Serialize::pack", "synopsis": "Swoole provides a fast and high performance serialization module.", "usage": "public static ReturnType Swoole\\Serialize::pack ( string $data [, int $is_fast ] )", "url": "https://secure.php.net/manual/en/swoole-serialize.pack.php"}, {"name": "Swoole\\Serialize::unpack", "synopsis": "Unserialize the data.", "usage": "public static ReturnType Swoole\\Serialize::unpack ( string $data [, string $args ] )", "url": "https://secure.php.net/manual/en/swoole-serialize.unpack.php"}, {"name": "Swoole\\Server\\Port::__destruct", "synopsis": "", "usage": "public void Swoole\\Server\\Port::__destruct ( void )", "url": "https://secure.php.net/manual/en/swoole-server-port.destruct.php"}, {"name": "Swoole\\Server\\Port::on", "synopsis": "", "usage": "public ReturnType Swoole\\Server\\Port::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-server-port.on.php"}, {"name": "Swoole\\Server\\Port::set", "synopsis": "", "usage": "public void Swoole\\Server\\Port::set ( array $settings )", "url": "https://secure.php.net/manual/en/swoole-server-port.set.php"}, {"name": "Swoole\\Server::addlistener", "synopsis": "", "usage": "public void Swoole\\Server::addlistener ( string $host , integer $port , string $socket_type )", "url": "https://secure.php.net/manual/en/swoole-server.addlistener.php"}, {"name": "Swoole\\Server::addProcess", "synopsis": "", "usage": "public boolean Swoole\\Server::addProcess ( swoole_process $process )", "url": "https://secure.php.net/manual/en/swoole-server.addprocess.php"}, {"name": "Swoole\\Server::after", "synopsis": "", "usage": "public ReturnType Swoole\\Server::after ( integer $after_time_ms , callable $callback [, string $param ] )", "url": "https://secure.php.net/manual/en/swoole-server.after.php"}, {"name": "Swoole\\Server::bind", "synopsis": "", "usage": "public boolean Swoole\\Server::bind ( integer $fd , integer $uid )", "url": "https://secure.php.net/manual/en/swoole-server.bind.php"}, {"name": "Swoole\\Server::clearTimer", "synopsis": "Procedural style:", "usage": "public void Swoole\\Server::clearTimer ( integer $timer_id )", "url": "https://secure.php.net/manual/en/swoole-server.cleartimer.php"}, {"name": "Swoole\\Server::close", "synopsis": "", "usage": "public boolean Swoole\\Server::close ( integer $fd [, boolean $reset ] )", "url": "https://secure.php.net/manual/en/swoole-server.close.php"}, {"name": "Swoole\\Server::confirm", "synopsis": "", "usage": "public boolean Swoole\\Server::confirm ( integer $fd )", "url": "https://secure.php.net/manual/en/swoole-server.confirm.php"}, {"name": "Swoole\\Server::connection_info", "synopsis": "", "usage": "public array Swoole\\Server::connection_info ( integer $fd [, integer $reactor_id ] )", "url": "https://secure.php.net/manual/en/swoole-server.connection-info.php"}, {"name": "Swoole\\Server::connection_list", "synopsis": "", "usage": "public array Swoole\\Server::connection_list ( integer $start_fd [, integer $pagesize ] )", "url": "https://secure.php.net/manual/en/swoole-server.connection-list.php"}, {"name": "Swoole\\Server::defer", "synopsis": "", "usage": "public void Swoole\\Server::defer ( callable $callback )", "url": "https://secure.php.net/manual/en/swoole-server.defer.php"}, {"name": "Swoole\\Server::exist", "synopsis": "", "usage": "public boolean Swoole\\Server::exist ( integer $fd )", "url": "https://secure.php.net/manual/en/swoole-server.exist.php"}, {"name": "Swoole\\Server::finish", "synopsis": "", "usage": "public void Swoole\\Server::finish ( string $data )", "url": "https://secure.php.net/manual/en/swoole-server.finish.php"}, {"name": "Swoole\\Server::getClientInfo", "synopsis": "", "usage": "public ReturnType Swoole\\Server::getClientInfo ( integer $fd [, integer $reactor_id ] )", "url": "https://secure.php.net/manual/en/swoole-server.getclientinfo.php"}, {"name": "Swoole\\Server::getClientList", "synopsis": "", "usage": "public array Swoole\\Server::getClientList ( integer $start_fd [, integer $pagesize ] )", "url": "https://secure.php.net/manual/en/swoole-server.getclientlist.php"}, {"name": "Swoole\\Server::getLastError", "synopsis": "", "usage": "public integer Swoole\\Server::getLastError ( void )", "url": "https://secure.php.net/manual/en/swoole-server.getlasterror.php"}, {"name": "Swoole\\Server::heartbeat", "synopsis": "", "usage": "public mixed Swoole\\Server::heartbeat ( boolean $if_close_connection )", "url": "https://secure.php.net/manual/en/swoole-server.heartbeat.php"}, {"name": "Swoole\\Server::listen", "synopsis": "", "usage": "public boolean Swoole\\Server::listen ( string $host , integer $port , string $socket_type )", "url": "https://secure.php.net/manual/en/swoole-server.listen.php"}, {"name": "Swoole\\Server::on", "synopsis": "", "usage": "public void Swoole\\Server::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-server.on.php"}, {"name": "Swoole\\Server::pause", "synopsis": "", "usage": "public void Swoole\\Server::pause ( integer $fd )", "url": "https://secure.php.net/manual/en/swoole-server.pause.php"}, {"name": "Swoole\\Server::protect", "synopsis": "", "usage": "public void Swoole\\Server::protect ( integer $fd [, boolean $is_protected ] )", "url": "https://secure.php.net/manual/en/swoole-server.protect.php"}, {"name": "Swoole\\Server::reload", "synopsis": "", "usage": "public boolean Swoole\\Server::reload ( void )", "url": "https://secure.php.net/manual/en/swoole-server.reload.php"}, {"name": "Swoole\\Server::resume", "synopsis": "", "usage": "public void Swoole\\Server::resume ( integer $fd )", "url": "https://secure.php.net/manual/en/swoole-server.resume.php"}, {"name": "Swoole\\Server::send", "synopsis": "", "usage": "public boolean Swoole\\Server::send ( integer $fd , string $data [, integer $reactor_id ] )", "url": "https://secure.php.net/manual/en/swoole-server.send.php"}, {"name": "Swoole\\Server::sendfile", "synopsis": "", "usage": "public boolean Swoole\\Server::sendfile ( integer $fd , string $filename [, integer $offset ] )", "url": "https://secure.php.net/manual/en/swoole-server.sendfile.php"}, {"name": "Swoole\\Server::sendMessage", "synopsis": "", "usage": "public boolean Swoole\\Server::sendMessage ( integer $worker_id , string $data )", "url": "https://secure.php.net/manual/en/swoole-server.sendmessage.php"}, {"name": "Swoole\\Server::sendto", "synopsis": "", "usage": "public boolean Swoole\\Server::sendto ( string $ip , integer $port , string $data [, string $server_socket ] )", "url": "https://secure.php.net/manual/en/swoole-server.sendto.php"}, {"name": "Swoole\\Server::sendwait", "synopsis": "", "usage": "public boolean Swoole\\Server::sendwait ( integer $fd , string $data )", "url": "https://secure.php.net/manual/en/swoole-server.sendwait.php"}, {"name": "Swoole\\Server::set", "synopsis": "Set the runtime settings of the swoole server. The settings can be accessed by $server->setting when the swoole server has started.", "usage": "public ReturnType Swoole\\Server::set ( array $settings )", "url": "https://secure.php.net/manual/en/swoole-server.set.php"}, {"name": "Swoole\\Server::shutdown", "synopsis": "", "usage": "public void Swoole\\Server::shutdown ( void )", "url": "https://secure.php.net/manual/en/swoole-server.shutdown.php"}, {"name": "Swoole\\Server::start", "synopsis": "", "usage": "public void Swoole\\Server::start ( void )", "url": "https://secure.php.net/manual/en/swoole-server.start.php"}, {"name": "Swoole\\Server::stats", "synopsis": "", "usage": "public array Swoole\\Server::stats ( void )", "url": "https://secure.php.net/manual/en/swoole-server.stats.php"}, {"name": "Swoole\\Server::stop", "synopsis": "", "usage": "public boolean Swoole\\Server::stop ([ integer $worker_id ] )", "url": "https://secure.php.net/manual/en/swoole-server.stop.php"}, {"name": "Swoole\\Server::task", "synopsis": "", "usage": "public mixed Swoole\\Server::task ( string $data [, integer $dst_worker_id [, callable $callback ]] )", "url": "https://secure.php.net/manual/en/swoole-server.task.php"}, {"name": "Swoole\\Server::taskwait", "synopsis": "", "usage": "public void Swoole\\Server::taskwait ( string $data [, float $timeout [, integer $worker_id ]] )", "url": "https://secure.php.net/manual/en/swoole-server.taskwait.php"}, {"name": "Swoole\\Server::taskWaitMulti", "synopsis": "", "usage": "public void Swoole\\Server::taskWaitMulti ( array $tasks [, double $timeout_ms ] )", "url": "https://secure.php.net/manual/en/swoole-server.taskwaitmulti.php"}, {"name": "Swoole\\Server::tick", "synopsis": "", "usage": "public void Swoole\\Server::tick ( integer $interval_ms , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-server.tick.php"}, {"name": "Swoole\\Table::column", "synopsis": "", "usage": "public ReturnType Swoole\\Table::column ( string $name , string $type [, integer $size ] )", "url": "https://secure.php.net/manual/en/swoole-table.column.php"}, {"name": "Swoole\\Table::count", "synopsis": "", "usage": "public integer Swoole\\Table::count ( void )", "url": "https://secure.php.net/manual/en/swoole-table.count.php"}, {"name": "Swoole\\Table::create", "synopsis": "", "usage": "public void Swoole\\Table::create ( void )", "url": "https://secure.php.net/manual/en/swoole-table.create.php"}, {"name": "Swoole\\Table::current", "synopsis": "", "usage": "public array Swoole\\Table::current ( void )", "url": "https://secure.php.net/manual/en/swoole-table.current.php"}, {"name": "Swoole\\Table::decr", "synopsis": "", "usage": "public ReturnType Swoole\\Table::decr ( string $key , string $column [, integer $decrby ] )", "url": "https://secure.php.net/manual/en/swoole-table.decr.php"}, {"name": "Swoole\\Table::del", "synopsis": "", "usage": "public void Swoole\\Table::del ( string $key )", "url": "https://secure.php.net/manual/en/swoole-table.del.php"}, {"name": "Swoole\\Table::destroy", "synopsis": "", "usage": "public void Swoole\\Table::destroy ( void )", "url": "https://secure.php.net/manual/en/swoole-table.destroy.php"}, {"name": "Swoole\\Table::exist", "synopsis": "", "usage": "public boolean Swoole\\Table::exist ( string $key )", "url": "https://secure.php.net/manual/en/swoole-table.exist.php"}, {"name": "Swoole\\Table::get", "synopsis": "", "usage": "public integer Swoole\\Table::get ( string $row_key , string $column_key )", "url": "https://secure.php.net/manual/en/swoole-table.get.php"}, {"name": "Swoole\\Table::incr", "synopsis": "", "usage": "public void Swoole\\Table::incr ( string $key , string $column [, integer $incrby ] )", "url": "https://secure.php.net/manual/en/swoole-table.incr.php"}, {"name": "Swoole\\Table::key", "synopsis": "", "usage": "public string Swoole\\Table::key ( void )", "url": "https://secure.php.net/manual/en/swoole-table.key.php"}, {"name": "Swoole\\Table::next", "synopsis": "", "usage": "public ReturnType Swoole\\Table::next ( void )", "url": "https://secure.php.net/manual/en/swoole-table.next.php"}, {"name": "Swoole\\Table::rewind", "synopsis": "", "usage": "public void Swoole\\Table::rewind ( void )", "url": "https://secure.php.net/manual/en/swoole-table.rewind.php"}, {"name": "Swoole\\Table::set", "synopsis": "", "usage": "public VOID Swoole\\Table::set ( string $key , array $value )", "url": "https://secure.php.net/manual/en/swoole-table.set.php"}, {"name": "Swoole\\Table::valid", "synopsis": "", "usage": "public boolean Swoole\\Table::valid ( void )", "url": "https://secure.php.net/manual/en/swoole-table.valid.php"}, {"name": "Swoole\\Timer::after", "synopsis": "Trigger a callback function after a period of time.", "usage": "public static void Swoole\\Timer::after ( int $after_time_ms , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-timer.after.php"}, {"name": "Swoole\\Timer::clear", "synopsis": "Delete a timer by timer ID.", "usage": "public static void Swoole\\Timer::clear ( integer $timer_id )", "url": "https://secure.php.net/manual/en/swoole-timer.clear.php"}, {"name": "Swoole\\Timer::exists", "synopsis": "Check if a timer is existed.", "usage": "public static boolean Swoole\\Timer::exists ( integer $timer_id )", "url": "https://secure.php.net/manual/en/swoole-timer.exists.php"}, {"name": "Swoole\\Timer::tick", "synopsis": "", "usage": "public static void Swoole\\Timer::tick ( integer $interval_ms , callable $callback [, string $param ] )", "url": "https://secure.php.net/manual/en/swoole-timer.tick.php"}, {"name": "Swoole\\WebSocket\\Server::exist", "synopsis": "", "usage": "public boolean Swoole\\WebSocket\\Server::exist ( integer $fd )", "url": "https://secure.php.net/manual/en/swoole-websocket-server.exist.php"}, {"name": "Swoole\\WebSocket\\Server::on", "synopsis": "Register event callback function", "usage": "public ReturnType Swoole\\WebSocket\\Server::on ( string $event_name , callable $callback )", "url": "https://secure.php.net/manual/en/swoole-websocket-server.on.php"}, {"name": "Swoole\\WebSocket\\Server::pack", "synopsis": "", "usage": "public static binary Swoole\\WebSocket\\Server::pack ( string $data [, string $opcode [, string $finish [, string $mask ]]] )", "url": "https://secure.php.net/manual/en/swoole-websocket-server.pack.php"}, {"name": "Swoole\\WebSocket\\Server::push", "synopsis": "", "usage": "public void Swoole\\WebSocket\\Server::push ( string $fd , string $data [, string $opcode [, string $finish ]] )", "url": "https://secure.php.net/manual/en/swoole-websocket-server.push.php"}, {"name": "Swoole\\WebSocket\\Server::unpack", "synopsis": "", "usage": "public static string Swoole\\WebSocket\\Server::unpack ( binary $data )", "url": "https://secure.php.net/manual/en/swoole-websocket-server.unpack.php"}, {"name": "SyncEvent::__construct", "synopsis": "Constructs a named or unnamed event object.", "usage": "public SyncEvent::__construct ([ string $name [, bool $manual = FALSE [, bool $prefire = FALSE ]]] )", "url": "https://secure.php.net/manual/en/syncevent.construct.php"}, {"name": "SyncEvent::fire", "synopsis": "Fires/sets a SyncEvent object. Lets multiple threads through that are waiting if the event object was created with a manual value of TRUE.", "usage": "public bool SyncEvent::fire ( void )", "url": "https://secure.php.net/manual/en/syncevent.fire.php"}, {"name": "SyncEvent::reset", "synopsis": "Resets a SyncEvent object that has been fired/set. Only valid for manual event objects.", "usage": "public bool SyncEvent::reset ( void )", "url": "https://secure.php.net/manual/en/syncevent.reset.php"}, {"name": "SyncEvent::wait", "synopsis": "Waits for the SyncEvent object to be fired.", "usage": "public bool SyncEvent::wait ([ int $wait = -1 ] )", "url": "https://secure.php.net/manual/en/syncevent.wait.php"}, {"name": "SyncMutex::__construct", "synopsis": "Constructs a named or unnamed countable mutex.", "usage": "public SyncMutex::__construct ([ string $name ] )", "url": "https://secure.php.net/manual/en/syncmutex.construct.php"}, {"name": "SyncMutex::lock", "synopsis": "Obtains an exclusive lock on a SyncMutex object. If the lock is already acquired, then this increments an internal counter.", "usage": "public bool SyncMutex::lock ([ int $wait = -1 ] )", "url": "https://secure.php.net/manual/en/syncmutex.lock.php"}, {"name": "SyncMutex::unlock", "synopsis": "Decreases the internal counter of a SyncMutex object. When the internal counter reaches zero, the actual lock on the object is released.", "usage": "public bool SyncMutex::unlock ([ bool $all = FALSE ] )", "url": "https://secure.php.net/manual/en/syncmutex.unlock.php"}, {"name": "SyncReaderWriter::__construct", "synopsis": "Constructs a named or unnamed reader-writer object.", "usage": "public SyncReaderWriter::__construct ([ string $name [, bool $autounlock = TRUE ]] )", "url": "https://secure.php.net/manual/en/syncreaderwriter.construct.php"}, {"name": "SyncReaderWriter::readlock", "synopsis": "Obtains a read lock on a SyncReaderWriter object.", "usage": "public bool SyncReaderWriter::readlock ([ int $wait = -1 ] )", "url": "https://secure.php.net/manual/en/syncreaderwriter.readlock.php"}, {"name": "SyncReaderWriter::readunlock", "synopsis": "Releases a read lock on a SyncReaderWriter object.", "usage": "public bool SyncReaderWriter::readunlock ( void )", "url": "https://secure.php.net/manual/en/syncreaderwriter.readunlock.php"}, {"name": "SyncReaderWriter::writelock", "synopsis": "Obtains an exclusive write lock on a SyncReaderWriter object.", "usage": "public bool SyncReaderWriter::writelock ([ int $wait = -1 ] )", "url": "https://secure.php.net/manual/en/syncreaderwriter.writelock.php"}, {"name": "SyncReaderWriter::writeunlock", "synopsis": "Releases a write lock on a SyncReaderWriter object.", "usage": "public bool SyncReaderWriter::writeunlock ( void )", "url": "https://secure.php.net/manual/en/syncreaderwriter.writeunlock.php"}, {"name": "SyncSemaphore::__construct", "synopsis": "Constructs a named or unnamed semaphore.", "usage": "public SyncSemaphore::__construct ([ string $name [, int $initialval = 1 [, bool $autounlock = TRUE ]]] )", "url": "https://secure.php.net/manual/en/syncsemaphore.construct.php"}, {"name": "SyncSemaphore::lock", "synopsis": "Decreases the count of a SyncSemaphore object or waits until the semaphore becomes non-zero.", "usage": "public bool SyncSemaphore::lock ([ int $wait = -1 ] )", "url": "https://secure.php.net/manual/en/syncsemaphore.lock.php"}, {"name": "SyncSemaphore::unlock", "synopsis": "Increases the count of a SyncSemaphore object.", "usage": "public bool SyncSemaphore::unlock ([ int &$prevcount ] )", "url": "https://secure.php.net/manual/en/syncsemaphore.unlock.php"}, {"name": "SyncSharedMemory::__construct", "synopsis": "Constructs a named shared memory object.", "usage": "public SyncSharedMemory::__construct ( string $name , int $size )", "url": "https://secure.php.net/manual/en/syncsharedmemory.construct.php"}, {"name": "SyncSharedMemory::first", "synopsis": "Retrieves the system-wide first instance status of a SyncSharedMemory object.", "usage": "public bool SyncSharedMemory::first ( void )", "url": "https://secure.php.net/manual/en/syncsharedmemory.first.php"}, {"name": "SyncSharedMemory::read", "synopsis": "Copies data from named shared memory.", "usage": "public SyncSharedMemory::read ([ int $start = 0 [, int $length ]] )", "url": "https://secure.php.net/manual/en/syncsharedmemory.read.php"}, {"name": "SyncSharedMemory::size", "synopsis": "Retrieves the shared memory size of a SyncSharedMemory object.", "usage": "public bool SyncSharedMemory::size ( void )", "url": "https://secure.php.net/manual/en/syncsharedmemory.size.php"}, {"name": "SyncSharedMemory::write", "synopsis": "Copies data to named shared memory.", "usage": "public SyncSharedMemory::write ([ string $string [, int $start = 0 ]] )", "url": "https://secure.php.net/manual/en/syncsharedmemory.write.php"}, {"name": "KTaglib_Tag::getAlbum", "synopsis": "Returns the album string of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public string KTaglib_Tag::getAlbum ( void )", "url": "https://secure.php.net/manual/en/tag.getalbum.php"}, {"name": "KTaglib_Tag::getArtist", "synopsis": "Returns the artist string of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public string KTaglib_Tag::getArtist ( void )", "url": "https://secure.php.net/manual/en/tag.getartist.php"}, {"name": "KTaglib_Tag::getComment", "synopsis": "Returns the comment of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public string KTaglib_Tag::getComment ( void )", "url": "https://secure.php.net/manual/en/tag.getcomment.php"}, {"name": "KTaglib_Tag::getGenre", "synopsis": "Returns the genre of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public string KTaglib_Tag::getGenre ( void )", "url": "https://secure.php.net/manual/en/tag.getgenre.php"}, {"name": "KTaglib_Tag::getTitle", "synopsis": "Returns the title string of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public string KTaglib_Tag::getTitle ( void )", "url": "https://secure.php.net/manual/en/tag.gettitle.php"}, {"name": "KTaglib_Tag::getTrack", "synopsis": "Returns the track number of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public int KTaglib_Tag::getTrack ( void )", "url": "https://secure.php.net/manual/en/tag.gettrack.php"}, {"name": "KTaglib_Tag::getYear", "synopsis": "Returns the year of an ID3 tag. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public int KTaglib_Tag::getYear ( void )", "url": "https://secure.php.net/manual/en/tag.getyear.php"}, {"name": "KTaglib_Tag::isEmpty", "synopsis": "Returns true if the tag exists, but is empty. This method is implemented in ID3v1 and ID3v2 tags.", "usage": "public bool KTaglib_Tag::isEmpty ( void )", "url": "https://secure.php.net/manual/en/tag.isempty.php"}, {"name": "Thread::detach", "synopsis": "Detaches the referenced Thread from the calling context, dangerous!", "usage": "public void Thread::detach ( void )", "url": "https://secure.php.net/manual/en/thread.detach.php"}, {"name": "Thread::getCreatorId", "synopsis": "Will return the identity of the Thread that created the referenced Thread", "usage": "public int Thread::getCreatorId ( void )", "url": "https://secure.php.net/manual/en/thread.getcreatorid.php"}, {"name": "Thread::getCurrentThread", "synopsis": "Return a reference to the currently executing Thread", "usage": "public static Thread Thread::getCurrentThread ( void )", "url": "https://secure.php.net/manual/en/thread.getcurrentthread.php"}, {"name": "Thread::getCurrentThreadId", "synopsis": "Will return the identity of the currently executing Thread", "usage": "public static int Thread::getCurrentThreadId ( void )", "url": "https://secure.php.net/manual/en/thread.getcurrentthreadid.php"}, {"name": "Thread::getThreadId", "synopsis": "Will return the identity of the referenced Thread", "usage": "public int Thread::getThreadId ( void )", "url": "https://secure.php.net/manual/en/thread.getthreadid.php"}, {"name": "Thread::globally", "synopsis": "Will execute a Callable in the global scope", "usage": "public static mixed Thread::globally ( void )", "url": "https://secure.php.net/manual/en/thread.globally.php"}, {"name": "Thread::isJoined", "synopsis": "Tell if the referenced Thread has been joined", "usage": "public bool Thread::isJoined ( void )", "url": "https://secure.php.net/manual/en/thread.isjoined.php"}, {"name": "Threaded::isRunning", "synopsis": "Tell if the referenced object is executing", "usage": "public bool Threaded::isRunning ( void )", "url": "https://secure.php.net/manual/en/thread.isrunning.php"}, {"name": "Thread::isStarted", "synopsis": "Tell if the referenced Thread was started", "usage": "public bool Thread::isStarted ( void )", "url": "https://secure.php.net/manual/en/thread.isstarted.php"}, {"name": "Thread::join", "synopsis": "Causes the calling context to wait for the referenced Thread to finish executing", "usage": "public bool Thread::join ( void )", "url": "https://secure.php.net/manual/en/thread.join.php"}, {"name": "Thread::kill", "synopsis": "Forces the referenced Thread to terminate", "usage": "public void Thread::kill ( void )", "url": "https://secure.php.net/manual/en/thread.kill.php"}, {"name": "Thread::start", "synopsis": "Will start a new Thread to execute the implemented run method", "usage": "public bool Thread::start ([ int $options ] )", "url": "https://secure.php.net/manual/en/thread.start.php"}, {"name": "Threaded::chunk", "synopsis": "Fetches a chunk of the objects property table of the given size, optionally preserving keys", "usage": "public array Threaded::chunk ( int $size , bool $preserve )", "url": "https://secure.php.net/manual/en/threaded.chunk.php"}, {"name": "Threaded::count", "synopsis": "Returns the number of properties for this object", "usage": "public int Threaded::count ( void )", "url": "https://secure.php.net/manual/en/threaded.count.php"}, {"name": "Threaded::extend", "synopsis": "Makes thread safe standard class at runtime", "usage": "public bool Threaded::extend ( string $class )", "url": "https://secure.php.net/manual/en/threaded.extend.php"}, {"name": "Threaded::from", "synopsis": "Creates an anonymous Threaded object from closures", "usage": "public Threaded Threaded::from ( Closure $run [, Closure $construct [, array $args ]] )", "url": "https://secure.php.net/manual/en/threaded.from.php"}, {"name": "Threaded::run()", "synopsis": "Retrieves terminal error information from the referenced object", "usage": "public array Threaded::getTerminationInfo ( void )", "url": "https://secure.php.net/manual/en/threaded.getterminationinfo.php"}, {"name": "Threaded::isTerminated", "synopsis": "Tell if the referenced object was terminated during execution; suffered fatal errors, or threw uncaught exceptions", "usage": "public bool Threaded::isTerminated ( void )", "url": "https://secure.php.net/manual/en/threaded.isterminated.php"}, {"name": "Threaded::isWaiting", "synopsis": "Tell if the referenced object is waiting for notification", "usage": "public bool Threaded::isWaiting ( void )", "url": "https://secure.php.net/manual/en/threaded.iswaiting.php"}, {"name": "Threaded::synchronized()", "synopsis": "Lock the referenced objects property table", "usage": "public bool Threaded::lock ( void )", "url": "https://secure.php.net/manual/en/threaded.lock.php"}, {"name": "Threaded::merge", "synopsis": "Merges data into the current object", "usage": "public bool Threaded::merge ( mixed $from [, bool $overwrite ] )", "url": "https://secure.php.net/manual/en/threaded.merge.php"}, {"name": "Threaded::notify", "synopsis": "Send notification to the referenced object", "usage": "public bool Threaded::notify ( void )", "url": "https://secure.php.net/manual/en/threaded.notify.php"}, {"name": "Threaded::notifyOne", "synopsis": "Send notification to the referenced object. This unblocks at least one of the blocked threads (as opposed to unblocking all of them, as seen with Threaded::notify()).", "usage": "public bool Threaded::notifyOne ( void )", "url": "https://secure.php.net/manual/en/threaded.notifyone.php"}, {"name": "Threaded::pop", "synopsis": "Pops an item from the objects property table", "usage": "public bool Threaded::pop ( void )", "url": "https://secure.php.net/manual/en/threaded.pop.php"}, {"name": "Threaded::run", "synopsis": "The programmer should always implement the run method for objects that are intended for execution.", "usage": "public void Threaded::run ( void )", "url": "https://secure.php.net/manual/en/threaded.run.php"}, {"name": "Threaded::shift", "synopsis": "Shifts an item from the objects property table", "usage": "public mixed Threaded::shift ( void )", "url": "https://secure.php.net/manual/en/threaded.shift.php"}, {"name": "Threaded::synchronized", "synopsis": "Executes the block while retaining the referenced objects synchronization lock for the calling context", "usage": "public mixed Threaded::synchronized ( Closure $block [, mixed $... ] )", "url": "https://secure.php.net/manual/en/threaded.synchronized.php"}, {"name": "Threaded::synchronized()", "synopsis": "Unlock the referenced objects storage for the calling context", "usage": "public bool Threaded::unlock ( void )", "url": "https://secure.php.net/manual/en/threaded.unlock.php"}, {"name": "Threaded::wait", "synopsis": "Will cause the calling context to wait for notification from the referenced object", "usage": "public bool Threaded::wait ([ int $timeout ] )", "url": "https://secure.php.net/manual/en/threaded.wait.php"}, {"name": "Throwable::getCode", "synopsis": "Returns the error code associated with the thrown object.", "usage": "abstract public int Throwable::getCode ( void )", "url": "https://secure.php.net/manual/en/throwable.getcode.php"}, {"name": "Throwable::getFile", "synopsis": "Get the name of the file in which the exception was created.", "usage": "abstract public string Throwable::getFile ( void )", "url": "https://secure.php.net/manual/en/throwable.getfile.php"}, {"name": "Throwable::getLine", "synopsis": "Returns the line number where the thrown object was instantiated.", "usage": "abstract public int Throwable::getLine ( void )", "url": "https://secure.php.net/manual/en/throwable.getline.php"}, {"name": "Throwable::getMessage", "synopsis": "Returns the message associated with the thrown object.", "usage": "abstract public string Throwable::getMessage ( void )", "url": "https://secure.php.net/manual/en/throwable.getmessage.php"}, {"name": "Throwable::getPrevious", "synopsis": "Returns any previous Throwable (for example, one provided as the third parameter to Exception::__construct()).", "usage": "abstract public Throwable Throwable::getPrevious ( void )", "url": "https://secure.php.net/manual/en/throwable.getprevious.php"}, {"name": "Throwable::getTrace", "synopsis": "Returns the stack trace as an array.", "usage": "abstract public array Throwable::getTrace ( void )", "url": "https://secure.php.net/manual/en/throwable.gettrace.php"}, {"name": "Throwable::getTraceAsString", "synopsis": "", "usage": "abstract public string Throwable::getTraceAsString ( void )", "url": "https://secure.php.net/manual/en/throwable.gettraceasstring.php"}, {"name": "Throwable::__toString", "synopsis": "", "usage": "abstract public string Throwable::__toString ( void )", "url": "https://secure.php.net/manual/en/throwable.tostring.php"}, {"name": "tidy::body", "synopsis": "Procedural style", "usage": "tidyNode tidy::body ( void )", "url": "https://secure.php.net/manual/en/tidy.body.php"}, {"name": "tidy::cleanRepair", "synopsis": "Procedural style", "usage": "bool tidy::cleanRepair ( void )", "url": "https://secure.php.net/manual/en/tidy.cleanrepair.php"}, {"name": "tidy::__construct", "synopsis": "Constructs a new tidy object.", "usage": "tidy::__construct ([ string $filename [, mixed $config [, string $encoding [, bool $use_include_path ]]]] )", "url": "https://secure.php.net/manual/en/tidy.construct.php"}, {"name": "tidy::diagnose", "synopsis": "Procedural style", "usage": "bool tidy::diagnose ( void )", "url": "https://secure.php.net/manual/en/tidy.diagnose.php"}, {"name": "tidy::getConfig", "synopsis": "Procedural style", "usage": "array tidy::getConfig ( void )", "url": "https://secure.php.net/manual/en/tidy.getconfig.php"}, {"name": "tidy::getHtmlVer", "synopsis": "Procedural style", "usage": "int tidy::getHtmlVer ( void )", "url": "https://secure.php.net/manual/en/tidy.gethtmlver.php"}, {"name": "tidy::getOpt", "synopsis": "Procedural style", "usage": "mixed tidy::getOpt ( string $option )", "url": "https://secure.php.net/manual/en/tidy.getopt.php"}, {"name": "tidy::getOptDoc", "synopsis": "Procedural style", "usage": "string tidy::getOptDoc ( string $optname )", "url": "https://secure.php.net/manual/en/tidy.getoptdoc.php"}, {"name": "tidy::getRelease", "synopsis": "Procedural style", "usage": "string tidy::getRelease ( void )", "url": "https://secure.php.net/manual/en/tidy.getrelease.php"}, {"name": "tidy::getStatus", "synopsis": "Procedural style", "usage": "int tidy::getStatus ( void )", "url": "https://secure.php.net/manual/en/tidy.getstatus.php"}, {"name": "tidy::head", "synopsis": "Procedural style", "usage": "tidyNode tidy::head ( void )", "url": "https://secure.php.net/manual/en/tidy.head.php"}, {"name": "tidy::html", "synopsis": "Procedural style", "usage": "tidyNode tidy::html ( void )", "url": "https://secure.php.net/manual/en/tidy.html.php"}, {"name": "tidy::isXhtml", "synopsis": "Procedural style", "usage": "bool tidy::isXhtml ( void )", "url": "https://secure.php.net/manual/en/tidy.isxhtml.php"}, {"name": "tidy::isXml", "synopsis": "Procedural style", "usage": "bool tidy::isXml ( void )", "url": "https://secure.php.net/manual/en/tidy.isxml.php"}, {"name": "tidy::parseFile", "synopsis": "Procedural style", "usage": "bool tidy::parseFile ( string $filename [, mixed $config [, string $encoding [, bool $use_include_path = FALSE ]]] )", "url": "https://secure.php.net/manual/en/tidy.parsefile.php"}, {"name": "tidy::parseString", "synopsis": "Procedural style", "usage": "bool tidy::parseString ( string $input [, mixed $config [, string $encoding ]] )", "url": "https://secure.php.net/manual/en/tidy.parsestring.php"}, {"name": "tidy_get_error_buffer", "synopsis": "Returns warnings and errors which occurred parsing the specified document.", "usage": "string tidy_get_error_buffer ( tidy $tidy )", "url": "https://secure.php.net/manual/en/tidy.props.errorbuffer.php"}, {"name": "tidy::repairFile", "synopsis": "Procedural style", "usage": "string tidy::repairFile ( string $filename [, mixed $config [, string $encoding [, bool $use_include_path = FALSE ]]] )", "url": "https://secure.php.net/manual/en/tidy.repairfile.php"}, {"name": "tidy::repairString", "synopsis": "Procedural style", "usage": "string tidy::repairString ( string $data [, mixed $config [, string $encoding ]] )", "url": "https://secure.php.net/manual/en/tidy.repairstring.php"}, {"name": "tidy::root", "synopsis": "Procedural style", "usage": "tidyNode tidy::root ( void )", "url": "https://secure.php.net/manual/en/tidy.root.php"}, {"name": "tidyNode::getParent", "synopsis": "Returns the parent node of the current node.", "usage": "tidyNode tidyNode::getParent ( void )", "url": "https://secure.php.net/manual/en/tidynode.getparent.php"}, {"name": "tidyNode::hasChildren", "synopsis": "Tells if the node has children.", "usage": "bool tidyNode::hasChildren ( void )", "url": "https://secure.php.net/manual/en/tidynode.haschildren.php"}, {"name": "tidyNode::hasSiblings", "synopsis": "Tells if the node has siblings.", "usage": "bool tidyNode::hasSiblings ( void )", "url": "https://secure.php.net/manual/en/tidynode.hassiblings.php"}, {"name": "tidyNode::isAsp", "synopsis": "Tells whether the current node is ASP.", "usage": "bool tidyNode::isAsp ( void )", "url": "https://secure.php.net/manual/en/tidynode.isasp.php"}, {"name": "tidyNode::isComment", "synopsis": "Tells if the node is a comment.", "usage": "bool tidyNode::isComment ( void )", "url": "https://secure.php.net/manual/en/tidynode.iscomment.php"}, {"name": "tidyNode::isHtml", "synopsis": "Tells if the node is part of HTML document.", "usage": "bool tidyNode::isHtml ( void )", "url": "https://secure.php.net/manual/en/tidynode.ishtml.php"}, {"name": "tidyNode::isJste", "synopsis": "Tells if the node is JSTE.", "usage": "bool tidyNode::isJste ( void )", "url": "https://secure.php.net/manual/en/tidynode.isjste.php"}, {"name": "tidyNode::isPhp", "synopsis": "Tells if the node is PHP.", "usage": "bool tidyNode::isPhp ( void )", "url": "https://secure.php.net/manual/en/tidynode.isphp.php"}, {"name": "tidyNode::isText", "synopsis": "Tells if the node represents a text (without any markup).", "usage": "bool tidyNode::isText ( void )", "url": "https://secure.php.net/manual/en/tidynode.istext.php"}, {"name": "TokyoTyrant::add", "synopsis": "Adds to an int or double value. This increments the value by the given amount and returns the new value. If the key does not exist a new key is created with initial value of the increment parameter.", "usage": "public number TokyoTyrant::add ( string $key , number $increment [, int $type = 0 ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.add.php"}, {"name": "TokyoTyrant::connect", "synopsis": "Connects to a remote database", "usage": "public TokyoTyrant TokyoTyrant::connect ( string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]] )", "url": "https://secure.php.net/manual/en/tokyotyrant.connect.php"}, {"name": "TokyoTyrant::connectUri", "synopsis": "Connects to a database using an uri", "usage": "public TokyoTyrant TokyoTyrant::connectUri ( string $uri )", "url": "https://secure.php.net/manual/en/tokyotyrant.connecturi.php"}, {"name": "TokyoTyrant::__construct", "synopsis": "Constructs a new TokyoTyrant object and optionally connects to the database", "usage": "public TokyoTyrant::__construct ([ string $host [, int $port = TokyoTyrant::RDBDEF_PORT [, array $options ]]] )", "url": "https://secure.php.net/manual/en/tokyotyrant.construct.php"}, {"name": "TokyoTyrant::copy", "synopsis": "Makes a copy of the current database", "usage": "public TokyoTyrant TokyoTyrant::copy ( string $path )", "url": "https://secure.php.net/manual/en/tokyotyrant.copy.php"}, {"name": "TokyoTyrant::ext", "synopsis": "Executes a remote script extension.", "usage": "public string TokyoTyrant::ext ( string $name , int $options , string $key , string $value )", "url": "https://secure.php.net/manual/en/tokyotyrant.ext.php"}, {"name": "TokyoTyrant::fwmKeys", "synopsis": "Returns the forward matching keys from the database", "usage": "public array TokyoTyrant::fwmKeys ( string $prefix , int $max_recs )", "url": "https://secure.php.net/manual/en/tokyotyrant.fwmkeys.php"}, {"name": "TokyoTyrant::get", "synopsis": "This method is used to return a value or multiple values. This method accepts a string or an array as a value.", "usage": "public mixed TokyoTyrant::get ( mixed $keys )", "url": "https://secure.php.net/manual/en/tokyotyrant.get.php"}, {"name": "TokyoTyrant::getIterator", "synopsis": "Gets an iterator for iterating all keys / values in the database.", "usage": "public TokyoTyrantIterator TokyoTyrant::getIterator ( void )", "url": "https://secure.php.net/manual/en/tokyotyrant.getiterator.php"}, {"name": "TokyoTyrant::num", "synopsis": "Returns the number of records in the database", "usage": "public int TokyoTyrant::num ( void )", "url": "https://secure.php.net/manual/en/tokyotyrant.num.php"}, {"name": "TokyoTyrant::out", "synopsis": "Removes a record or multiple records. This method accepts a string for a single key or an array of keys for multiple records.", "usage": "public TokyoTyrant TokyoTyrant::out ( mixed $keys )", "url": "https://secure.php.net/manual/en/tokyotyrant.out.php"}, {"name": "TokyoTyrant::put", "synopsis": "Puts a key-value pair into the database or multiple key-value pairs. If keys is string then the second parameter value defines the value. The second parameter is mandatory if keys is a string. If the key exists the value will be replaced with new value.", "usage": "public TokyoTyrant TokyoTyrant::put ( mixed $keys [, string $value = NULL ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.put.php"}, {"name": "TokyoTyrant::putCat", "synopsis": "Appends a value into existing key or multiple values if keys is an array. The second parameter is mandatory if keys is a string. If the record does not exist a new record is created.", "usage": "public TokyoTyrant TokyoTyrant::putCat ( mixed $keys [, string $value ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.putcat.php"}, {"name": "TokyoTyrant::putKeep", "synopsis": "Puts a key-value pair into the database or multiple key-value pairs. If keys is string then the second parameter value defines the value. The second parameter is mandatory if keys is a string. If the key already exists this method throws an exception indicating that the records exists.", "usage": "public TokyoTyrant TokyoTyrant::putKeep ( mixed $keys [, string $value ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.putkeep.php"}, {"name": "TokyoTyrant::putNr", "synopsis": "Puts a key-value pair into the database or multiple key-value pairs. If keys is string then the second parameter value defines the value. The second parameter is mandatory if keys is a string. This method does not wait for the response from the server.", "usage": "public TokyoTyrant TokyoTyrant::putNr ( mixed $keys [, string $value = NULL ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.putnr.php"}, {"name": "TokyoTyrant::putShl", "synopsis": "Concatenate to a record and shift to left.", "usage": "public mixed TokyoTyrant::putShl ( string $key , string $value , int $width )", "url": "https://secure.php.net/manual/en/tokyotyrant.putshl.php"}, {"name": "TokyoTyrant::restore", "synopsis": "Restore the database from the update log.", "usage": "public mixed TokyoTyrant::restore ( string $log_dir , int $timestamp [, bool $check_consistency = TRUE ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.restore.php"}, {"name": "TokyoTyrant::setMaster", "synopsis": "Sets the replication master of the database", "usage": "public mixed TokyoTyrant::setMaster ( string $host , int $port , int $timestamp [, bool $check_consistency = TRUE ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.setmaster.php"}, {"name": "TokyoTyrant::size", "synopsis": "Returns the size of a value by key", "usage": "public int TokyoTyrant::size ( string $key )", "url": "https://secure.php.net/manual/en/tokyotyrant.size.php"}, {"name": "TokyoTyrant::stat", "synopsis": "Returns statistics of the remote database", "usage": "public array TokyoTyrant::stat ( void )", "url": "https://secure.php.net/manual/en/tokyotyrant.stat.php"}, {"name": "TokyoTyrant::sync", "synopsis": "Synchronizes the database on to the physical device", "usage": "public mixed TokyoTyrant::sync ( void )", "url": "https://secure.php.net/manual/en/tokyotyrant.sync.php"}, {"name": "TokyoTyrant::tune", "synopsis": "Tunes database connection options.", "usage": "public TokyoTyrant TokyoTyrant::tune ( float $timeout [, int $options = TokyoTyrant::RDBT_RECON ] )", "url": "https://secure.php.net/manual/en/tokyotyrant.tune.php"}, {"name": "TokyoTyrant::vanish", "synopsis": "Empties a remote database", "usage": "public mixed TokyoTyrant::vanish ( void )", "url": "https://secure.php.net/manual/en/tokyotyrant.vanish.php"}, {"name": "TokyoTyrantIterator::__construct", "synopsis": "Construct a new TokyoTyrantIterator object. One connection can have multiple iterators but it is not quaranteed that all items are traversed in that case. object parameter can be either an of instance TokyoTyrant or TokyoTyrantTable.", "usage": "public TokyoTyrantIterator::__construct ( mixed $object )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.construct.php"}, {"name": "TokyoTyrantIterator::current", "synopsis": "Returns the current value during iteration.", "usage": "public mixed TokyoTyrantIterator::current ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.current.php"}, {"name": "TokyoTyrantIterator::key", "synopsis": "Returns the current key.", "usage": "public mixed TokyoTyrantIterator::key ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.key.php"}, {"name": "TokyoTyrantIterator::next", "synopsis": "Move to next key during iteration and return it's value.", "usage": "public mixed TokyoTyrantIterator::next ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.next.php"}, {"name": "TokyoTyrantIterator::rewind", "synopsis": "Rewinds the iterator for new iteration. Called automatically at the beginning of foreach.", "usage": "public void TokyoTyrantIterator::rewind ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.rewind.php"}, {"name": "TokyoTyrantIterator::valid", "synopsis": "Checks whether the internal pointer points to valid element.", "usage": "public bool TokyoTyrantIterator::valid ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantiterator.valid.php"}, {"name": "TokyoTyrantQuery::addCond", "synopsis": "Adds a condition to the query. Condition can be something like: get all keys which value matches expr.", "usage": "public mixed TokyoTyrantQuery::addCond ( string $name , int $op , string $expr )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.addcond.php"}, {"name": "TokyoTyrantQuery::__construct", "synopsis": "Construct a new query object", "usage": "public TokyoTyrantQuery::__construct ( TokyoTyrantTable $table )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.construct.php"}, {"name": "TokyoTyrantQuery::count", "synopsis": "Returns a count of how many records a query returns.", "usage": "public int TokyoTyrantQuery::count ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.count.php"}, {"name": "TokyoTyrantQuery::current", "synopsis": "Returns the current element. Part of Iterator interface", "usage": "public array TokyoTyrantQuery::current ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.current.php"}, {"name": "TokyoTyrantQuery::hint", "synopsis": "Get the hint string of the query. The hint string contains information about an executed query and it could be compared to for example MySQL EXPLAIN statement.", "usage": "public string TokyoTyrantQuery::hint ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.hint.php"}, {"name": "TokyoTyrantQuery::key", "synopsis": "Returns the current key. Part of the Iterator interface", "usage": "public string TokyoTyrantQuery::key ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.key.php"}, {"name": "TokyoTyrantQuery::metaSearch", "synopsis": "Executes multiple queries on a database and returns matching records. The current object is always the left most object in the search.", "usage": "public array TokyoTyrantQuery::metaSearch ( array $queries , int $type )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.metasearch.php"}, {"name": "TokyoTyrantQuery::next", "synopsis": "Returns the next result in the resultset. Part of the Iterator interface.", "usage": "public array TokyoTyrantQuery::next ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.next.php"}, {"name": "TokyoTyrantQuery::out", "synopsis": "Removes all records that match the query. Works exactly like search but removes the records instead of returning them.", "usage": "public TokyoTyrantQuery TokyoTyrantQuery::out ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.out.php"}, {"name": "TokyoTyrantQuery::rewind", "synopsis": "Rewind the resultset and executes the query if it has not been executed. Part of the Iterator interface.", "usage": "public bool TokyoTyrantQuery::rewind ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.rewind.php"}, {"name": "TokyoTyrantQuery::search", "synopsis": "Executes a search on the table database. Returns an array of arrays containing the matching records. In the returned array the first level is the primary key of the data and the second level is the row data.", "usage": "public array TokyoTyrantQuery::search ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.search.php"}, {"name": "TokyoTyrantQuery::setLimit", "synopsis": "Set the maximum amount of records to return on a query.", "usage": "public mixed TokyoTyrantQuery::setLimit ([ int $max [, int $skip ]] )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.setlimit.php"}, {"name": "TokyoTyrantQuery::setOrder", "synopsis": "Sets the order of a query", "usage": "public mixed TokyoTyrantQuery::setOrder ( string $name , int $type )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.setorder.php"}, {"name": "TokyoTyrantQuery::valid", "synopsis": "Checks if the current item is valid. Part of the Iterator interface", "usage": "public bool TokyoTyrantQuery::valid ( void )", "url": "https://secure.php.net/manual/en/tokyotyrantquery.valid.php"}, {"name": "TokyoTyrantTable::add", "synopsis": "This method is not supported with table databases.", "usage": "public void TokyoTyrantTable::add ( string $key , mixed $increment [, string $type ] )", "url": "https://secure.php.net/manual/en/tokyotyranttable.add.php"}, {"name": "TokyoTyrantTable::genUid", "synopsis": "Generates an unique id inside the table database. In table databases rows are referenced using a numeric primary key.", "usage": "public int TokyoTyrantTable::genUid ( void )", "url": "https://secure.php.net/manual/en/tokyotyranttable.genuid.php"}, {"name": "TokyoTyrantTable::get", "synopsis": "Gets a row from table database. keys is a single integer for the primary key of the row or an array of integers for multiple rows.", "usage": "public array TokyoTyrantTable::get ( mixed $keys )", "url": "https://secure.php.net/manual/en/tokyotyranttable.get.php"}, {"name": "TokyoTyrantTable::getIterator", "synopsis": "Gets an iterator for iterating all keys / values in the database.", "usage": "public TokyoTyrantIterator TokyoTyrantTable::getIterator ( void )", "url": "https://secure.php.net/manual/en/tokyotyranttable.getiterator.php"}, {"name": "TokyoTyrantTable::getQuery", "synopsis": "Get a query object to execute searches on the database", "usage": "public TokyoTyrantQuery TokyoTyrantTable::getQuery ( void )", "url": "https://secure.php.net/manual/en/tokyotyranttable.getquery.php"}, {"name": "TokyoTyrantTable::out", "synopsis": "Removes records from a table database.", "usage": "public void TokyoTyrantTable::out ( mixed $keys )", "url": "https://secure.php.net/manual/en/tokyotyranttable.out.php"}, {"name": "TokyoTyrantTable::put", "synopsis": "Puts a new row into the database. This method parameters are key which is the primary key of the row, passing NULL will generate a new unique id. value is an array containing the row contents which is usually key value pairs.", "usage": "public int TokyoTyrantTable::put ( string $key , array $columns )", "url": "https://secure.php.net/manual/en/tokyotyranttable.put.php"}, {"name": "TokyoTyrantTable::putCat", "synopsis": "This method can be used to add new columns to existing records. Existing keys will be left unmodified but any new columns will be appended to the row. Passing null as key will generate a new row.", "usage": "public void TokyoTyrantTable::putCat ( string $key , array $columns )", "url": "https://secure.php.net/manual/en/tokyotyranttable.putcat.php"}, {"name": "TokyoTyrantTable::putKeep", "synopsis": "Puts a new record into the database. If the key already exists this method throws an exception indicating that the records exists.", "usage": "public void TokyoTyrantTable::putKeep ( string $key , array $columns )", "url": "https://secure.php.net/manual/en/tokyotyranttable.putkeep.php"}, {"name": "TokyoTyrantTable::putNr", "synopsis": "This method is not supported on table databases. Calling this method through TokyoTyrantTable is considered an error and an TokyoTyrantException will be thrown.", "usage": "public void TokyoTyrantTable::putNr ( mixed $keys [, string $value ] )", "url": "https://secure.php.net/manual/en/tokyotyranttable.putnr.php"}, {"name": "TokyoTyrantTable::putShl", "synopsis": "This method is not supported on table databases. Calling this method through TokyoTyrantTable is considered an error and an TokyoTyrantException will be thrown.", "usage": "public void TokyoTyrantTable::putShl ( string $key , string $value , int $width )", "url": "https://secure.php.net/manual/en/tokyotyranttable.putshl.php"}, {"name": "TokyoTyrantTable::setIndex", "synopsis": "Sets an index on a specified column. The index type is one of the TokyoTyrant::RDBIT_* constants. Passing TokyoTyrant::RDBIT_VOID removes the index.", "usage": "public mixed TokyoTyrantTable::setIndex ( string $column , int $type )", "url": "https://secure.php.net/manual/en/tokyotyranttable.setindex.php"}, {"name": "Transliterator::create", "synopsis": "Procedural style", "usage": "public static Transliterator Transliterator::create ( string $id [, int $direction ] )", "url": "https://secure.php.net/manual/en/transliterator.create.php"}, {"name": "Transliterator::createFromRules", "synopsis": "Procedural style", "usage": "public static Transliterator Transliterator::createFromRules ( string $rules [, string $direction ] )", "url": "https://secure.php.net/manual/en/transliterator.createfromrules.php"}, {"name": "Transliterator::createInverse", "synopsis": "Procedural style", "usage": "public Transliterator Transliterator::createInverse ( void )", "url": "https://secure.php.net/manual/en/transliterator.createinverse.php"}, {"name": "Transliterator::getErrorCode", "synopsis": "Procedural style", "usage": "public int Transliterator::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/transliterator.geterrorcode.php"}, {"name": "Transliterator::getErrorMessage", "synopsis": "Procedural style", "usage": "public string Transliterator::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/transliterator.geterrormessage.php"}, {"name": "Transliterator::listIDs", "synopsis": "Procedural style", "usage": "public static array Transliterator::listIDs ( void )", "url": "https://secure.php.net/manual/en/transliterator.listids.php"}, {"name": "Transliterator::transliterate", "synopsis": "Procedural style", "usage": "public string Transliterator::transliterate ( string $subject [, int $start [, int $end ]] )", "url": "https://secure.php.net/manual/en/transliterator.transliterate.php"}, {"name": "UConverter::__construct", "synopsis": "", "usage": "public UConverter::__construct ([ string $destination_encoding [, string $source_encoding ]] )", "url": "https://secure.php.net/manual/en/uconverter.construct.php"}, {"name": "UConverter::convert", "synopsis": "", "usage": "public string UConverter::convert ( string $str [, bool $reverse ] )", "url": "https://secure.php.net/manual/en/uconverter.convert.php"}, {"name": "UConverter::fromUCallback", "synopsis": "", "usage": "public mixed UConverter::fromUCallback ( int $reason , string $source , string $codePoint , int &$error )", "url": "https://secure.php.net/manual/en/uconverter.fromucallback.php"}, {"name": "UConverter::getAliases", "synopsis": "", "usage": "public static array UConverter::getAliases ( string $name )", "url": "https://secure.php.net/manual/en/uconverter.getaliases.php"}, {"name": "UConverter::getAvailable", "synopsis": "", "usage": "public static array UConverter::getAvailable ( void )", "url": "https://secure.php.net/manual/en/uconverter.getavailable.php"}, {"name": "UConverter::getDestinationEncoding", "synopsis": "", "usage": "public string UConverter::getDestinationEncoding ( void )", "url": "https://secure.php.net/manual/en/uconverter.getdestinationencoding.php"}, {"name": "UConverter::getDestinationType", "synopsis": "", "usage": "public int UConverter::getDestinationType ( void )", "url": "https://secure.php.net/manual/en/uconverter.getdestinationtype.php"}, {"name": "UConverter::getErrorCode", "synopsis": "", "usage": "public int UConverter::getErrorCode ( void )", "url": "https://secure.php.net/manual/en/uconverter.geterrorcode.php"}, {"name": "UConverter::getErrorMessage", "synopsis": "", "usage": "public string UConverter::getErrorMessage ( void )", "url": "https://secure.php.net/manual/en/uconverter.geterrormessage.php"}, {"name": "UConverter::getSourceEncoding", "synopsis": "", "usage": "public string UConverter::getSourceEncoding ( void )", "url": "https://secure.php.net/manual/en/uconverter.getsourceencoding.php"}, {"name": "UConverter::getSourceType", "synopsis": "", "usage": "public int UConverter::getSourceType ( void )", "url": "https://secure.php.net/manual/en/uconverter.getsourcetype.php"}, {"name": "UConverter::getStandards", "synopsis": "", "usage": "public static array UConverter::getStandards ( void )", "url": "https://secure.php.net/manual/en/uconverter.getstandards.php"}, {"name": "UConverter::getSubstChars", "synopsis": "", "usage": "public string UConverter::getSubstChars ( void )", "url": "https://secure.php.net/manual/en/uconverter.getsubstchars.php"}, {"name": "UConverter::reasonText", "synopsis": "", "usage": "public static string UConverter::reasonText ([ int $reason ] )", "url": "https://secure.php.net/manual/en/uconverter.reasontext.php"}, {"name": "UConverter::setDestinationEncoding", "synopsis": "", "usage": "public void UConverter::setDestinationEncoding ( string $encoding )", "url": "https://secure.php.net/manual/en/uconverter.setdestinationencoding.php"}, {"name": "UConverter::setSourceEncoding", "synopsis": "", "usage": "public void UConverter::setSourceEncoding ( string $encoding )", "url": "https://secure.php.net/manual/en/uconverter.setsourceencoding.php"}, {"name": "UConverter::setSubstChars", "synopsis": "", "usage": "public void UConverter::setSubstChars ( string $chars )", "url": "https://secure.php.net/manual/en/uconverter.setsubstchars.php"}, {"name": "UConverter::toUCallback", "synopsis": "", "usage": "public mixed UConverter::toUCallback ( int $reason , string $source , string $codeUnits , int &$error )", "url": "https://secure.php.net/manual/en/uconverter.toucallback.php"}, {"name": "UConverter::transcode", "synopsis": "", "usage": "public static string UConverter::transcode ( string $str , string $toEncoding , string $fromEncoding [, array $options ] )", "url": "https://secure.php.net/manual/en/uconverter.transcode.php"}, {"name": "UI\\Area::onDraw", "synopsis": "Shall be invoked when this Area requires redrawing", "usage": "protected UI\\Area::onDraw ( UI\\Draw\\Pen $pen , UI\\Size $areaSize , UI\\Point $clipPoint , UI\\Size $clipSize )", "url": "https://secure.php.net/manual/en/ui-area.ondraw.php"}, {"name": "UI\\Area::onKey", "synopsis": "Shall be executed on key events", "usage": "protected UI\\Area::onKey ( string $key , int $ext , int $flags )", "url": "https://secure.php.net/manual/en/ui-area.onkey.php"}, {"name": "UI\\Area::onMouse", "synopsis": "Shall be executed on mouse events", "usage": "protected UI\\Area::onMouse ( UI\\Point $areaPoint , UI\\Size $areaSize , int $flags )", "url": "https://secure.php.net/manual/en/ui-area.onmouse.php"}, {"name": "UI\\Area::redraw", "synopsis": "Requests that this Area is redrawn", "usage": "public UI\\Area::redraw ( void )", "url": "https://secure.php.net/manual/en/ui-area.redraw.php"}, {"name": "UI\\Area::scrollTo", "synopsis": "Scroll this Area", "usage": "public UI\\Area::scrollTo ( UI\\Point $point , UI\\Size $size )", "url": "https://secure.php.net/manual/en/ui-area.scrollto.php"}, {"name": "UI\\Area::setSize", "synopsis": "Sets the size of this Area", "usage": "public UI\\Area::setSize ( UI\\Size $size )", "url": "https://secure.php.net/manual/en/ui-area.setsize.php"}, {"name": "UI\\Control::destroy", "synopsis": "Shall destroy this Control", "usage": "public UI\\Control::destroy ( void )", "url": "https://secure.php.net/manual/en/ui-control.destroy.php"}, {"name": "UI\\Control::disable", "synopsis": "Shall disable this Control", "usage": "public UI\\Control::disable ( void )", "url": "https://secure.php.net/manual/en/ui-control.disable.php"}, {"name": "UI\\Control::enable", "synopsis": "Shall enable this Control", "usage": "public UI\\Control::enable ( void )", "url": "https://secure.php.net/manual/en/ui-control.enable.php"}, {"name": "UI\\Control::getParent", "synopsis": "Shall return the parent Control", "usage": "public UI\\Control UI\\Control::getParent ( void )", "url": "https://secure.php.net/manual/en/ui-control.getparent.php"}, {"name": "UI\\Control::getTopLevel", "synopsis": "", "usage": "public int UI\\Control::getTopLevel ( void )", "url": "https://secure.php.net/manual/en/ui-control.gettoplevel.php"}, {"name": "UI\\Control::hide", "synopsis": "Shall hide this Control", "usage": "public UI\\Control::hide ( void )", "url": "https://secure.php.net/manual/en/ui-control.hide.php"}, {"name": "UI\\Control::isEnabled", "synopsis": "Shall detect if this Control is enabled", "usage": "public bool UI\\Control::isEnabled ( void )", "url": "https://secure.php.net/manual/en/ui-control.isenabled.php"}, {"name": "UI\\Control::isVisible", "synopsis": "Shall detect if this Control is visible", "usage": "public bool UI\\Control::isVisible ( void )", "url": "https://secure.php.net/manual/en/ui-control.isvisible.php"}, {"name": "UI\\Control::setParent", "synopsis": "Shall set the parent Control of this Control", "usage": "public UI\\Control::setParent ( UI\\Control $parent )", "url": "https://secure.php.net/manual/en/ui-control.setparent.php"}, {"name": "UI\\Control::show", "synopsis": "Shall show this Control", "usage": "public UI\\Control::show ( void )", "url": "https://secure.php.net/manual/en/ui-control.show.php"}, {"name": "UI\\Controls\\Box::append", "synopsis": "Shall append the given control to this Box", "usage": "public int UI\\Controls\\Box::append ( Control $control [, bool $stretchy = FALSE ] )", "url": "https://secure.php.net/manual/en/ui-controls-box.append.php"}, {"name": "UI\\Controls\\Box::delete", "synopsis": "Shall delete the control at the given index from this Box", "usage": "public bool UI\\Controls\\Box::delete ( int $index )", "url": "https://secure.php.net/manual/en/ui-controls-box.delete.php"}, {"name": "UI\\Controls\\Box::getOrientation", "synopsis": "Shall retrieve the orientation of this Box", "usage": "public int UI\\Controls\\Box::getOrientation ( void )", "url": "https://secure.php.net/manual/en/ui-controls-box.getorientation.php"}, {"name": "UI\\Controls\\Box::isPadded", "synopsis": "Shall detect if padding is enabled on this Box", "usage": "public bool UI\\Controls\\Box::isPadded ( void )", "url": "https://secure.php.net/manual/en/ui-controls-box.ispadded.php"}, {"name": "UI\\Controls\\Box::setPadded", "synopsis": "Shall enable or disable padding on this Box", "usage": "public UI\\Controls\\Box::setPadded ( bool $padded )", "url": "https://secure.php.net/manual/en/ui-controls-box.setpadded.php"}, {"name": "UI\\Controls\\Button::getText", "synopsis": "Shall retrieve the text (label) for this Button", "usage": "public string UI\\Controls\\Button::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-button.gettext.php"}, {"name": "UI\\Controls\\Button::onClick", "synopsis": "Shall be executed when this Button is clicked", "usage": "protected UI\\Controls\\Button::onClick ( void )", "url": "https://secure.php.net/manual/en/ui-controls-button.onclick.php"}, {"name": "UI\\Controls\\Button::setText", "synopsis": "Shall set the text (label) for this Button", "usage": "public UI\\Controls\\Button::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-button.settext.php"}, {"name": "UI\\Controls\\Check::getText", "synopsis": "Shall return the text (label) for this Check", "usage": "public string UI\\Controls\\Check::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-check.gettext.php"}, {"name": "UI\\Controls\\Check::isChecked", "synopsis": "Shall detect the status of this Check", "usage": "public bool UI\\Controls\\Check::isChecked ( void )", "url": "https://secure.php.net/manual/en/ui-controls-check.ischecked.php"}, {"name": "UI\\Controls\\Check::onToggle", "synopsis": "Shall be executed when the status of this Check is changed", "usage": "protected UI\\Controls\\Check::onToggle ( void )", "url": "https://secure.php.net/manual/en/ui-controls-check.ontoggle.php"}, {"name": "UI\\Controls\\Check::setChecked", "synopsis": "Shall change the status of this Check", "usage": "public UI\\Controls\\Check::setChecked ( bool $checked )", "url": "https://secure.php.net/manual/en/ui-controls-check.setchecked.php"}, {"name": "UI\\Controls\\Check::setText", "synopsis": "Shall set the text (label) for this Check", "usage": "public UI\\Controls\\Check::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-check.settext.php"}, {"name": "UI\\Controls\\ColorButton::getColor", "synopsis": "Shall retrieve the currently selected Color", "usage": "public UI\\Color UI\\Controls\\ColorButton::getColor ( void )", "url": "https://secure.php.net/manual/en/ui-controls-colorbutton.getcolor.php"}, {"name": "UI\\Controls\\ColorButton::onChange", "synopsis": "Shall be executed when the selected Color is changed", "usage": "protected UI\\Controls\\ColorButton::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-colorbutton.onchange.php"}, {"name": "UI\\Controls\\ColorButton::setColor", "synopsis": "Shall set the currently selected Color", "usage": "public UI\\Controls\\ColorButton::setColor ( UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/ui-controls-colorbutton.setcolor.php"}, {"name": "UI\\Controls\\Combo::append", "synopsis": "Append an option to this Combo", "usage": "public UI\\Controls\\Combo::append ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-combo.append.php"}, {"name": "UI\\Controls\\Combo::getSelected", "synopsis": "Shall retrieve the index of the option selected in this Combo", "usage": "public int UI\\Controls\\Combo::getSelected ( void )", "url": "https://secure.php.net/manual/en/ui-controls-combo.getselected.php"}, {"name": "UI\\Controls\\Combo::onSelected", "synopsis": "Shall be executed when an option is selected in this Combo", "usage": "protected UI\\Controls\\Combo::onSelected ( void )", "url": "https://secure.php.net/manual/en/ui-controls-combo.onselected.php"}, {"name": "UI\\Controls\\Combo::setSelected", "synopsis": "Shall set the currently selected option in this Combo", "usage": "public UI\\Controls\\Combo::setSelected ( int $index )", "url": "https://secure.php.net/manual/en/ui-controls-combo.setselected.php"}, {"name": "UI\\Controls\\EditableCombo::append", "synopsis": "Shall append a new option to this Editable Combo", "usage": "public UI\\Controls\\EditableCombo::append ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-editablecombo.append.php"}, {"name": "UI\\Controls\\EditableCombo::getText", "synopsis": "Get the value of the currently selected option in this Editable Combo", "usage": "public string UI\\Controls\\EditableCombo::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-editablecombo.gettext.php"}, {"name": "UI\\Controls\\EditableCombo::onChange", "synopsis": "Shall be executed when the value of this Editable Combobox changes", "usage": "protected UI\\Controls\\EditableCombo::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-editablecombo.onchange.php"}, {"name": "UI\\Controls\\EditableCombo::setText", "synopsis": "Shall set the text of the currently selected option in this Editable Combo", "usage": "public UI\\Controls\\EditableCombo::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-editablecombo.settext.php"}, {"name": "UI\\Controls\\Entry::getText", "synopsis": "Shall return the current text from this Entry", "usage": "public string UI\\Controls\\Entry::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-entry.gettext.php"}, {"name": "UI\\Controls\\Entry::isReadOnly", "synopsis": "Shall detect if this Entry is read only", "usage": "public bool UI\\Controls\\Entry::isReadOnly ( void )", "url": "https://secure.php.net/manual/en/ui-controls-entry.isreadonly.php"}, {"name": "UI\\Controls\\Entry::onChange", "synopsis": "Shall be executed when the text in this Entry changes", "usage": "protected UI\\Controls\\Entry::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-entry.onchange.php"}, {"name": "UI\\Controls\\Entry::setReadOnly", "synopsis": "Shall enable or disable read only for this Entry", "usage": "public UI\\Controls\\Entry::setReadOnly ( bool $readOnly )", "url": "https://secure.php.net/manual/en/ui-controls-entry.setreadonly.php"}, {"name": "UI\\Controls\\Entry::setText", "synopsis": "Shall set the text for this Entry", "usage": "public UI\\Controls\\Entry::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-entry.settext.php"}, {"name": "UI\\Controls\\Form::append", "synopsis": "Shall append the control to the form, and set the label", "usage": "public int UI\\Controls\\Form::append ( string $label , UI\\Control $control [, bool $stretchy = FALSE ] )", "url": "https://secure.php.net/manual/en/ui-controls-form.append.php"}, {"name": "UI\\Controls\\Form::delete", "synopsis": "Shall delete the control at the given index in this Form", "usage": "public bool UI\\Controls\\Form::delete ( int $index )", "url": "https://secure.php.net/manual/en/ui-controls-form.delete.php"}, {"name": "UI\\Controls\\Form::isPadded", "synopsis": "Shall detect if padding is enabled on this Form", "usage": "public bool UI\\Controls\\Form::isPadded ( void )", "url": "https://secure.php.net/manual/en/ui-controls-form.ispadded.php"}, {"name": "UI\\Controls\\Form::setPadded", "synopsis": "Shall enable or disable padding on this Form", "usage": "public UI\\Controls\\Form::setPadded ( bool $padded )", "url": "https://secure.php.net/manual/en/ui-controls-form.setpadded.php"}, {"name": "UI\\Controls\\Grid::append", "synopsis": "", "usage": "public UI\\Controls\\Grid::append ( UI\\Control $control , int $left , int $top , int $xspan , int $yspan , bool $hexpand , int $halign , bool $vexpand , int $valign )", "url": "https://secure.php.net/manual/en/ui-controls-grid.append.php"}, {"name": "UI\\Controls\\Grid::isPadded", "synopsis": "Shall detect if padding is enabled on this Grid", "usage": "public bool UI\\Controls\\Grid::isPadded ( void )", "url": "https://secure.php.net/manual/en/ui-controls-grid.ispadded.php"}, {"name": "UI\\Controls\\Grid::setPadded", "synopsis": "Shall enable or disable padding for this Grid", "usage": "public UI\\Controls\\Grid::setPadded ( bool $padding )", "url": "https://secure.php.net/manual/en/ui-controls-grid.setpadded.php"}, {"name": "UI\\Controls\\Group::append", "synopsis": "Shall append a control to this Group", "usage": "public UI\\Controls\\Group::append ( UI\\Control $control )", "url": "https://secure.php.net/manual/en/ui-controls-group.append.php"}, {"name": "UI\\Controls\\Group::getTitle", "synopsis": "Shall return the current title for this Group", "usage": "public string UI\\Controls\\Group::getTitle ( void )", "url": "https://secure.php.net/manual/en/ui-controls-group.gettitle.php"}, {"name": "UI\\Controls\\Group::hasMargin", "synopsis": "Shall detect if this Group has a margin", "usage": "public bool UI\\Controls\\Group::hasMargin ( void )", "url": "https://secure.php.net/manual/en/ui-controls-group.hasmargin.php"}, {"name": "UI\\Controls\\Group::setMargin", "synopsis": "Shall enable or disable margins for this Group", "usage": "public UI\\Controls\\Group::setMargin ( bool $margin )", "url": "https://secure.php.net/manual/en/ui-controls-group.setmargin.php"}, {"name": "UI\\Controls\\Group::setTitle", "synopsis": "Shall set the title for this Group", "usage": "public UI\\Controls\\Group::setTitle ( string $title )", "url": "https://secure.php.net/manual/en/ui-controls-group.settitle.php"}, {"name": "UI\\Controls\\Label::getText", "synopsis": "Shall return the current text for this Label", "usage": "public string UI\\Controls\\Label::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-label.gettext.php"}, {"name": "UI\\Controls\\Label::setText", "synopsis": "Shall set the text for this Label", "usage": "public UI\\Controls\\Label::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-label.settext.php"}, {"name": "UI\\Controls\\MultilineEntry::append", "synopsis": "Shall append the given text to the text in this Multiline Entry", "usage": "public UI\\Controls\\MultilineEntry::append ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.append.php"}, {"name": "UI\\Controls\\MultilineEntry::getText", "synopsis": "Shall return the text in this Multiline Entry", "usage": "public string UI\\Controls\\MultilineEntry::getText ( void )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.gettext.php"}, {"name": "UI\\Controls\\MultilineEntry::isReadOnly", "synopsis": "Shall detect if this Multiline Entry is read only", "usage": "public bool UI\\Controls\\MultilineEntry::isReadOnly ( void )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.isreadonly.php"}, {"name": "UI\\Controls\\MultilineEntry::onChange", "synopsis": "Shall be executed when the text in this Multiline Entry is changed", "usage": "protected UI\\Controls\\MultilineEntry::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.onchange.php"}, {"name": "UI\\Controls\\MultilineEntry::setReadOnly", "synopsis": "Shall enable or disable read only on this Multiline Entry", "usage": "public UI\\Controls\\MultilineEntry::setReadOnly ( bool $readOnly )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.setreadonly.php"}, {"name": "UI\\Controls\\MultilineEntry::setText", "synopsis": "Shall set the text in this Multiline Entry", "usage": "public UI\\Controls\\MultilineEntry::setText ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-multilineentry.settext.php"}, {"name": "UI\\Controls\\Progress::getValue", "synopsis": "Shall retrieve the current value of this Progress bar", "usage": "public int UI\\Controls\\Progress::getValue ( void )", "url": "https://secure.php.net/manual/en/ui-controls-progress.getvalue.php"}, {"name": "UI\\Controls\\Progress::setValue", "synopsis": "Shall set the value for this Progress bar", "usage": "public UI\\Controls\\Progress::setValue ( int $value )", "url": "https://secure.php.net/manual/en/ui-controls-progress.setvalue.php"}, {"name": "UI\\Controls\\Radio::append", "synopsis": "Shall append a new option to this Radio", "usage": "public UI\\Controls\\Radio::append ( string $text )", "url": "https://secure.php.net/manual/en/ui-controls-radio.append.php"}, {"name": "UI\\Controls\\Radio::getSelected", "synopsis": "Shall retrieve the index of the currently selected option in this Radio", "usage": "public int UI\\Controls\\Radio::getSelected ( void )", "url": "https://secure.php.net/manual/en/ui-controls-radio.getselected.php"}, {"name": "UI\\Controls\\Radio::onSelected", "synopsis": "Shall be executed when the option selected in this Radio changes", "usage": "protected UI\\Controls\\Radio::onSelected ( void )", "url": "https://secure.php.net/manual/en/ui-controls-radio.onselected.php"}, {"name": "UI\\Controls\\Radio::setSelected", "synopsis": "Shall set the currently selected option in this Radio", "usage": "public UI\\Controls\\Radio::setSelected ( int $index )", "url": "https://secure.php.net/manual/en/ui-controls-radio.setselected.php"}, {"name": "UI\\Controls\\Slider::getValue", "synopsis": "Get the value from this Slider", "usage": "public int UI\\Controls\\Slider::getValue ( void )", "url": "https://secure.php.net/manual/en/ui-controls-slider.getvalue.php"}, {"name": "UI\\Controls\\Slider::onChange", "synopsis": "Shall be executed when the value of this Slider changes", "usage": "protected UI\\Controls\\Slider::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-slider.onchange.php"}, {"name": "UI\\Controls\\Slider::setValue", "synopsis": "Shall set the value for this Slider", "usage": "public UI\\Controls\\Slider::setValue ( int $value )", "url": "https://secure.php.net/manual/en/ui-controls-slider.setvalue.php"}, {"name": "UI\\Controls\\Spin::getValue", "synopsis": "Get the value in this Spin", "usage": "public int UI\\Controls\\Spin::getValue ( void )", "url": "https://secure.php.net/manual/en/ui-controls-spin.getvalue.php"}, {"name": "UI\\Controls\\Spin::onChange", "synopsis": "Shall be executed when the value in this Spin changes", "usage": "protected UI\\Controls\\Spin::onChange ( void )", "url": "https://secure.php.net/manual/en/ui-controls-spin.onchange.php"}, {"name": "UI\\Controls\\Spin::setValue", "synopsis": "Set the value in this Spin", "usage": "public UI\\Controls\\Spin::setValue ( int $value )", "url": "https://secure.php.net/manual/en/ui-controls-spin.setvalue.php"}, {"name": "UI\\Controls\\Tab::append", "synopsis": "Append a new page to this Tab", "usage": "public int UI\\Controls\\Tab::append ( string $name , UI\\Control $control )", "url": "https://secure.php.net/manual/en/ui-controls-tab.append.php"}, {"name": "UI\\Controls\\Tab::delete", "synopsis": "Shall remove the selected page from this Tab", "usage": "public bool UI\\Controls\\Tab::delete ( int $index )", "url": "https://secure.php.net/manual/en/ui-controls-tab.delete.php"}, {"name": "UI\\Controls\\Tab::hasMargin", "synopsis": "Shall detect if the given page has a margin.", "usage": "public bool UI\\Controls\\Tab::hasMargin ( int $page )", "url": "https://secure.php.net/manual/en/ui-controls-tab.hasmargin.php"}, {"name": "UI\\Controls\\Tab::insertAt", "synopsis": "Shall insert a new page into this Tab", "usage": "public UI\\Controls\\Tab::insertAt ( string $name , int $page , UI\\Control $control )", "url": "https://secure.php.net/manual/en/ui-controls-tab.insertat.php"}, {"name": "UI\\Controls\\Tab::pages", "synopsis": "Shall return the number of pages in this Tab", "usage": "public int UI\\Controls\\Tab::pages ( void )", "url": "https://secure.php.net/manual/en/ui-controls-tab.pages.php"}, {"name": "UI\\Controls\\Tab::setMargin", "synopsis": "Shall enable or disable margins on the selected page", "usage": "public UI\\Controls\\Tab::setMargin ( int $page , bool $margin )", "url": "https://secure.php.net/manual/en/ui-controls-tab.setmargin.php"}, {"name": "UI\\Draw\\Brush\\Gradient::addStop", "synopsis": "Shall at a stop of the given color at the given position", "usage": "public int UI\\Draw\\Brush\\Gradient::addStop ( float $position , UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/ui-draw-brush-gradient.addstop.php"}, {"name": "UI\\Draw\\Brush\\Gradient::delStop", "synopsis": "", "usage": "public int UI\\Draw\\Brush\\Gradient::delStop ( int $index )", "url": "https://secure.php.net/manual/en/ui-draw-brush-gradient.delstop.php"}, {"name": "UI\\Draw\\Brush\\Gradient::setStop", "synopsis": "", "usage": "public bool UI\\Draw\\Brush\\Gradient::setStop ( int $index , float $position , UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/ui-draw-brush-gradient.setstop.php"}, {"name": "UI\\Draw\\Brush::getColor", "synopsis": "Shall return a UI\\Draw\\Color for this brush", "usage": "public UI\\Draw\\Color UI\\Draw\\Brush::getColor ( void )", "url": "https://secure.php.net/manual/en/ui-draw-brush.getcolor.php"}, {"name": "UI\\Draw\\Brush::setColor", "synopsis": "Shall set the color of this brush to the color provided", "usage": "public void UI\\Draw\\Brush::setColor ( UI\\Draw\\Color $color )", "url": "https://secure.php.net/manual/en/ui-draw-brush.setcolor.php"}, {"name": "UI\\Draw\\Color::getChannel", "synopsis": "Shall retrieve the value for a channel", "usage": "public float UI\\Draw\\Color::getChannel ( int $channel )", "url": "https://secure.php.net/manual/en/ui-draw-color.getchannel.php"}, {"name": "UI\\Draw\\Color::setChannel", "synopsis": "Shall set the selected channel to the given value", "usage": "public void UI\\Draw\\Color::setChannel ( int $channel , float $value )", "url": "https://secure.php.net/manual/en/ui-draw-color.setchannel.php"}, {"name": "UI\\Draw\\Matrix::invert", "synopsis": "Shall invert this matrix", "usage": "public UI\\Draw\\Matrix::invert ( void )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.invert.php"}, {"name": "UI\\Draw\\Matrix::isInvertible", "synopsis": "Shall detect if this Matrix may be inverted", "usage": "public bool UI\\Draw\\Matrix::isInvertible ( void )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.isinvertible.php"}, {"name": "UI\\Draw\\Matrix::multiply", "synopsis": "Shall multiply this matrix with the given matrix", "usage": "public UI\\Draw\\Matrix UI\\Draw\\Matrix::multiply ( UI\\Draw\\Matrix $matrix )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.multiply.php"}, {"name": "UI\\Draw\\Matrix::rotate", "synopsis": "Shall rotate this Matrix", "usage": "public UI\\Draw\\Matrix::rotate ( UI\\Point $point , float $amount )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.rotate.php"}, {"name": "UI\\Draw\\Matrix::scale", "synopsis": "Shall scale this Matrix", "usage": "public UI\\Draw\\Matrix::scale ( UI\\Point $center , UI\\Point $point )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.scale.php"}, {"name": "UI\\Draw\\Matrix::skew", "synopsis": "Shall skew this Matrix", "usage": "public UI\\Draw\\Matrix::skew ( UI\\Point $point , UI\\Point $amount )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.skew.php"}, {"name": "UI\\Draw\\Matrix::translate", "synopsis": "Shall translate this Matrix", "usage": "public UI\\Draw\\Matrix::translate ( UI\\Point $point )", "url": "https://secure.php.net/manual/en/ui-draw-matrix.translate.php"}, {"name": "UI\\Draw\\Path::addRectangle", "synopsis": "Shall map the path of a rectangle of the given size, at the given point", "usage": "public UI\\Draw\\Path::addRectangle ( UI\\Point $point , UI\\Size $size )", "url": "https://secure.php.net/manual/en/ui-draw-path.addrectangle.php"}, {"name": "UI\\Draw\\Path::arcTo", "synopsis": "Shall map the path for an arc", "usage": "public UI\\Draw\\Path::arcTo ( UI\\Point $point , float $radius , float $angle , float $sweep , float $negative )", "url": "https://secure.php.net/manual/en/ui-draw-path.arcto.php"}, {"name": "UI\\Draw\\Path::bezierTo", "synopsis": "Shall draw a bezier curve", "usage": "public UI\\Draw\\Path::bezierTo ( UI\\Point $point , float $radius , float $angle , float $sweep , float $negative )", "url": "https://secure.php.net/manual/en/ui-draw-path.bezierto.php"}, {"name": "UI\\Draw\\Path::closeFigure", "synopsis": "Shall close the current figure", "usage": "public UI\\Draw\\Path::closeFigure ( void )", "url": "https://secure.php.net/manual/en/ui-draw-path.closefigure.php"}, {"name": "UI\\Draw\\Path::end", "synopsis": "Shall finalize this Path", "usage": "public UI\\Draw\\Path::end ( void )", "url": "https://secure.php.net/manual/en/ui-draw-path.end.php"}, {"name": "UI\\Draw\\Path::lineTo", "synopsis": "Shall map the path for a line", "usage": "public UI\\Draw\\Path::lineTo ( UI\\Point $point , float $radius , float $angle , float $sweep , float $negative )", "url": "https://secure.php.net/manual/en/ui-draw-path.lineto.php"}, {"name": "UI\\Draw\\Path::newFigure", "synopsis": "Shall map a new figure at the given point", "usage": "public UI\\Draw\\Path::newFigure ( UI\\Point $point )", "url": "https://secure.php.net/manual/en/ui-draw-path.newfigure.php"}, {"name": "UI\\Draw\\Path::newFigureWithArc", "synopsis": "", "usage": "public UI\\Draw\\Path::newFigureWithArc ( UI\\Point $point , float $radius , float $angle , float $sweep , float $negative )", "url": "https://secure.php.net/manual/en/ui-draw-path.newfigurewitharc.php"}, {"name": "UI\\Draw\\Pen::clip", "synopsis": "Shall clip the given Path", "usage": "public UI\\Draw\\Pen::clip ( UI\\Draw\\Path $path )", "url": "https://secure.php.net/manual/en/ui-draw-pen.clip.php"}, {"name": "UI\\Draw\\Pen::fill", "synopsis": "Shall fill the given path", "usage": "public UI\\Draw\\Pen::fill ( UI\\Draw\\Path $path , UI\\Draw\\Brush $with )", "url": "https://secure.php.net/manual/en/ui-draw-pen.fill.php"}, {"name": "UI\\Draw\\Pen::restore", "synopsis": "Shall restore a previously saved Pen", "usage": "public UI\\Draw\\Pen::restore ( void )", "url": "https://secure.php.net/manual/en/ui-draw-pen.restore.php"}, {"name": "UI\\Draw\\Pen::save", "synopsis": "Shall save the Pen", "usage": "public UI\\Draw\\Pen::save ( void )", "url": "https://secure.php.net/manual/en/ui-draw-pen.save.php"}, {"name": "UI\\Draw\\Pen::stroke", "synopsis": "Shall stroke the given path", "usage": "public UI\\Draw\\Pen::stroke ( UI\\Draw\\Path $path , UI\\Draw\\Brush $with , UI\\Draw\\Stroke $stroke )", "url": "https://secure.php.net/manual/en/ui-draw-pen.stroke.php"}, {"name": "UI\\Draw\\Pen::transform", "synopsis": "Shall perform matrix transformation", "usage": "public UI\\Draw\\Pen::transform ( UI\\Draw\\Matrix $matrix )", "url": "https://secure.php.net/manual/en/ui-draw-pen.transform.php"}, {"name": "UI\\Draw\\Pen::write", "synopsis": "Shall draw the given text layout at the given point", "usage": "public UI\\Draw\\Pen::write ( UI\\Point $point , UI\\Draw\\Text\\Layout $layout )", "url": "https://secure.php.net/manual/en/ui-draw-pen.write.php"}, {"name": "UI\\Draw\\Stroke::getCap", "synopsis": "Shall retrieve the line cap setting of this Stroke", "usage": "public int UI\\Draw\\Stroke::getCap ( void )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.getcap.php"}, {"name": "UI\\Draw\\Stroke::getJoin", "synopsis": "Shall retrieve the line join setting of this Stroke", "usage": "public int UI\\Draw\\Stroke::getJoin ( void )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.getjoin.php"}, {"name": "UI\\Draw\\Stroke::getMiterLimit", "synopsis": "Shall retrieve the miter limit of this Stroke", "usage": "public float UI\\Draw\\Stroke::getMiterLimit ( void )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.getmiterlimit.php"}, {"name": "UI\\Draw\\Stroke::getThickness", "synopsis": "Shall retrieve the thickness of this Stroke", "usage": "public float UI\\Draw\\Stroke::getThickness ( void )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.getthickness.php"}, {"name": "UI\\Draw\\Stroke::setCap", "synopsis": "Shall set the line cap setting for this Stroke", "usage": "public UI\\Draw\\Stroke::setCap ( int $cap )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.setcap.php"}, {"name": "UI\\Draw\\Stroke::setJoin", "synopsis": "Shall set the line join setting for this Stroke", "usage": "public UI\\Draw\\Stroke::setJoin ( int $join )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.setjoin.php"}, {"name": "UI\\Draw\\Stroke::setMiterLimit", "synopsis": "Set the miter limit for this Stroke", "usage": "public UI\\Draw\\Stroke::setMiterLimit ( float $limit )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.setmiterlimit.php"}, {"name": "UI\\Draw\\Stroke::setThickness", "synopsis": "Shall set the thickness for this Stroke", "usage": "public UI\\Draw\\Stroke::setThickness ( float $thickness )", "url": "https://secure.php.net/manual/en/ui-draw-stroke.setthickness.php"}, {"name": "UI\\Draw\\Text\\Font\\Descriptor::getFamily", "synopsis": "Shall return the requested font family", "usage": "public string UI\\Draw\\Text\\Font\\Descriptor::getFamily ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font-descriptor.getfamily.php"}, {"name": "UI\\Draw\\Text\\Font\\Descriptor::getItalic", "synopsis": "Shall return constant setting", "usage": "public int UI\\Draw\\Text\\Font\\Descriptor::getItalic ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font-descriptor.getitalic.php"}, {"name": "UI\\Draw\\Text\\Font\\Descriptor::getSize", "synopsis": "Shall return the requested size", "usage": "public float UI\\Draw\\Text\\Font\\Descriptor::getSize ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font-descriptor.getsize.php"}, {"name": "UI\\Draw\\Text\\Font\\Descriptor::getStretch", "synopsis": "Shall return requested stretch", "usage": "public int UI\\Draw\\Text\\Font\\Descriptor::getStretch ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font-descriptor.getstretch.php"}, {"name": "UI\\Draw\\Text\\Font\\Descriptor::getWeight", "synopsis": "Shall return requested weight", "usage": "public int UI\\Draw\\Text\\Font\\Descriptor::getWeight ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font-descriptor.getweight.php"}, {"name": "UI\\Draw\\Text\\Font::getAscent", "synopsis": "", "usage": "public float UI\\Draw\\Text\\Font::getAscent ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font.getascent.php"}, {"name": "UI\\Draw\\Text\\Font::getDescent", "synopsis": "", "usage": "public float UI\\Draw\\Text\\Font::getDescent ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font.getdescent.php"}, {"name": "UI\\Draw\\Text\\Font::getLeading", "synopsis": "", "usage": "public float UI\\Draw\\Text\\Font::getLeading ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font.getleading.php"}, {"name": "UI\\Draw\\Text\\Font::getUnderlinePosition", "synopsis": "", "usage": "public float UI\\Draw\\Text\\Font::getUnderlinePosition ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font.getunderlineposition.php"}, {"name": "UI\\Draw\\Text\\Font::getUnderlineThickness", "synopsis": "", "usage": "public float UI\\Draw\\Text\\Font::getUnderlineThickness ( void )", "url": "https://secure.php.net/manual/en/ui-draw-text-font.getunderlinethickness.php"}, {"name": "UI\\Draw\\Text\\Layout::setColor", "synopsis": "Shall set the Color for all of, or a range of the text in the Layout", "usage": "public UI\\Draw\\Text\\Layout::setColor ( UI\\Draw\\Color $color [, int $start = 0 [, int $end ]] )", "url": "https://secure.php.net/manual/en/ui-draw-text-layout.setcolor.php"}, {"name": "UI\\Draw\\Text\\Layout::setWidth", "synopsis": "Shall set the width of this Text Layout", "usage": "public UI\\Draw\\Text\\Layout::setWidth ( float $width )", "url": "https://secure.php.net/manual/en/ui-draw-text-layout.setwidth.php"}, {"name": "UI\\Executor::kill", "synopsis": "Shall stop an executor, the executor cannot be restarted", "usage": "public void UI\\Executor::kill ( void )", "url": "https://secure.php.net/manual/en/ui-executor.kill.php"}, {"name": "UI\\Executor::onExecute", "synopsis": "Shall be repetitively queued for execution in the main thread", "usage": "abstract protected void UI\\Executor::onExecute ( void )", "url": "https://secure.php.net/manual/en/ui-executor.onexecute.php"}, {"name": "UI\\Executor::setInterval", "synopsis": "Shall set the new interval. An interval of 0 will pause the executor until a new interval has been set", "usage": "public bool UI\\Executor::setInterval ( int $microseconds )", "url": "https://secure.php.net/manual/en/ui-executor.setinterval.php"}, {"name": "UI\\Menu::append", "synopsis": "Shall append a new Menu Item", "usage": "public UI\\MenuItem UI\\Menu::append ( string $name [, string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/ui-menu.append.php"}, {"name": "UI\\Menu::appendAbout", "synopsis": "Shall append an About menu item", "usage": "public UI\\MenuItem UI\\Menu::appendAbout ([ string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/ui-menu.appendabout.php"}, {"name": "UI\\Menu::appendCheck", "synopsis": "Shall append a checkable menu item", "usage": "public UI\\MenuItem UI\\Menu::appendCheck ( string $name [, string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/ui-menu.appendcheck.php"}, {"name": "UI\\Menu::appendPreferences", "synopsis": "Shall append a Preferences menu item", "usage": "public UI\\MenuItem UI\\Menu::appendPreferences ([ string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/ui-menu.appendpreferences.php"}, {"name": "UI\\Menu::appendQuit", "synopsis": "Shall append a Quit menu item", "usage": "public UI\\MenuItem UI\\Menu::appendQuit ([ string $type = UI\\MenuItem::class ] )", "url": "https://secure.php.net/manual/en/ui-menu.appendquit.php"}, {"name": "UI\\Menu::appendSeparator", "synopsis": "Shall append a separator", "usage": "public UI\\Menu::appendSeparator ( void )", "url": "https://secure.php.net/manual/en/ui-menu.appendseparator.php"}, {"name": "UI\\MenuItem::disable", "synopsis": "Shall disable this Menu Item", "usage": "public UI\\MenuItem::disable ( void )", "url": "https://secure.php.net/manual/en/ui-menuitem.disable.php"}, {"name": "UI\\MenuItem::enable", "synopsis": "Shall enable this Menu Item", "usage": "public UI\\MenuItem::enable ( void )", "url": "https://secure.php.net/manual/en/ui-menuitem.enable.php"}, {"name": "UI\\MenuItem::isChecked", "synopsis": "Shall detect if this Menu Item is checked", "usage": "public bool UI\\MenuItem::isChecked ( void )", "url": "https://secure.php.net/manual/en/ui-menuitem.ischecked.php"}, {"name": "UI\\MenuItem::onClick", "synopsis": "Shall be executed when this Menu Item is clicked", "usage": "protected UI\\MenuItem::onClick ( void )", "url": "https://secure.php.net/manual/en/ui-menuitem.onclick.php"}, {"name": "UI\\MenuItem::setChecked", "synopsis": "Shall set the checked status of this Menu Item", "usage": "public UI\\MenuItem::setChecked ( bool $checked )", "url": "https://secure.php.net/manual/en/ui-menuitem.setchecked.php"}, {"name": "UI\\Point::at", "synopsis": "Shall return a UI\\Point object where x and y are equal to those supplied, either in float or UI\\Size form", "usage": "public static UI\\Point UI\\Point::at ( float $point )", "url": "https://secure.php.net/manual/en/ui-point.at.php"}, {"name": "UI\\Point::getX", "synopsis": "Retrieves the X co-ordinate", "usage": "public float UI\\Point::getX ( void )", "url": "https://secure.php.net/manual/en/ui-point.getx.php"}, {"name": "UI\\Point::getY", "synopsis": "Retrieves the Y co-ordinate", "usage": "public float UI\\Point::getY ( void )", "url": "https://secure.php.net/manual/en/ui-point.gety.php"}, {"name": "UI\\Point::setX", "synopsis": "Set the X co-ordinate", "usage": "public UI\\Point::setX ( float $point )", "url": "https://secure.php.net/manual/en/ui-point.setx.php"}, {"name": "UI\\Point::setY", "synopsis": "Set the Y co-ordinate", "usage": "public UI\\Point::setY ( float $point )", "url": "https://secure.php.net/manual/en/ui-point.sety.php"}, {"name": "UI\\Size::getHeight", "synopsis": "Retrieves the Height", "usage": "public float UI\\Size::getHeight ( void )", "url": "https://secure.php.net/manual/en/ui-size.getheight.php"}, {"name": "UI\\Size::getWidth", "synopsis": "Retrieves the Width", "usage": "public float UI\\Size::getWidth ( void )", "url": "https://secure.php.net/manual/en/ui-size.getwidth.php"}, {"name": "UI\\Size::of", "synopsis": "Shall return a UI\\Size object where width and height are equal to those supplied, either in float or UI\\Point form", "usage": "public static UI\\Size UI\\Size::of ( float $size )", "url": "https://secure.php.net/manual/en/ui-size.of.php"}, {"name": "UI\\Size::setHeight", "synopsis": "Set new Height", "usage": "public UI\\Size::setHeight ( float $size )", "url": "https://secure.php.net/manual/en/ui-size.setheight.php"}, {"name": "UI\\Size::setWidth", "synopsis": "Set new Width", "usage": "public UI\\Size::setWidth ( float $size )", "url": "https://secure.php.net/manual/en/ui-size.setwidth.php"}, {"name": "UI\\Window::add", "synopsis": "Shall add a Control to this Window", "usage": "public UI\\Window::add ( UI\\Control $control )", "url": "https://secure.php.net/manual/en/ui-window.add.php"}, {"name": "UI\\Window::error", "synopsis": "Shall show an error box", "usage": "public UI\\Window::error ( string $title , string $msg )", "url": "https://secure.php.net/manual/en/ui-window.error.php"}, {"name": "UI\\Window::getSize", "synopsis": "Shall return the size of this Window", "usage": "public UI\\Size UI\\Window::getSize ( void )", "url": "https://secure.php.net/manual/en/ui-window.getsize.php"}, {"name": "UI\\Window::getTitle", "synopsis": "Shall retrieve the title of this Window", "usage": "public string UI\\Window::getTitle ( void )", "url": "https://secure.php.net/manual/en/ui-window.gettitle.php"}, {"name": "UI\\Window::hasBorders", "synopsis": "Shall detect if borders are used on this Window", "usage": "public bool UI\\Window::hasBorders ( void )", "url": "https://secure.php.net/manual/en/ui-window.hasborders.php"}, {"name": "UI\\Window::hasMargin", "synopsis": "Shall detect if margins are used on this Window", "usage": "public bool UI\\Window::hasMargin ( void )", "url": "https://secure.php.net/manual/en/ui-window.hasmargin.php"}, {"name": "UI\\Window::isFullScreen", "synopsis": "Shall detect if this Window us using the whole screen", "usage": "public bool UI\\Window::isFullScreen ( void )", "url": "https://secure.php.net/manual/en/ui-window.isfullscreen.php"}, {"name": "UI\\Window::msg", "synopsis": "Shall show a message box", "usage": "public UI\\Window::msg ( string $title , string $msg )", "url": "https://secure.php.net/manual/en/ui-window.msg.php"}, {"name": "UI\\Window::onClosing", "synopsis": "Should gracefully destroy this Window", "usage": "protected int UI\\Window::onClosing ( void )", "url": "https://secure.php.net/manual/en/ui-window.onclosing.php"}, {"name": "UI\\Window::open", "synopsis": "Shall show an open file dialog", "usage": "public string UI\\Window::open ( void )", "url": "https://secure.php.net/manual/en/ui-window.open.php"}, {"name": "UI\\Window::save", "synopsis": "Shall show a save dialog", "usage": "public string UI\\Window::save ( void )", "url": "https://secure.php.net/manual/en/ui-window.save.php"}, {"name": "UI\\Window::setBorders", "synopsis": "Shall enable or disable the use of borders on this Window", "usage": "public UI\\Window::setBorders ( bool $borders )", "url": "https://secure.php.net/manual/en/ui-window.setborders.php"}, {"name": "UI\\Window::setFullScreen", "synopsis": "Shall enable or disable the use of the full screen for this Window", "usage": "public UI\\Window::setFullScreen ( bool $full )", "url": "https://secure.php.net/manual/en/ui-window.setfullscreen.php"}, {"name": "UI\\Window::setMargin", "synopsis": "Shall enable or disable the use of margins for this Window", "usage": "public UI\\Window::setMargin ( bool $margin )", "url": "https://secure.php.net/manual/en/ui-window.setmargin.php"}, {"name": "UI\\Window::setSize", "synopsis": "Shall set the size of this Window", "usage": "public UI\\Window::setSize ( UI\\Size $size )", "url": "https://secure.php.net/manual/en/ui-window.setsize.php"}, {"name": "UI\\Window::setTitle", "synopsis": "Shall set the title for this Window", "usage": "public UI\\Window::setTitle ( string $title )", "url": "https://secure.php.net/manual/en/ui-window.settitle.php"}, {"name": "V8Js::__construct", "synopsis": "Constructs a new V8Js object.", "usage": "public V8Js::__construct ([ string $object_name = \"PHP\" [, array $variables = array() [, array $extensions = array() [, bool $report_uncaught_exceptions = TRUE ]]]] )", "url": "https://secure.php.net/manual/en/v8js.construct.php"}, {"name": "V8Js::executeString", "synopsis": "Compiles and executes the string passed with script as Javascript code.", "usage": "public mixed V8Js::executeString ( string $script [, string $identifier = \"V8Js::executeString()\" [, int $flags = V8Js::FLAG_NONE ]] )", "url": "https://secure.php.net/manual/en/v8js.executestring.php"}, {"name": "V8Js::getExtensions", "synopsis": "This function returns array of Javascript extensions registered using V8Js::registerExtension().", "usage": "public static array V8Js::getExtensions ( void )", "url": "https://secure.php.net/manual/en/v8js.getextensions.php"}, {"name": "V8Js::getPendingException", "synopsis": "Returns any pending uncaught Javascript exception as V8JsException left from earlier V8Js::executeString() call(s).", "usage": "public V8JsException V8Js::getPendingException ( void )", "url": "https://secure.php.net/manual/en/v8js.getpendingexception.php"}, {"name": "V8Js::registerExtension", "synopsis": "Registers passed Javascript script as extension to be used in V8Js contexts.", "usage": "public static bool V8Js::registerExtension ( string $extension_name , string $script [, array $dependencies = array() [, bool $auto_enable = FALSE ]] )", "url": "https://secure.php.net/manual/en/v8js.registerextension.php"}, {"name": "V8JsException::getJsFileName", "synopsis": "", "usage": "final public string V8JsException::getJsFileName ( void )", "url": "https://secure.php.net/manual/en/v8jsexception.getjsfilename.php"}, {"name": "V8JsException::getJsLineNumber", "synopsis": "", "usage": "final public int V8JsException::getJsLineNumber ( void )", "url": "https://secure.php.net/manual/en/v8jsexception.getjslinenumber.php"}, {"name": "V8JsException::getJsSourceLine", "synopsis": "", "usage": "final public string V8JsException::getJsSourceLine ( void )", "url": "https://secure.php.net/manual/en/v8jsexception.getjssourceline.php"}, {"name": "V8JsException::getJsTrace", "synopsis": "", "usage": "final public string V8JsException::getJsTrace ( void )", "url": "https://secure.php.net/manual/en/v8jsexception.getjstrace.php"}, {"name": "VarnishAdmin::auth", "synopsis": "", "usage": "public bool VarnishAdmin::auth ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.auth.php"}, {"name": "VarnishAdmin::ban", "synopsis": "", "usage": "public int VarnishAdmin::ban ( string $vcl_regex )", "url": "https://secure.php.net/manual/en/varnishadmin.ban.php"}, {"name": "VarnishAdmin::banUrl", "synopsis": "", "usage": "public int VarnishAdmin::banUrl ( string $vcl_regex )", "url": "https://secure.php.net/manual/en/varnishadmin.banurl.php"}, {"name": "VarnishAdmin::clearPanic", "synopsis": "", "usage": "public int VarnishAdmin::clearPanic ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.clearpanic.php"}, {"name": "VarnishAdmin::connect", "synopsis": "", "usage": "public bool VarnishAdmin::connect ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.connect.php"}, {"name": "VarnishAdmin::__construct", "synopsis": "", "usage": "public VarnishAdmin::__construct ([ array $args ] )", "url": "https://secure.php.net/manual/en/varnishadmin.construct.php"}, {"name": "VarnishAdmin::disconnect", "synopsis": "", "usage": "public bool VarnishAdmin::disconnect ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.disconnect.php"}, {"name": "VarnishAdmin::getPanic", "synopsis": "", "usage": "public string VarnishAdmin::getPanic ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.getpanic.php"}, {"name": "VarnishAdmin::getParams", "synopsis": "", "usage": "public array VarnishAdmin::getParams ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.getparams.php"}, {"name": "VarnishAdmin::isRunning", "synopsis": "", "usage": "public bool VarnishAdmin::isRunning ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.isrunning.php"}, {"name": "VarnishAdmin::setCompat", "synopsis": "", "usage": "public void VarnishAdmin::setCompat ( int $compat )", "url": "https://secure.php.net/manual/en/varnishadmin.setcompat.php"}, {"name": "VarnishAdmin::setHost", "synopsis": "", "usage": "public void VarnishAdmin::setHost ( string $host )", "url": "https://secure.php.net/manual/en/varnishadmin.sethost.php"}, {"name": "VarnishAdmin::setIdent", "synopsis": "", "usage": "public void VarnishAdmin::setIdent ( string $ident )", "url": "https://secure.php.net/manual/en/varnishadmin.setident.php"}, {"name": "VarnishAdmin::setParam", "synopsis": "", "usage": "public int VarnishAdmin::setParam ( string $name , string|integer $value )", "url": "https://secure.php.net/manual/en/varnishadmin.setparam.php"}, {"name": "VarnishAdmin::setPort", "synopsis": "", "usage": "public void VarnishAdmin::setPort ( int $port )", "url": "https://secure.php.net/manual/en/varnishadmin.setport.php"}, {"name": "VarnishAdmin::setSecret", "synopsis": "", "usage": "public void VarnishAdmin::setSecret ( string $secret )", "url": "https://secure.php.net/manual/en/varnishadmin.setsecret.php"}, {"name": "VarnishAdmin::setTimeout", "synopsis": "", "usage": "public void VarnishAdmin::setTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/varnishadmin.settimeout.php"}, {"name": "VarnishAdmin::start", "synopsis": "", "usage": "public int VarnishAdmin::start ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.start.php"}, {"name": "VarnishAdmin::stop", "synopsis": "", "usage": "public int VarnishAdmin::stop ( void )", "url": "https://secure.php.net/manual/en/varnishadmin.stop.php"}, {"name": "VarnishLog::__construct", "synopsis": "", "usage": "public VarnishLog::__construct ([ array $args ] )", "url": "https://secure.php.net/manual/en/varnishlog.construct.php"}, {"name": "VarnishLog::getLine", "synopsis": "", "usage": "public array VarnishLog::getLine ( void )", "url": "https://secure.php.net/manual/en/varnishlog.getline.php"}, {"name": "VarnishLog::getTagName", "synopsis": "", "usage": "public static string VarnishLog::getTagName ( int $index )", "url": "https://secure.php.net/manual/en/varnishlog.gettagname.php"}, {"name": "VarnishStat::__construct", "synopsis": "", "usage": "public VarnishStat::__construct ([ array $args ] )", "url": "https://secure.php.net/manual/en/varnishstat.construct.php"}, {"name": "VarnishStat::getSnapshot", "synopsis": "", "usage": "public array VarnishStat::getSnapshot ( void )", "url": "https://secure.php.net/manual/en/varnishstat.getsnapshot.php"}, {"name": "WeakMap::__construct", "synopsis": "Constructs a new map.", "usage": "public WeakMap::__construct ( void )", "url": "https://secure.php.net/manual/en/weakmap.construct.php"}, {"name": "WeakMap::count", "synopsis": "Counts the number of live entries in the map.", "usage": "public int WeakMap::count ( void )", "url": "https://secure.php.net/manual/en/weakmap.count.php"}, {"name": "WeakMap::current", "synopsis": "Returns the current value being iterated on in the map.", "usage": "public mixed WeakMap::current ( void )", "url": "https://secure.php.net/manual/en/weakmap.current.php"}, {"name": "WeakMap::key", "synopsis": "Returns the object serving as key in the map, at the current iterating position.", "usage": "public object WeakMap::key ( void )", "url": "https://secure.php.net/manual/en/weakmap.key.php"}, {"name": "WeakMap::next", "synopsis": "Advances to the next map element.", "usage": "public void WeakMap::next ( void )", "url": "https://secure.php.net/manual/en/weakmap.next.php"}, {"name": "WeakMap::offsetExists", "synopsis": "Checks whether the passed object is referenced in the map.", "usage": "public bool WeakMap::offsetExists ( object $object )", "url": "https://secure.php.net/manual/en/weakmap.offsetexists.php"}, {"name": "WeakMap::offsetGet", "synopsis": "Returns the value pointed to by a certain object.", "usage": "public mixed WeakMap::offsetGet ( object $object )", "url": "https://secure.php.net/manual/en/weakmap.offsetget.php"}, {"name": "WeakMap::offsetSet", "synopsis": "Updates the map with a new key-value pair. If the key already existed in the map, the old value is replaced with the new.", "usage": "public void WeakMap::offsetSet ( object $object , mixed $value )", "url": "https://secure.php.net/manual/en/weakmap.offsetset.php"}, {"name": "WeakMap::offsetUnset", "synopsis": "Removes an entry from the map.", "usage": "public void WeakMap::offsetUnset ( object $object )", "url": "https://secure.php.net/manual/en/weakmap.offsetunset.php"}, {"name": "WeakMap::rewind", "synopsis": "Rewinds the iterator to the beginning of the map.", "usage": "public void WeakMap::rewind ( void )", "url": "https://secure.php.net/manual/en/weakmap.rewind.php"}, {"name": "WeakMap::valid", "synopsis": "Returns whether the iterator is still on a valid map element.", "usage": "public bool WeakMap::valid ( void )", "url": "https://secure.php.net/manual/en/weakmap.valid.php"}, {"name": "Weakref::acquire", "synopsis": "Acquires a strong reference on that object, virtually turning the weak reference into a strong one.", "usage": "public bool Weakref::acquire ( void )", "url": "https://secure.php.net/manual/en/weakref.acquire.php"}, {"name": "Weakref::get", "synopsis": "Returns the object pointed to by the weak reference.", "usage": "public object Weakref::get ( void )", "url": "https://secure.php.net/manual/en/weakref.get.php"}, {"name": "Weakref::release", "synopsis": "Releases a previously acquired reference, potentially turning a strong reference back into a weak reference.", "usage": "public bool Weakref::release ( void )", "url": "https://secure.php.net/manual/en/weakref.release.php"}, {"name": "Weakref::valid", "synopsis": "Checks whether the object referenced still exists.", "usage": "public bool Weakref::valid ( void )", "url": "https://secure.php.net/manual/en/weakref.valid.php"}, {"name": "wkhtmltox\\Image\\Converter::convert", "synopsis": "Performs conversion of the input buffer", "usage": "public ?string wkhtmltox\\Image\\Converter::convert ( void )", "url": "https://secure.php.net/manual/en/wkhtmltox-image-converter.convert.php"}, {"name": "wkhtmltox\\Image\\Converter::getVersion", "synopsis": "Determines the version of Converter as reported by libwkhtmltox", "usage": "public string wkhtmltox\\Image\\Converter::getVersion ( void )", "url": "https://secure.php.net/manual/en/wkhtmltox-image-converter.getversion.php"}, {"name": "wkhtmltox\\PDF\\Converter::add", "synopsis": "Adds the given object to conversion", "usage": "public void wkhtmltox\\PDF\\Converter::add ( wkhtmltox\\PDF\\Object $object )", "url": "https://secure.php.net/manual/en/wkhtmltox-pdf-converter.add.php"}, {"name": "wkhtmltox\\PDF\\Converter::convert", "synopsis": "Performs conversion of all previously added Objects", "usage": "public ?string wkhtmltox\\PDF\\Converter::convert ( void )", "url": "https://secure.php.net/manual/en/wkhtmltox-pdf-converter.convert.php"}, {"name": "wkhtmltox\\PDF\\Converter::getVersion", "synopsis": "Determines the version of Converter as reported by libwkhtmltox", "usage": "public string wkhtmltox\\PDF\\Converter::getVersion ( void )", "url": "https://secure.php.net/manual/en/wkhtmltox-pdf-converter.getversion.php"}, {"name": "Worker::collect", "synopsis": "Allows the worker to collect references determined to be garbage by the optionally given collector.", "usage": "public int Worker::collect ([ Callable $collector ] )", "url": "https://secure.php.net/manual/en/worker.collect.php"}, {"name": "Worker::getStacked", "synopsis": "Returns the number of tasks left on the stack", "usage": "public int Worker::getStacked ( void )", "url": "https://secure.php.net/manual/en/worker.getstacked.php"}, {"name": "Worker::isShutdown", "synopsis": "Whether the worker has been shutdown or not.", "usage": "public bool Worker::isShutdown ( void )", "url": "https://secure.php.net/manual/en/worker.isshutdown.php"}, {"name": "Worker::getStacked()", "synopsis": "Tell if a Worker is executing Stackables", "usage": "public bool Worker::isWorking ( void )", "url": "https://secure.php.net/manual/en/worker.isworking.php"}, {"name": "Worker::shutdown", "synopsis": "Shuts down the worker after executing all of the stacked tasks.", "usage": "public bool Worker::shutdown ( void )", "url": "https://secure.php.net/manual/en/worker.shutdown.php"}, {"name": "Worker::stack", "synopsis": "Appends the new work to the stack of the referenced worker.", "usage": "public int Worker::stack ( Threaded &$work )", "url": "https://secure.php.net/manual/en/worker.stack.php"}, {"name": "Worker::unstack", "synopsis": "Removes the first task (the oldest one) in the stack.", "usage": "public int Worker::unstack ( void )", "url": "https://secure.php.net/manual/en/worker.unstack.php"}, {"name": "XMLDiff\\Base::__construct", "synopsis": "Base constructor for all the worker classes in the xmldiff extension.", "usage": "public XMLDiff\\Base::__construct ( string $nsname )", "url": "https://secure.php.net/manual/en/xmldiff-base.construct.php"}, {"name": "XMLDiff\\Base::diff", "synopsis": "Abstract diff method to be implemented by inheriting classes.", "usage": "abstract public mixed XMLDiff\\Base::diff ( mixed $from , mixed $to )", "url": "https://secure.php.net/manual/en/xmldiff-base.diff.php"}, {"name": "XMLDiff\\Base::merge", "synopsis": "Abstract merge method to be implemented by inheriting classes.", "usage": "abstract public mixed XMLDiff\\Base::merge ( mixed $src , mixed $diff )", "url": "https://secure.php.net/manual/en/xmldiff-base.merge.php"}, {"name": "XMLDiff\\DOM::diff", "synopsis": "Diff two DOMDocument instances and produce the new one containing the diff information.", "usage": "public DOMDocument XMLDiff\\DOM::diff ( DOMDocument $from , DOMDocument $to )", "url": "https://secure.php.net/manual/en/xmldiff-dom.diff.php"}, {"name": "XMLDiff\\DOM::merge", "synopsis": "Create new DOMDocument based on the diff.", "usage": "public DOMDocument XMLDiff\\DOM::merge ( DOMDocument $src , DOMDocument $diff )", "url": "https://secure.php.net/manual/en/xmldiff-dom.merge.php"}, {"name": "XMLDiff\\File::diff", "synopsis": "Diff two local XML files and produce string with the diff information.", "usage": "public string XMLDiff\\File::diff ( string $from , string $to )", "url": "https://secure.php.net/manual/en/xmldiff-file.diff.php"}, {"name": "XMLDiff\\File::merge", "synopsis": "Create new XML document based on diffs and source document.", "usage": "public string XMLDiff\\File::merge ( string $src , string $diff )", "url": "https://secure.php.net/manual/en/xmldiff-file.merge.php"}, {"name": "XMLDiff\\Memory::diff", "synopsis": "Diff two strings containing XML documents and produce the diff information.", "usage": "public string XMLDiff\\Memory::diff ( string $from , string $to )", "url": "https://secure.php.net/manual/en/xmldiff-memory.diff.php"}, {"name": "XMLDiff\\Memory::merge", "synopsis": "Create new XML document based on diffs and source document.", "usage": "public string XMLDiff\\Memory::merge ( string $src , string $diff )", "url": "https://secure.php.net/manual/en/xmldiff-memory.merge.php"}, {"name": "XMLReader::close", "synopsis": "Closes the input the XMLReader object is currently parsing.", "usage": "public bool XMLReader::close ( void )", "url": "https://secure.php.net/manual/en/xmlreader.close.php"}, {"name": "XMLReader::expand", "synopsis": "This method copies the current node and returns the appropriate DOM object.", "usage": "public DOMNode XMLReader::expand ([ DOMNode $basenode ] )", "url": "https://secure.php.net/manual/en/xmlreader.expand.php"}, {"name": "XMLReader::getAttribute", "synopsis": "Returns the value of a named attribute or NULL if the attribute does not exist or not positioned on an element node.", "usage": "public string XMLReader::getAttribute ( string $name )", "url": "https://secure.php.net/manual/en/xmlreader.getattribute.php"}, {"name": "XMLReader::getAttributeNo", "synopsis": "Returns the value of an attribute based on its position or an empty string if attribute does not exist or not positioned on an element node.", "usage": "public string XMLReader::getAttributeNo ( int $index )", "url": "https://secure.php.net/manual/en/xmlreader.getattributeno.php"}, {"name": "XMLReader::getAttributeNs", "synopsis": "Returns the value of an attribute by name and namespace URI or an empty string if attribute does not exist or not positioned on an element node.", "usage": "public string XMLReader::getAttributeNs ( string $localName , string $namespaceURI )", "url": "https://secure.php.net/manual/en/xmlreader.getattributens.php"}, {"name": "XMLReader::getParserProperty", "synopsis": "Indicates if specified property has been set.", "usage": "public bool XMLReader::getParserProperty ( int $property )", "url": "https://secure.php.net/manual/en/xmlreader.getparserproperty.php"}, {"name": "XMLReader::isValid", "synopsis": "Returns a boolean indicating if the document being parsed is currently valid.", "usage": "public bool XMLReader::isValid ( void )", "url": "https://secure.php.net/manual/en/xmlreader.isvalid.php"}, {"name": "XMLReader::lookupNamespace", "synopsis": "Lookup in scope namespace for a given prefix.", "usage": "public string XMLReader::lookupNamespace ( string $prefix )", "url": "https://secure.php.net/manual/en/xmlreader.lookupnamespace.php"}, {"name": "XMLReader::moveToAttribute", "synopsis": "Positions cursor on the named attribute.", "usage": "public bool XMLReader::moveToAttribute ( string $name )", "url": "https://secure.php.net/manual/en/xmlreader.movetoattribute.php"}, {"name": "XMLReader::moveToAttributeNo", "synopsis": "Positions cursor on attribute based on its position.", "usage": "public bool XMLReader::moveToAttributeNo ( int $index )", "url": "https://secure.php.net/manual/en/xmlreader.movetoattributeno.php"}, {"name": "XMLReader::moveToAttributeNs", "synopsis": "Positions cursor on the named attribute in specified namespace.", "usage": "public bool XMLReader::moveToAttributeNs ( string $localName , string $namespaceURI )", "url": "https://secure.php.net/manual/en/xmlreader.movetoattributens.php"}, {"name": "XMLReader::moveToElement", "synopsis": "Moves cursor to the parent Element of current Attribute.", "usage": "public bool XMLReader::moveToElement ( void )", "url": "https://secure.php.net/manual/en/xmlreader.movetoelement.php"}, {"name": "XMLReader::moveToFirstAttribute", "synopsis": "Moves cursor to the first Attribute.", "usage": "public bool XMLReader::moveToFirstAttribute ( void )", "url": "https://secure.php.net/manual/en/xmlreader.movetofirstattribute.php"}, {"name": "XMLReader::moveToNextAttribute", "synopsis": "Moves cursor to the next Attribute if positioned on an Attribute or moves to first attribute if positioned on an Element.", "usage": "public bool XMLReader::moveToNextAttribute ( void )", "url": "https://secure.php.net/manual/en/xmlreader.movetonextattribute.php"}, {"name": "XMLReader::next", "synopsis": "Positions cursor on the next node skipping all subtrees.", "usage": "public bool XMLReader::next ([ string $localname ] )", "url": "https://secure.php.net/manual/en/xmlreader.next.php"}, {"name": "XMLReader::open", "synopsis": "Set the URI containing the XML document to be parsed.", "usage": "public bool XMLReader::open ( string $URI [, string $encoding [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/xmlreader.open.php"}, {"name": "XMLReader::read", "synopsis": "Moves cursor to the next node in the document.", "usage": "public bool XMLReader::read ( void )", "url": "https://secure.php.net/manual/en/xmlreader.read.php"}, {"name": "XMLReader::readInnerXml", "synopsis": "Reads the contents of the current node, including child nodes and markup.", "usage": "public string XMLReader::readInnerXml ( void )", "url": "https://secure.php.net/manual/en/xmlreader.readinnerxml.php"}, {"name": "XMLReader::readOuterXml", "synopsis": "Reads the contents of the current node, including the node itself.", "usage": "public string XMLReader::readOuterXml ( void )", "url": "https://secure.php.net/manual/en/xmlreader.readouterxml.php"}, {"name": "XMLReader::readString", "synopsis": "Reads the contents of the current node as a string.", "usage": "public string XMLReader::readString ( void )", "url": "https://secure.php.net/manual/en/xmlreader.readstring.php"}, {"name": "XMLReader::setParserProperty", "synopsis": "Set parser options. The options must be set after XMLReader::open() or XMLReader::xml() are called and before the first XMLReader::read() call.", "usage": "public bool XMLReader::setParserProperty ( int $property , bool $value )", "url": "https://secure.php.net/manual/en/xmlreader.setparserproperty.php"}, {"name": "XMLReader::setRelaxNGSchema", "synopsis": "Set the filename or URI for the RelaxNG Schema to use for validation.", "usage": "public bool XMLReader::setRelaxNGSchema ( string $filename )", "url": "https://secure.php.net/manual/en/xmlreader.setrelaxngschema.php"}, {"name": "XMLReader::setRelaxNGSchemaSource", "synopsis": "Set the data containing a RelaxNG Schema to use for validation.", "usage": "public bool XMLReader::setRelaxNGSchemaSource ( string $source )", "url": "https://secure.php.net/manual/en/xmlreader.setrelaxngschemasource.php"}, {"name": "XMLReader::setSchema", "synopsis": "Use W3C XSD schema to validate the document as it is processed. Activation is only possible before the first Read().", "usage": "public bool XMLReader::setSchema ( string $filename )", "url": "https://secure.php.net/manual/en/xmlreader.setschema.php"}, {"name": "XMLReader::xml", "synopsis": "Set the data containing the XML to parse.", "usage": "public bool XMLReader::xml ( string $source [, string $encoding [, int $options = 0 ]] )", "url": "https://secure.php.net/manual/en/xmlreader.xml.php"}, {"name": "XSLTProcessor::getParameter", "synopsis": "Gets a parameter if previously set by XSLTProcessor::setParameter().", "usage": "string XSLTProcessor::getParameter ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/xsltprocessor.getparameter.php"}, {"name": "XSLTProcessor::getSecurityPrefs", "synopsis": "Gets the security preferences.", "usage": "public int XSLTProcessor::getSecurityPrefs ( void )", "url": "https://secure.php.net/manual/en/xsltprocessor.getsecurityprefs.php"}, {"name": "XSLTProcessor::hasExsltSupport", "synopsis": "This method determines if PHP was built with the \u00bb\u00a0EXSLT library.", "usage": "bool XSLTProcessor::hasExsltSupport ( void )", "url": "https://secure.php.net/manual/en/xsltprocessor.hasexsltsupport.php"}, {"name": "XSLTProcessor::importStylesheet", "synopsis": "This method imports the stylesheet into the XSLTProcessor for transformations.", "usage": "public bool XSLTProcessor::importStylesheet ( object $stylesheet )", "url": "https://secure.php.net/manual/en/xsltprocessor.importstylesheet.php"}, {"name": "XSLTProcessor::registerPHPFunctions", "synopsis": "This method enables the ability to use PHP functions as XSLT functions within XSL stylesheets.", "usage": "void XSLTProcessor::registerPHPFunctions ([ mixed $restrict ] )", "url": "https://secure.php.net/manual/en/xsltprocessor.registerphpfunctions.php"}, {"name": "XSLTProcessor::removeParameter", "synopsis": "Removes a parameter, if set. This will make the processor use the default value for the parameter as specified in the stylesheet.", "usage": "bool XSLTProcessor::removeParameter ( string $namespaceURI , string $localName )", "url": "https://secure.php.net/manual/en/xsltprocessor.removeparameter.php"}, {"name": "XSLTProcessor::setParameter", "synopsis": "Sets the value of one or more parameters to be used in subsequent transformations with XSLTProcessor. If the parameter doesn't exist in the stylesheet it will be ignored.", "usage": "bool XSLTProcessor::setParameter ( string $namespace , string $name , string $value )", "url": "https://secure.php.net/manual/en/xsltprocessor.setparameter.php"}, {"name": "XSLTProcessor::setProfiling", "synopsis": "Sets the file to output profiling information when processing a stylesheet.", "usage": "bool XSLTProcessor::setProfiling ( string $filename )", "url": "https://secure.php.net/manual/en/xsltprocessor.setprofiling.php"}, {"name": "XSLTProcessor::setSecurityPrefs", "synopsis": "Sets the security preferences.", "usage": "public int XSLTProcessor::setSecurityPrefs ( int $securityPrefs )", "url": "https://secure.php.net/manual/en/xsltprocessor.setsecurityprefs.php"}, {"name": "XSLTProcessor::transformToDoc", "synopsis": "Transforms the source node to a DOMDocument applying the stylesheet given by the XSLTProcessor::importStylesheet() method.", "usage": "DOMDocument XSLTProcessor::transformToDoc ( DOMNode $doc )", "url": "https://secure.php.net/manual/en/xsltprocessor.transformtodoc.php"}, {"name": "XSLTProcessor::transformToURI", "synopsis": "Transforms the source node to an URI applying the stylesheet given by the XSLTProcessor::importStylesheet() method.", "usage": "int XSLTProcessor::transformToURI ( DOMDocument $doc , string $uri )", "url": "https://secure.php.net/manual/en/xsltprocessor.transformtouri.php"}, {"name": "XSLTProcessor::transformToXml", "synopsis": "Transforms the source node to a string applying the stylesheet given by the xsltprocessor::importStylesheet() method.", "usage": "string XSLTProcessor::transformToXml ( object $doc )", "url": "https://secure.php.net/manual/en/xsltprocessor.transformtoxml.php"}, {"name": "Yaconf::get", "synopsis": "", "usage": "public static mixed Yaconf::get ( string $name [, mixed $default_value = NULL ] )", "url": "https://secure.php.net/manual/en/yaconf.get.php"}, {"name": "Yaconf::has", "synopsis": "", "usage": "public static bool Yaconf::has ( string $name )", "url": "https://secure.php.net/manual/en/yaconf.has.php"}, {"name": "Yaf_Action_Abstract::execute", "synopsis": "user should always define this method for a action, this is the entry point of an action. Yaf_Action_Abstract::execute() may have agruments.", "usage": "abstract publicmixed Yaf_Action_Abstract::execute ([ mixed $arg [, mixed $... ]] )", "url": "https://secure.php.net/manual/en/yaf-action-abstract.execute.php"}, {"name": "Yaf_Action_Abstract::getController", "synopsis": "retrieve current controller object.", "usage": "publicYaf_Controller_Abstract Yaf_Action_Abstract::getController ( void )", "url": "https://secure.php.net/manual/en/yaf-action-abstract.getcontroller.php"}, {"name": "Yaf_Application::app", "synopsis": "Retrieve the Yaf_Application instance. Alternatively, we also could use Yaf_Dispatcher::getApplication().", "usage": "public staticmixed Yaf_Application::app ( void )", "url": "https://secure.php.net/manual/en/yaf-application.app.php"}, {"name": "Yaf_Application::bootstrap", "synopsis": "Run a Bootstrap, all the methods defined in the Bootstrap and named with prefix \"_init\" will be called according to their declaration order, if the parameter bootstrap is not supplied, Yaf will look for a Bootstrap under application.directory.", "usage": "public void Yaf_Application::bootstrap ([ Yaf_Bootstrap_Abstract $bootstrap ] )", "url": "https://secure.php.net/manual/en/yaf-application.bootstrap.php"}, {"name": "Yaf_Application::clearLastError", "synopsis": "", "usage": "public Yaf_Application Yaf_Application::clearLastError ( void )", "url": "https://secure.php.net/manual/en/yaf-application.clearlasterror.php"}, {"name": "Yaf_Application::__clone", "synopsis": "", "usage": "private void Yaf_Application::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-application.clone.php"}, {"name": "Yaf_Application::__construct", "synopsis": "Instance a Yaf_Application.", "usage": "public Yaf_Application::__construct ( mixed $config [, string $envrion ] )", "url": "https://secure.php.net/manual/en/yaf-application.construct.php"}, {"name": "Yaf_Application::__destruct", "synopsis": "", "usage": "public void Yaf_Application::__destruct ( void )", "url": "https://secure.php.net/manual/en/yaf-application.destruct.php"}, {"name": "Yaf_Application::environ", "synopsis": "Retrive environ which was defined in yaf.environ which has a default value \"product\".", "usage": "public void Yaf_Application::environ ( void )", "url": "https://secure.php.net/manual/en/yaf-application.environ.php"}, {"name": "Yaf_Application::execute", "synopsis": "This method is typically used to run Yaf_Application in a crontab work. Make the crontab work can also use the autoloader and Bootstrap mechanism.", "usage": "public void Yaf_Application::execute ( callable $entry , string $... )", "url": "https://secure.php.net/manual/en/yaf-application.execute.php"}, {"name": "Yaf_Application::getAppDirectory", "synopsis": "", "usage": "public Yaf_Application Yaf_Application::getAppDirectory ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getappdirectory.php"}, {"name": "Yaf_Application::getConfig", "synopsis": "", "usage": "public Yaf_Config_Abstract Yaf_Application::getConfig ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getconfig.php"}, {"name": "Yaf_Application::getDispatcher", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Application::getDispatcher ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getdispatcher.php"}, {"name": "Yaf_Application::getLastErrorMsg", "synopsis": "", "usage": "public string Yaf_Application::getLastErrorMsg ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getlasterrormsg.php"}, {"name": "Yaf_Application::getLastErrorNo", "synopsis": "", "usage": "public int Yaf_Application::getLastErrorNo ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getlasterrorno.php"}, {"name": "Yaf_Application::getModules", "synopsis": "Get the modules list defined in config, if no one defined, there will always be a module named \"Index\".", "usage": "public array Yaf_Application::getModules ( void )", "url": "https://secure.php.net/manual/en/yaf-application.getmodules.php"}, {"name": "Yaf_Application::run", "synopsis": "Run a Yaf_Application, let the Yaf_Application accept a request and route this request, dispatch to controller/action and render response. Finally, return the response to the client.", "usage": "public void Yaf_Application::run ( void )", "url": "https://secure.php.net/manual/en/yaf-application.run.php"}, {"name": "Yaf_Application::setAppDirectory", "synopsis": "", "usage": "public Yaf_Application Yaf_Application::setAppDirectory ( string $directory )", "url": "https://secure.php.net/manual/en/yaf-application.setappdirectory.php"}, {"name": "Yaf_Application::__sleep", "synopsis": "", "usage": "private void Yaf_Application::__sleep ( void )", "url": "https://secure.php.net/manual/en/yaf-application.sleep.php"}, {"name": "Yaf_Application::__wakeup", "synopsis": "", "usage": "private void Yaf_Application::__wakeup ( void )", "url": "https://secure.php.net/manual/en/yaf-application.wakeup.php"}, {"name": "Yaf_Config_Abstract::get", "synopsis": "", "usage": "abstract public mixed Yaf_Config_Abstract::get ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/yaf-config-abstract.get.php"}, {"name": "Yaf_Config_Abstract::readonly", "synopsis": "", "usage": "abstract public bool Yaf_Config_Abstract::readonly ( void )", "url": "https://secure.php.net/manual/en/yaf-config-abstract.readonly.php"}, {"name": "Yaf_Config_Abstract::set", "synopsis": "", "usage": "abstract public Yaf_Config_Abstract Yaf_Config_Abstract::set ( void )", "url": "https://secure.php.net/manual/en/yaf-config-abstract.set.php"}, {"name": "Yaf_Config_Abstract::toArray", "synopsis": "", "usage": "abstract public array Yaf_Config_Abstract::toArray ( void )", "url": "https://secure.php.net/manual/en/yaf-config-abstract.toarray.php"}, {"name": "Yaf_Config_Ini::__construct", "synopsis": "Yaf_Config_Ini constructor", "usage": "public Yaf_Config_Ini::__construct ( string $config_file [, string $section ] )", "url": "https://secure.php.net/manual/en/yaf-config-ini.construct.php"}, {"name": "Yaf_Config_Ini::count", "synopsis": "", "usage": "public void Yaf_Config_Ini::count ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.count.php"}, {"name": "Yaf_Config_Ini::current", "synopsis": "", "usage": "public void Yaf_Config_Ini::current ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.current.php"}, {"name": "Yaf_Config_Ini::__get", "synopsis": "", "usage": "public void Yaf_Config_Ini::__get ([ string $name ] )", "url": "https://secure.php.net/manual/en/yaf-config-ini.get.php"}, {"name": "Yaf_Config_Ini::__isset", "synopsis": "", "usage": "public void Yaf_Config_Ini::__isset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-ini.isset.php"}, {"name": "Yaf_Config_Ini::key", "synopsis": "", "usage": "public void Yaf_Config_Ini::key ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.key.php"}, {"name": "Yaf_Config_Ini::next", "synopsis": "", "usage": "public void Yaf_Config_Ini::next ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.next.php"}, {"name": "Yaf_Config_Ini::offsetExists", "synopsis": "", "usage": "public void Yaf_Config_Ini::offsetExists ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-ini.offsetexists.php"}, {"name": "Yaf_Config_Ini::offsetGet", "synopsis": "", "usage": "public void Yaf_Config_Ini::offsetGet ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-ini.offsetget.php"}, {"name": "Yaf_Config_Ini::offsetSet", "synopsis": "", "usage": "public void Yaf_Config_Ini::offsetSet ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-config-ini.offsetset.php"}, {"name": "Yaf_Config_Ini::offsetUnset", "synopsis": "", "usage": "public void Yaf_Config_Ini::offsetUnset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-ini.offsetunset.php"}, {"name": "Yaf_Config_Ini::readonly", "synopsis": "", "usage": "public void Yaf_Config_Ini::readonly ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.readonly.php"}, {"name": "Yaf_Config_Ini::rewind", "synopsis": "", "usage": "public void Yaf_Config_Ini::rewind ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.rewind.php"}, {"name": "Yaf_Config_Ini::__set", "synopsis": "", "usage": "public void Yaf_Config_Ini::__set ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/yaf-config-ini.set.php"}, {"name": "Yaf_Config_Ini::toArray", "synopsis": "Returns a PHP array from the Yaf_Config_Ini", "usage": "public array Yaf_Config_Ini::toArray ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.toarray.php"}, {"name": "Yaf_Config_Ini::valid", "synopsis": "", "usage": "public void Yaf_Config_Ini::valid ( void )", "url": "https://secure.php.net/manual/en/yaf-config-ini.valid.php"}, {"name": "Yaf_Config_Simple::__construct", "synopsis": "", "usage": "public Yaf_Config_Simple::__construct ( string $config_file [, string $section ] )", "url": "https://secure.php.net/manual/en/yaf-config-simple.construct.php"}, {"name": "Yaf_Config_Simple::count", "synopsis": "", "usage": "public void Yaf_Config_Simple::count ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.count.php"}, {"name": "Yaf_Config_Simple::current", "synopsis": "", "usage": "public void Yaf_Config_Simple::current ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.current.php"}, {"name": "Yaf_Config_Simple::__get", "synopsis": "", "usage": "public void Yaf_Config_Simple::__get ([ string $name ] )", "url": "https://secure.php.net/manual/en/yaf-config-simple.get.php"}, {"name": "Yaf_Config_Simple::__isset", "synopsis": "", "usage": "public void Yaf_Config_Simple::__isset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-simple.isset.php"}, {"name": "Yaf_Config_Simple::key", "synopsis": "", "usage": "public void Yaf_Config_Simple::key ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.key.php"}, {"name": "Yaf_Config_Simple::next", "synopsis": "", "usage": "public void Yaf_Config_Simple::next ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.next.php"}, {"name": "Yaf_Config_Simple::offsetExists", "synopsis": "", "usage": "public void Yaf_Config_Simple::offsetExists ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-simple.offsetexists.php"}, {"name": "Yaf_Config_Simple::offsetGet", "synopsis": "", "usage": "public void Yaf_Config_Simple::offsetGet ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-simple.offsetget.php"}, {"name": "Yaf_Config_Simple::offsetSet", "synopsis": "", "usage": "public void Yaf_Config_Simple::offsetSet ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-config-simple.offsetset.php"}, {"name": "Yaf_Config_Simple::offsetUnset", "synopsis": "", "usage": "public void Yaf_Config_Simple::offsetUnset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-config-simple.offsetunset.php"}, {"name": "Yaf_Config_Simple::readonly", "synopsis": "", "usage": "public void Yaf_Config_Simple::readonly ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.readonly.php"}, {"name": "Yaf_Config_Simple::rewind", "synopsis": "", "usage": "public void Yaf_Config_Simple::rewind ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.rewind.php"}, {"name": "Yaf_Config_Simple::__set", "synopsis": "", "usage": "public void Yaf_Config_Simple::__set ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-config-simple.set.php"}, {"name": "Yaf_Config_Simple::toArray", "synopsis": "Returns a PHP array from the Yaf_Config_Simple", "usage": "public array Yaf_Config_Simple::toArray ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.toarray.php"}, {"name": "Yaf_Config_Simple::valid", "synopsis": "", "usage": "public void Yaf_Config_Simple::valid ( void )", "url": "https://secure.php.net/manual/en/yaf-config-simple.valid.php"}, {"name": "Yaf_Controller_Abstract::__clone", "synopsis": "", "usage": "final private void Yaf_Controller_Abstract::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.clone.php"}, {"name": "Yaf_Controller_Abstract::__construct", "synopsis": "Yaf_Controller_Abstract::__construct() is final, which means it can not be overridden. You may want to see Yaf_Controller_Abstract::init() instead.", "usage": "final private Yaf_Controller_Abstract::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.construct.php"}, {"name": "Yaf_Controller_Abstract::display", "synopsis": "", "usage": "protected bool Yaf_Controller_Abstract::display ( string $tpl [, array $parameters ] )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.display.php"}, {"name": "Yaf_Controller_Abstract::forward", "synopsis": "forward current execution process to other action.", "usage": "public void Yaf_Controller_Abstract::forward ( string $action [, array $paramters ] )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.forward.php"}, {"name": "Yaf_Controller_Abstract::getInvokeArg", "synopsis": "", "usage": "public void Yaf_Controller_Abstract::getInvokeArg ( string $name )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getinvokearg.php"}, {"name": "Yaf_Controller_Abstract::getInvokeArgs", "synopsis": "", "usage": "public void Yaf_Controller_Abstract::getInvokeArgs ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getinvokeargs.php"}, {"name": "Yaf_Controller_Abstract::getModuleName", "synopsis": "get the controller's module name", "usage": "public string Yaf_Controller_Abstract::getModuleName ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getmodulename.php"}, {"name": "Yaf_Controller_Abstract::getRequest", "synopsis": "retrieve current request object", "usage": "public Yaf_Request_Abstract Yaf_Controller_Abstract::getRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getrequest.php"}, {"name": "Yaf_Controller_Abstract::getResponse", "synopsis": "retrieve current response object", "usage": "public Yaf_Response_Abstract Yaf_Controller_Abstract::getResponse ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getresponse.php"}, {"name": "Yaf_Controller_Abstract::getView", "synopsis": "retrieve view engine", "usage": "public Yaf_View_Interface Yaf_Controller_Abstract::getView ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getview.php"}, {"name": "Yaf_Controller_Abstract::getViewpath", "synopsis": "", "usage": "public string Yaf_Controller_Abstract::getViewpath ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.getviewpath.php"}, {"name": "Yaf_Controller_Abstract::init", "synopsis": "Yaf_Controller_Abstract::__construct() is final, which means users can not override it. but users can define Yaf_Controller_Abstract::init(), which will be called after controller object is instantiated.", "usage": "public void Yaf_Controller_Abstract::init ( void )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.init.php"}, {"name": "Yaf_Controller_Abstract::initView", "synopsis": "", "usage": "public void Yaf_Controller_Abstract::initView ([ array $options ] )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.initview.php"}, {"name": "Yaf_Controller_Abstract::redirect", "synopsis": "redirect to a URL by sending a 302 header", "usage": "public bool Yaf_Controller_Abstract::redirect ( string $url )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.redirect.php"}, {"name": "Yaf_Controller_Abstract::render", "synopsis": "", "usage": "protected string Yaf_Controller_Abstract::render ( string $tpl [, array $parameters ] )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.render.php"}, {"name": "Yaf_Controller_Abstract::setViewpath", "synopsis": "", "usage": "public void Yaf_Controller_Abstract::setViewpath ( string $view_directory )", "url": "https://secure.php.net/manual/en/yaf-controller-abstract.setviewpath.php"}, {"name": "Yaf_Dispatcher::autoRender", "synopsis": "Yaf_Dispatcher will render automatically after dispatches a incoming request, you can prevent the rendering by calling this method with flag TRUE", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::autoRender ([ bool $flag ] )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.autorender.php"}, {"name": "Yaf_Dispatcher::catchException", "synopsis": "While the application.dispatcher.throwException is On(you can also calling to Yaf_Dispatcher::throwException(TRUE)() to enable it), Yaf will throw Exception whe error occurrs instead of trigger error.", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::catchException ([ bool $flag ] )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.catchexception.php"}, {"name": "Yaf_Dispatcher::__clone", "synopsis": "", "usage": "private void Yaf_Dispatcher::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.clone.php"}, {"name": "Yaf_Dispatcher::__construct", "synopsis": "", "usage": "public Yaf_Dispatcher::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.construct.php"}, {"name": "Yaf_Dispatcher::disableView", "synopsis": "disable view engine, used in some app that user will output by theirself", "usage": "public bool Yaf_Dispatcher::disableView ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.disableview.php"}, {"name": "Yaf_Dispatcher::dispatch", "synopsis": "This method does the heavy work of the Yaf_Dispatcher. It take a request object.", "usage": "public Yaf_Response_Abstract Yaf_Dispatcher::dispatch ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.dispatch.php"}, {"name": "Yaf_Dispatcher::enableView", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::enableView ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.enableview.php"}, {"name": "Yaf_Dispatcher::flushInstantly", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::flushInstantly ([ bool $flag ] )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.flushinstantly.php"}, {"name": "Yaf_Dispatcher::getApplication", "synopsis": "Retrive the Yaf_Application instance. same as Yaf_Application::app().", "usage": "public Yaf_Application Yaf_Dispatcher::getApplication ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.getapplication.php"}, {"name": "Yaf_Dispatcher::getInstance", "synopsis": "", "usage": "public static Yaf_Dispatcher Yaf_Dispatcher::getInstance ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.getinstance.php"}, {"name": "Yaf_Dispatcher::getRequest", "synopsis": "", "usage": "public Yaf_Request_Abstract Yaf_Dispatcher::getRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.getrequest.php"}, {"name": "Yaf_Dispatcher::getRouter", "synopsis": "", "usage": "public Yaf_Router Yaf_Dispatcher::getRouter ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.getrouter.php"}, {"name": "Yaf_Dispatcher::initView", "synopsis": "", "usage": "public Yaf_View_Interface Yaf_Dispatcher::initView ( string $templates_dir [, array $options ] )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.initview.php"}, {"name": "Yaf_Dispatcher::registerPlugin", "synopsis": "Register a plugin(see Yaf_Plugin_Abstract). Generally, we register plugins in Bootstrap(see Yaf_Bootstrap_Abstract).", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::registerPlugin ( Yaf_Plugin_Abstract $plugin )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.registerplugin.php"}, {"name": "Yaf_Dispatcher::returnResponse", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::returnResponse ( bool $flag )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.returnresponse.php"}, {"name": "Yaf_Dispatcher::setDefaultAction", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setDefaultAction ( string $action )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.setdefaultaction.php"}, {"name": "Yaf_Dispatcher::setDefaultController", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setDefaultController ( string $controller )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.setdefaultcontroller.php"}, {"name": "Yaf_Dispatcher::setDefaultModule", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setDefaultModule ( string $module )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.setdefaultmodule.php"}, {"name": "Yaf_Dispatcher::setErrorHandler", "synopsis": "Set error handler for Yaf. when application.dispatcher.throwException is off, Yaf will trigger catchable error while unexpected errors occrred.", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setErrorHandler ( call $callback , int $error_types )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.seterrorhandler.php"}, {"name": "Yaf_Dispatcher::setRequest", "synopsis": "", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setRequest ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.setrequest.php"}, {"name": "Yaf_Dispatcher::setView", "synopsis": "This method proviods a solution for that if you want use a custom view engine instead of Yaf_View_Simple", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::setView ( Yaf_View_Interface $view )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.setview.php"}, {"name": "Yaf_Dispatcher::__sleep", "synopsis": "", "usage": "private void Yaf_Dispatcher::__sleep ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.sleep.php"}, {"name": "Yaf_Dispatcher::throwException", "synopsis": "Siwtch on/off exception throwing while unexpected error occurring. When this is on, Yaf will throwing exceptions instead of triggering catchable errors.", "usage": "public Yaf_Dispatcher Yaf_Dispatcher::throwException ([ bool $flag ] )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.throwexception.php"}, {"name": "Yaf_Dispatcher::__wakeup", "synopsis": "", "usage": "private void Yaf_Dispatcher::__wakeup ( void )", "url": "https://secure.php.net/manual/en/yaf-dispatcher.wakeup.php"}, {"name": "Yaf_Exception::__construct", "synopsis": "", "usage": "public Yaf_Exception::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-exception.construct.php"}, {"name": "Yaf_Exception::getPrevious", "synopsis": "", "usage": "public void Yaf_Exception::getPrevious ( void )", "url": "https://secure.php.net/manual/en/yaf-exception.getprevious.php"}, {"name": "Yaf_Loader::autoload", "synopsis": "", "usage": "public void Yaf_Loader::autoload ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.autoload.php"}, {"name": "Yaf_Loader::clearLocalNamespace", "synopsis": "", "usage": "public void Yaf_Loader::clearLocalNamespace ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.clearlocalnamespace.php"}, {"name": "Yaf_Loader::__clone", "synopsis": "", "usage": "private void Yaf_Loader::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.clone.php"}, {"name": "Yaf_Loader::__construct", "synopsis": "", "usage": "private Yaf_Loader::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.construct.php"}, {"name": "Yaf_Loader::getInstance", "synopsis": "", "usage": "public static void Yaf_Loader::getInstance ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.getinstance.php"}, {"name": "Yaf_Loader::getLibraryPath", "synopsis": "", "usage": "public Yaf_Loader Yaf_Loader::getLibraryPath ([ bool $is_global = FALSE ] )", "url": "https://secure.php.net/manual/en/yaf-loader.getlibrarypath.php"}, {"name": "Yaf_Loader::getLocalNamespace", "synopsis": "", "usage": "public void Yaf_Loader::getLocalNamespace ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.getlocalnamespace.php"}, {"name": "Yaf_Loader::import", "synopsis": "", "usage": "public static void Yaf_Loader::import ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.import.php"}, {"name": "Yaf_Loader::isLocalName", "synopsis": "", "usage": "public void Yaf_Loader::isLocalName ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.islocalname.php"}, {"name": "Yaf_Loader::registerLocalNamespace", "synopsis": "Register local class prefix name, Yaf_Loader search classes in two library directories, the one is configured via application.library.directory(in application.ini) which is called local libraray directory; the other is configured via yaf.library (in php.ini) which is callled global library directory, since it can be shared by many applications in the same server.", "usage": "public void Yaf_Loader::registerLocalNamespace ( mixed $prefix )", "url": "https://secure.php.net/manual/en/yaf-loader.registerlocalnamespace.php"}, {"name": "Yaf_Loader::setLibraryPath", "synopsis": "", "usage": "public Yaf_Loader Yaf_Loader::setLibraryPath ( string $directory [, bool $is_global = FALSE ] )", "url": "https://secure.php.net/manual/en/yaf-loader.setlibrarypath.php"}, {"name": "Yaf_Loader::__sleep", "synopsis": "", "usage": "private void Yaf_Loader::__sleep ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.sleep.php"}, {"name": "Yaf_Loader::__wakeup", "synopsis": "", "usage": "private void Yaf_Loader::__wakeup ( void )", "url": "https://secure.php.net/manual/en/yaf-loader.wakeup.php"}, {"name": "Yaf_Plugin_Abstract::dispatchLoopShutdown", "synopsis": "This is the latest hook in Yaf plugin hook system, if a custom plugin implement this method, then it will be called after the dispatch loop finished.", "usage": "public void Yaf_Plugin_Abstract::dispatchLoopShutdown ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.dispatchloopshutdown.php"}, {"name": "Yaf_Plugin_Abstract::dispatchLoopStartup", "synopsis": "", "usage": "public void Yaf_Plugin_Abstract::dispatchLoopStartup ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.dispatchloopstartup.php"}, {"name": "Yaf_Plugin_Abstract::postDispatch", "synopsis": "", "usage": "public void Yaf_Plugin_Abstract::postDispatch ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.postdispatch.php"}, {"name": "Yaf_Plugin_Abstract::preDispatch", "synopsis": "", "usage": "public void Yaf_Plugin_Abstract::preDispatch ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.predispatch.php"}, {"name": "Yaf_Plugin_Abstract::preResponse", "synopsis": "", "usage": "public void Yaf_Plugin_Abstract::preResponse ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.preresponse.php"}, {"name": "Yaf_Plugin_Abstract::routerShutdown", "synopsis": "This hook will be trigged after the route process finished, this hook is usually used for login check.", "usage": "public void Yaf_Plugin_Abstract::routerShutdown ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.routershutdown.php"}, {"name": "Yaf_Plugin_Abstract::routerStartup", "synopsis": "This is the earliest hook in Yaf plugin hook system, if a custom plugin implement this method, then it will be called before routing a request.", "usage": "public void Yaf_Plugin_Abstract::routerStartup ( Yaf_Request_Abstract $request , Yaf_Response_Abstract $response )", "url": "https://secure.php.net/manual/en/yaf-plugin-abstract.routerstartup.php"}, {"name": "Yaf_Registry::__clone", "synopsis": "", "usage": "private void Yaf_Registry::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-registry.clone.php"}, {"name": "Yaf_Registry::__construct", "synopsis": "", "usage": "private Yaf_Registry::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-registry.construct.php"}, {"name": "Yaf_Registry::del", "synopsis": "Remove an item from registry", "usage": "public static void Yaf_Registry::del ( string $name )", "url": "https://secure.php.net/manual/en/yaf-registry.del.php"}, {"name": "Yaf_Registry::get", "synopsis": "Retrieve an item from registry", "usage": "public static mixed Yaf_Registry::get ( string $name )", "url": "https://secure.php.net/manual/en/yaf-registry.get.php"}, {"name": "Yaf_Registry::has", "synopsis": "Check whether an item exists", "usage": "public static bool Yaf_Registry::has ( string $name )", "url": "https://secure.php.net/manual/en/yaf-registry.has.php"}, {"name": "Yaf_Registry::set", "synopsis": "Add an item into registry", "usage": "public static bool Yaf_Registry::set ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-registry.set.php"}, {"name": "Yaf_Request_Abstract::getActionName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getActionName ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getactionname.php"}, {"name": "Yaf_Request_Abstract::getBaseUri", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getBaseUri ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getbaseuri.php"}, {"name": "Yaf_Request_Abstract::getControllerName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getControllerName ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getcontrollername.php"}, {"name": "Yaf_Request_Abstract::getEnv", "synopsis": "Retrieve ENV variable", "usage": "public void Yaf_Request_Abstract::getEnv ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getenv.php"}, {"name": "Yaf_Request_Abstract::getException", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getException ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getexception.php"}, {"name": "Yaf_Request_Abstract::getLanguage", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getLanguage ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getlanguage.php"}, {"name": "Yaf_Request_Abstract::getMethod", "synopsis": "", "usage": "public string Yaf_Request_Abstract::getMethod ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getmethod.php"}, {"name": "Yaf_Request_Abstract::getModuleName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getModuleName ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getmodulename.php"}, {"name": "Yaf_Request_Abstract::getParam", "synopsis": "", "usage": "public mixed Yaf_Request_Abstract::getParam ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getparam.php"}, {"name": "Yaf_Request_Abstract::getParams", "synopsis": "", "usage": "public array Yaf_Request_Abstract::getParams ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getparams.php"}, {"name": "Yaf_Request_Abstract::getRequestUri", "synopsis": "", "usage": "public void Yaf_Request_Abstract::getRequestUri ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getrequesturi.php"}, {"name": "Yaf_Request_Abstract::getServer", "synopsis": "Retrieve SERVER variable", "usage": "public void Yaf_Request_Abstract::getServer ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.getserver.php"}, {"name": "Yaf_Request_Abstract::isCli", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isCli ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.iscli.php"}, {"name": "Yaf_Request_Abstract::isDispatched", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isDispatched ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isdispatched.php"}, {"name": "Yaf_Request_Abstract::isGet", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isGet ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isget.php"}, {"name": "Yaf_Request_Abstract::isHead", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isHead ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.ishead.php"}, {"name": "Yaf_Request_Abstract::isOptions", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isOptions ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isoptions.php"}, {"name": "Yaf_Request_Abstract::isPost", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isPost ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.ispost.php"}, {"name": "Yaf_Request_Abstract::isPut", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isPut ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isput.php"}, {"name": "Yaf_Request_Abstract::isRouted", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isRouted ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isrouted.php"}, {"name": "Yaf_Request_Abstract::isXmlHttpRequest", "synopsis": "", "usage": "public bool Yaf_Request_Abstract::isXmlHttpRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.isxmlhttprequest.php"}, {"name": "Yaf_Request_Abstract::setActionName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setActionName ( string $action )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setactionname.php"}, {"name": "Yaf_Request_Abstract::setBaseUri", "synopsis": "Set base URI, base URI is used when doing routing, in routing phase request URI is used to route a request, while base URI is used to skip the leadding part(base URI) of request URI. That is, if comes a request with request URI a/b/c, then if you set base URI to \"a/b\", only \"/c\" will be used in routing phase.", "usage": "public bool Yaf_Request_Abstract::setBaseUri ( string $uir )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setbaseuri.php"}, {"name": "Yaf_Request_Abstract::setControllerName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setControllerName ( string $controller )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setcontrollername.php"}, {"name": "Yaf_Request_Abstract::setDispatched", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setDispatched ( void )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setdispatched.php"}, {"name": "Yaf_Request_Abstract::setModuleName", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setModuleName ( string $module )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setmodulename.php"}, {"name": "Yaf_Request_Abstract::setParam", "synopsis": "Set a parameter to request, which can be retrieved by Yaf_Request_Abstract::getParam()", "usage": "public bool Yaf_Request_Abstract::setParam ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setparam.php"}, {"name": "Yaf_Request_Abstract::setRequestUri", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setRequestUri ( string $uir )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setrequesturi.php"}, {"name": "Yaf_Request_Abstract::setRouted", "synopsis": "", "usage": "public void Yaf_Request_Abstract::setRouted ([ string $flag ] )", "url": "https://secure.php.net/manual/en/yaf-request-abstract.setrouted.php"}, {"name": "Yaf_Request_Http::__clone", "synopsis": "", "usage": "private void Yaf_Request_Http::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-request-http.clone.php"}, {"name": "Yaf_Request_Http::__construct", "synopsis": "", "usage": "public Yaf_Request_Http::__construct ([ string $request_uri [, string $base_uri ]] )", "url": "https://secure.php.net/manual/en/yaf-request-http.construct.php"}, {"name": "Yaf_Request_Http::get", "synopsis": "Retrieve variable from client, this method will search the name in request pramas, if the name is not found, then will search in POST, GET, Cookie, Server", "usage": "public mixed Yaf_Request_Http::get ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-http.get.php"}, {"name": "Yaf_Request_Http::getCookie", "synopsis": "Retrieve Cookie variable", "usage": "public mixed Yaf_Request_Http::getCookie ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-http.getcookie.php"}, {"name": "Yaf_Request_Http::getFiles", "synopsis": "", "usage": "public void Yaf_Request_Http::getFiles ( void )", "url": "https://secure.php.net/manual/en/yaf-request-http.getfiles.php"}, {"name": "Yaf_Request_Http::getPost", "synopsis": "Retrieve POST variable", "usage": "public mixed Yaf_Request_Http::getPost ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-http.getpost.php"}, {"name": "Yaf_Request_Http::getQuery", "synopsis": "Retrieve GET variable", "usage": "public mixed Yaf_Request_Http::getQuery ( string $name [, string $default ] )", "url": "https://secure.php.net/manual/en/yaf-request-http.getquery.php"}, {"name": "Yaf_Request_Http::getRaw", "synopsis": "Retrieve Raw request body", "usage": "public mixed Yaf_Request_Http::getRaw ( void )", "url": "https://secure.php.net/manual/en/yaf-request-http.getraw.php"}, {"name": "Yaf_Request_Http::getRequest", "synopsis": "", "usage": "public void Yaf_Request_Http::getRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-request-http.getrequest.php"}, {"name": "Yaf_Request_Http::isXmlHttpRequest", "synopsis": "Check the request whether it is a Ajax Request.", "usage": "public bool Yaf_Request_Http::isXmlHttpRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-request-http.isxmlhttprequest.php"}, {"name": "Yaf_Request_Simple::__clone", "synopsis": "", "usage": "private void Yaf_Request_Simple::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.clone.php"}, {"name": "Yaf_Request_Simple::__construct", "synopsis": "", "usage": "public Yaf_Request_Simple::__construct ([ string $method [, string $module [, string $controller [, string $action [, array $params ]]]]] )", "url": "https://secure.php.net/manual/en/yaf-request-simple.construct.php"}, {"name": "Yaf_Request_Simple::get", "synopsis": "", "usage": "public void Yaf_Request_Simple::get ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.get.php"}, {"name": "Yaf_Request_Simple::getCookie", "synopsis": "", "usage": "public void Yaf_Request_Simple::getCookie ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.getcookie.php"}, {"name": "Yaf_Request_Simple::getFiles", "synopsis": "", "usage": "public void Yaf_Request_Simple::getFiles ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.getfiles.php"}, {"name": "Yaf_Request_Simple::getPost", "synopsis": "", "usage": "public void Yaf_Request_Simple::getPost ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.getpost.php"}, {"name": "Yaf_Request_Simple::getQuery", "synopsis": "", "usage": "public void Yaf_Request_Simple::getQuery ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.getquery.php"}, {"name": "Yaf_Request_Simple::getRequest", "synopsis": "", "usage": "public void Yaf_Request_Simple::getRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.getrequest.php"}, {"name": "Yaf_Request_Simple::isXmlHttpRequest", "synopsis": "", "usage": "public void Yaf_Request_Simple::isXmlHttpRequest ( void )", "url": "https://secure.php.net/manual/en/yaf-request-simple.isxmlhttprequest.php"}, {"name": "Yaf_Response_Abstract::appendBody", "synopsis": "Append a content to a exists content block", "usage": "public bool Yaf_Response_Abstract::appendBody ( string $content [, string $key ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.appendbody.php"}, {"name": "Yaf_Response_Abstract::clearBody", "synopsis": "Clear existsed content", "usage": "public bool Yaf_Response_Abstract::clearBody ([ string $key ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.clearbody.php"}, {"name": "Yaf_Response_Abstract::clearHeaders", "synopsis": "", "usage": "public void Yaf_Response_Abstract::clearHeaders ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.clearheaders.php"}, {"name": "Yaf_Response_Abstract::__clone", "synopsis": "", "usage": "private void Yaf_Response_Abstract::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.clone.php"}, {"name": "Yaf_Response_Abstract::__construct", "synopsis": "", "usage": "public Yaf_Response_Abstract::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.construct.php"}, {"name": "Yaf_Response_Abstract::__destruct", "synopsis": "", "usage": "public void Yaf_Response_Abstract::__destruct ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.destruct.php"}, {"name": "Yaf_Response_Abstract::getBody", "synopsis": "Retrieve a exists content", "usage": "public mixed Yaf_Response_Abstract::getBody ([ string $key ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.getbody.php"}, {"name": "Yaf_Response_Abstract::getHeader", "synopsis": "", "usage": "public void Yaf_Response_Abstract::getHeader ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.getheader.php"}, {"name": "Yaf_Response_Abstract::prependBody", "synopsis": "prepend a content to a exists content block", "usage": "public bool Yaf_Response_Abstract::prependBody ( string $content [, string $key ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.prependbody.php"}, {"name": "Yaf_Response_Abstract::response", "synopsis": "send response", "usage": "public void Yaf_Response_Abstract::response ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.response.php"}, {"name": "Yaf_Response_Abstract::setAllHeaders", "synopsis": "", "usage": "protected void Yaf_Response_Abstract::setAllHeaders ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.setallheaders.php"}, {"name": "Yaf_Response_Abstract::setBody", "synopsis": "Set content to response", "usage": "public bool Yaf_Response_Abstract::setBody ( string $content [, string $key ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.setbody.php"}, {"name": "Yaf_Response_Abstract::setHeader", "synopsis": "Used to send a HTTP header", "usage": "public bool Yaf_Response_Abstract::setHeader ( string $name , string $value [, bool $replace ] )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.setheader.php"}, {"name": "Yaf_Response_Abstract::setRedirect", "synopsis": "", "usage": "public void Yaf_Response_Abstract::setRedirect ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.setredirect.php"}, {"name": "Yaf_Response_Abstract::__toString", "synopsis": "", "usage": "private string Yaf_Response_Abstract::__toString ( void )", "url": "https://secure.php.net/manual/en/yaf-response-abstract.tostring.php"}, {"name": "Yaf_Route_Interface::assemble", "synopsis": "this method returns a url according to the argument info, and append query strings to the url according to the argument query.", "usage": "abstract public string Yaf_Route_Interface::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-interface.assemble.php"}, {"name": "Yaf_Route_Interface::route", "synopsis": "Yaf_Route_Interface::route() is the only method that a custom route should implement.", "usage": "abstract public bool Yaf_Route_Interface::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-interface.route.php"}, {"name": "Yaf_Route_Map::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Map::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-map.assemble.php"}, {"name": "Yaf_Route_Map::__construct", "synopsis": "", "usage": "public Yaf_Route_Map::__construct ([ string $controller_prefer = FALSE [, string $delimiter = \"\" ]] )", "url": "https://secure.php.net/manual/en/yaf-route-map.construct.php"}, {"name": "Yaf_Route_Map::route", "synopsis": "", "usage": "public bool Yaf_Route_Map::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-map.route.php"}, {"name": "Yaf_Route_Regex::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Regex::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-regex.assemble.php"}, {"name": "Yaf_Route_Regex::__construct", "synopsis": "", "usage": "public Yaf_Route_Regex::__construct ( string $match , array $route [, array $map [, array $verify [, string $reverse ]]] )", "url": "https://secure.php.net/manual/en/yaf-route-regex.construct.php"}, {"name": "Yaf_Route_Regex::route", "synopsis": "Route a incoming request.", "usage": "public bool Yaf_Route_Regex::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-regex.route.php"}, {"name": "Yaf_Route_Rewrite::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Rewrite::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-rewrite.assemble.php"}, {"name": "Yaf_Route_Rewrite::__construct", "synopsis": "", "usage": "public Yaf_Route_Rewrite::__construct ( string $match , array $route [, array $verify ] )", "url": "https://secure.php.net/manual/en/yaf-route-rewrite.construct.php"}, {"name": "Yaf_Route_Rewrite::route", "synopsis": "", "usage": "public bool Yaf_Route_Rewrite::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-rewrite.route.php"}, {"name": "Yaf_Route_Simple::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Simple::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-simple.assemble.php"}, {"name": "Yaf_Route_Simple::__construct", "synopsis": "Yaf_Route_Simple will get route info from query string. and the parameters of this constructor will used as keys while searching for the route info in $_GET.", "usage": "public Yaf_Route_Simple::__construct ( string $module_name , string $controller_name , string $action_name )", "url": "https://secure.php.net/manual/en/yaf-route-simple.construct.php"}, {"name": "Yaf_Route_Simple::route", "synopsis": "see Yaf_Route_Simple::__construct()", "usage": "public bool Yaf_Route_Simple::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-simple.route.php"}, {"name": "Yaf_Route_Static::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Static::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-static.assemble.php"}, {"name": "Yaf_Route_Static::match", "synopsis": "", "usage": "public void Yaf_Route_Static::match ( string $uri )", "url": "https://secure.php.net/manual/en/yaf-route-static.match.php"}, {"name": "Yaf_Route_Static::route", "synopsis": "", "usage": "public bool Yaf_Route_Static::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-static.route.php"}, {"name": "Yaf_Route_Supervar::assemble", "synopsis": "Assemble a url.", "usage": "public string Yaf_Route_Supervar::assemble ( array $info [, array $query ] )", "url": "https://secure.php.net/manual/en/yaf-route-supervar.assemble.php"}, {"name": "Yaf_Route_Supervar::__construct", "synopsis": "Yaf_Route_Supervar is similar with Yaf_Route_Static, the difference is Yaf_Route_Supervar will look for path info in query string, and the parameter supervar_name is the key.", "usage": "public Yaf_Route_Supervar::__construct ( string $supervar_name )", "url": "https://secure.php.net/manual/en/yaf-route-supervar.construct.php"}, {"name": "Yaf_Route_Supervar::route", "synopsis": "", "usage": "public bool Yaf_Route_Supervar::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-route-supervar.route.php"}, {"name": "Yaf_Router::addConfig", "synopsis": "Add routes defined by configs into Yaf_Router's route stack", "usage": "public bool Yaf_Router::addConfig ( Yaf_Config_Abstract $config )", "url": "https://secure.php.net/manual/en/yaf-router.addconfig.php"}, {"name": "Yaf_Router::addRoute", "synopsis": "defaultly, Yaf_Router using a Yaf_Route_Static as its defualt route. you can add new routes into router's route stack by calling this method.", "usage": "public bool Yaf_Router::addRoute ( string $name , Yaf_Route_Abstract $route )", "url": "https://secure.php.net/manual/en/yaf-router.addroute.php"}, {"name": "Yaf_Router::__construct", "synopsis": "", "usage": "public Yaf_Router::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-router.construct.php"}, {"name": "Yaf_Router::getCurrentRoute", "synopsis": "Get the name of the route which is effective in the route process.", "usage": "public string Yaf_Router::getCurrentRoute ( void )", "url": "https://secure.php.net/manual/en/yaf-router.getcurrentroute.php"}, {"name": "Yaf_Router::getRoute", "synopsis": "Retrieve a route by name, see also Yaf_Router::getCurrentRoute()", "usage": "public Yaf_Route_Interface Yaf_Router::getRoute ( string $name )", "url": "https://secure.php.net/manual/en/yaf-router.getroute.php"}, {"name": "Yaf_Router::getRoutes", "synopsis": "Retrieve registered routes", "usage": "public mixed Yaf_Router::getRoutes ( void )", "url": "https://secure.php.net/manual/en/yaf-router.getroutes.php"}, {"name": "Yaf_Router::route", "synopsis": "", "usage": "public bool Yaf_Router::route ( Yaf_Request_Abstract $request )", "url": "https://secure.php.net/manual/en/yaf-router.route.php"}, {"name": "Yaf_Session::__clone", "synopsis": "", "usage": "private void Yaf_Session::__clone ( void )", "url": "https://secure.php.net/manual/en/yaf-session.clone.php"}, {"name": "Yaf_Session::__construct", "synopsis": "", "usage": "private Yaf_Session::__construct ( void )", "url": "https://secure.php.net/manual/en/yaf-session.construct.php"}, {"name": "Yaf_Session::count", "synopsis": "", "usage": "public void Yaf_Session::count ( void )", "url": "https://secure.php.net/manual/en/yaf-session.count.php"}, {"name": "Yaf_Session::current", "synopsis": "", "usage": "public void Yaf_Session::current ( void )", "url": "https://secure.php.net/manual/en/yaf-session.current.php"}, {"name": "Yaf_Session::del", "synopsis": "", "usage": "public void Yaf_Session::del ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.del.php"}, {"name": "Yaf_Session::__get", "synopsis": "", "usage": "public void Yaf_Session::__get ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.get.php"}, {"name": "Yaf_Session::getInstance", "synopsis": "", "usage": "public static void Yaf_Session::getInstance ( void )", "url": "https://secure.php.net/manual/en/yaf-session.getinstance.php"}, {"name": "Yaf_Session::has", "synopsis": "", "usage": "public void Yaf_Session::has ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.has.php"}, {"name": "Yaf_Session::__isset", "synopsis": "", "usage": "public void Yaf_Session::__isset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.isset.php"}, {"name": "Yaf_Session::key", "synopsis": "", "usage": "public void Yaf_Session::key ( void )", "url": "https://secure.php.net/manual/en/yaf-session.key.php"}, {"name": "Yaf_Session::next", "synopsis": "", "usage": "public void Yaf_Session::next ( void )", "url": "https://secure.php.net/manual/en/yaf-session.next.php"}, {"name": "Yaf_Session::offsetExists", "synopsis": "", "usage": "public void Yaf_Session::offsetExists ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.offsetexists.php"}, {"name": "Yaf_Session::offsetGet", "synopsis": "", "usage": "public void Yaf_Session::offsetGet ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.offsetget.php"}, {"name": "Yaf_Session::offsetSet", "synopsis": "", "usage": "public void Yaf_Session::offsetSet ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-session.offsetset.php"}, {"name": "Yaf_Session::offsetUnset", "synopsis": "", "usage": "public void Yaf_Session::offsetUnset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.offsetunset.php"}, {"name": "Yaf_Session::rewind", "synopsis": "", "usage": "public void Yaf_Session::rewind ( void )", "url": "https://secure.php.net/manual/en/yaf-session.rewind.php"}, {"name": "Yaf_Session::__set", "synopsis": "", "usage": "public void Yaf_Session::__set ( string $name , string $value )", "url": "https://secure.php.net/manual/en/yaf-session.set.php"}, {"name": "Yaf_Session::__sleep", "synopsis": "", "usage": "private void Yaf_Session::__sleep ( void )", "url": "https://secure.php.net/manual/en/yaf-session.sleep.php"}, {"name": "Yaf_Session::start", "synopsis": "", "usage": "public void Yaf_Session::start ( void )", "url": "https://secure.php.net/manual/en/yaf-session.start.php"}, {"name": "Yaf_Session::__unset", "synopsis": "", "usage": "public void Yaf_Session::__unset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-session.unset.php"}, {"name": "Yaf_Session::valid", "synopsis": "", "usage": "public void Yaf_Session::valid ( void )", "url": "https://secure.php.net/manual/en/yaf-session.valid.php"}, {"name": "Yaf_Session::__wakeup", "synopsis": "", "usage": "private void Yaf_Session::__wakeup ( void )", "url": "https://secure.php.net/manual/en/yaf-session.wakeup.php"}, {"name": "Yaf_View_Interface::assign", "synopsis": "Assigan values to View engine, then the value can access directly by name in template.", "usage": "abstract public bool Yaf_View_Interface::assign ( string $name [, string $value ] )", "url": "https://secure.php.net/manual/en/yaf-view-interface.assign.php"}, {"name": "Yaf_View_Interface::display", "synopsis": "Render a template and output the result immediatly.", "usage": "abstract public bool Yaf_View_Interface::display ( string $tpl [, array $tpl_vars ] )", "url": "https://secure.php.net/manual/en/yaf-view-interface.display.php"}, {"name": "Yaf_View_Interface::getScriptPath", "synopsis": "", "usage": "abstract public void Yaf_View_Interface::getScriptPath ( void )", "url": "https://secure.php.net/manual/en/yaf-view-interface.getscriptpath.php"}, {"name": "Yaf_View_Interface::render", "synopsis": "Render a template and return the result.", "usage": "abstract public string Yaf_View_Interface::render ( string $tpl [, array $tpl_vars ] )", "url": "https://secure.php.net/manual/en/yaf-view-interface.render.php"}, {"name": "Yaf_View_Interface::setScriptPath", "synopsis": "Set the templates base directory, this is usually called by Yaf_Dispatcher", "usage": "abstract public void Yaf_View_Interface::setScriptPath ( string $template_dir )", "url": "https://secure.php.net/manual/en/yaf-view-interface.setscriptpath.php"}, {"name": "Yaf_View_Simple::assign", "synopsis": "assign variable to view engine", "usage": "public bool Yaf_View_Simple::assign ( string $name [, mixed $value ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.assign.php"}, {"name": "Yaf_View_Simple::assignRef", "synopsis": "unlike Yaf_View_Simple::assign(), this method assign a ref value to engine.", "usage": "public bool Yaf_View_Simple::assignRef ( string $name , mixed &$value )", "url": "https://secure.php.net/manual/en/yaf-view-simple.assignref.php"}, {"name": "Yaf_View_Simple::clear", "synopsis": "clear assigned variable", "usage": "public bool Yaf_View_Simple::clear ([ string $name ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.clear.php"}, {"name": "Yaf_View_Simple::__construct", "synopsis": "", "usage": "final public Yaf_View_Simple::__construct ( string $template_dir [, array $options ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.construct.php"}, {"name": "Yaf_View_Simple::display", "synopsis": "Render a template and display the result instantly.", "usage": "public bool Yaf_View_Simple::display ( string $tpl [, array $tpl_vars ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.display.php"}, {"name": "Yaf_View_Simple::eval", "synopsis": "Render a string tempalte and return the result.", "usage": "public string Yaf_View_Simple::eval ( string $tpl_content [, array $tpl_vars ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.eval.php"}, {"name": "Yaf_View_Simple::__get", "synopsis": "Retrieve assigned varaiable", "usage": "public void Yaf_View_Simple::__get ([ string $name ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.get.php"}, {"name": "Yaf_View_Simple::getScriptPath", "synopsis": "", "usage": "public string Yaf_View_Simple::getScriptPath ( void )", "url": "https://secure.php.net/manual/en/yaf-view-simple.getscriptpath.php"}, {"name": "Yaf_View_Simple::__isset", "synopsis": "", "usage": "public void Yaf_View_Simple::__isset ( string $name )", "url": "https://secure.php.net/manual/en/yaf-view-simple.isset.php"}, {"name": "Yaf_View_Simple::render", "synopsis": "Render a template and return the result.", "usage": "public string Yaf_View_Simple::render ( string $tpl [, array $tpl_vars ] )", "url": "https://secure.php.net/manual/en/yaf-view-simple.render.php"}, {"name": "Yaf_View_Simple::__set", "synopsis": "This is a alternative and easier way to Yaf_View_Simple::assign().", "usage": "public void Yaf_View_Simple::__set ( string $name , mixed $value )", "url": "https://secure.php.net/manual/en/yaf-view-simple.set.php"}, {"name": "Yaf_View_Simple::setScriptPath", "synopsis": "", "usage": "public bool Yaf_View_Simple::setScriptPath ( string $template_dir )", "url": "https://secure.php.net/manual/en/yaf-view-simple.setscriptpath.php"}, {"name": "Yar_Client_Exception::getType", "synopsis": "", "usage": "public string Yar_Client_Exception::getType ( void )", "url": "https://secure.php.net/manual/en/yar-client-exception.gettype.php"}, {"name": "Yar_Client::__call", "synopsis": "Issue a call to remote RPC method.", "usage": "public void Yar_Client::__call ( string $method , array $parameters )", "url": "https://secure.php.net/manual/en/yar-client.call.php"}, {"name": "Yar_Client::__construct", "synopsis": "Create a Yar_Client to a Yar_Server.", "usage": "final public Yar_Client::__construct ( string $url [, array $options ] )", "url": "https://secure.php.net/manual/en/yar-client.construct.php"}, {"name": "Yar_Client::setOpt", "synopsis": "", "usage": "public Yar_Client Yar_Client::setOpt ( int $name , mixed $value )", "url": "https://secure.php.net/manual/en/yar-client.setopt.php"}, {"name": "Yar_Concurrent_Client::call", "synopsis": "Register a RPC call, but won't sent it immediately, it will be send while further call to Yar_Concurrent_Client::loop()", "usage": "public static int Yar_Concurrent_Client::call ( string $uri , string $method [, array $parameters [, callable $callback [, callable $error_callback [, array $options ]]]] )", "url": "https://secure.php.net/manual/en/yar-concurrent-client.call.php"}, {"name": "Yar_Concurrent_Client::loop", "synopsis": "Send all registed remote RPC calls.", "usage": "public static bool Yar_Concurrent_Client::loop ([ callable $callback [, callable $error_callback ]] )", "url": "https://secure.php.net/manual/en/yar-concurrent-client.loop.php"}, {"name": "Yar_Concurrent_Client::reset", "synopsis": "Clean all registered calls", "usage": "public static bool Yar_Concurrent_Client::reset ( void )", "url": "https://secure.php.net/manual/en/yar-concurrent-client.reset.php"}, {"name": "Yar_Server_Exception::getType", "synopsis": "Get the exception original type threw by server", "usage": "public string Yar_Server_Exception::getType ( void )", "url": "https://secure.php.net/manual/en/yar-server-exception.gettype.php"}, {"name": "Yar_Server::__construct", "synopsis": "Set up a Yar HTTP RPC Server, All the public methods of $obj will be register as a RPC service.", "usage": "final public Yar_Server::__construct ( Object $obj )", "url": "https://secure.php.net/manual/en/yar-server.construct.php"}, {"name": "Yar_Server::handle", "synopsis": "Start a RPC HTTP server, and ready for accpet RPC requests.", "usage": "public bool Yar_Server::handle ( void )", "url": "https://secure.php.net/manual/en/yar-server.handle.php"}, {"name": "ZipArchive::addEmptyDir", "synopsis": "Adds an empty directory in the archive.", "usage": "bool ZipArchive::addEmptyDir ( string $dirname )", "url": "https://secure.php.net/manual/en/ziparchive.addemptydir.php"}, {"name": "ZipArchive::addFile", "synopsis": "Adds a file to a ZIP archive from a given path.", "usage": "bool ZipArchive::addFile ( string $filename [, string $localname = NULL [, int $start = 0 [, int $length = 0 ]]] )", "url": "https://secure.php.net/manual/en/ziparchive.addfile.php"}, {"name": "ZipArchive::addFromString", "synopsis": "Add a file to a ZIP archive using its contents.", "usage": "bool ZipArchive::addFromString ( string $localname , string $contents )", "url": "https://secure.php.net/manual/en/ziparchive.addfromstring.php"}, {"name": "ZipArchive::addGlob", "synopsis": "Add files from a directory which match the glob pattern.", "usage": "bool ZipArchive::addGlob ( string $pattern [, int $flags = 0 [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/ziparchive.addglob.php"}, {"name": "ZipArchive::addPattern", "synopsis": "Add files from a directory which match the regular expression pattern. The operation is not recursive. The pattern will be matched against the file name only.", "usage": "bool ZipArchive::addPattern ( string $pattern [, string $path = \".\" [, array $options = array() ]] )", "url": "https://secure.php.net/manual/en/ziparchive.addpattern.php"}, {"name": "ZipArchive::close", "synopsis": "Close opened or created archive and save changes. This method is automatically called at the end of the script.", "usage": "bool ZipArchive::close ( void )", "url": "https://secure.php.net/manual/en/ziparchive.close.php"}, {"name": "ZipArchive::count", "synopsis": null, "usage": "public int ZipArchive::count ( void )", "url": "https://secure.php.net/manual/en/ziparchive.count.php"}, {"name": "ZipArchive::deleteIndex", "synopsis": "Delete an entry in the archive using its index.", "usage": "bool ZipArchive::deleteIndex ( int $index )", "url": "https://secure.php.net/manual/en/ziparchive.deleteindex.php"}, {"name": "ZipArchive::deleteName", "synopsis": "Delete an entry in the archive using its name.", "usage": "bool ZipArchive::deleteName ( string $name )", "url": "https://secure.php.net/manual/en/ziparchive.deletename.php"}, {"name": "ZipArchive::extractTo", "synopsis": "Extract the complete archive or the given files to the specified destination.", "usage": "bool ZipArchive::extractTo ( string $destination [, mixed $entries ] )", "url": "https://secure.php.net/manual/en/ziparchive.extractto.php"}, {"name": "ZipArchive::getArchiveComment", "synopsis": "Returns the Zip archive comment.", "usage": "string ZipArchive::getArchiveComment ([ int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getarchivecomment.php"}, {"name": "ZipArchive::getCommentIndex", "synopsis": "Returns the comment of an entry using the entry index.", "usage": "string ZipArchive::getCommentIndex ( int $index [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getcommentindex.php"}, {"name": "ZipArchive::getCommentName", "synopsis": "Returns the comment of an entry using the entry name.", "usage": "string ZipArchive::getCommentName ( string $name [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getcommentname.php"}, {"name": "ZipArchive::GetExternalAttributesIndex", "synopsis": "Retrieve the external attributes of an entry defined by its index.", "usage": "bool ZipArchive::GetExternalAttributesIndex ( int $index , int &$opsys , int &$attr [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getexternalattributesindex.php"}, {"name": "ZipArchive::getExternalAttributesName", "synopsis": "Retrieve the external attributes of an entry defined by its name.", "usage": "bool ZipArchive::getExternalAttributesName ( string $name , int &$opsys , int &$attr [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getexternalattributesname.php"}, {"name": "ZipArchive::getFromIndex", "synopsis": "Returns the entry contents using its index.", "usage": "string ZipArchive::getFromIndex ( int $index [, int $length = 0 [, int $flags ]] )", "url": "https://secure.php.net/manual/en/ziparchive.getfromindex.php"}, {"name": "ZipArchive::getFromName", "synopsis": "Returns the entry contents using its name.", "usage": "string ZipArchive::getFromName ( string $name [, int $length = 0 [, int $flags ]] )", "url": "https://secure.php.net/manual/en/ziparchive.getfromname.php"}, {"name": "ZipArchive::getNameIndex", "synopsis": "Returns the name of an entry using its index.", "usage": "string ZipArchive::getNameIndex ( int $index [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.getnameindex.php"}, {"name": "ZipArchive::getStatusString", "synopsis": "Returns the status error message, system and/or zip messages.", "usage": "string ZipArchive::getStatusString ( void )", "url": "https://secure.php.net/manual/en/ziparchive.getstatusstring.php"}, {"name": "ZipArchive::getStream", "synopsis": "Get a file handler to the entry defined by its name. For now it only supports read operations.", "usage": "resource ZipArchive::getStream ( string $name )", "url": "https://secure.php.net/manual/en/ziparchive.getstream.php"}, {"name": "ZipArchive::locateName", "synopsis": "Locates an entry using its name.", "usage": "int ZipArchive::locateName ( string $name [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.locatename.php"}, {"name": "ZipArchive::open", "synopsis": "Opens a new zip archive for reading, writing or modifying.", "usage": "mixed ZipArchive::open ( string $filename [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.open.php"}, {"name": "ZipArchive::renameIndex", "synopsis": "Renames an entry defined by its index.", "usage": "bool ZipArchive::renameIndex ( int $index , string $newname )", "url": "https://secure.php.net/manual/en/ziparchive.renameindex.php"}, {"name": "ZipArchive::renameName", "synopsis": "Renames an entry defined by its name.", "usage": "bool ZipArchive::renameName ( string $name , string $newname )", "url": "https://secure.php.net/manual/en/ziparchive.renamename.php"}, {"name": "ZipArchive::setArchiveComment", "synopsis": "Set the comment of a ZIP archive.", "usage": "bool ZipArchive::setArchiveComment ( string $comment )", "url": "https://secure.php.net/manual/en/ziparchive.setarchivecomment.php"}, {"name": "ZipArchive::setCommentIndex", "synopsis": "Set the comment of an entry defined by its index.", "usage": "bool ZipArchive::setCommentIndex ( int $index , string $comment )", "url": "https://secure.php.net/manual/en/ziparchive.setcommentindex.php"}, {"name": "ZipArchive::setCommentName", "synopsis": "Set the comment of an entry defined by its name.", "usage": "bool ZipArchive::setCommentName ( string $name , string $comment )", "url": "https://secure.php.net/manual/en/ziparchive.setcommentname.php"}, {"name": "ZipArchive::setCompressionIndex", "synopsis": "Set the compression method of an entry defined by its index.", "usage": "bool ZipArchive::setCompressionIndex ( int $index , int $comp_method [, int $comp_flags = 0 ] )", "url": "https://secure.php.net/manual/en/ziparchive.setcompressionindex.php"}, {"name": "ZipArchive::setCompressionName", "synopsis": "Set the compression method of an entry defined by its name.", "usage": "bool ZipArchive::setCompressionName ( string $name , int $comp_method [, int $comp_flags = 0 ] )", "url": "https://secure.php.net/manual/en/ziparchive.setcompressionname.php"}, {"name": "ZipArchive::setEncryptionIndex", "synopsis": "Set the encryption method of an entry defined by its index.", "usage": "bool ZipArchive::setEncryptionIndex ( int $index , string $method [, string $password ] )", "url": "https://secure.php.net/manual/en/ziparchive.setencryptionindex.php"}, {"name": "ZipArchive::setEncryptionName", "synopsis": "Set the encryption method of an entry defined by its name.", "usage": "bool ZipArchive::setEncryptionName ( string $name , int $method [, string $password ] )", "url": "https://secure.php.net/manual/en/ziparchive.setencryptionname.php"}, {"name": "ZipArchive::setExternalAttributesIndex", "synopsis": "Set the external attributes of an entry defined by its index.", "usage": "bool ZipArchive::setExternalAttributesIndex ( int $index , int $opsys , int $attr [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.setexternalattributesindex.php"}, {"name": "ZipArchive::setExternalAttributesName", "synopsis": "Set the external attributes of an entry defined by its name.", "usage": "bool ZipArchive::setExternalAttributesName ( string $name , int $opsys , int $attr [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.setexternalattributesname.php"}, {"name": "ZipArchive::setPassword", "synopsis": "Sets the password for the active archive.", "usage": "public bool ZipArchive::setPassword ( string $password )", "url": "https://secure.php.net/manual/en/ziparchive.setpassword.php"}, {"name": "ZipArchive::statIndex", "synopsis": "The function obtains information about the entry defined by its index.", "usage": "array ZipArchive::statIndex ( int $index [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.statindex.php"}, {"name": "ZipArchive::statName", "synopsis": "The function obtains information about the entry defined by its name.", "usage": "array ZipArchive::statName ( string $name [, int $flags ] )", "url": "https://secure.php.net/manual/en/ziparchive.statname.php"}, {"name": "ZipArchive::unchangeAll", "synopsis": "Undo all changes done in the archive.", "usage": "bool ZipArchive::unchangeAll ( void )", "url": "https://secure.php.net/manual/en/ziparchive.unchangeall.php"}, {"name": "ZipArchive::unchangeArchive", "synopsis": "Revert all global changes to the archive. For now, this only reverts archive comment changes.", "usage": "bool ZipArchive::unchangeArchive ( void )", "url": "https://secure.php.net/manual/en/ziparchive.unchangearchive.php"}, {"name": "ZipArchive::unchangeIndex", "synopsis": "Revert all changes done to an entry at the given index.", "usage": "bool ZipArchive::unchangeIndex ( int $index )", "url": "https://secure.php.net/manual/en/ziparchive.unchangeindex.php"}, {"name": "ZipArchive::unchangeName", "synopsis": "Revert all changes done to an entry.", "usage": "bool ZipArchive::unchangeName ( string $name )", "url": "https://secure.php.net/manual/en/ziparchive.unchangename.php"}, {"name": "ZMQ::__construct", "synopsis": "Private constructor to prevent direct initialization. This class holds the constants for ZMQ extension.", "usage": "privateZMQ::__construct ( void )", "url": "https://secure.php.net/manual/en/zmq.construct.php"}, {"name": "ZMQContext::__construct", "synopsis": "Constructs a new ZMQ context. The context is used to initialize sockets. A persistent context is required to initialize persistent sockets.", "usage": "ZMQContext::__construct ([ int $io_threads = 1 [, bool $is_persistent = TRUE ]] )", "url": "https://secure.php.net/manual/en/zmqcontext.construct.php"}, {"name": "ZMQContext::getOpt", "synopsis": "Returns the value of a context option.", "usage": "public mixed ZMQContext::getOpt ( string $key )", "url": "https://secure.php.net/manual/en/zmqcontext.getopt.php"}, {"name": "ZMQContext::getSocket", "synopsis": "Shortcut for creating new sockets from the context. If the context is not persistent the persistent_id parameter is ignored and the socket falls back to being non-persistent. The on_new_socket is called only when a new underlying socket structure is created.", "usage": "public ZMQSocket ZMQContext::getSocket ( int $type [, string $persistent_id = NULL [, callback $on_new_socket = NULL ]] )", "url": "https://secure.php.net/manual/en/zmqcontext.getsocket.php"}, {"name": "ZMQContext::isPersistent", "synopsis": "Whether the context is persistent. Persistent context is needed for persistent connections as each socket is allocated from a context.", "usage": "public bool ZMQContext::isPersistent ( void )", "url": "https://secure.php.net/manual/en/zmqcontext.ispersistent.php"}, {"name": "ZMQContext::setOpt", "synopsis": "Sets a ZMQ context option. The type of the value depends on the key. See ZMQ Constant Types for more information.", "usage": "public ZMQContext ZMQContext::setOpt ( int $key , mixed $value )", "url": "https://secure.php.net/manual/en/zmqcontext.setopt.php"}, {"name": "ZMQDevice::__construct", "synopsis": "\"\u00d8MQ devices can do intermediation of addresses, services, queues, or any other abstraction you care to define above the message and socket layers.\" -- zguide", "usage": "ZMQDevice::__construct ( ZMQSocket $frontend , ZMQSocket $backend [, ZMQSocket $listener ] )", "url": "https://secure.php.net/manual/en/zmqdevice.construct.php"}, {"name": "ZMQDevice::getIdleTimeout", "synopsis": "Gets the idle callback timeout value. Added in ZMQ extension version 1.1.0.", "usage": "public ZMQDevice ZMQDevice::getIdleTimeout ( void )", "url": "https://secure.php.net/manual/en/zmqdevice.getidletimeout.php"}, {"name": "ZMQDevice::getTimerTimeout", "synopsis": "Gets the timer callback timeout value. Added in ZMQ extension version 1.1.0.", "usage": "public ZMQDevice ZMQDevice::getTimerTimeout ( void )", "url": "https://secure.php.net/manual/en/zmqdevice.gettimertimeout.php"}, {"name": "ZMQDevice::run", "synopsis": "Runs the device.", "usage": "public void ZMQDevice::run ( void )", "url": "https://secure.php.net/manual/en/zmqdevice.run.php"}, {"name": "ZMQDevice::setIdleCallback", "synopsis": "Sets the idle callback function. If idle timeout is defined the idle callback function shall be called if the internal poll loop times out without events. If the callback function returns false or a value that evaluates to false the device is stopped. The callback function signature is callback (mixed $user_data).", "usage": "public ZMQDevice ZMQDevice::setIdleCallback ( callable $cb_func , int $timeout [, mixed $user_data ] )", "url": "https://secure.php.net/manual/en/zmqdevice.setidlecallback.php"}, {"name": "ZMQDevice::setIdleTimeout", "synopsis": "Sets the idle callback timeout value. The idle callback is invoked periodically when the device is idle.", "usage": "public ZMQDevice ZMQDevice::setIdleTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/zmqdevice.setidletimeout.php"}, {"name": "ZMQDevice::setTimerCallback", "synopsis": "Sets the timer callback function. The timer callback will be invoked after timeout has passed. The difference between idle and timer callbacks are that idle callback is invoked only when the device is idle. The callback function signature is callback (mixed $user_data). Added in ZMQ extension version 1.1.0.", "usage": "public ZMQDevice ZMQDevice::setTimerCallback ( callable $cb_func , int $timeout [, mixed $user_data ] )", "url": "https://secure.php.net/manual/en/zmqdevice.settimercallback.php"}, {"name": "ZMQDevice::setTimerTimeout", "synopsis": "Sets the timer callback timeout value. The timer callback is invoked periodically if it's set. Added in ZMQ extension version 1.1.0.", "usage": "public ZMQDevice ZMQDevice::setTimerTimeout ( int $timeout )", "url": "https://secure.php.net/manual/en/zmqdevice.settimertimeout.php"}, {"name": "ZMQPoll::add", "synopsis": "Adds a new item to the poll set and returns the internal id of the added item. The item can be removed from the poll set using the returned string id.", "usage": "public string ZMQPoll::add ( mixed $entry , int $type )", "url": "https://secure.php.net/manual/en/zmqpoll.add.php"}, {"name": "ZMQPoll::clear", "synopsis": "Clears all elements from the poll set.", "usage": "public ZMQPoll ZMQPoll::clear ( void )", "url": "https://secure.php.net/manual/en/zmqpoll.clear.php"}, {"name": "ZMQPoll::count", "synopsis": "Count the items in the poll set.", "usage": "public int ZMQPoll::count ( void )", "url": "https://secure.php.net/manual/en/zmqpoll.count.php"}, {"name": "ZMQPoll::getLastErrors", "synopsis": "Returns the ids of the objects that had errors in the last poll.", "usage": "public array ZMQPoll::getLastErrors ( void )", "url": "https://secure.php.net/manual/en/zmqpoll.getlasterrors.php"}, {"name": "ZMQPoll::poll", "synopsis": "Polls the items in the current poll set. The readable and writable items are returned in the readable and writable parameters. ZMQPoll::getLastErrors() can be used to check if there were errors.", "usage": "public int ZMQPoll::poll ( array &$readable , array &$writable [, int $timeout = -1 ] )", "url": "https://secure.php.net/manual/en/zmqpoll.poll.php"}, {"name": "ZMQPoll::remove", "synopsis": "Remove item from the poll set. The item parameter can be ZMQSocket object, a stream resource or the id returned from ZMQPoll::add() method.", "usage": "public bool ZMQPoll::remove ( mixed $item )", "url": "https://secure.php.net/manual/en/zmqpoll.remove.php"}, {"name": "ZMQSocket::bind", "synopsis": "Bind the socket to an endpoint. The endpoint is defined in format transport://address where transport is one of the following: inproc, ipc, tcp, pgm or epgm.", "usage": "public ZMQSocket ZMQSocket::bind ( string $dsn [, bool $force = FALSE ] )", "url": "https://secure.php.net/manual/en/zmqsocket.bind.php"}, {"name": "ZMQSocket::connect", "synopsis": "Connect the socket to a remote endpoint. The endpoint is defined in format transport://address where transport is one of the following: inproc, ipc, tcp, pgm or epgm.", "usage": "public ZMQSocket ZMQSocket::connect ( string $dsn [, bool $force = FALSE ] )", "url": "https://secure.php.net/manual/en/zmqsocket.connect.php"}, {"name": "ZMQSocket::__construct", "synopsis": "Constructs a ZMQSocket object. persistent_id parameter can be used to allocated a persistent socket. A persistent socket has to be allocated from a persistent context and it stays connected over multiple requests. The persistent_id parameter can be used to recall the same socket over multiple requests. The on_new_socket is called only when a new underlying socket structure is created.", "usage": "ZMQSocket::__construct ( ZMQContext $context , int $type [, string $persistent_id = NULL [, callback $on_new_socket = NULL ]] )", "url": "https://secure.php.net/manual/en/zmqsocket.construct.php"}, {"name": "ZMQSocket::disconnect", "synopsis": "Disconnect the socket from a previously connected remote endpoint. The endpoint is defined in format transport://address where transport is one of the following: inproc, ipc, tcp, pgm or epgm.", "usage": "public ZMQSocket ZMQSocket::disconnect ( string $dsn )", "url": "https://secure.php.net/manual/en/zmqsocket.disconnect.php"}, {"name": "ZMQSocket::getEndpoints", "synopsis": "Returns a list of endpoints where the socket is connected or bound to.", "usage": "public array ZMQSocket::getEndpoints ( void )", "url": "https://secure.php.net/manual/en/zmqsocket.getendpoints.php"}, {"name": "ZMQSocket::getPersistentId", "synopsis": "Returns the persistent id of the socket.", "usage": "public string ZMQSocket::getPersistentId ( void )", "url": "https://secure.php.net/manual/en/zmqsocket.getpersistentid.php"}, {"name": "ZMQSocket::getSocketType", "synopsis": "Gets the socket type.", "usage": "public int ZMQSocket::getSocketType ( void )", "url": "https://secure.php.net/manual/en/zmqsocket.getsockettype.php"}, {"name": "ZMQSocket::getSockOpt", "synopsis": "Returns the value of a socket option.", "usage": "public mixed ZMQSocket::getSockOpt ( string $key )", "url": "https://secure.php.net/manual/en/zmqsocket.getsockopt.php"}, {"name": "ZMQSocket::isPersistent", "synopsis": "Check whether the socket is persistent.", "usage": "public bool ZMQSocket::isPersistent ( void )", "url": "https://secure.php.net/manual/en/zmqsocket.ispersistent.php"}, {"name": "ZMQSocket::recv", "synopsis": "Receive a message from a socket. By default receiving will block until a message is available unless ZMQ::MODE_NOBLOCK flag is used. ZMQ::SOCKOPT_RCVMORE socket option can be used for receiving multi-part messages. See ZMQSocket::setSockOpt() for more information.", "usage": "public string ZMQSocket::recv ([ int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/zmqsocket.recv.php"}, {"name": "ZMQSocket::recvMulti", "synopsis": "Receive an array multipart message from a socket. By default receiving will block until a message is available unless ZMQ::MODE_NOBLOCK flag is used.", "usage": "public string ZMQSocket::recvMulti ([ int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/zmqsocket.recvmulti.php"}, {"name": "ZMQSocket::send", "synopsis": "Send a message using the socket. The operation can block unless ZMQ::MODE_NOBLOCK is used.", "usage": "public ZMQSocket ZMQSocket::send ( string $message [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/zmqsocket.send.php"}, {"name": "ZMQSocket::send", "synopsis": "Send a multipart message using the socket. The operation can block unless ZMQ::MODE_NOBLOCK is used.", "usage": "public ZMQSocket ZMQSocket::send ( array $message [, int $mode = 0 ] )", "url": "https://secure.php.net/manual/en/zmqsocket.sendmulti.php"}, {"name": "ZMQSocket::setSockOpt", "synopsis": "Sets a ZMQ socket option. The type of the value depends on the key. See ZMQ Constant Types for more information.", "usage": "public ZMQSocket ZMQSocket::setSockOpt ( int $key , mixed $value )", "url": "https://secure.php.net/manual/en/zmqsocket.setsockopt.php"}, {"name": "ZMQSocket::unbind", "synopsis": "Unbind the socket from an endpoint. The endpoint is defined in format transport://address where transport is one of the following: inproc, ipc, tcp, pgm or epgm.", "usage": "public ZMQSocket ZMQSocket::unbind ( string $dsn )", "url": "https://secure.php.net/manual/en/zmqsocket.unbind.php"}, {"name": "Zookeeper::addAuth", "synopsis": "The application calls this function to specify its credentials for purposes of authentication. The server will use the security provider specified by the scheme parameter to authenticate the client connection. If the authentication request has failed: - the server connection is dropped. - the watcher is called with the ZOO_AUTH_FAILED_STATE value as the state parameter.", "usage": "public bool Zookeeper::addAuth ( string $scheme , string $cert [, callable $completion_cb = NULL ] )", "url": "https://secure.php.net/manual/en/zookeeper.addauth.php"}, {"name": "Zookeeper::connect", "synopsis": "This method creates a new handle and a zookeeper session that corresponds to that handle. Session establishment is asynchronous, meaning that the session should not be considered established until (and unless) an event of state ZOO_CONNECTED_STATE is received.", "usage": "public void Zookeeper::connect ( string $host [, callable $watcher_cb = NULL [, int $recv_timeout = 10000 ]] )", "url": "https://secure.php.net/manual/en/zookeeper.connect.php"}, {"name": "Zookeeper::create", "synopsis": "This method will create a node in ZooKeeper. A node can only be created if it does not already exists. The Create Flags affect the creation of nodes. If ZOO_EPHEMERAL flag is set, the node will automatically get removed if the client session goes away. If the ZOO_SEQUENCE flag is set, a unique monotonically increasing sequence number is appended to the path name.", "usage": "public string Zookeeper::create ( string $path , string $value , array $acls [, int $flags = NULL ] )", "url": "https://secure.php.net/manual/en/zookeeper.create.php"}, {"name": "Zookeeper::delete", "synopsis": null, "usage": "public bool Zookeeper::delete ( string $path [, int $version = -1 ] )", "url": "https://secure.php.net/manual/en/zookeeper.delete.php"}, {"name": "Zookeeper::exists", "synopsis": null, "usage": "public bool Zookeeper::exists ( string $path [, callable $watcher_cb = NULL ] )", "url": "https://secure.php.net/manual/en/zookeeper.exists.php"}, {"name": "Zookeeper::get", "synopsis": null, "usage": "public string Zookeeper::get ( string $path [, callable $watcher_cb = NULL [, array &$stat = NULL [, int $max_size = 0 ]]] )", "url": "https://secure.php.net/manual/en/zookeeper.get.php"}, {"name": "Zookeeper::getAcl", "synopsis": null, "usage": "public array Zookeeper::getAcl ( string $path )", "url": "https://secure.php.net/manual/en/zookeeper.getacl.php"}, {"name": "Zookeeper::getChildren", "synopsis": null, "usage": "public array Zookeeper::getChildren ( string $path [, callable $watcher_cb = NULL ] )", "url": "https://secure.php.net/manual/en/zookeeper.getchildren.php"}, {"name": "Zookeeper::getClientId", "synopsis": null, "usage": "public int Zookeeper::getClientId ( void )", "url": "https://secure.php.net/manual/en/zookeeper.getclientid.php"}, {"name": "Zookeeper::getRecvTimeout", "synopsis": null, "usage": "public int Zookeeper::getRecvTimeout ( void )", "url": "https://secure.php.net/manual/en/zookeeper.getrecvtimeout.php"}, {"name": "Zookeeper::getState", "synopsis": null, "usage": "public int Zookeeper::getState ( void )", "url": "https://secure.php.net/manual/en/zookeeper.getstate.php"}, {"name": "Zookeeper::isRecoverable", "synopsis": "The application must close the handle and try to reconnect.", "usage": "public bool Zookeeper::isRecoverable ( void )", "url": "https://secure.php.net/manual/en/zookeeper.isrecoverable.php"}, {"name": "Zookeeper::set", "synopsis": null, "usage": "public bool Zookeeper::set ( string $path , string $value [, int $version = -1 [, array &$stat = NULL ]] )", "url": "https://secure.php.net/manual/en/zookeeper.set.php"}, {"name": "Zookeeper::setAcl", "synopsis": null, "usage": "public bool Zookeeper::setAcl ( string $path , int $version , array $acl )", "url": "https://secure.php.net/manual/en/zookeeper.setacl.php"}, {"name": "Zookeeper::setDebugLevel", "synopsis": null, "usage": "public static bool Zookeeper::setDebugLevel ( int $logLevel )", "url": "https://secure.php.net/manual/en/zookeeper.setdebuglevel.php"}, {"name": "Zookeeper::setDeterministicConnOrder", "synopsis": "If passed a non-zero value, will make the client connect to quorum peers in the order as specified in the zookeeper_init() call. A zero value causes zookeeper_init() to permute the peer endpoints which is good for more even client connection distribution among the quorum peers.", "usage": "public static bool Zookeeper::setDeterministicConnOrder ( bool $yesOrNo )", "url": "https://secure.php.net/manual/en/zookeeper.setdeterministicconnorder.php"}, {"name": "Zookeeper::setLogStream", "synopsis": "The zookeeper library uses stderr as its default log stream. Application must make sure the stream is writable. Passing in NULL resets the stream to its default value (stderr).", "usage": "public bool Zookeeper::setLogStream ( resource $stream )", "url": "https://secure.php.net/manual/en/zookeeper.setlogstream.php"}, {"name": "Zookeeper::setWatcher", "synopsis": null, "usage": "public bool Zookeeper::setWatcher ( callable $watcher_cb )", "url": "https://secure.php.net/manual/en/zookeeper.setwatcher.php"}],
};
